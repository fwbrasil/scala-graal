begin_compilation
  name " HotSpotCompilation-1488[java.util.HashMap.getNode(int, Object)]"
  method "HotSpotCompilation-1488[java.util.HashMap.getNode(int, Object)]"
  date 1528298692757
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a829 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a829  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v853 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a829 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
=== Succesors ===
next: v10 
=== Usages ===
a478 v479 v854 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
stamp: void
=== Inputs ===
value: a829 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a829  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 v120 v121 v283 v266 v282 v773 v761 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
stamp: void
trueSuccessorProbability: 0.09981557033476779
=== Inputs ===
condition: v479 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
a829 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v479 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591856890509011868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B72" 
    xhandlers
    flags 
    probability 4606283360069286540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i830 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i830  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a829 
=== Succesors ===
=== Usages ===
i830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i830 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v854 
=== Succesors ===
next: v617 
=== Usages ===
v606 i17 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v854 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i18 v28 ?752 ?360 v538 ?75 v77 ?751 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/391966877@19d956bb
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i830 
y: i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i830 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$76/957651855@1524f478
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i17 
=== Succesors ===
=== Usages ===
v855 v606 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@43eeff4b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i830 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i830  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v33 v37 v158 ?752 ?360 v538 ?75 v82 v203 ?751 v569 v530 v873 v858 v886 v887 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v606 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
i830 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v606 #trueSuccessor: v614 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606283360069286540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a831 
=== Usages ===
a831 
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a831  <|@  <|@
f <@~|@floating>@ <|@
tid a478 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a829 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a829  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a478 
index: i18 
=== Succesors ===
=== Usages ===
a831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a478 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v614 
address: v855 
=== Succesors ===
next: v26 
=== Usages ===
a497 v498 v856 v857 v864 v876 v881 a882 a883 a884 a885 
=== Predecessor ===
v614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v614 address: v855 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
stamp: void
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a831  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 28]
stamp: void
trueSuccessorProbability: 0.22000496555148658
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
a831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v25 #falseSuccessor: v24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4596303344997221263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4604499528892615080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v876 
=== Succesors ===
next: i833 
=== Usages ===
v824 v880 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v876 #next: i833  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i833 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v856 
=== Succesors ===
next: v31 
=== Usages ===
v28 
=== Predecessor ===
v832 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v856 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i833 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i833  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v824 v880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 v93 v435 v230 ?360 v186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v819 v820 v821 v822 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
trueSuccessorProbability: 0.6829792313201242
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i833 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4602310363791257994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a834 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
a834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
=== Succesors ===
next: v36 
=== Usages ===
a505 v742 v860 v874 
=== Predecessor ===
v29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid a505 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
v33 v530 v158 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a505 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a505  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5811487824769894
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
a834 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4598692015402035030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid a884 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a831  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a884 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a884 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596404717068981353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v620 #falseSuccessor: v618  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid i763 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -129555
stableDimension: 0
stamp: i32 [-129555] ⇊00000000fffe05ed ⇈00000000fffe05ed
stampKind: i32
value: int[-129555|0xfffffffffffe05ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4596404717068981353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
=== Succesors ===
next: v141 
=== Usages ===
v862 v819 
=== Predecessor ===
v618 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v873 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v835 
y: v818 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v835 y: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.548817802503477
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v135 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4592607676709826300
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a505 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a505  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v159 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v159 #falseSuccessor: v160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4588104077082455804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid a497 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a831  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a497 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a497 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4588104077082455804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v742 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v687 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v742 #trueSuccessor: v688 #falseSuccessor: v687  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4573004626991012040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4587309751477789667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a834 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
=== Succesors ===
next: v785 
=== Usages ===
v820 
=== Predecessor ===
v687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v874 #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v836 
y: v818 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v836 y: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v783 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v783 #falseSuccessor: v782  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a837 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a837  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
=== Succesors ===
next: v625 
=== Usages ===
a509 v510 v859 
=== Predecessor ===
v783 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a837  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
a837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v624 #falseSuccessor: v622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130827
stableDimension: 0
stamp: i32 [-130827] ⇊00000000fffe00f5 ⇈00000000fffe00f5
stampKind: i32
value: int[-130827|0xfffffffffffe00f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v624 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a838 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a838  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a834 
=== Succesors ===
=== Usages ===
a838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
=== Succesors ===
next: v629 
=== Usages ===
a517 v518 v861 
=== Predecessor ===
v622 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v860 #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a838 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a838  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
a838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v628 #falseSuccessor: v626  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132875
stableDimension: 0
stamp: i32 [-132875] ⇊00000000fffdf8f5 ⇈00000000fffdf8f5
stampKind: i32
value: int[-132875|0xfffffffffffdf8f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i839 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i839  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a838 
=== Succesors ===
=== Usages ===
i839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
=== Succesors ===
next: i840 
=== Usages ===
v179 
=== Predecessor ===
v626 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 #next: i840  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a837 
=== Succesors ===
=== Usages ===
i840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
=== Succesors ===
next: v182 
=== Usages ===
v179 v186 i194 
=== Predecessor ===
i839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v859 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i839 
y: i840 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i839 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
i840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v180 #falseSuccessor: v181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4578302552223048675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i840 
y: i12 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i840 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid a882 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v385 v355 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a831  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v188 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v187 #falseSuccessor: v188  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4573798952595678179
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a882 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a882 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4573798952595678179
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i194 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i194  <|@  <|@
f <@~|@floating>@ <|@
tid a509 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a837  <|@  <|@
f <@~|@floating>@ <|@
tid a517 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a838 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a509 
array2: a517 
length: i840 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
v42 
=== Predecessor ===
v188 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a509 array2: a517 length: i840 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i194 
y: i12 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i194 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06147426981919332
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
i194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4555667228106758721
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4573359477316768319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a882 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a882 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4578302552223048675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
v782 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4591194558173395414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v835 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
=== Succesors ===
next: j529 
=== Usages ===
v863 v530 
=== Predecessor ===
v140 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v862 #next: j529  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v526 
index: - 
=== Succesors ===
=== Usages ===
j529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v526 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
=== Succesors ===
next: i40 
=== Usages ===
v530 
=== Predecessor ===
v526 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v863 #next: i40  <|@  <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4184f622
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j529 
metaspaceMethod: v526 
arguments: a3 a505 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j529 metaspaceMethod: v526 arguments: a3 a505  <|@  <|@
f <@~|@floating>@ <|@
tid a883 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
?751 v439 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a831  <|@  <|@
tid ?751 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 572
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - a883 - - - 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - a883 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
bci: 59
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v530 
stateDuring: ?751 
=== Succesors ===
next: v438 
=== Usages ===
v435 
=== Predecessor ===
j529 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v530 stateDuring: ?751 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i12 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i40 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06147426981919332
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
i40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v436 #falseSuccessor: v437  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4573072989117848451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587174649752341416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v305 v307 v354 v440 v800 
=== Succesors ===
next: a841 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v305 v307 v354 v440 v800 #next: a841  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
a841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
=== Succesors ===
next: v60 
=== Usages ===
a754 v576 
=== Predecessor ===
v304 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v864 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a841 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a841  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.216884661117717
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
a841 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v59 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4577238389238357459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4585653457888015412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v832 
y: v823 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v832 y: v823  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 9.108850766661458E-4
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4540248061564889708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v442  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4585648454727075177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4590793122738135070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a883 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a883 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4597187769933185932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: a842 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a842  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
a842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a842 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v881 
=== Succesors ===
next: v281 
=== Usages ===
a754 v577 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v881 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a842 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a842  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.216884661117717
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
a842 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v280 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4587118263769775182
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4595448409249690745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v832 
y: v823 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v832 y: v823  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 9.108850766661458E-4
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v451 #falseSuccessor: v452  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549990033697269156
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4551270842897969215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v443 
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v443 #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a885 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a831  <|@  <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@4375068e
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>
=== Inputs ===
arguments: a885 i2 a3 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a885 i2 a3  <|@  <|@
tid ?753 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 576
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
d <@d|@=== Debug Properties ===
bci: 94
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.getTreeNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v538 
stateDuring: ?753 
=== Succesors ===
next: v71 
=== Usages ===
v71 
=== Predecessor ===
v441 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v538 stateDuring: ?753 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 97]
stamp: void
=== Inputs ===
result: a69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a69 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a69 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4595442688537112192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596814596959932378
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a754 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v444 
values: a841 a842 
=== Succesors ===
=== Usages ===
a755 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v444 values: a841 a842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v445 v447 
=== Succesors ===
next: v72 
=== Usages ===
a754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v445 v447 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a755 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a754 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a754  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B65" "B71" 
    successors "B44" "B69" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598454070848043873
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v73 
values: a755 a572 a574 
=== Succesors ===
=== Usages ===
?75 v872 v866 v126 ?752 v127 ?360 v865 v879 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v73 values: a755 a572 a574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2508737273970523
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v72 
=== Succesors ===
next: i843 
=== Usages ===
a74 v84 v100 v110 v112 v258 v263 v648 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v72 #next: i843  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 578
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
v613 v773 i843 v845 v878 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
i843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i843 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 100]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v865 
=== Succesors ===
next: v80 
=== Usages ===
v77 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v865 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i843 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i843  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
trueSuccessorProbability: 0.6963070942662779
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595828129311806256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: a844 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a844  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a844 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
=== Succesors ===
next: v88 
=== Usages ===
a546 v747 v868 v875 
=== Predecessor ===
v78 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v866 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a546 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a844 
=== Succesors ===
=== Usages ===
v82 v569 v203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a844  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a546 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a546  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
trueSuccessorProbability: 0.33705512909979063
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
a844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v84 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4589140116659726914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593494990893740351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v845  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v887 
=== Succesors ===
next: v156 
=== Usages ===
v870 v821 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v887 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v845 
y: v818 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v845 y: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.26842105263157895
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v150 #falseSuccessor: v155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584901442949050712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a546 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a546  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v204 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v204 #falseSuccessor: v205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580397843321680216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580397843321680216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
value: a844 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a844  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v747 
=== Succesors ===
trueSuccessor: v722 
falseSuccessor: v721 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v747 #trueSuccessor: v722 #falseSuccessor: v721  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565227817960151998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579686741224914744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a844 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v875 
=== Succesors ===
next: v795 
=== Usages ===
v822 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v875 #next: v795  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v846 
y: v818 
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v846 y: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v822 
=== Succesors ===
trueSuccessor: v793 
falseSuccessor: v792 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v822 #trueSuccessor: v793 #falseSuccessor: v792  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: a847 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a847  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a847 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
=== Succesors ===
next: v878 
=== Usages ===
a550 v878 v867 
=== Predecessor ===
v793 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v886 #next: v878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
object: a847 
=== Succesors ===
next: a848 
=== Usages ===
=== Predecessor ===
a847 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?75 object: a847 #next: a848  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a844 
=== Succesors ===
=== Usages ===
a848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a848 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v868 
=== Succesors ===
next: v649 
=== Usages ===
a558 v559 v869 
=== Predecessor ===
v878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v868 #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
value: a848 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a848  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v559 
=== Succesors ===
trueSuccessor: v648 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
a848 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v559 #trueSuccessor: v648 #falseSuccessor: v645  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid i779 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -143371
stableDimension: 0
stamp: i32 [-143371] ⇊00000000fffdcff5 ⇈00000000fffdcff5
stampKind: i32
value: int[-143371|0xfffffffffffdcff5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
actionAndReason: i779 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?75 actionAndReason: i779 speculation: a6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: i849 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i849  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a848 
=== Succesors ===
=== Usages ===
i849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v869 
=== Succesors ===
next: i850 
=== Usages ===
v223 
=== Predecessor ===
v645 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v869 #next: i850  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a847 
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
=== Succesors ===
next: v226 
=== Usages ===
v223 v230 i238 
=== Predecessor ===
i849 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v867 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i849 
y: i850 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i849 y: i850  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v225 
=== Usages ===
=== Predecessor ===
i850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v224 #falseSuccessor: v225  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570679541970173752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i850 
y: i12 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i850 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v231 
falseSuccessor: v232 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v231 #falseSuccessor: v232  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B67" 
    xhandlers
    flags 
    probability 4566175942342803256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566175942342803256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: i238 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i238  <|@  <|@
f <@~|@floating>@ <|@
tid a550 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a847 
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a847  <|@  <|@
f <@~|@floating>@ <|@
tid a558 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a848 
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a550 
array2: a558 
length: i850 
lastLocationAccess: - 
=== Succesors ===
next: v251 
=== Usages ===
i146 
=== Predecessor ===
v232 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a550 array2: a558 length: i850 lastLocationAccess: - #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
i238 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570679541970173752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v801  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v792 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591124679937112212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v845 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
=== Succesors ===
next: j568 
=== Usages ===
v871 v569 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 #next: j568  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v566 
index: - 
=== Succesors ===
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v566 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
=== Succesors ===
next: i91 
=== Usages ===
v569 
=== Predecessor ===
v566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v871 #next: i91  <|@  <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@157a4f32
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j568 
metaspaceMethod: v566 
arguments: a3 a546 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j568 metaspaceMethod: v566 arguments: a3 a546  <|@  <|@
tid ?752 <|@
d <@d|@=== Debug Properties ===
bci: 126
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
bci: 126
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v569 
stateDuring: ?752 
=== Succesors ===
next: v145 
=== Usages ===
i146 
=== Predecessor ===
j568 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v569 stateDuring: ?752 #next: v145  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
i91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591258009928422545
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v143 
values: i91 i238 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v143 values: i91 i238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v145 v251 
=== Succesors ===
next: v105 
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v145 v251 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i12 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i146 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
trueSuccessorProbability: 0.005263157894736842
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v326 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v104 #falseSuccessor: v326  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557519617601600696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B50" "B58" "B59" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578779210557769416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v359 v361 v403 v801 
=== Succesors ===
next: a851 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v359 v361 v403 v801 #next: a851  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v872 
=== Succesors ===
next: v114 
=== Usages ===
a572 v578 
=== Predecessor ===
v358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v872 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.34484126984126984
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
a851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v110 #falseSuccessor: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 4571909257587783089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576149592840719343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
tid ?360 <|@
d <@d|@=== Debug Properties ===
bci: 129
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - i12 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - - i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?360 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?360 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a572 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4591223306827026452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B48" "B56" 
    successors "B68" 
    xhandlers
    flags 
    probability 4592541792296650855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v328 v330 v422 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v328 v330 v422 #next: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4592541792296650855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590474006341175076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: a852 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a852  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v879 
=== Succesors ===
next: v265 
=== Usages ===
a574 v579 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v879 #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a852 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a852  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.34484126984126984
=== Inputs ===
condition: v579 
=== Succesors ===
trueSuccessor: v263 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
a852 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v579 #trueSuccessor: v263 #falseSuccessor: v264  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4583670761018250632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v266  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587773222586901380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?75 #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid a574 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a852 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a852  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124187
stableDimension: 0
stamp: i32 [-124187] ⇊00000000fffe1ae5 ⇈00000000fffe1ae5
stampKind: i32
value: int[-124187|0xfffffffffffe1ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i759 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-132875 - -124187] ⇊00000000fffc00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v756 
values: i758 i763 i765 i767 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v756 values: i758 i763 i765 i767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v757 v762 v764 v766 
=== Succesors ===
next: v761 
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v757 v762 v764 v766 #next: v761  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 569
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 - - - - - 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i759 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i759 speculation: a6  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a829 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a829  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v853 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a829 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
=== Succesors ===
next: v10 
=== Usages ===
a478 v479 v854 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
stamp: void
=== Inputs ===
value: a829 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a829  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 v120 v121 v283 v266 v282 v773 v761 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
stamp: void
trueSuccessorProbability: 0.09981557033476779
=== Inputs ===
condition: v479 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
a829 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v479 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@17d794c9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09981557033476779 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591856890509011868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B72" 
    xhandlers
    flags 
    probability 4606283360069286540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i830 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i830  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a829 
=== Succesors ===
=== Usages ===
i830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i830 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v854 
=== Succesors ===
next: v617 
=== Usages ===
v606 i17 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v854 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i18 v28 ?752 ?360 v538 ?75 v77 ?751 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$17/391966877@19d956bb
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i830 
y: i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i830 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$76/957651855@1524f478
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i17 
=== Succesors ===
=== Usages ===
v855 v606 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@43eeff4b
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i830 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i830  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v33 v37 v158 ?752 ?360 v538 ?75 v82 v203 ?751 v569 v530 v873 v858 v886 v887 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v606 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
i830 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v606 #trueSuccessor: v614 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v1|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606283360069286540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a831 
=== Usages ===
a831 
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a831  <|@  <|@
f <@~|@floating>@ <|@
tid a478 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a829 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a829  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
result [v7|QWORD[.] + v6|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a478 
index: i18 
=== Succesors ===
=== Usages ===
a831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a478 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a831 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v614 
address: v855 
=== Succesors ===
next: v26 
=== Usages ===
a497 v498 v856 v857 v864 v876 v881 a882 a883 a884 a885 
=== Predecessor ===
v614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v614 address: v855 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
stamp: void
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a831  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 28]
stamp: void
trueSuccessorProbability: 0.22000496555148658
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
a831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v25 #falseSuccessor: v24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.22000496555148658 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4596303344997221263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4604499528892615080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
result [v8|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v876 
=== Succesors ===
next: i833 
=== Usages ===
v824 v880 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v876 #next: i833  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i833 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v856 
=== Succesors ===
next: v31 
=== Usages ===
v28 
=== Predecessor ===
v832 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v856 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i833 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i833  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
result meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v824 v880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 v93 v435 v230 ?360 v186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v818 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v819 v820 v821 v822 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@97f4d581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
trueSuccessorProbability: 0.6829792313201242
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i833 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v8|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6829792313201242 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4602310363791257994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a834 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
result [v8|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
a834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a834 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
=== Succesors ===
next: v36 
=== Usages ===
a505 v742 v860 v874 
=== Predecessor ===
v29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid a505 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
v33 v530 v158 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a834  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a505 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a505  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
trueSuccessorProbability: 0.5811487824769894
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
a834 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5811487824769894 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4598692015402035030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid a884 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a831  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a884 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a884 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596404717068981353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v620 #falseSuccessor: v618  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid i763 <|@
result int[-129555|0xfffffffffffe05ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -129555
stableDimension: 0
stamp: i32 [-129555] ⇊00000000fffe05ed ⇈00000000fffe05ed
stampKind: i32
value: int[-129555|0xfffffffffffe05ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-129555|0xfffffffffffe05ed]] destination: B9 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4596404717068981353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v835 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
=== Succesors ===
next: v141 
=== Usages ===
v862 v819 
=== Predecessor ===
v618 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v873 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v835 
y: v818 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v835 y: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.548817802503477
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v135 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.548817802503477 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4592607676709826300
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a505 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a505  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v159 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v159 #falseSuccessor: v160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4588104077082455804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid a497 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a831  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a497 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a497 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4588104077082455804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v742 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v687 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v742 #trueSuccessor: v688 #falseSuccessor: v687  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4573004626991012040
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4587309751477789667
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
result [v10|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a834 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
=== Succesors ===
next: v785 
=== Usages ===
v820 
=== Predecessor ===
v687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v874 #next: v785  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v836 
y: v818 
=== Succesors ===
=== Usages ===
v785 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v836 y: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v785 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@97f4d581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v820 
=== Succesors ===
trueSuccessor: v783 
falseSuccessor: v782 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v820 #trueSuccessor: v783 #falseSuccessor: v782  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a837 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a837  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a837 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
=== Succesors ===
next: v625 
=== Usages ===
a509 v510 v859 
=== Predecessor ===
v783 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a837  <|@  <|@
f <@*|@fixed>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
a837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v624 #falseSuccessor: v622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
result int[-130827|0xfffffffffffe00f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130827
stableDimension: 0
stamp: i32 [-130827] ⇊00000000fffe00f5 ⇈00000000fffe00f5
stampKind: i32
value: int[-130827|0xfffffffffffe00f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v624 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130827|0xfffffffffffe00f5]] destination: B17 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a838 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a838  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a834 
=== Succesors ===
=== Usages ===
a838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a838 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
=== Succesors ===
next: v629 
=== Usages ===
a517 v518 v861 
=== Predecessor ===
v622 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v860 #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a838 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a838  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
a838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v628 #falseSuccessor: v626  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid i767 <|@
result int[-132875|0xfffffffffffdf8f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132875
stableDimension: 0
stamp: i32 [-132875] ⇊00000000fffdf8f5 ⇈00000000fffdf8f5
stampKind: i32
value: int[-132875|0xfffffffffffdf8f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132875|0xfffffffffffdf8f5]] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i839 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i839  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
result [v16|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a838 
=== Succesors ===
=== Usages ===
i839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i839 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
=== Succesors ===
next: i840 
=== Usages ===
v179 
=== Predecessor ===
v626 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 #next: i840  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a837 
=== Succesors ===
=== Usages ===
i840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i840 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
=== Succesors ===
next: v182 
=== Usages ===
v179 v186 i194 
=== Predecessor ===
i839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v859 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i839 
y: i840 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i839 y: i840  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
i840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v180 #falseSuccessor: v181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4578302552223048675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i840 
y: i12 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i840 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid a882 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v385 v355 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a831  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v188 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v187 #falseSuccessor: v188  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4573798952595678179
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a882 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a882 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4573798952595678179
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i194 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i194  <|@  <|@
f <@~|@floating>@ <|@
tid a509 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a837  <|@  <|@
f <@~|@floating>@ <|@
tid a517 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a838 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i194 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a509 
array2: a517 
length: i840 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
v42 
=== Predecessor ===
v188 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a509 array2: a517 length: i840 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i194 
y: i12 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i194 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06147426981919332
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
i194 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ARRAY_EQUALS (~array1Value: v20|QWORD[.], ~array2Value: v21|QWORD[.], ~lengthValue: v18|DWORD) {temp1: v23|QWORD[*], temp2: v24|QWORD[*], temp3: v25|QWORD, temp4: v26|QWORD, temp5: -, tempXMM: -, vectorTemp1: v27|DOUBLE, vectorTemp2: v28|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4555667228106758721
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4573359477316768319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a882 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a882 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4578302552223048675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v785 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
v782 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4591194558173395414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
result [v13|DWORD * 8 + 448] <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v835 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
=== Succesors ===
next: j529 
=== Usages ===
v863 v530 
=== Predecessor ===
v140 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v862 #next: j529  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
result [v29|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v526 
index: - 
=== Succesors ===
=== Usages ===
j529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v526 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j529 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
=== Succesors ===
next: i40 
=== Usages ===
v530 
=== Predecessor ===
v526 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v863 #next: i40  <|@  <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@4184f622
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j529 
metaspaceMethod: v526 
arguments: a3 a505 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j529 metaspaceMethod: v526 arguments: a3 a505  <|@  <|@
f <@~|@floating>@ <|@
tid a883 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
?751 v439 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a831  <|@  <|@
tid ?751 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 572
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - a883 - - - 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - a883 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i40 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 59
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v530 
stateDuring: ?751 
=== Succesors ===
next: v438 
=== Usages ===
v435 
=== Predecessor ===
j529 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v530 stateDuring: ?751 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i12 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i40 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06147426981919332
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
i40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v436 #falseSuccessor: v437  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [v13|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [v29|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - v1|DWORD v2|QWORD[.] - v31|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4573072989117848451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587174649752341416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v305 v307 v354 v440 v800 
=== Succesors ===
next: a841 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v305 v307 v354 v440 v800 #next: a841  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
result [v8|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
a841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a841 <|@
result v33|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
=== Succesors ===
next: v60 
=== Usages ===
a754 v576 
=== Predecessor ===
v304 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v864 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a841 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a841  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.216884661117717
=== Inputs ===
condition: v576 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
a841 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v576 #trueSuccessor: v59 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD[.], y: v33|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4577238389238357459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4585653457888015412
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v832 
y: v823 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v832 y: v823  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 9.108850766661458E-4
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4540248061564889708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v442  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4585648454727075177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD[.]] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4590793122738135070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a883 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a883 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4597187769933185932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: a842 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a842  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
result [v8|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a831 
=== Succesors ===
=== Usages ===
a842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a831  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a842 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v881 
=== Succesors ===
next: v281 
=== Usages ===
a754 v577 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v881 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a842 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a842  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.216884661117717
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
a842 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v280 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4587118263769775182
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4595448409249690745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v832 
y: v823 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v832 y: v823  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 9.108850766661458E-4
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v451 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v451 #falseSuccessor: v452  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549990033697269156
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v443  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4551270842897969215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v443 
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v443 #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a885 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a831 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a831  <|@  <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@4375068e
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>
=== Inputs ===
arguments: a885 i2 a3 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a885 i2 a3  <|@  <|@
tid ?753 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 576
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 94
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.getTreeNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v538 
stateDuring: ?753 
=== Succesors ===
next: v71 
=== Usages ===
v71 
=== Predecessor ===
v441 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v538 stateDuring: ?753 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 97]
stamp: void
=== Inputs ===
result: a69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a69 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a69 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:94] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4595442688537112192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596814596959932378
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a754 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v444 
values: a841 a842 
=== Succesors ===
=== Usages ===
a755 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v444 values: a841 a842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v445 v447 
=== Succesors ===
next: v72 
=== Usages ===
a754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v445 v447 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a755 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a754 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a754  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B65" "B71" 
    successors "B44" "B69" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598454070848043873
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a74 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v73 
values: a755 a572 a574 
=== Succesors ===
=== Usages ===
?75 v872 v866 v126 ?752 v127 ?360 v865 v879 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v73 values: a755 a572 a574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2508737273970523
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v72 
=== Succesors ===
next: i843 
=== Usages ===
a74 v84 v100 v110 v112 v258 v263 v648 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v72 #next: i843  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 578
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
v613 v773 i843 v845 v878 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
result [v39|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
i843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i843 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 100]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v865 
=== Succesors ===
next: v80 
=== Usages ===
v77 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v865 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i843 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i843  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@97f4d581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
trueSuccessorProbability: 0.6963070942662779
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction CMP (x: v1|DWORD, y: [v39|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6963070942662779 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595828129311806256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: a844 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a844  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
result [v39|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a844 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
=== Succesors ===
next: v88 
=== Usages ===
a546 v747 v868 v875 
=== Predecessor ===
v78 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v866 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a546 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a844 
=== Succesors ===
=== Usages ===
v82 v569 v203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a844  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a546 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a546  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
trueSuccessorProbability: 0.33705512909979063
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
a844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v84 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v39|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.33705512909979063 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4589140116659726914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593494990893740351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v845  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v887 
=== Succesors ===
next: v156 
=== Usages ===
v870 v821 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v887 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v845 
y: v818 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v845 y: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.26842105263157895
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v150 #falseSuccessor: v155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction v42|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:98] <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26842105263157895 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584901442949050712
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a546 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a546  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v204 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v204 #falseSuccessor: v205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580397843321680216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580397843321680216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
value: a844 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a844  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v747 
=== Succesors ===
trueSuccessor: v722 
falseSuccessor: v721 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v747 #trueSuccessor: v722 #falseSuccessor: v721  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565227817960151998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579686741224914744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
result [v40|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a844 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v875 
=== Succesors ===
next: v795 
=== Usages ===
v822 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v875 #next: v795  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v846 
y: v818 
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v846 y: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@97f4d581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v822 
=== Succesors ===
trueSuccessor: v793 
falseSuccessor: v792 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v822 #trueSuccessor: v793 #falseSuccessor: v792  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v40|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: a847 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a847  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a847 <|@
result v43|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
=== Succesors ===
next: v878 
=== Usages ===
a550 v878 v867 
=== Predecessor ===
v793 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v886 #next: v878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
object: a847 
=== Succesors ===
next: a848 
=== Usages ===
=== Predecessor ===
a847 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?75 object: a847 #next: a848  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
result [v40|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a844 
=== Succesors ===
=== Usages ===
a848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a848 <|@
result v44|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v868 
=== Succesors ===
next: v649 
=== Usages ===
a558 v559 v869 
=== Predecessor ===
v878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v868 #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
value: a848 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a848  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v559 
=== Succesors ===
trueSuccessor: v648 
falseSuccessor: v645 
=== Usages ===
=== Predecessor ===
a848 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v559 #trueSuccessor: v648 #falseSuccessor: v645  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v43|DWORD[.] * 8] state [bci:98] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v40|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD[.], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid i779 <|@
result int[-143371|0xfffffffffffdcff5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -143371
stableDimension: 0
stamp: i32 [-143371] ⇊00000000fffdcff5 ⇈00000000fffdcff5
stampKind: i32
value: int[-143371|0xfffffffffffdcff5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
actionAndReason: i779 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?75 actionAndReason: i779 speculation: a6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -143371 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: i849 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i849  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
result [v44|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a848 
=== Succesors ===
=== Usages ===
i849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i849 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v869 
=== Succesors ===
next: i850 
=== Usages ===
v223 
=== Predecessor ===
v645 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v869 #next: i850  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
result [v43|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a847 
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i850 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
=== Succesors ===
next: v226 
=== Usages ===
v223 v230 i238 
=== Predecessor ===
i849 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v867 #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i849 
y: i850 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i849 y: i850  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v225 
=== Usages ===
=== Predecessor ===
i850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v224 #falseSuccessor: v225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v44|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v43|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570679541970173752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i850 
y: i12 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i850 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v231 
falseSuccessor: v232 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v231 #falseSuccessor: v232  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B67" 
    xhandlers
    flags 
    probability 4566175942342803256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566175942342803256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: i238 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i238  <|@  <|@
f <@~|@floating>@ <|@
tid a550 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a847 
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a847  <|@  <|@
f <@~|@floating>@ <|@
tid a558 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a848 
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i238 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a550 
array2: a558 
length: i850 
lastLocationAccess: - 
=== Succesors ===
next: v251 
=== Usages ===
i146 
=== Predecessor ===
v232 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a550 array2: a558 length: i850 lastLocationAccess: - #next: v251  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
i238 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ARRAY_EQUALS (~array1Value: v47|QWORD[.], ~array2Value: v48|QWORD[.], ~lengthValue: v46|DWORD) {temp1: v50|QWORD[*], temp2: v51|QWORD[*], temp3: v52|QWORD, temp4: v53|QWORD, temp5: -, tempXMM: -, vectorTemp1: v54|DOUBLE, vectorTemp2: v55|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570679541970173752
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v225 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v801  <|@  <|@
f <@*|@fixed>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v792 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591124679937112212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
result [v42|DWORD * 8 + 448] <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v845 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
=== Succesors ===
next: j568 
=== Usages ===
v871 v569 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 #next: j568  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
result [v56|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v566 
index: - 
=== Succesors ===
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v566 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j568 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
=== Succesors ===
next: i91 
=== Usages ===
v569 
=== Predecessor ===
v566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v871 #next: i91  <|@  <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@157a4f32
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j568 
metaspaceMethod: v566 
arguments: a3 a546 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j568 metaspaceMethod: v566 arguments: a3 a546  <|@  <|@
tid ?752 <|@
d <@d|@=== Debug Properties ===
bci: 126
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 126
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v569 
stateDuring: ?752 
=== Succesors ===
next: v145 
=== Usages ===
i146 
=== Predecessor ===
j568 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v569 stateDuring: ?752 #next: v145  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
i91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v42|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v56|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:126] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591258009928422545
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i146 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v143 
values: i91 i238 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v143 values: i91 i238  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v145 v251 
=== Succesors ===
next: v105 
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v145 v251 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i146 
y: i12 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i146 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
trueSuccessorProbability: 0.005263157894736842
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v326 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v104 #falseSuccessor: v326  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.005263157894736842 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557519617601600696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B50" "B58" "B59" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578779210557769416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v359 v361 v403 v801 
=== Succesors ===
next: a851 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v359 v361 v403 v801 #next: a851  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
result [v39|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a851 <|@
result v60|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v872 
=== Succesors ===
next: v114 
=== Usages ===
a572 v578 
=== Predecessor ===
v358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v872 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.34484126984126984
=== Inputs ===
condition: v578 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
a851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v578 #trueSuccessor: v110 #falseSuccessor: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v39|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD[.], y: v60|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 4571909257587783089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576149592840719343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
tid ?360 <|@
d <@d|@=== Debug Properties ===
bci: 129
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - i12 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - - i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?360 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?360 #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a572 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a851 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a851  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stack: int[0|0x0] 
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B65 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4591223306827026452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B48" "B56" 
    successors "B68" 
    xhandlers
    flags 
    probability 4592541792296650855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v328 v330 v422 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v328 v330 v422 #next: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4592541792296650855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590474006341175076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: a852 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a852  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
result [v39|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a852 <|@
result v62|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v879 
=== Succesors ===
next: v265 
=== Usages ===
a574 v579 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v879 #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a852 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a852  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.34484126984126984
=== Inputs ===
condition: v579 
=== Succesors ===
trueSuccessor: v263 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
a852 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v579 #trueSuccessor: v263 #falseSuccessor: v264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = MOV [v39|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD[.], y: v62|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4583670761018250632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v266  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587773222586901380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?75 #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid a574 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a852 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a852  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:98] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD[.]] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
result int[-124187|0xfffffffffffe1ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124187
stableDimension: 0
stamp: i32 [-124187] ⇊00000000fffe1ae5 ⇈00000000fffe1ae5
stampKind: i32
value: int[-124187|0xfffffffffffe1ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124187|0xfffffffffffe1ae5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i759 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-132875 - -124187] ⇊00000000fffc00e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v756 
values: i758 i763 i765 i767 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v756 values: i758 i763 i765 i767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v757 v762 v764 v766 
=== Succesors ===
next: v761 
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v757 v762 v764 v766 #next: v761  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 569
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 - - - - - 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i759 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i759 speculation: a6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@17d794c9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09981557033476779 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B72" 
    xhandlers
    flags 
    probability 4606283360069286540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v1|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606283360069286540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.22000496555148658 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4604499528892615080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v8|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6829792313201242 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4602310363791257994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5811487824769894 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4598692015402035030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4597187769933185932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD[.], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4595448409249690745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4595442688537112192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596814596959932378
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B65" "B71" 
    successors "B44" "B69" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598454070848043873
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction CMP (x: v1|DWORD, y: [v39|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6963070942662779 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595828129311806256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v39|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.33705512909979063 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593494990893740351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction v42|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:98] <|@ <|@
      nr   -1  <|@ instruction CMP v42|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26842105263157895 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591124679937112212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v42|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v56|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:126] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591258009928422545
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.005263157894736842 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557519617601600696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B50" "B58" "B59" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578779210557769416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v39|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD[.], y: v60|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576149592840719343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stack: int[0|0x0] 
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:129] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B65 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590474006341175076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = MOV [v39|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD[.], y: v62|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587773222586901380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:98] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD[.]] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584901442949050712
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580397843321680216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579686741224914744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v40|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v43|DWORD[.] * 8] state [bci:98] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v40|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD[.], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v44|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v43|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570679541970173752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570679541970173752
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|DWORD, y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566175942342803256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v44|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = ARRAY_EQUALS (~array1Value: v47|QWORD[.], ~array2Value: v48|QWORD[.], ~lengthValue: v46|DWORD) {temp1: v50|QWORD[*], temp2: v51|QWORD[*], temp3: v52|QWORD, temp4: v53|QWORD, temp5: -, tempXMM: -, vectorTemp1: v54|DOUBLE, vectorTemp2: v55|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565227817960151998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596404717068981353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4596404717068981353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.548817802503477 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4592607676709826300
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4588104077082455804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4587309751477789667
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587174649752341416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD[.], y: v33|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4585653457888015412
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4585648454727075177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD[.]] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4596303344997221263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591856890509011868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4591223306827026452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B48" "B56" 
    successors "B68" 
    xhandlers
    flags 
    probability 4592541792296650855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4592541792296650855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4591194558173395414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [v13|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV [v29|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - v1|DWORD v2|QWORD[.] - v31|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4590793122738135070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4589140116659726914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4588104077082455804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4587118263769775182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4583670761018250632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4578302552223048675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580397843321680216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4578302552223048675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4573798952595678179
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = ARRAY_EQUALS (~array1Value: v20|QWORD[.], ~array2Value: v21|QWORD[.], ~lengthValue: v18|DWORD) {temp1: v23|QWORD[*], temp2: v24|QWORD[*], temp3: v25|QWORD, temp4: v26|QWORD, temp5: -, tempXMM: -, vectorTemp1: v27|DOUBLE, vectorTemp2: v28|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4573359477316768319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4577238389238357459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4573798952595678179
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4573072989117848451
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4573004626991012040
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 4571909257587783089
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B67" 
    xhandlers
    flags 
    probability 4566175942342803256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4555667228106758721
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549990033697269156
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4551270842897969215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:94] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4540248061564889708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130827|0xfffffffffffe00f5]] destination: B17 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-129555|0xfffffffffffe05ed]] destination: B9 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -143371 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v39|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124187|0xfffffffffffe1ae5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132875|0xfffffffffffdf8f5]] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore_3      
     6: ifnull        146
     9: aload_3       
    10: arraylength   
    11: dup           
    12: istore        6
    14: ifle          146
    17: aload_3       
    18: iload         6
    20: iconst_1      
    21: isub          
    22: iload_1       
    23: iand          
    24: aaload        
    25: dup           
    26: astore        4
    28: ifnull        146
    31: aload         4
    33: getfield      #33         // java.util.HashMap$Node.hash:int
    36: iload_1       
    37: if_icmpne     68
    40: aload         4
    42: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    45: dup           
    46: astore        7
    48: aload_2       
    49: if_acmpeq     65
    52: aload_2       
    53: ifnull        68
    56: aload_2       
    57: aload         7
    59: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    62: ifeq          68
    65: aload         4
    67: areturn       
    68: aload         4
    70: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
    73: dup           
    74: astore        5
    76: ifnull        146
    79: aload         4
    81: instanceof    #50         // java.util.HashMap$TreeNode
    84: ifeq          98
    87: aload         4
    89: checkcast     #50         // java.util.HashMap$TreeNode
    92: iload_1       
    93: aload_2       
    94: invokevirtual #37         // java.util.HashMap$TreeNode.getTreeNode:(int, java.lang.Object)java.util.HashMap$TreeNode
    97: areturn       
    98: aload         5
   100: getfield      #33         // java.util.HashMap$Node.hash:int
   103: iload_1       
   104: if_icmpne     135
   107: aload         5
   109: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   112: dup           
   113: astore        7
   115: aload_2       
   116: if_acmpeq     132
   119: aload_2       
   120: ifnull        135
   123: aload_2       
   124: aload         7
   126: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   129: ifeq          135
   132: aload         5
   134: areturn       
   135: aload         5
   137: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   140: dup           
   141: astore        5
   143: ifnonnull     98
   146: aconst_null   
   147: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@17d794c9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr    8  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.09981557033476779 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B72" 
    xhandlers
    flags 
    probability 4606283360069286540
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606283360069286540
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.22000496555148658 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4604499528892615080
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.6829792313201242 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4602310363791257994
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.5811487824769894 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4598692015402035030
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4597187769933185932
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  296  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4595448409249690745
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4595442688537112192
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596814596959932378
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B65" "B71" 
    successors "B44" "B69" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598454070848043873
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - rdx|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.6963070942662779 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595828129311806256
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.33705512909979063 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593494990893740351
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - rdx|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:98] <|@ <|@
      nr  368  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.26842105263157895 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591124679937112212
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rbx|QWORD = MOV [rsi|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ st <@st|@reference-map: [stack:8, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - stack:28|DWORD stack:40|QWORD[.] - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:126] <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591258009928422545
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  484  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.005263157894736842 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557519617601600696
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B50" "B58" "B59" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578779210557769416
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  500  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576149592840719343
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stack: int[0|0x0] 
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:129] <|@ <|@
      nr  514  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B65 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590474006341175076
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  542  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587773222586901380
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD stack:40|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:98] <|@ <|@
      nr  556  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584901442949050712
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP (x: r8|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580397843321680216
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579686741224914744
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  406  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:98] <|@ <|@
      nr  408  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  410  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  428  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570679541970173752
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570679541970173752
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566175942342803256
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: r11|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  450  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565227817960151998
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B50 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596404717068981353
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4596404717068981353
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r9|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.548817802503477 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4592607676709826300
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4588104077082455804
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4587309751477789667
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587174649752341416
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  258  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4585653457888015412
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction CMP stack:44|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4585648454727075177
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4596303344997221263
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591856890509011868
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" 
    xhandlers
    flags 
    probability 4591223306827026452
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B48" "B56" 
    successors "B68" 
    xhandlers
    flags 
    probability 4592541792296650855
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4592541792296650855
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4591194558173395414
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOV [r9|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  226  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - stack:28|DWORD stack:40|QWORD[.] - stack:56|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:59] <|@ <|@
      nr  242  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4590793122738135070
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4589140116659726914
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4588104077082455804
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4587118263769775182
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4583670761018250632
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  550  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  166  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4578302552223048675
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580397843321680216
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B48 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4578302552223048675
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4573798952595678179
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction r11|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: rbx|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rdi|QWORD, temp4: rbp|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  194  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4573359477316768319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4577238389238357459
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4573798952595678179
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4573072989117848451
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4573004626991012040
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 4571909257587783089
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  508  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B67" 
    xhandlers
    flags 
    probability 4566175942342803256
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B56 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4555667228106758721
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549990033697269156
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4551270842897969215
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:94] <|@ <|@
      nr  326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4540248061564889708
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r10|DWORD = MOVE input: int[-130827|0xfffffffffffe00f5] <|@ <|@
      nr  142  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B17 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOVE input: int[-129555|0xfffffffffffe05ed] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction MOV [r15|QWORD + 668] y: -143371 size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [rcx:0, r10:0]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r10|DWORD = MOVE input: int[-124187|0xfffffffffffe1ae5] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-132875|0xfffffffffffdf8f5] <|@ <|@
      nr  158  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore_3      
     6: ifnull        146
     9: aload_3       
    10: arraylength   
    11: dup           
    12: istore        6
    14: ifle          146
    17: aload_3       
    18: iload         6
    20: iconst_1      
    21: isub          
    22: iload_1       
    23: iand          
    24: aaload        
    25: dup           
    26: astore        4
    28: ifnull        146
    31: aload         4
    33: getfield      #33         // java.util.HashMap$Node.hash:int
    36: iload_1       
    37: if_icmpne     68
    40: aload         4
    42: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    45: dup           
    46: astore        7
    48: aload_2       
    49: if_acmpeq     65
    52: aload_2       
    53: ifnull        68
    56: aload_2       
    57: aload         7
    59: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    62: ifeq          68
    65: aload         4
    67: areturn       
    68: aload         4
    70: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
    73: dup           
    74: astore        5
    76: ifnull        146
    79: aload         4
    81: instanceof    #50         // java.util.HashMap$TreeNode
    84: ifeq          98
    87: aload         4
    89: checkcast     #50         // java.util.HashMap$TreeNode
    92: iload_1       
    93: aload_2       
    94: invokevirtual #37         // java.util.HashMap$TreeNode.getTreeNode:(int, java.lang.Object)java.util.HashMap$TreeNode
    97: areturn       
    98: aload         5
   100: getfield      #33         // java.util.HashMap$Node.hash:int
   103: iload_1       
   104: if_icmpne     135
   107: aload         5
   109: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   112: dup           
   113: astore        7
   115: aload_2       
   116: if_acmpeq     132
   119: aload_2       
   120: ifnull        135
   123: aload_2       
   124: aload         7
   126: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   129: ifeq          135
   132: aload         5
   134: areturn       
   135: aload         5
   137: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   140: dup           
   141: astore        5
   143: ifnonnull     98
   146: aconst_null   
   147: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@17d794c9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr    8  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.09981557033476779 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B72" 
    xhandlers
    flags 
    probability 4606283360069286540
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r10|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606283360069286540
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   38  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.22000496555148658 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4604499528892615080
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.6829792313201242 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4602310363791257994
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.5811487824769894 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4598692015402035030
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4597187769933185932
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  296  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4595448409249690745
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B38 -> B40 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596814596959932378
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B65" "B71" 
    successors "B44" "B69" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598454070848043873
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  338  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - rdx|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.6963070942662779 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595828129311806256
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.33705512909979063 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593494990893740351
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - rdx|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:98] <|@ <|@
      nr  368  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.26842105263157895 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591124679937112212
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rbx|QWORD = MOV [rsi|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  474  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ st <@st|@reference-map: [stack:8, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - stack:28|DWORD stack:40|QWORD[.] - - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:126] <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B57" 
    successors "B62" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591258009928422545
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  484  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.005263157894736842 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4557519617601600696
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B50" "B54" "B51" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578779210557769416
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  500  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576149592840719343
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stack: int[0|0x0] 
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:129] <|@ <|@
      nr  514  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B65 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B70" "B71" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590474006341175076
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  542  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587773222586901380
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD stack:40|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:98] <|@ <|@
      nr  556  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B71 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B68" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584901442949050712
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP (x: r8|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B68 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580397843321680216
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4579686741224914744
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  406  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, r11:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:98] <|@ <|@
      nr  408  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  410  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  412  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575183141597544248
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  426  <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  428  <|@ instruction CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B68" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570679541970173752
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B68 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566175942342803256
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: r11|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  450  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565227817960151998
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B50 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4596404717068981353
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4596404717068981353
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r9|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.548817802503477 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4592607676709826300
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4588104077082455804
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B30" 
    xhandlers
    flags 
    probability 4587309751477789667
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B23" "B14" "B20" "B29" "B15" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587174649752341416
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  258  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" "B34" 
    xhandlers
    flags 
    probability 4585653457888015412
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction CMP stack:44|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B32 -> B40 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4585648454727075177
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4596303344997221263
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4591856890509011868
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B61" "B47" "B55" 
    successors 
    xhandlers
    flags 
    probability 4592541792296650855
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4591194558173395414
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOV [r9|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr  224  <|@ instruction r8|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  226  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - stack:28|DWORD stack:40|QWORD[.] - stack:56|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:59] <|@ <|@
      nr  242  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4590793122738135070
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4589140116659726914
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4588104077082455804
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4587118263769775182
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  304  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 4583670761018250632
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  550  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  134  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  150  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B30" 
    xhandlers
    flags 
    probability 4582806151850419171
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  166  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4578302552223048675
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B30" "B25" 
    xhandlers
    flags 
    probability 4573798952595678179
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  190  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  192  <|@ instruction r11|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: rbx|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rdi|QWORD, temp4: rbp|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  194  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B23 -> B30 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4573359477316768319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4577238389238357459
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  266  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4573798952595678179
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4573072989117848451
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4573004626991012040
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors 
    xhandlers
    flags 
    probability 4571909257587783089
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  508  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B38" 
    successors 
    xhandlers
    flags 
    probability 4551270842897969215
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:94] <|@ <|@
      nr  326  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r10|DWORD = MOVE input: int[-130827|0xfffffffffffe00f5] <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B17 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOVE input: int[-129555|0xfffffffffffe05ed] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction MOV [r15|QWORD + 668] y: -143371 size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [rcx:0, r10:0]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction r10|DWORD = MOVE input: int[-124187|0xfffffffffffe1ae5] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-132875|0xfffffffffffdf8f5] <|@ <|@
      nr  158  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore_3      
     6: ifnull        146
     9: aload_3       
    10: arraylength   
    11: dup           
    12: istore        6
    14: ifle          146
    17: aload_3       
    18: iload         6
    20: iconst_1      
    21: isub          
    22: iload_1       
    23: iand          
    24: aaload        
    25: dup           
    26: astore        4
    28: ifnull        146
    31: aload         4
    33: getfield      #33         // java.util.HashMap$Node.hash:int
    36: iload_1       
    37: if_icmpne     68
    40: aload         4
    42: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    45: dup           
    46: astore        7
    48: aload_2       
    49: if_acmpeq     65
    52: aload_2       
    53: ifnull        68
    56: aload_2       
    57: aload         7
    59: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    62: ifeq          68
    65: aload         4
    67: areturn       
    68: aload         4
    70: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
    73: dup           
    74: astore        5
    76: ifnull        146
    79: aload         4
    81: instanceof    #50         // java.util.HashMap$TreeNode
    84: ifeq          98
    87: aload         4
    89: checkcast     #50         // java.util.HashMap$TreeNode
    92: iload_1       
    93: aload_2       
    94: invokevirtual #37         // java.util.HashMap$TreeNode.getTreeNode:(int, java.lang.Object)java.util.HashMap$TreeNode
    97: areturn       
    98: aload         5
   100: getfield      #33         // java.util.HashMap$Node.hash:int
   103: iload_1       
   104: if_icmpne     135
   107: aload         5
   109: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   112: dup           
   113: astore        7
   115: aload_2       
   116: if_acmpeq     132
   119: aload_2       
   120: ifnull        135
   123: aload_2       
   124: aload         7
   126: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   129: ifeq          135
   132: aload         5
   134: areturn       
   135: aload         5
   137: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   140: dup           
   141: astore        5
   143: ifnonnull     98
   146: aconst_null   
   147: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b462485c00f8441030000895424248b1cc50c000000448bd341ffca4423d2413bda0f864a06000048c1e003468b5490104585d20f84f502000048894c2418468b1cd508000000423b14d50c0000000f8532000000468b04d510000000418bd848c1e303483bd90f855a02000049c1e203498bc2488b6c24304883c438850500000000c5f877c3428b04d51800000085c00f846c0300004181fbaddeadde0f846b05000048c1e0034c8bd00f1f4400008b542424413b520c0f856a000000458b5a10458bc349c1e0034c3bc10f84010300008b710881feaddeadde0f846a0000004c89542408488b1cf5c0010000488b4340488bf1498bd0ffd09085c04c8b5424080f8561020000488b4c2418418b421885c00f84d904000085050000000048c1e0034c8bd0eb88418b421885c00f84ec02000085050000000048c1e0034c8bd0488b4c2418e965ffffff4c3b4424180f84130200004585db0f845e01000042813cdd08000000addeadde488b4c2418759b8b410c418504c4428b34dd0c00000085f60f84d10400008b14f50c000000448b1cc50c000000443bda0f856cffffff4585db0f84bf01000048c1e00348c1e6034c8d40104c8d4e10418bdbd1e38bd383e21f83e3e00f845e0000004d8d04184d8d0c1948f7db0f1f840000000000c4c17e6f0418c4c17e6f0c19c5fdefc1c4e27d17c00f85b40000004883c32075df85d20f849f000000c4c17e6f4410e0c4c17e6f4c11e0c5fdefc1c4e27d17c00f8589000000e97d0000008bda83e20783e3f80f84410000004d8d04184d8d0c1948f7db660f1f440000660f1f440000498b3c18493b3c190f85510000004883c30875ec85d20f843c000000498b7c10f8493b7c11f87537eb2e8bdaf7c2040000007410418b38413b3975234d8d40044d8d4904f7c202000000740c410fb738410fb7193bfb7507ba01000000eb0233d28bc24c89542408e93efeffff488b4c2418e946feffff4885c90f8482030000448b49084181f9addeadde0f859e000000483bd90f84ff0000004585c00f84f502000042813cc508000000addeadde44895c24140f8433010000428b34d51800000085f60f848c020000817c2414addeadde0f84e70200008bc6e975fdffff48b80000000000000000488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c3498bc2488b6c24304883c438850500000000c5f877c344895c24144a8b04cdc00100004c8b4040458bca49c1e103488bf1488bd3488bd8498bc044895424104c894c2408ffd09085c00f84210200004c8b4c2408498bc1488b6c24304883c438850500000000c5f877c3498bc2488b6c24304883c438850500000000c5f877c349c1e203498bc2488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c38b410c85c00f84f0010000428b14c50c00000085d20f84220200008b34d50c0000008b1cc50c0000003bde0f859cfeffff418bf248c1e60385db0f844601000048c1e00348c1e2034c8d40104c8d4a108bfbd1e7448bdf4183e31f83e7e00f845b0000004d8d04384d8d0c3948f7df0f1f4000c4c17e6f0438c4c17e6f0c39c5fdefc1c4e27d17c00f85b90000004883c72075df4585db0f84a2000000c4817e6f4418e0c4817e6f4c19e0c5fdefc1c4e27d17c00f858d000000e980000000418bfb4183e30783e7f80f843f0000004d8d04384d8d0c3948f7df660f1f840000000000498b2c38493b2c390f85560000004883c70875ec4585db0f843f0000004b8b6c18f84b3b6c19f8753beb31418bfb41f7c3040000007410418b28413b2975254d8d40044d8d490441f7c302000000740c410fb728410fb7393bef750841bb01000000eb034533db4585db0f847afdffff488bc6488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c3488bc6488b6c24304883c438850500000000c5f877c3448b542410488b4c2418e922fdffff44895c2414e918fdffff48b80000000000000000488b6c24304883c438850500000000c5f877c349c1e203498bf28b5424240f1f440000e80000000090488b6c24304883c438850500000000c5f877c341baf500feff4589979c0200004d89a7a8020000e8000000009041baed05feffebe441c7879c020000f5cffdff4d89a7a8020000e8000000009041bae51afeffebc441baf5f8fdff8b542424ebb8e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10aea1f78, value=0x112706e60]:0x112706e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@17d794c9 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 51 8 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 53 10 BRANCH trueDestinationProbability: 0.09981557033476779 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 59 block B2 null  <||@
  Comment 59 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 20 stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 63 22 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 70 24 r10|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 76 26 r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 79 28 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 82 30 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72  <||@
  Comment 88 block B3 null  <||@
  Comment 88 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 88 34 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 92 36 r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 97 38 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 100 40 BRANCH trueDestinationProbability: 0.22000496555148658 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 106 block B5 null  <||@
  Comment 106 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 50 stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 111 52 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 119 54 CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 127 56 BRANCH trueDestinationProbability: 0.6829792313201242 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36  <||@
  Comment 133 block B6 null  <||@
  Comment 133 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 60 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 141 62 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 148 64 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 151 66 BRANCH trueDestinationProbability: 0.5811487824769894 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 157 block B7 null  <||@
  Comment 157 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 70 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 161 72 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 164 74 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 173 12  <||@
  Comment 183 block B36 null  <||@
  Comment 183 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 294 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 191 296 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 193 298 BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 199 block B38 null  <||@
  Comment 199 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 199 308 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 199 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 206 310 BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B38 -> B40 falseDestination: B38 -> B42  <||@
  Comment 212 block B42 null  <||@
  Comment 212 332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 212 334 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 216 336 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 219 340 JUMP ~[] destination: B42 -> B43  <||@
  Comment 219 block B43 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 219 342 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 224 338 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 228 344 CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98]  <||@
  Comment 228 [rcx:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1          |2             |3  |4  |5             |6  |7 
     locals:  |-  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 232 346 BRANCH trueDestinationProbability: 0.6963070942662779 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69  <||@
  Comment 238 block B44 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 238 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 350 r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 242 352 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 249 354 CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 252 356 BRANCH trueDestinationProbability: 0.33705512909979063 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 258 block B46 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 258 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 366 rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:98]  <||@
  Comment 258 [rcx:0, r8:0, r10:0, r11:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1          |2             |3  |4  |5             |6  |7 
     locals:  |-  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 258 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 261 368 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 261 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 267 370 BRANCH trueDestinationProbability: 0.26842105263157895 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60  <||@
  Comment 273 block B60 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 273 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 468 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 278 470 rbx|QWORD = MOV [rsi|DWORD * 8 + 448] size: QWORD  <||@
  Comment 286 472 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 290 474 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 293 476 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 296 478 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:126]  <||@
  Comment 296 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 296 10  <||@
  Comment 298 [stack:8, stack:24]at java.util.HashMap.getNode(HashMap.java:579) [bci: 126, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4  |5                  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 299 480 JUMP ~[] destination: B60 -> B61  <||@
  Comment 299 block B61 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 299 482 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 299 484 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 301 490 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 306 486 BRANCH trueDestinationProbability: 0.005263157894736842 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B68  <||@
  Comment 312 block B62 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 312 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 312 492 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 317 494 JUMP ~[] destination: B62 -> B63  <||@
  Comment 317 block B63 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 317 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 498 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 321 500 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 323 502 BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 329 block B65 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 329 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 512 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:129]  <||@
  Comment 329 [rax:0, rcx:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:579) [bci: 129, duringCall: false, rethrow: false]
              |0           |1               |2             |3  |4  |5             |6  |7 
     locals:  |-           |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |                |              |   |   |              |   |    <||@
  Comment 329 {infopoint: SAFEPOINT}  <||@
  Comment 329 11  <||@
  Comment 335 514 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 339 516 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 342 520 JUMP ~[] destination: B65 -> B43  <||@
  Comment 344 block B69 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 344 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 540 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 348 542 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 350 544 BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 356 block B71 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 356 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 356 554 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:98]  <||@
  Comment 356 [rax:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2                  |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 356 {infopoint: SAFEPOINT}  <||@
  Comment 356 11  <||@
  Comment 362 556 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 366 558 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 369 560 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 374 564 JUMP ~[] destination: B71 -> B43  <||@
  Comment 379 block B47 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 379 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 374 CMP (x: r8|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 384 376 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B68 falseDestination: B47 -> B49  <||@
  Comment 390 block B49 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 390 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 384 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 393 386 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 399 block B51 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 399 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 396 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 399 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 411 402 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 416 398 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63  <||@
  Comment 418 block B52 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 418 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 404 rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 421 406 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:98]  <||@
  Comment 421 [rax:0, rcx:0, r10:0, r11:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2             |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 421 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 425 408 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 433 410 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 435 412 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 441 block B54 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 441 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 424 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 448 426 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 456 428 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 459 430 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B63  <||@
  Comment 465 block B55 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 465 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 434 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 468 436 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B68 falseDestination: B55 -> B57  <||@
  Comment 474 block B57 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 474 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 474 444 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 478 446 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 482 448 rdx|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: r11|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 737 450 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 739 452 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 744 454 JUMP ~[] destination: B57 -> B61  <||@
  Comment 749 block B50 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 749 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 390 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 754 392 JUMP ~[] destination: B50 -> B63  <||@
  Comment 759 block B8 null  <||@
  Comment 759 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 759 78 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 762 80 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 768 block B10 null  <||@
  Comment 768 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 90 r9|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD  <||@
  Comment 772 92 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 772 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 779 94 BRANCH trueDestinationProbability: 0.548817802503477 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28  <||@
  Comment 785 block B11 null  <||@
  Comment 785 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 98 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 788 100 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 794 block B13 null  <||@
  Comment 794 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 112 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 797 114 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 803 block B15 null  <||@
  Comment 803 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 124 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 803 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 815 130 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 820 126 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B30  <||@
  Comment 826 block B30 null  <||@
  Comment 826 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 826 256 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 834 258 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 836 260 BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 842 block B32 null  <||@
  Comment 842 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 842 270 CMP stack:44|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 842 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 850 272 BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B32 -> B40 falseDestination: B32 -> B34  <||@
  Comment 856 block B34 null  <||@
  Comment 856 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 856 280 rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 858 282 JUMP ~[] destination: B34 -> B42  <||@
  Comment 863 block B4 null  <||@
  Comment 863 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 863 44 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 873 46 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 882 12  <||@
  Comment 892 block B1 null  <||@
  Comment 892 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 14 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 902 16 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 911 12  <||@
  Comment 921 block B68 null  <||@
  Comment 921 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 921 534 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 924 536 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 933 12  <||@
  Comment 943 block B28 null  <||@
  Comment 943 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 220 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 948 222 rax|QWORD = MOV [r9|DWORD * 8 + 448] size: QWORD  <||@
  Comment 956 224 r8|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 960 226 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 967 228 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 970 230 rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 973 232 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 976 234 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 979 236 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 984 238 stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 989 240 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:59]  <||@
  Comment 989 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 989 10  <||@
  Comment 991 [stack:8, stack:16, stack:24]at java.util.HashMap.getNode(HashMap.java:572) [bci: 59, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4                  |5  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-  |-   <||@
  Comment 992 242 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 994 244 BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35  <||@
  Comment 1000 block B35 null  <||@
  Comment 1000 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 286 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1005 288 rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1008 290 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1017 12  <||@
  Comment 1027 block B45 null  <||@
  Comment 1027 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1027 360 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 362 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1039 12  <||@
  Comment 1049 block B12 null  <||@
  Comment 1049 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 104 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 1053 106 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 108 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1065 12  <||@
  Comment 1075 block B37 null  <||@
  Comment 1075 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 302 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1085 304 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1094 12  <||@
  Comment 1104 block B70 null  <||@
  Comment 1104 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1104 548 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1114 550 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1123 12  <||@
  Comment 1133 block B16 null  <||@
  Comment 1133 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 132 rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1136 134 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1138 136 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1144 block B18 null  <||@
  Comment 1144 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1144 148 rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1152 150 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1154 152 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 1160 block B20 null  <||@
  Comment 1160 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1160 164 rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1167 166 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1174 168 CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1176 170 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B30  <||@
  Comment 1182 block B21 null  <||@
  Comment 1182 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1182 174 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 1189 176 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1191 178 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 1197 block B23 null  <||@
  Comment 1197 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1197 188 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 1201 190 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 1205 192 r11|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: rbx|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rdi|QWORD, temp4: rbp|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 1463 194 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1466 196 BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B23 -> B30 falseDestination: B23 -> B25  <||@
  Comment 1472 block B25 null  <||@
  Comment 1472 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 204 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1475 206 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1484 12  <||@
  Comment 1494 block B31 null  <||@
  Comment 1494 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1494 264 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1504 266 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1513 12  <||@
  Comment 1523 block B22 null  <||@
  Comment 1523 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 182 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1526 184 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1535 12  <||@
  Comment 1545 block B29 null  <||@
  Comment 1545 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1545 248 r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 1550 250 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1555 252 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1560 block B14 null  <||@
  Comment 1560 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1560 118 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1565 120 JUMP ~[] destination: B14 -> B30  <||@
  Comment 1570 block B64 null  <||@
  Comment 1570 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1570 506 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1580 508 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1589 12  <||@
  Comment 1599 block B40 null  <||@
  Comment 1599 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 318 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 1603 320 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1606 322 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1610 324 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:94]  <||@
  Comment 1610 9  <||@
  Comment 1615 {HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>}  <||@
  Comment 1620 []at java.util.HashMap.getNode(HashMap.java:576) [bci: 94, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1621 326 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1630 12  <||@
  Comment 1640 block B17 null  <||@
  Comment 1640 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1640 140 r10|DWORD = MOVE input: int[-130827|0xfffffffffffe00f5]  <||@
  Comment 1646 144 JUMP ~[] destination: B17 -> B73  <||@
  Comment 1646 block B73 null  <||@
  Comment 1646 572 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1646 574 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1653 576 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1660 578 DEOPT info [bci:0]  <||@
  Comment 1660 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10aea1f90, value=0x1127085fe]:0x1127085fe}  <||@
  Comment 1665 [rcx:0, rsi:0]at java.util.HashMap.getNode(HashMap.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1666 block B9 null  <||@
  Comment 1666 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1666 84 r10|DWORD = MOVE input: int[-129555|0xfffffffffffe05ed]  <||@
  Comment 1672 86 JUMP ~[] destination: B9 -> B73  <||@
  Comment 1674 block B53 null  <||@
  Comment 1674 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1674 416 MOV [r15|QWORD + 668] y: -143371 size: DWORD  <||@
  Comment 1685 418 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1692 420 DEOPT info [bci:98]  <||@
  Comment 1692 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10aea1f90, value=0x1127085fe]:0x1127085fe}  <||@
  Comment 1697 [rcx:0, r10:0]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2             |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1698 block B72 null  <||@
  Comment 1698 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1698 568 r10|DWORD = MOVE input: int[-124187|0xfffffffffffe1ae5]  <||@
  Comment 1704 570 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1706 block B19 null  <||@
  Comment 1706 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1706 156 r10|DWORD = MOVE input: int[-132875|0xfffffffffffdf8f5]  <||@
  Comment 1712 158 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1716 160 JUMP ~[] destination: B19 -> B73  <||@
  Comment 1718 {Stub<ExceptionHandlerStub.exceptionHandler>@0x112b3d5a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1718 4  <||@
  Comment 1724 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10aea1f88, value=0x112708500]:0x112708500}  <||@
  Comment 1724 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1488[java.util.HashMap.getNode(int, Object)]"
  method "HotSpotCompilation-1488[java.util.HashMap.getNode(int, Object)]"
  date 1528298693511
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 112cecaa0 448b560849c1e203493bc20f85afa3a1ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b462485c00f8441030000895424248b1cc50c000000448bd341ffca4423d2413bda0f864a06000048c1e003468b5490104585d20f84f502000048894c2418468b1cd508000000423b14d50c0000000f8532000000468b04d510000000418bd848c1e303483bd90f855a02000049c1e203498bc2488b6c24304883c4388505b3a40cf7c5f877c3428b04d51800000085c00f846c0300004181fb826500f80f846b05000048c1e0034c8bd00f1f4400008b542424413b520c0f856a000000458b5a10458bc349c1e0034c3bc10f84010300008b710881feda0200f80f846a0000004c89542408488b1cf5c0010000488b4340488bf1498bd0ffd09085c04c8b5424080f8561020000488b4c2418418b421885c00f84d9040000850517a40cf748c1e0034c8bd0eb88418b421885c00f84ec0200008505fca30cf748c1e0034c8bd0488b4c2418e965ffffff4c3b4424180f84130200004585db0f845e01000042813cdd08000000da0200f8488b4c2418759b8b410c418504c4428b34dd0c00000085f60f84d10400008b14f50c000000448b1cc50c000000443bda0f856cffffff4585db0f84bf01000048c1e00348c1e6034c8d40104c8d4e10418bdbd1e38bd383e21f83e3e00f845e0000004d8d04184d8d0c1948f7db0f1f840000000000c4c17e6f0418c4c17e6f0c19c5fdefc1c4e27d17c00f85b40000004883c32075df85d20f849f000000c4c17e6f4410e0c4c17e6f4c11e0c5fdefc1c4e27d17c00f8589000000e97d0000008bda83e20783e3f80f84410000004d8d04184d8d0c1948f7db660f1f440000660f1f440000498b3c18493b3c190f85510000004883c30875ec85d20f843c000000498b7c10f8493b7c11f87537eb2e8bdaf7c2040000007410418b38413b3975234d8d40044d8d4904f7c202000000740c410fb738410fb7193bfb7507ba01000000eb0233d28bc24c89542408e93efeffff488b4c2418e946feffff4885c90f8482030000448b49084181f9da0200f80f859e000000483bd90f84ff0000004585c00f84f502000042813cc508000000da0200f844895c24140f8433010000428b34d51800000085f60f848c020000817c2414826500f80f84e70200008bc6e975fdffff48b80000000000000000488b6c24304883c4388505eea10cf7c5f877c348b80000000000000000488b6c24304883c4388505d1a10cf7c5f877c3498bc2488b6c24304883c4388505bba10cf7c5f877c344895c24144a8b04cdc00100004c8b4040458bca49c1e103488bf1488bd3488bd8498bc044895424104c894c2408ffd09085c00f84210200004c8b4c2408498bc1488b6c24304883c438850567a10cf7c5f877c3498bc2488b6c24304883c438850551a10cf7c5f877c349c1e203498bc2488b6c24304883c438850537a10cf7c5f877c348b80000000000000000488b6c24304883c43885051aa10cf7c5f877c348b80000000000000000488b6c24304883c4388505fda00cf7c5f877c38b410c85c00f84f0010000428b14c50c00000085d20f84220200008b34d50c0000008b1cc50c0000003bde0f859cfeffff418bf248c1e60385db0f844601000048c1e00348c1e2034c8d40104c8d4a108bfbd1e7448bdf4183e31f83e7e00f845b0000004d8d04384d8d0c3948f7df0f1f4000c4c17e6f0438c4c17e6f0c39c5fdefc1c4e27d17c00f85b90000004883c72075df4585db0f84a2000000c4817e6f4418e0c4817e6f4c19e0c5fdefc1c4e27d17c00f858d000000e980000000418bfb4183e30783e7f80f843f0000004d8d04384d8d0c3948f7df660f1f840000000000498b2c38493b2c390f85560000004883c70875ec4585db0f843f0000004b8b6c18f84b3b6c19f8753beb31418bfb41f7c3040000007410418b28413b2975254d8d40044d8d490441f7c302000000740c410fb728410fb7393bef750841bb01000000eb034533db4585db0f847afdffff488bc6488b6c24304883c4388505949f0cf7c5f877c348b80000000000000000488b6c24304883c4388505779f0cf7c5f877c3488bc6488b6c24304883c4388505619f0cf7c5f877c3448b542410488b4c2418e922fdffff44895c2414e918fdffff48b80000000000000000488b6c24304883c43885052b9f0cf7c5f877c349c1e203498bf28b5424240f1f440000e8ac9fa1ff90488b6c24304883c4388505029f0cf7c5f877c341baf500feff4589979c0200004d89a7a8020000e8ddb4a1ff9041baed05feffebe441c7879c020000f5cffdff4d89a7a8020000e8bdb4a1ff9041bae51afeffebc441baf5f8fdff8b542424ebb8e84504e5ff90e89fb3a1ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10aea1f78, value=0x112706e60]:0x112706e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@17d794c9 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 51 8 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 53 10 BRANCH trueDestinationProbability: 0.09981557033476779 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 59 block B2 null  <||@
  Comment 59 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 20 stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 63 22 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 70 24 r10|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 76 26 r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 79 28 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 82 30 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B72  <||@
  Comment 88 block B3 null  <||@
  Comment 88 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 88 34 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 92 36 r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 97 38 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 100 40 BRANCH trueDestinationProbability: 0.22000496555148658 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 106 block B5 null  <||@
  Comment 106 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 50 stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 111 52 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 119 54 CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 127 56 BRANCH trueDestinationProbability: 0.6829792313201242 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36  <||@
  Comment 133 block B6 null  <||@
  Comment 133 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 60 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 141 62 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 148 64 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 151 66 BRANCH trueDestinationProbability: 0.5811487824769894 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 157 block B7 null  <||@
  Comment 157 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 70 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 161 72 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 164 74 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 173 12  <||@
  Comment 183 block B36 null  <||@
  Comment 183 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 294 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 191 296 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 193 298 BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 199 block B38 null  <||@
  Comment 199 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 199 308 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 199 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 206 310 BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B38 -> B40 falseDestination: B38 -> B42  <||@
  Comment 212 block B42 null  <||@
  Comment 212 332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 212 334 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 216 336 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 219 340 JUMP ~[] destination: B42 -> B43  <||@
  Comment 219 block B43 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 219 342 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 224 338 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 228 344 CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98]  <||@
  Comment 228 [rcx:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1          |2             |3  |4  |5             |6  |7 
     locals:  |-  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 232 346 BRANCH trueDestinationProbability: 0.6963070942662779 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B69  <||@
  Comment 238 block B44 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 238 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 350 r11|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 242 352 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 249 354 CMP (x: r8|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 252 356 BRANCH trueDestinationProbability: 0.33705512909979063 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 258 block B46 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 258 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 366 rsi|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:98]  <||@
  Comment 258 [rcx:0, r8:0, r10:0, r11:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1          |2             |3  |4  |5             |6  |7 
     locals:  |-  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 258 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 261 368 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 261 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 267 370 BRANCH trueDestinationProbability: 0.26842105263157895 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B60  <||@
  Comment 273 block B60 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 273 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 468 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 278 470 rbx|QWORD = MOV [rsi|DWORD * 8 + 448] size: QWORD  <||@
  Comment 286 472 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 290 474 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 293 476 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 296 478 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:126]  <||@
  Comment 296 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 296 10  <||@
  Comment 298 [stack:8, stack:24]at java.util.HashMap.getNode(HashMap.java:579) [bci: 126, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4  |5                  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 299 480 JUMP ~[] destination: B60 -> B61  <||@
  Comment 299 block B61 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 299 482 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 299 484 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 301 490 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 306 486 BRANCH trueDestinationProbability: 0.005263157894736842 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B68  <||@
  Comment 312 block B62 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 312 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 312 492 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 317 494 JUMP ~[] destination: B62 -> B63  <||@
  Comment 317 block B63 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 317 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 498 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 321 500 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 323 502 BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 329 block B65 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 329 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 512 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:129]  <||@
  Comment 329 [rax:0, rcx:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:579) [bci: 129, duringCall: false, rethrow: false]
              |0           |1               |2             |3  |4  |5             |6  |7 
     locals:  |-           |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |- 
     stack:   |int[0|0x0]  |                |              |   |   |              |   |    <||@
  Comment 329 {infopoint: SAFEPOINT}  <||@
  Comment 329 11  <||@
  Comment 335 514 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 339 516 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 342 520 JUMP ~[] destination: B65 -> B43  <||@
  Comment 344 block B69 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 344 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 540 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 348 542 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 350 544 BRANCH trueDestinationProbability: 0.34484126984126984 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B71  <||@
  Comment 356 block B71 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 356 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 356 554 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 thread: r15 state [bci:98]  <||@
  Comment 356 [rax:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2                  |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 356 {infopoint: SAFEPOINT}  <||@
  Comment 356 11  <||@
  Comment 362 556 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 366 558 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 369 560 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 374 564 JUMP ~[] destination: B71 -> B43  <||@
  Comment 379 block B47 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 379 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 374 CMP (x: r8|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 384 376 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B47 -> B68 falseDestination: B47 -> B49  <||@
  Comment 390 block B49 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 390 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 384 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 393 386 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 399 block B51 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 399 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 396 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 399 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 411 402 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 416 398 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63  <||@
  Comment 418 block B52 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 418 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 404 rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 421 406 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:98]  <||@
  Comment 421 [rax:0, rcx:0, r10:0, r11:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2             |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 421 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 425 408 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 433 410 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 435 412 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 441 block B54 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 441 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 424 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 448 426 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 456 428 CMP (x: r11|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 459 430 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B63  <||@
  Comment 465 block B55 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 465 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 434 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 468 436 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B68 falseDestination: B55 -> B57  <||@
  Comment 474 block B57 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 474 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 474 444 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 478 446 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 482 448 rdx|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rsi|QWORD[.], ~lengthValue: r11|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rbx|QWORD, temp4: rdi|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 737 450 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 739 452 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 744 454 JUMP ~[] destination: B57 -> B61  <||@
  Comment 749 block B50 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 749 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 390 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 754 392 JUMP ~[] destination: B50 -> B63  <||@
  Comment 759 block B8 null  <||@
  Comment 759 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 759 78 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 762 80 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 768 block B10 null  <||@
  Comment 768 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 90 r9|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD  <||@
  Comment 772 92 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 772 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 779 94 BRANCH trueDestinationProbability: 0.548817802503477 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28  <||@
  Comment 785 block B11 null  <||@
  Comment 785 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 98 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 788 100 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 794 block B13 null  <||@
  Comment 794 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 112 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 797 114 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 803 block B15 null  <||@
  Comment 803 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 803 124 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 803 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 815 130 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 820 126 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B30  <||@
  Comment 826 block B30 null  <||@
  Comment 826 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 826 256 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 834 258 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 836 260 BRANCH trueDestinationProbability: 0.216884661117717 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 842 block B32 null  <||@
  Comment 842 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 842 270 CMP stack:44|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 842 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 850 272 BRANCH trueDestinationProbability: 9.108850766661458E-4 condition: = trueDestination: B32 -> B40 falseDestination: B32 -> B34  <||@
  Comment 856 block B34 null  <||@
  Comment 856 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 856 280 rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 858 282 JUMP ~[] destination: B34 -> B42  <||@
  Comment 863 block B4 null  <||@
  Comment 863 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 863 44 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 873 46 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 882 12  <||@
  Comment 892 block B1 null  <||@
  Comment 892 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 14 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 902 16 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 911 12  <||@
  Comment 921 block B68 null  <||@
  Comment 921 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 921 534 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 924 536 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 933 12  <||@
  Comment 943 block B28 null  <||@
  Comment 943 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 220 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 948 222 rax|QWORD = MOV [r9|DWORD * 8 + 448] size: QWORD  <||@
  Comment 956 224 r8|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 960 226 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 967 228 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 970 230 rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 973 232 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 976 234 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 979 236 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 984 238 stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 989 240 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:59]  <||@
  Comment 989 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 989 10  <||@
  Comment 991 [stack:8, stack:16, stack:24]at java.util.HashMap.getNode(HashMap.java:572) [bci: 59, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4                  |5  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-  |-   <||@
  Comment 992 242 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 994 244 BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35  <||@
  Comment 1000 block B35 null  <||@
  Comment 1000 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 286 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1005 288 rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1008 290 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1017 12  <||@
  Comment 1027 block B45 null  <||@
  Comment 1027 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1027 360 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 362 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1039 12  <||@
  Comment 1049 block B12 null  <||@
  Comment 1049 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 104 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 1053 106 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 108 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1065 12  <||@
  Comment 1075 block B37 null  <||@
  Comment 1075 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 302 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1085 304 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1094 12  <||@
  Comment 1104 block B70 null  <||@
  Comment 1104 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1104 548 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1114 550 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1123 12  <||@
  Comment 1133 block B16 null  <||@
  Comment 1133 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 132 rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1136 134 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1138 136 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1144 block B18 null  <||@
  Comment 1144 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1144 148 rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1152 150 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1154 152 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 1160 block B20 null  <||@
  Comment 1160 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1160 164 rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1167 166 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1174 168 CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1176 170 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B30  <||@
  Comment 1182 block B21 null  <||@
  Comment 1182 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1182 174 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 1189 176 TEST (x: rbx|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1191 178 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 1197 block B23 null  <||@
  Comment 1197 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1197 188 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 1201 190 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 1205 192 r11|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: rbx|DWORD) {temp1: r8|QWORD[*], temp2: r9|QWORD[*], temp3: rdi|QWORD, temp4: rbp|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 1463 194 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1466 196 BRANCH trueDestinationProbability: 0.06147426981919332 condition: = trueDestination: B23 -> B30 falseDestination: B23 -> B25  <||@
  Comment 1472 block B25 null  <||@
  Comment 1472 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 204 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1475 206 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1484 12  <||@
  Comment 1494 block B31 null  <||@
  Comment 1494 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1494 264 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1504 266 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1513 12  <||@
  Comment 1523 block B22 null  <||@
  Comment 1523 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 182 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1526 184 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1535 12  <||@
  Comment 1545 block B29 null  <||@
  Comment 1545 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1545 248 r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 1550 250 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1555 252 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1560 block B14 null  <||@
  Comment 1560 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1560 118 stack:44|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1565 120 JUMP ~[] destination: B14 -> B30  <||@
  Comment 1570 block B64 null  <||@
  Comment 1570 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1570 506 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1580 508 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1589 12  <||@
  Comment 1599 block B40 null  <||@
  Comment 1599 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1599 318 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@47b2214b encoding: base: 0 shift: 3  <||@
  Comment 1603 320 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1606 322 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1610 324 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8 state [bci:94]  <||@
  Comment 1610 9  <||@
  Comment 1615 {HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>}  <||@
  Comment 1620 []at java.util.HashMap.getNode(HashMap.java:576) [bci: 94, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1621 326 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@133a8ef8  <||@
  Comment 1630 12  <||@
  Comment 1640 block B17 null  <||@
  Comment 1640 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1640 140 r10|DWORD = MOVE input: int[-130827|0xfffffffffffe00f5]  <||@
  Comment 1646 144 JUMP ~[] destination: B17 -> B73  <||@
  Comment 1646 block B73 null  <||@
  Comment 1646 572 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1646 574 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1653 576 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1660 578 DEOPT info [bci:0]  <||@
  Comment 1660 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10aea1f90, value=0x1127085fe]:0x1127085fe}  <||@
  Comment 1665 [rcx:0, rsi:0]at java.util.HashMap.getNode(HashMap.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1666 block B9 null  <||@
  Comment 1666 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1666 84 r10|DWORD = MOVE input: int[-129555|0xfffffffffffe05ed]  <||@
  Comment 1672 86 JUMP ~[] destination: B9 -> B73  <||@
  Comment 1674 block B53 null  <||@
  Comment 1674 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1674 416 MOV [r15|QWORD + 668] y: -143371 size: DWORD  <||@
  Comment 1685 418 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1692 420 DEOPT info [bci:98]  <||@
  Comment 1692 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10aea1f90, value=0x1127085fe]:0x1127085fe}  <||@
  Comment 1697 [rcx:0, r10:0]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2             |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1698 block B72 null  <||@
  Comment 1698 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1698 568 r10|DWORD = MOVE input: int[-124187|0xfffffffffffe1ae5]  <||@
  Comment 1704 570 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1706 block B19 null  <||@
  Comment 1706 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1706 156 r10|DWORD = MOVE input: int[-132875|0xfffffffffffdf8f5]  <||@
  Comment 1712 158 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1716 160 JUMP ~[] destination: B19 -> B73  <||@
  Comment 1718 {Stub<ExceptionHandlerStub.exceptionHandler>@0x112b3d5a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1718 4  <||@
  Comment 1724 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10aea1f88, value=0x112708500]:0x112708500}  <||@
  Comment 1724 5  <||@
  HexCodeFile>>> <|@
end_nmethod
