begin_compilation
  name " HotSpotCompilation-680[bench.StringOp.appendInline()]"
  method "HotSpotCompilation-680[bench.StringOp.appendInline()]"
  date 1527727480251
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j430 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j475 
=== Usages ===
v615 v616 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j475  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j475 v477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
=== Succesors ===
next: j476 
=== Usages ===
j554 v617 v618 a450 v619 v628 v629 v630 v631 
=== Predecessor ===
j430 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v615 #next: j476  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v616 
=== Succesors ===
next: v446 
=== Usages ===
v440 
=== Predecessor ===
j475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v616 #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$13/749343809@3c55a090
stamp: i64
=== Inputs ===
x: j475 
y: j553 
=== Succesors ===
=== Usages ===
v440 v477 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j475 y: j553  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@44d69681
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j476 
y: j554 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j476 y: j554  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 a451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i32 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i32
value: int[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
v478 a451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringOp.appendInline()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 123
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
a451 a507 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v445 
falseSuccessor: v444 
=== Usages ===
=== Predecessor ===
j476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v445 #falseSuccessor: v444  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a451 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a451  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a451 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@1360f38a
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v424 i349 i94 
=== Succesors ===
next: v454 
=== Usages ===
a455 
=== Predecessor ===
v445 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v424 i349 i94 #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
a451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
value: j554 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v615 value: j554 stateAfter: - lastLocationAccess: - #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v628 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v628 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v629 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v629 #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
displacement: 376
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v630 
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v630 #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
displacement: 440
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v631 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v631 #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
value: i349 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v617 value: i349 stateAfter: - lastLocationAccess: - #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
value: j425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v618 value: j425 stateAfter: - lastLocationAccess: - #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
value: v543 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v619 value: v543 stateAfter: - lastLocationAccess: - #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a450 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a450 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j475 
=== Succesors ===
next: v452 
=== Usages ===
a455 
=== Predecessor ===
v449 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j475 #next: v452  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
a450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a455 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v453 
values: a450 a451 
=== Succesors ===
=== Usages ===
v614 a419 v586 v588 v590 v592 v594 v596 v598 v600 v602 v603 v604 v605 v606 v607 v608 v610 v612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v453 values: a450 a451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v452 v454 
=== Succesors ===
next: i567 
=== Usages ===
a455 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v452 v454 #next: i567  <|@  <|@
f <@~|@floating>@ <|@
tid a122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{a}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{a}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a122 
index: - 
=== Succesors ===
=== Usages ===
i567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v585 
=== Succesors ===
next: v132 
=== Usages ===
v132 
=== Predecessor ===
v453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v585 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
value: i567 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i568 
=== Usages ===
=== Predecessor ===
i567 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v586 value: i567 stateAfter: - lastLocationAccess: - #next: i568  <|@  <|@
f <@~|@floating>@ <|@
tid a136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{b}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{b}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a136 
index: - 
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a136 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
=== Succesors ===
next: v144 
=== Usages ===
v144 
=== Predecessor ===
v132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v587 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
value: i568 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i569 
=== Usages ===
=== Predecessor ===
i568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v588 value: i568 stateAfter: - lastLocationAccess: - #next: i569  <|@  <|@
f <@~|@floating>@ <|@
tid a148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{c}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{c}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a148 
index: - 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a148 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
=== Succesors ===
next: v156 
=== Usages ===
v156 
=== Predecessor ===
v144 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v589 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v590 
value: i569 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i570 
=== Usages ===
=== Predecessor ===
i569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v590 value: i569 stateAfter: - lastLocationAccess: - #next: i570  <|@  <|@
f <@~|@floating>@ <|@
tid a160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{d}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{d}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a160 
index: - 
=== Succesors ===
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
=== Succesors ===
next: v168 
=== Usages ===
v168 
=== Predecessor ===
v156 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v591 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
value: i570 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i571 
=== Usages ===
=== Predecessor ===
i570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v592 value: i570 stateAfter: - lastLocationAccess: - #next: i571  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{e}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{e}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a172 
index: - 
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v593 
=== Succesors ===
next: v180 
=== Usages ===
v180 
=== Predecessor ===
v168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v593 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
value: i571 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i572 
=== Usages ===
=== Predecessor ===
i571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 value: i571 stateAfter: - lastLocationAccess: - #next: i572  <|@  <|@
f <@~|@floating>@ <|@
tid a184 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{f}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{f}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a184 
index: - 
=== Succesors ===
=== Usages ===
i572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
=== Succesors ===
next: v192 
=== Usages ===
v192 
=== Predecessor ===
v180 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
value: i572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i573 
=== Usages ===
=== Predecessor ===
i572 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 value: i572 stateAfter: - lastLocationAccess: - #next: i573  <|@  <|@
f <@~|@floating>@ <|@
tid a196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{g}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{g}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a196 
index: - 
=== Succesors ===
=== Usages ===
i573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
=== Succesors ===
next: v204 
=== Usages ===
v204 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v597 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
value: i573 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i574 
=== Usages ===
=== Predecessor ===
i573 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 value: i573 stateAfter: - lastLocationAccess: - #next: i574  <|@  <|@
f <@~|@floating>@ <|@
tid a208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{h}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{h}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a208 
index: - 
=== Succesors ===
=== Usages ===
i574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a208 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v599 
=== Succesors ===
next: v216 
=== Usages ===
v216 
=== Predecessor ===
v204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v599 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
displacement: 30
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
value: i574 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i575 
=== Usages ===
=== Predecessor ===
i574 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v600 value: i574 stateAfter: - lastLocationAccess: - #next: i575  <|@  <|@
f <@~|@floating>@ <|@
tid a220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{i}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{i}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a220 
index: - 
=== Succesors ===
=== Usages ===
i575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a220 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i575 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
=== Succesors ===
next: v228 
=== Usages ===
v228 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v601 #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
value: i575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i576 
=== Usages ===
=== Predecessor ===
i575 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v602 value: i575 stateAfter: - lastLocationAccess: - #next: i576  <|@  <|@
f <@~|@floating>@ <|@
tid a232 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{j}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{j}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a232 
index: - 
=== Succesors ===
=== Usages ===
i582 i579 i576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a232 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
=== Succesors ===
next: v240 
=== Usages ===
v240 
=== Predecessor ===
v228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
displacement: 34
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
value: i576 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i577 
=== Usages ===
=== Predecessor ===
i576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v603 value: i576 stateAfter: - lastLocationAccess: - #next: i577  <|@  <|@
f <@~|@floating>@ <|@
tid a244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{k}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{k}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a244 
index: - 
=== Succesors ===
=== Usages ===
i583 i580 i577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a244 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
=== Succesors ===
next: v252 
=== Usages ===
v252 
=== Predecessor ===
v240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
value: i577 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i578 
=== Usages ===
=== Predecessor ===
i577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v604 value: i577 stateAfter: - lastLocationAccess: - #next: i578  <|@  <|@
f <@~|@floating>@ <|@
tid a256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{l}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{l}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a256 
index: - 
=== Succesors ===
=== Usages ===
i584 i581 i578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
=== Succesors ===
next: v264 
=== Usages ===
v264 
=== Predecessor ===
v252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v613 #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
value: i578 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i579 
=== Usages ===
=== Predecessor ===
i578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v605 value: i578 stateAfter: - lastLocationAccess: - #next: i579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
=== Succesors ===
next: v275 
=== Usages ===
v275 
=== Predecessor ===
v264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
value: i579 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i580 
=== Usages ===
=== Predecessor ===
i579 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v606 value: i579 stateAfter: - lastLocationAccess: - #next: i580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
=== Succesors ===
next: v286 
=== Usages ===
v286 
=== Predecessor ===
v275 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
displacement: 42
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
value: i580 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i581 
=== Usages ===
=== Predecessor ===
i580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v607 value: i580 stateAfter: - lastLocationAccess: - #next: i581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
=== Succesors ===
next: v297 
=== Usages ===
v297 
=== Predecessor ===
v286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v613 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
value: i581 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i582 
=== Usages ===
=== Predecessor ===
i581 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v608 value: i581 stateAfter: - lastLocationAccess: - #next: i582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i582 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
=== Succesors ===
next: v308 
=== Usages ===
v308 
=== Predecessor ===
v297 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
displacement: 46
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v610 
value: i582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i583 
=== Usages ===
=== Predecessor ===
i582 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v610 value: i582 stateAfter: - lastLocationAccess: - #next: i583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i583 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
=== Succesors ===
next: v319 
=== Usages ===
v319 
=== Predecessor ===
v308 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v612 
value: i583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i584 
=== Usages ===
=== Predecessor ===
i583 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v612 value: i583 stateAfter: - lastLocationAccess: - #next: i584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i584 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
=== Succesors ===
next: v330 
=== Usages ===
v330 
=== Predecessor ===
v319 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v613 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
displacement: 50
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
value: i584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j494 
=== Usages ===
=== Predecessor ===
i584 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v614 value: i584 stateAfter: - lastLocationAccess: - #next: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j511 
=== Usages ===
v620 v621 
=== Predecessor ===
v330 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j511  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j494 
index: - 
=== Succesors ===
=== Usages ===
j511 v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
=== Succesors ===
next: j512 
=== Usages ===
j544 j517 v625 
=== Predecessor ===
j494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v620 #next: j512  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j494 
index: - 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
=== Succesors ===
next: v502 
=== Usages ===
v499 
=== Predecessor ===
j511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j544 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$13/749343809@3c55a090
stamp: i64
=== Inputs ===
x: j511 
y: j364 
=== Succesors ===
=== Usages ===
v499 v513 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j511 y: j364  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@44d69681
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j512 
y: j544 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j512 y: j544  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v500 
falseSuccessor: v501 
=== Usages ===
=== Predecessor ===
j512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v500 #falseSuccessor: v501  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a507 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a507  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i426 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a507 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@1360f38a
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v492 i505 i426 
=== Succesors ===
next: j508 
=== Usages ===
j508 
=== Predecessor ===
v500 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v492 i505 i426 #next: j508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a507 
=== Succesors ===
next: v518 
=== Usages ===
j517 
=== Predecessor ===
a507 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a507 #next: v518  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
j508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
value: j544 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v620 value: j544 stateAfter: - lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j511 
index: - 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j511 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v625 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v625 #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j517 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v515 
values: j511 j508 
=== Succesors ===
=== Usages ===
v624 v623 a416 v626 v627 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v515 values: j511 j508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v516 v518 
=== Succesors ===
next: a416 
=== Usages ===
j517 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v516 v518 #next: a416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a416 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j517 
=== Succesors ===
next: j529 
=== Usages ===
a422 
=== Predecessor ===
v515 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j517 #next: j529  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v523 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v523  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
j529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
=== Succesors ===
next: v530 
=== Usages ===
v530 
=== Predecessor ===
a416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j517 
index: - 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
value: j529 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
j529 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v623 value: j529 stateAfter: - lastLocationAccess: - #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j517 
index: - 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
value: v548 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v624 value: v548 stateAfter: - lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j517 
index: - 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a419 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a455 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
value: a419 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v626 value: a419 stateAfter: - lastLocationAccess: - #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j517 
index: - 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
value: i94 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a422 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v627 value: i94 stateAfter: - lastLocationAccess: - #next: a422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a422 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a416 
=== Succesors ===
next: v423 
=== Usages ===
v56 
=== Predecessor ===
v539 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a416 #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
a422 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a422 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a422 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j430 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j475 
=== Usages ===
v615 v616 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j475  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j475 v477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j475 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
=== Succesors ===
next: j476 
=== Usages ===
j554 v617 v618 a450 v619 v628 v629 v630 v631 
=== Predecessor ===
j430 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v615 #next: j476  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j476 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v616 
=== Succesors ===
next: v446 
=== Usages ===
v440 
=== Predecessor ===
j475 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v616 #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$13/749343809@3c55a090
stamp: i64
=== Inputs ===
x: j475 
y: j553 
=== Succesors ===
=== Usages ===
v440 v477 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j475 y: j553  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@44d69681
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j476 
y: j554 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j476 y: j554  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 a451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
result int[18|0x12] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i32 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i32
value: int[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
v478 a451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringOp.appendInline()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 123
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
a451 a507 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v445 
falseSuccessor: v444 
=== Usages ===
=== Predecessor ===
j476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v445 #falseSuccessor: v444  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ad0ed10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a451 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a451  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a451 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@1360f38a
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v424 i349 i94 
=== Succesors ===
next: v454 
=== Usages ===
a455 
=== Predecessor ===
v445 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v424 i349 i94 #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
a451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[18|0x12] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
value: j554 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v615 value: j554 stateAfter: - lastLocationAccess: - #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
result [v0|QWORD + 248] <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v628 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v628 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
result [v0|QWORD + 312] <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v629 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v629 #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
result [v0|QWORD + 376] <|@
d <@d|@=== Debug Properties ===
displacement: 376
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v630 
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v630 #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
result [v0|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v631 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v631 #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
result [v0|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
value: i349 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v617 value: i349 stateAfter: - lastLocationAccess: - #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result [v0|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j425 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
value: j425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v618 value: j425 stateAfter: - lastLocationAccess: - #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
result [v0|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j475 
index: - 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j475 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
value: v543 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v619 value: v543 stateAfter: - lastLocationAccess: - #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a450 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a450 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j475 
=== Succesors ===
next: v452 
=== Usages ===
a455 
=== Predecessor ===
v449 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j475 #next: v452  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
a450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 376] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 440] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD + 12] y: 18 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a455 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v453 
values: a450 a451 
=== Succesors ===
=== Usages ===
v614 a419 v586 v588 v590 v592 v594 v596 v598 v600 v602 v603 v604 v605 v606 v607 v608 v610 v612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v453 values: a450 a451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v452 v454 
=== Succesors ===
next: i567 
=== Usages ===
a455 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v452 v454 #next: i567  <|@  <|@
f <@~|@floating>@ <|@
tid a122 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{a}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{a}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result [v7|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a122 
index: - 
=== Succesors ===
=== Usages ===
i567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i567 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v585 
=== Succesors ===
next: v132 
=== Usages ===
v132 
=== Predecessor ===
v453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v585 #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result [v6|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
value: i567 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i568 
=== Usages ===
=== Predecessor ===
i567 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v586 value: i567 stateAfter: - lastLocationAccess: - #next: i568  <|@  <|@
f <@~|@floating>@ <|@
tid a136 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{b}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{b}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
result [v9|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a136 
index: - 
=== Succesors ===
=== Usages ===
i568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a136 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i568 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
=== Succesors ===
next: v144 
=== Usages ===
v144 
=== Predecessor ===
v132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v587 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result [v6|QWORD[.] + 18] <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
value: i568 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i569 
=== Usages ===
=== Predecessor ===
i568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v588 value: i568 stateAfter: - lastLocationAccess: - #next: i569  <|@  <|@
f <@~|@floating>@ <|@
tid a148 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{c}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{c}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result [v11|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a148 
index: - 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a148 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i569 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
=== Succesors ===
next: v156 
=== Usages ===
v156 
=== Predecessor ===
v144 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v589 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
result [v6|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v590 
value: i569 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i570 
=== Usages ===
=== Predecessor ===
i569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v590 value: i569 stateAfter: - lastLocationAccess: - #next: i570  <|@  <|@
f <@~|@floating>@ <|@
tid a160 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{d}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{d}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
result [v13|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a160 
index: - 
=== Succesors ===
=== Usages ===
i570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i570 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
=== Succesors ===
next: v168 
=== Usages ===
v168 
=== Predecessor ===
v156 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v591 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result [v6|QWORD[.] + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
value: i570 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i571 
=== Usages ===
=== Predecessor ===
i570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v592 value: i570 stateAfter: - lastLocationAccess: - #next: i571  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{e}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{e}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result [v15|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a172 
index: - 
=== Succesors ===
=== Usages ===
i571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i571 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v593 
=== Succesors ===
next: v180 
=== Usages ===
v180 
=== Predecessor ===
v168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v593 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
result [v6|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
value: i571 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i572 
=== Usages ===
=== Predecessor ===
i571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 value: i571 stateAfter: - lastLocationAccess: - #next: i572  <|@  <|@
f <@~|@floating>@ <|@
tid a184 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{f}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{f}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a184 
index: - 
=== Succesors ===
=== Usages ===
i572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a184 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i572 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
=== Succesors ===
next: v192 
=== Usages ===
v192 
=== Predecessor ===
v180 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
result [v6|QWORD[.] + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
value: i572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i573 
=== Usages ===
=== Predecessor ===
i572 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 value: i572 stateAfter: - lastLocationAccess: - #next: i573  <|@  <|@
f <@~|@floating>@ <|@
tid a196 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{g}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{g}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
result [v19|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a196 
index: - 
=== Succesors ===
=== Usages ===
i573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i573 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
=== Succesors ===
next: v204 
=== Usages ===
v204 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v597 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
result [v6|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
value: i573 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i574 
=== Usages ===
=== Predecessor ===
i573 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 value: i573 stateAfter: - lastLocationAccess: - #next: i574  <|@  <|@
f <@~|@floating>@ <|@
tid a208 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{h}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{h}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
result [v21|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a208 
index: - 
=== Succesors ===
=== Usages ===
i574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a208 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i574 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v599 
=== Succesors ===
next: v216 
=== Usages ===
v216 
=== Predecessor ===
v204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v599 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result [v6|QWORD[.] + 30] <|@
d <@d|@=== Debug Properties ===
displacement: 30
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
value: i574 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i575 
=== Usages ===
=== Predecessor ===
i574 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v600 value: i574 stateAfter: - lastLocationAccess: - #next: i575  <|@  <|@
f <@~|@floating>@ <|@
tid a220 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{i}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{i}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
result [v23|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a220 
index: - 
=== Succesors ===
=== Usages ===
i575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a220 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i575 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
=== Succesors ===
next: v228 
=== Usages ===
v228 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v601 #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
result [v6|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
value: i575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i576 
=== Usages ===
=== Predecessor ===
i575 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v602 value: i575 stateAfter: - lastLocationAccess: - #next: i576  <|@  <|@
f <@~|@floating>@ <|@
tid a232 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{j}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{j}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
result [v25|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a232 
index: - 
=== Succesors ===
=== Usages ===
i582 i579 i576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a232 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i576 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
=== Succesors ===
next: v240 
=== Usages ===
v240 
=== Predecessor ===
v228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
result [v6|QWORD[.] + 34] <|@
d <@d|@=== Debug Properties ===
displacement: 34
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
value: i576 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i577 
=== Usages ===
=== Predecessor ===
i576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v603 value: i576 stateAfter: - lastLocationAccess: - #next: i577  <|@  <|@
f <@~|@floating>@ <|@
tid a244 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{k}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{k}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
result [v27|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a244 
index: - 
=== Succesors ===
=== Usages ===
i583 i580 i577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a244 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i577 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
=== Succesors ===
next: v252 
=== Usages ===
v252 
=== Predecessor ===
v240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
result [v6|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
value: i577 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i578 
=== Usages ===
=== Predecessor ===
i577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v604 value: i577 stateAfter: - lastLocationAccess: - #next: i578  <|@  <|@
f <@~|@floating>@ <|@
tid a256 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{l}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{l}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
result [v29|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a256 
index: - 
=== Succesors ===
=== Usages ===
i584 i581 i578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i578 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
=== Succesors ===
next: v264 
=== Usages ===
v264 
=== Predecessor ===
v252 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v613 #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
result [v6|QWORD[.] + 38] <|@
d <@d|@=== Debug Properties ===
displacement: 38
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
value: i578 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i579 
=== Usages ===
=== Predecessor ===
i578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v605 value: i578 stateAfter: - lastLocationAccess: - #next: i579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i579 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
=== Succesors ===
next: v275 
=== Usages ===
v275 
=== Predecessor ===
v264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
result [v6|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
value: i579 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i580 
=== Usages ===
=== Predecessor ===
i579 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v606 value: i579 stateAfter: - lastLocationAccess: - #next: i580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i580 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
=== Succesors ===
next: v286 
=== Usages ===
v286 
=== Predecessor ===
v275 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
result [v6|QWORD[.] + 42] <|@
d <@d|@=== Debug Properties ===
displacement: 42
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
value: i580 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i581 
=== Usages ===
=== Predecessor ===
i580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v607 value: i580 stateAfter: - lastLocationAccess: - #next: i581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i581 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
=== Succesors ===
next: v297 
=== Usages ===
v297 
=== Predecessor ===
v286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v613 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
result [v6|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
value: i581 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i582 
=== Usages ===
=== Predecessor ===
i581 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v608 value: i581 stateAfter: - lastLocationAccess: - #next: i582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i582 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
=== Succesors ===
next: v308 
=== Usages ===
v308 
=== Predecessor ===
v297 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
result [v6|QWORD[.] + 46] <|@
d <@d|@=== Debug Properties ===
displacement: 46
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v610 
value: i582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i583 
=== Usages ===
=== Predecessor ===
i582 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v610 value: i582 stateAfter: - lastLocationAccess: - #next: i583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i583 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
=== Succesors ===
next: v319 
=== Usages ===
v319 
=== Predecessor ===
v308 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result [v6|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v612 
value: i583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i584 
=== Usages ===
=== Predecessor ===
i583 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v612 value: i583 stateAfter: - lastLocationAccess: - #next: i584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i584 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
=== Succesors ===
next: v330 
=== Usages ===
v330 
=== Predecessor ===
v319 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v613 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
result [v6|QWORD[.] + 50] <|@
d <@d|@=== Debug Properties ===
displacement: 50
scale: Times1
stamp: void*
=== Inputs ===
base: a455 
index: - 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a455 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
value: i584 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j494 
=== Usages ===
=== Predecessor ===
i584 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v614 value: i584 stateAfter: - lastLocationAccess: - #next: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j511 
=== Usages ===
v620 v621 
=== Predecessor ===
v330 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j511  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j494 
index: - 
=== Succesors ===
=== Usages ===
j511 v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j511 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
=== Succesors ===
next: j512 
=== Usages ===
j544 j517 v625 
=== Predecessor ===
j494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v620 #next: j512  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j494 
index: - 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
=== Succesors ===
next: v502 
=== Usages ===
v499 
=== Predecessor ===
j511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j544 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$13/749343809@3c55a090
stamp: i64
=== Inputs ===
x: j511 
y: j364 
=== Succesors ===
=== Usages ===
v499 v513 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j511 y: j364  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@44d69681
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j512 
y: j544 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j512 y: j544  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@543e1604 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v500 
falseSuccessor: v501 
=== Usages ===
=== Predecessor ===
j512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v500 #falseSuccessor: v501  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSX [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v8|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSX [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 18], y: v10|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSX [v11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 20], y: v12|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSX [v13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 22], y: v14|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSX [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 24], y: v16|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSX [v17|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 26], y: v18|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVSX [v19|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 28], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSX [v21|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 30], y: v22|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSX [v23|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 32], y: v24|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX [v25|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 34], y: v26|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{k}] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSX [v27|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 36], y: v28|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{l}] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSX [v29|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 38], y: v30|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSX [v25|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 40], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVSX [v27|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 42], y: v32|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSX [v29|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 44], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVSX [v25|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 46], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSX [v27|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 48], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSX [v29|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 50], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v37|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a507 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a507  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i426 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a507 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@1360f38a
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v492 i505 i426 
=== Succesors ===
next: j508 
=== Usages ===
j508 
=== Predecessor ===
v500 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v492 i505 i426 #next: j508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j508 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a507 
=== Succesors ===
next: v518 
=== Usages ===
j517 
=== Predecessor ===
a507 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a507 #next: v518  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
j508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
value: j544 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v620 value: j544 stateAfter: - lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
result [v37|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j511 
index: - 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j511 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v625 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v625 #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j517 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v515 
values: j511 j508 
=== Succesors ===
=== Usages ===
v624 v623 a416 v626 v627 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v515 values: j511 j508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v516 v518 
=== Succesors ===
next: a416 
=== Usages ===
j517 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v516 v518 #next: a416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a416 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j517 
=== Succesors ===
next: j529 
=== Usages ===
a422 
=== Predecessor ===
v515 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j517 #next: j529  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v523 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v523  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
result [v43|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
j529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j529 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
=== Succesors ===
next: v530 
=== Usages ===
v530 
=== Predecessor ===
a416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
result [v41|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j517 
index: - 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
value: j529 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
j529 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v623 value: j529 stateAfter: - lastLocationAccess: - #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
result [v41|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j517 
index: - 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
value: v548 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v624 value: v548 stateAfter: - lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
result [v41|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j517 
index: - 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a419 <|@
result v45|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a455 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
value: a419 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v533 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v626 value: a419 stateAfter: - lastLocationAccess: - #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
result [v41|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j517 
index: - 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
value: i94 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a422 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v627 value: i94 stateAfter: - lastLocationAccess: - #next: a422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a422 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a416 
=== Succesors ===
next: v423 
=== Usages ===
v56 
=== Predecessor ===
v539 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a416 #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
a422 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a422 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a422 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE v41|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v43|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*]], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1b7abf65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 12], y: v45|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7766d998 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ad0ed10 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v0|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 376] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 440] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD + 12] y: 18 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSX [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v8|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSX [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 18], y: v10|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSX [v11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 20], y: v12|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSX [v13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 22], y: v14|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSX [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 24], y: v16|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSX [v17|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 26], y: v18|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVSX [v19|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 28], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSX [v21|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 30], y: v22|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSX [v23|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 32], y: v24|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX [v25|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 34], y: v26|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{k}] <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSX [v27|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 36], y: v28|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{l}] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSX [v29|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 38], y: v30|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVSX [v25|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 40], y: v31|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVSX [v27|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 42], y: v32|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSX [v29|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 44], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVSX [v25|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 46], y: v34|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSX [v27|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 48], y: v35|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSX [v29|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 50], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v37|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v37|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE v41|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v43|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*]], y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v41|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1b7abf65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 12], y: v45|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7766d998 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[18|0x12] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #13         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #19         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_1       
    16: ldc           #25         // "b"
    18: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    21: pop           
    22: aload_1       
    23: ldc           #27         // "c"
    25: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    28: pop           
    29: aload_1       
    30: ldc           #29         // "d"
    32: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    35: pop           
    36: aload_1       
    37: ldc           #31         // "e"
    39: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    42: pop           
    43: aload_1       
    44: ldc           #33         // "f"
    46: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    49: pop           
    50: aload_1       
    51: ldc           #35         // "g"
    53: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    56: pop           
    57: aload_1       
    58: ldc           #37         // "h"
    60: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    63: pop           
    64: aload_1       
    65: ldc           #39         // "i"
    67: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    70: pop           
    71: aload_1       
    72: ldc           #41         // "j"
    74: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    77: pop           
    78: aload_1       
    79: ldc           #43         // "k"
    81: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    84: pop           
    85: aload_1       
    86: ldc           #45         // "l"
    88: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    91: pop           
    92: aload_1       
    93: ldc           #41         // "j"
    95: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    98: pop           
    99: aload_1       
   100: ldc           #43         // "k"
   102: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   105: pop           
   106: aload_1       
   107: ldc           #45         // "l"
   109: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   112: pop           
   113: aload_1       
   114: ldc           #41         // "j"
   116: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   119: pop           
   120: aload_1       
   121: ldc           #43         // "k"
   123: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   126: pop           
   127: aload_1       
   128: ldc           #45         // "l"
   130: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   133: pop           
   134: aload_1       
   135: invokevirtual #2          // java.lang.StringBuffer.toString:()java.lang.String
   138: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ad0ed10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 56] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 248] instr: 0 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 312] instr: 0 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 376] instr: 0 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 440] instr: 0 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 18 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}] <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}] <|@ <|@
      nr   48  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV (x: [r13|QWORD[.] + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}] <|@ <|@
      nr   54  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}] <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV (x: [r13|QWORD[.] + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr   64  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}] <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}] <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r13|QWORD[.] + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}] <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV (x: [r13|QWORD[.] + 30], y: rax|DWORD) size: WORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}] <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [r13|QWORD[.] + 32], y: rax|DWORD) size: WORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}] <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r13|QWORD[.] + 34], y: rsi|DWORD) size: WORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{k}] <|@ <|@
      nr  102  <|@ instruction rdx|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r13|QWORD[.] + 36], y: rdx|DWORD) size: WORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{l}] <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r13|QWORD[.] + 38], y: rcx|DWORD) size: WORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [r13|QWORD[.] + 40], y: rcx|DWORD) size: WORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [r13|QWORD[.] + 42], y: rcx|DWORD) size: WORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV (x: [r13|QWORD[.] + 44], y: rcx|DWORD) size: WORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r13|QWORD[.] + 46], y: rax|DWORD) size: WORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r13|QWORD[.] + 48], y: rax|DWORD) size: WORD <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r13|QWORD[.] + 50], y: rax|DWORD) size: WORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  158  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  164  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1b7abf65 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  170  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7766d998 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: int[18|0x12] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  184  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #13         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #19         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_1       
    16: ldc           #25         // "b"
    18: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    21: pop           
    22: aload_1       
    23: ldc           #27         // "c"
    25: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    28: pop           
    29: aload_1       
    30: ldc           #29         // "d"
    32: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    35: pop           
    36: aload_1       
    37: ldc           #31         // "e"
    39: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    42: pop           
    43: aload_1       
    44: ldc           #33         // "f"
    46: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    49: pop           
    50: aload_1       
    51: ldc           #35         // "g"
    53: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    56: pop           
    57: aload_1       
    58: ldc           #37         // "h"
    60: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    63: pop           
    64: aload_1       
    65: ldc           #39         // "i"
    67: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    70: pop           
    71: aload_1       
    72: ldc           #41         // "j"
    74: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    77: pop           
    78: aload_1       
    79: ldc           #43         // "k"
    81: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    84: pop           
    85: aload_1       
    86: ldc           #45         // "l"
    88: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    91: pop           
    92: aload_1       
    93: ldc           #41         // "j"
    95: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    98: pop           
    99: aload_1       
   100: ldc           #43         // "k"
   102: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   105: pop           
   106: aload_1       
   107: ldc           #45         // "l"
   109: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   112: pop           
   113: aload_1       
   114: ldc           #41         // "j"
   116: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   119: pop           
   120: aload_1       
   121: ldc           #43         // "k"
   123: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   126: pop           
   127: aload_1       
   128: ldc           #45         // "l"
   130: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   133: pop           
   134: aload_1       
   135: invokevirtual #2          // java.lang.StringBuffer.toString:()java.lang.String
   138: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ad0ed10 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 56] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 248] instr: 0 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 312] instr: 0 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 376] instr: 0 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 440] instr: 0 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 18 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}] <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}] <|@ <|@
      nr   48  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV (x: [r13|QWORD[.] + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}] <|@ <|@
      nr   54  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}] <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV (x: [r13|QWORD[.] + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr   64  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}] <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}] <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r13|QWORD[.] + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}] <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV (x: [r13|QWORD[.] + 30], y: rax|DWORD) size: WORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}] <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [r13|QWORD[.] + 32], y: rax|DWORD) size: WORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}] <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r13|QWORD[.] + 34], y: rsi|DWORD) size: WORD <|@ <|@
      nr  100  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{k}] <|@ <|@
      nr  102  <|@ instruction rdx|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r13|QWORD[.] + 36], y: rdx|DWORD) size: WORD <|@ <|@
      nr  106  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{l}] <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r13|QWORD[.] + 38], y: rcx|DWORD) size: WORD <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [r13|QWORD[.] + 40], y: rcx|DWORD) size: WORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  118  <|@ instruction MOV (x: [r13|QWORD[.] + 42], y: rcx|DWORD) size: WORD <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV (x: [r13|QWORD[.] + 44], y: rcx|DWORD) size: WORD <|@ <|@
      nr  124  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [r13|QWORD[.] + 46], y: rax|DWORD) size: WORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r13|QWORD[.] + 48], y: rax|DWORD) size: WORD <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r13|QWORD[.] + 50], y: rax|DWORD) size: WORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  158  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  164  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1b7abf65 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  170  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7766d998 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: int[18|0x12] <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  184  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  196  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  198  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #13         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #19         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_1       
    16: ldc           #25         // "b"
    18: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    21: pop           
    22: aload_1       
    23: ldc           #27         // "c"
    25: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    28: pop           
    29: aload_1       
    30: ldc           #29         // "d"
    32: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    35: pop           
    36: aload_1       
    37: ldc           #31         // "e"
    39: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    42: pop           
    43: aload_1       
    44: ldc           #33         // "f"
    46: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    49: pop           
    50: aload_1       
    51: ldc           #35         // "g"
    53: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    56: pop           
    57: aload_1       
    58: ldc           #37         // "h"
    60: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    63: pop           
    64: aload_1       
    65: ldc           #39         // "i"
    67: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    70: pop           
    71: aload_1       
    72: ldc           #41         // "j"
    74: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    77: pop           
    78: aload_1       
    79: ldc           #43         // "k"
    81: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    84: pop           
    85: aload_1       
    86: ldc           #45         // "l"
    88: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    91: pop           
    92: aload_1       
    93: ldc           #41         // "j"
    95: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    98: pop           
    99: aload_1       
   100: ldc           #43         // "k"
   102: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   105: pop           
   106: aload_1       
   107: ldc           #45         // "l"
   109: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   112: pop           
   113: aload_1       
   114: ldc           #41         // "j"
   116: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   119: pop           
   120: aload_1       
   121: ldc           #43         // "k"
   123: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   126: pop           
   127: aload_1       
   128: ldc           #45         // "l"
   130: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
   133: pop           
   134: aload_1       
   135: invokevirtual #2          // java.lang.StringBuffer.toString:()java.lang.String
   138: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410498b4760498b7770488d5038483bd60f87af010000498957600f1880f80000000f1880380100000f1880780100000f1880b8010000c7400c1200000048c70001000000c74008addeadde4c8be848b8addeaddeaddeadde0fbf4010664189451048b8addeaddeaddeadde0fbf4010664189451248b8addeaddeaddeadde0fbf4010664189451448b8addeaddeaddeadde0fbf4010664189451648b8addeaddeaddeadde0fbf4010664189451848b8addeaddeaddeadde0fbf4010664189451a48b8addeaddeaddeadde0fbf4010664189451c48b8addeaddeaddeadde0fbf4010664189451e48b8addeaddeaddeadde0fbf4010664189452048b8addeaddeaddeadde0fbf7010664189752248beaddeaddeaddeadde0fbf5610664189552448baaddeaddeaddeadde0fbf4a106641894d260fbf48106641894d280fbf4e106641894d2a0fbf4a106641894d2c0fbf4010664189452e0fbf461066418945300fbf42106641894532498b4760488d7018493b77700f876a000000498977600f1880d8000000488bf048baaddeaddeaddeadde488b92a8000000488910c74008addeadde49c1ed034489680c44896010488bc6488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba12000000b900000000e80000000090e967feffff48beaddeaddeaddeaddeba02000000b901000000e80000000090eb85e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1102a1f78, value=0x110aade60]:0x110aade60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ad0ed10 slotKind: QWORD  <||@
  Comment 48 6 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 52 8 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 56 10 rdx|QWORD = LEA [rax|QWORD + 56] size: QWORD  <||@
  Comment 60 12 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 63 14 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 69 block B2 null  <||@
  Comment 69 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 18 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 73 20 AMD64PREFETCH ~[rax|QWORD + 248] instr: 0  <||@
  Comment 80 22 AMD64PREFETCH ~[rax|QWORD + 312] instr: 0  <||@
  Comment 87 24 AMD64PREFETCH ~[rax|QWORD + 376] instr: 0  <||@
  Comment 94 26 AMD64PREFETCH ~[rax|QWORD + 440] instr: 0  <||@
  Comment 101 28 MOV [rax|QWORD + 12] y: 18 size: DWORD  <||@
  Comment 108 30 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 115 32 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 115 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 122 34 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 122 36 JUMP ~[] destination: B2 -> B3  <||@
  Comment 122 block B3 null  <||@
  Comment 122 38 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 122 -1 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 125 40 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}]  <||@
  Comment 125 {Object[char[1]{a}]}  <||@
  Comment 135 42 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 139 44 MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: WORD  <||@
  Comment 144 46 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}]  <||@
  Comment 144 {Object[char[1]{b}]}  <||@
  Comment 154 48 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 158 50 MOV (x: [r13|QWORD[.] + 18], y: rax|DWORD) size: WORD  <||@
  Comment 163 52 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}]  <||@
  Comment 163 {Object[char[1]{c}]}  <||@
  Comment 173 54 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 177 56 MOV (x: [r13|QWORD[.] + 20], y: rax|DWORD) size: WORD  <||@
  Comment 182 58 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}]  <||@
  Comment 182 {Object[char[1]{d}]}  <||@
  Comment 192 60 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 196 62 MOV (x: [r13|QWORD[.] + 22], y: rax|DWORD) size: WORD  <||@
  Comment 201 64 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}]  <||@
  Comment 201 {Object[char[1]{e}]}  <||@
  Comment 211 66 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 215 68 MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: WORD  <||@
  Comment 220 70 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}]  <||@
  Comment 220 {Object[char[1]{f}]}  <||@
  Comment 230 72 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 234 74 MOV (x: [r13|QWORD[.] + 26], y: rax|DWORD) size: WORD  <||@
  Comment 239 76 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}]  <||@
  Comment 239 {Object[char[1]{g}]}  <||@
  Comment 249 78 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 253 80 MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD) size: WORD  <||@
  Comment 258 82 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}]  <||@
  Comment 258 {Object[char[1]{h}]}  <||@
  Comment 268 84 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 272 86 MOV (x: [r13|QWORD[.] + 30], y: rax|DWORD) size: WORD  <||@
  Comment 277 88 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}]  <||@
  Comment 277 {Object[char[1]{i}]}  <||@
  Comment 287 90 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 291 92 MOV (x: [r13|QWORD[.] + 32], y: rax|DWORD) size: WORD  <||@
  Comment 296 94 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}]  <||@
  Comment 296 {Object[char[1]{j}]}  <||@
  Comment 306 96 rsi|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 310 98 MOV (x: [r13|QWORD[.] + 34], y: rsi|DWORD) size: WORD  <||@
  Comment 315 100 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{k}]  <||@
  Comment 315 {Object[char[1]{k}]}  <||@
  Comment 325 102 rdx|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 329 104 MOV (x: [r13|QWORD[.] + 36], y: rdx|DWORD) size: WORD  <||@
  Comment 334 106 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{l}]  <||@
  Comment 334 {Object[char[1]{l}]}  <||@
  Comment 344 108 rcx|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 348 110 MOV (x: [r13|QWORD[.] + 38], y: rcx|DWORD) size: WORD  <||@
  Comment 353 112 rcx|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 357 114 MOV (x: [r13|QWORD[.] + 40], y: rcx|DWORD) size: WORD  <||@
  Comment 362 116 rcx|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 366 118 MOV (x: [r13|QWORD[.] + 42], y: rcx|DWORD) size: WORD  <||@
  Comment 371 120 rcx|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 375 122 MOV (x: [r13|QWORD[.] + 44], y: rcx|DWORD) size: WORD  <||@
  Comment 380 124 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 384 126 MOV (x: [r13|QWORD[.] + 46], y: rax|DWORD) size: WORD  <||@
  Comment 389 128 rax|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 393 130 MOV (x: [r13|QWORD[.] + 48], y: rax|DWORD) size: WORD  <||@
  Comment 398 132 rax|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 402 134 MOV (x: [r13|QWORD[.] + 50], y: rax|DWORD) size: WORD  <||@
  Comment 407 136 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 411 138 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 415 140 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 419 142 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 425 block B5 null  <||@
  Comment 425 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 146 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 429 148 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 436 -1 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 436 150 JUMP ~[] destination: B5 -> B6  <||@
  Comment 436 block B6 null  <||@
  Comment 436 152 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 436 154 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 439 156 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 439 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 449 158 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 456 160 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 459 162 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 459 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 466 164 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1b7abf65 encoding: base: 0 shift: 3  <||@
  Comment 470 166 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 474 168 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 478 170 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 481 172 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7766d998  <||@
  Comment 490 12  <||@
  Comment 500 block B1 null  <||@
  Comment 500 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 176 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 500 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 510 180 rdx|DWORD = MOVE input: int[18|0x12]  <||@
  Comment 515 182 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 520 184 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 520 {Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 525 []at bench.StringOp.appendInline(Bench.scala:123) [bci: 0, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 526 188 JUMP ~[] destination: B1 -> B3  <||@
  Comment 531 block B4 null  <||@
  Comment 531 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 192 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 531 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 541 196 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 546 198 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 551 200 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 551 {Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 556 [r13:0]at bench.StringOp.appendInline(Bench.scala:123) [bci: 0, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 557 -1 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 557 204 JUMP ~[] destination: B4 -> B6  <||@
  Comment 559 {Stub<ExceptionHandlerStub.exceptionHandler>@0x110e2c9e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 559 4  <||@
  Comment 565 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1102a1f88, value=0x110aaf500]:0x110aaf500}  <||@
  Comment 565 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-680[bench.StringOp.appendInline()]"
  method "HotSpotCompilation-680[bench.StringOp.appendInline()]"
  date 1527727480576
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1118dd1c0 448b560849c1e203493bc20f858f0c1dff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410498b4760498b7770488d5038483bd60f87af010000498957600f1880f80000000f1880380100000f1880780100000f1880b8010000c7400c1200000048c70001000000c74008410000f84c8be848b8200b3dc0060000000fbf4010664189451048b8c8fb41c0060000000fbf4010664189451248b8c0862fc0060000000fbf4010664189451448b8b80b3dc0060000000fbf4010664189451648b8d00b3dc0060000000fbf4010664189451848b8e80b3dc0060000000fbf4010664189451a48b8000c3dc0060000000fbf4010664189451c48b820872fc0060000000fbf4010664189451e48b838872fc0060000000fbf4010664189452048b850872fc0060000000fbf7010664189752248be68872fc0060000000fbf5610664189552448ba80872fc0060000000fbf4a106641894d260fbf48106641894d280fbf4e106641894d2a0fbf4a106641894d2c0fbf4010664189452e0fbf461066418945300fbf42106641894532498b4760488d7018493b77700f876a000000498977600f1880d8000000488bf048bad01600c007000000488b92a8000000488910c74008da0200f849c1ed034489680c44896010488bc6488b6c24104883c4188505567c87fdc5f877c348be080200c007000000ba12000000b900000000e813f3b8ff90e967feffff48be680b00c007000000ba02000000b901000000e8f4f2b8ff90eb85e8ecf554ff90e806211dff90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1102a1f78, value=0x110aade60]:0x110aade60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7ad0ed10 slotKind: QWORD  <||@
  Comment 48 6 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 52 8 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 56 10 rdx|QWORD = LEA [rax|QWORD + 56] size: QWORD  <||@
  Comment 60 12 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 63 14 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 69 block B2 null  <||@
  Comment 69 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 18 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 73 20 AMD64PREFETCH ~[rax|QWORD + 248] instr: 0  <||@
  Comment 80 22 AMD64PREFETCH ~[rax|QWORD + 312] instr: 0  <||@
  Comment 87 24 AMD64PREFETCH ~[rax|QWORD + 376] instr: 0  <||@
  Comment 94 26 AMD64PREFETCH ~[rax|QWORD + 440] instr: 0  <||@
  Comment 101 28 MOV [rax|QWORD + 12] y: 18 size: DWORD  <||@
  Comment 108 30 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 115 32 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 115 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 122 34 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 122 36 JUMP ~[] destination: B2 -> B3  <||@
  Comment 122 block B3 null  <||@
  Comment 122 38 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 122 -1 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 125 40 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}]  <||@
  Comment 125 {Object[char[1]{a}]}  <||@
  Comment 135 42 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 139 44 MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: WORD  <||@
  Comment 144 46 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}]  <||@
  Comment 144 {Object[char[1]{b}]}  <||@
  Comment 154 48 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 158 50 MOV (x: [r13|QWORD[.] + 18], y: rax|DWORD) size: WORD  <||@
  Comment 163 52 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}]  <||@
  Comment 163 {Object[char[1]{c}]}  <||@
  Comment 173 54 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 177 56 MOV (x: [r13|QWORD[.] + 20], y: rax|DWORD) size: WORD  <||@
  Comment 182 58 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}]  <||@
  Comment 182 {Object[char[1]{d}]}  <||@
  Comment 192 60 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 196 62 MOV (x: [r13|QWORD[.] + 22], y: rax|DWORD) size: WORD  <||@
  Comment 201 64 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}]  <||@
  Comment 201 {Object[char[1]{e}]}  <||@
  Comment 211 66 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 215 68 MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: WORD  <||@
  Comment 220 70 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}]  <||@
  Comment 220 {Object[char[1]{f}]}  <||@
  Comment 230 72 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 234 74 MOV (x: [r13|QWORD[.] + 26], y: rax|DWORD) size: WORD  <||@
  Comment 239 76 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}]  <||@
  Comment 239 {Object[char[1]{g}]}  <||@
  Comment 249 78 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 253 80 MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD) size: WORD  <||@
  Comment 258 82 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}]  <||@
  Comment 258 {Object[char[1]{h}]}  <||@
  Comment 268 84 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 272 86 MOV (x: [r13|QWORD[.] + 30], y: rax|DWORD) size: WORD  <||@
  Comment 277 88 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}]  <||@
  Comment 277 {Object[char[1]{i}]}  <||@
  Comment 287 90 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 291 92 MOV (x: [r13|QWORD[.] + 32], y: rax|DWORD) size: WORD  <||@
  Comment 296 94 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}]  <||@
  Comment 296 {Object[char[1]{j}]}  <||@
  Comment 306 96 rsi|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 310 98 MOV (x: [r13|QWORD[.] + 34], y: rsi|DWORD) size: WORD  <||@
  Comment 315 100 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{k}]  <||@
  Comment 315 {Object[char[1]{k}]}  <||@
  Comment 325 102 rdx|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 329 104 MOV (x: [r13|QWORD[.] + 36], y: rdx|DWORD) size: WORD  <||@
  Comment 334 106 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{l}]  <||@
  Comment 334 {Object[char[1]{l}]}  <||@
  Comment 344 108 rcx|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 348 110 MOV (x: [r13|QWORD[.] + 38], y: rcx|DWORD) size: WORD  <||@
  Comment 353 112 rcx|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 357 114 MOV (x: [r13|QWORD[.] + 40], y: rcx|DWORD) size: WORD  <||@
  Comment 362 116 rcx|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 366 118 MOV (x: [r13|QWORD[.] + 42], y: rcx|DWORD) size: WORD  <||@
  Comment 371 120 rcx|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 375 122 MOV (x: [r13|QWORD[.] + 44], y: rcx|DWORD) size: WORD  <||@
  Comment 380 124 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 384 126 MOV (x: [r13|QWORD[.] + 46], y: rax|DWORD) size: WORD  <||@
  Comment 389 128 rax|DWORD = MOVSX [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 393 130 MOV (x: [r13|QWORD[.] + 48], y: rax|DWORD) size: WORD  <||@
  Comment 398 132 rax|DWORD = MOVSX [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 402 134 MOV (x: [r13|QWORD[.] + 50], y: rax|DWORD) size: WORD  <||@
  Comment 407 136 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 411 138 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 415 140 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 419 142 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 425 block B5 null  <||@
  Comment 425 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 146 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 429 148 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 436 -1 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 436 150 JUMP ~[] destination: B5 -> B6  <||@
  Comment 436 block B6 null  <||@
  Comment 436 152 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 436 154 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 439 156 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 439 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 449 158 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 456 160 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 459 162 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 459 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 466 164 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1b7abf65 encoding: base: 0 shift: 3  <||@
  Comment 470 166 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 474 168 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 478 170 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 481 172 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7766d998  <||@
  Comment 490 12  <||@
  Comment 500 block B1 null  <||@
  Comment 500 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 176 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 500 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 510 180 rdx|DWORD = MOVE input: int[18|0x12]  <||@
  Comment 515 182 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 520 184 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 520 {Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 525 []at bench.StringOp.appendInline(Bench.scala:123) [bci: 0, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 526 188 JUMP ~[] destination: B1 -> B3  <||@
  Comment 531 block B4 null  <||@
  Comment 531 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 192 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 531 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 541 196 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 546 198 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 551 200 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 551 {Stub<NewArrayStub.newArray>@0x11146c6e0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 556 [r13:0]at bench.StringOp.appendInline(Bench.scala:123) [bci: 0, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 557 -1 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 557 204 JUMP ~[] destination: B4 -> B6  <||@
  Comment 559 {Stub<ExceptionHandlerStub.exceptionHandler>@0x110e2c9e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 559 4  <||@
  Comment 565 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1102a1f88, value=0x110aaf500]:0x110aaf500}  <||@
  Comment 565 5  <||@
  HexCodeFile>>> <|@
end_nmethod
