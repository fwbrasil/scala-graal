begin_compilation
  name " HotSpotCompilation-1353[java.util.HashMap.getNode(int, Object)]"
  method "HotSpotCompilation-1353[java.util.HashMap.getNode(int, Object)]"
  date 1527031669641
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a594 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a594  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v612 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v612 
=== Succesors ===
next: v10 
=== Usages ===
a344 v345 v613 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v612 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
stamp: void
=== Inputs ===
value: a594 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a594  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 v120 v121 v210 v209 v219 v549 v561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
stamp: void
trueSuccessorProbability: 0.021629587643474564
=== Inputs ===
condition: v345 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
a594 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v345 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4581891525590909026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4606987596794314749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i595 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i595  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a594 
=== Succesors ===
=== Usages ===
i595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
=== Succesors ===
next: v453 
=== Usages ===
v445 i17 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v613 #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i18 v28 ?540 ?539 v404 ?75 v77 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i595 
y: i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i595 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$72/50528301@612a01a0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i17 
=== Succesors ===
=== Usages ===
v614 v445 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i595 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i595  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v33 v37 v143 ?540 ?539 v404 ?75 v82 v415 v593 v396 v627 v617 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
i595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v450 #falseSuccessor: v452  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606987596794314749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a596 
=== Usages ===
a596 
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a596  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a594 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a594  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a344 
index: i18 
=== Succesors ===
=== Usages ===
a596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v450 
address: v614 
=== Succesors ===
next: v26 
=== Usages ===
a363 v364 v615 v616 v623 v629 v633 a634 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v450 address: v614 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
stamp: void
=== Inputs ===
value: a596 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a596  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 28]
stamp: void
trueSuccessorProbability: 0.07222389581498818
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
a596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v25 #falseSuccessor: v24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4589756134393700262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4606351132577997832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a596 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
=== Succesors ===
next: i598 
=== Usages ===
v589 v632 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v629 #next: i598  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a596 
=== Succesors ===
=== Usages ===
i598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
=== Succesors ===
next: v31 
=== Usages ===
v28 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v615 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i598 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i598  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 v632 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 v93 v308 v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
trueSuccessorProbability: 0.8099819565583852
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i598 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604797561580171310
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a599 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a599  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a596 
=== Succesors ===
=== Usages ===
a599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v616 
=== Succesors ===
next: v36 
=== Usages ===
a371 v535 v619 v628 
=== Predecessor ===
v29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v616 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid a371 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a599 
=== Succesors ===
=== Usages ===
v33 v396 v143 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a599  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a371 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a371  <|@  <|@
f <@~|@floating>@ <|@
tid a363 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a596 
=== Succesors ===
=== Usages ===
v237 v288 v312 ?539 v275 v124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a596  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
trueSuccessorProbability: 0.9050463630267387
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
a599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604168746118677132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a363 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a363 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589694944355118355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v456 #falseSuccessor: v454  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -95251
stableDimension: 0
stamp: i32 [-95251] ⇊00000000fffe8bed ⇈00000000fffe8bed
stampKind: i32
value: int[-95251|0xfffffffffffe8bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4589694944355118355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
=== Succesors ===
next: v141 
=== Usages ===
v621 v586 
=== Predecessor ===
v454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v627 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 v587 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v600 
y: v585 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v600 y: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5799512987012987
=== Inputs ===
condition: v586 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v586 #trueSuccessor: v135 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4585995738532386516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a371 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a371  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v144 
falseSuccessor: v145 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v144 #falseSuccessor: v145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581492138905016020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a363 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a363 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4581492138905016020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a599 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a599  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v535 
=== Succesors ===
trueSuccessor: v515 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v535 #trueSuccessor: v515 #falseSuccessor: v514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566814356523586114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4580908647155356812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a599 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v628 
=== Succesors ===
next: v569 
=== Usages ===
v587 
=== Predecessor ===
v514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v628 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v601 
y: v585 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v601 y: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v587 
=== Succesors ===
trueSuccessor: v567 
falseSuccessor: v566 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v587 #trueSuccessor: v567 #falseSuccessor: v566  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a602 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a602  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
=== Succesors ===
next: v461 
=== Usages ===
a375 v376 v618 
=== Predecessor ===
v567 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v617 #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a602 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a602  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v376 
=== Succesors ===
trueSuccessor: v460 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
a602 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v376 #trueSuccessor: v460 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96523
stableDimension: 0
stamp: i32 [-96523] ⇊00000000fffe86f5 ⇈00000000fffe86f5
stampKind: i32
value: int[-96523|0xfffffffffffe86f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a603 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a603  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a599 
=== Succesors ===
=== Usages ===
a603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a603 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
=== Succesors ===
next: v465 
=== Usages ===
a383 v384 v620 
=== Predecessor ===
v458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v619 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a603 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a603  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v464 
falseSuccessor: v462 
=== Usages ===
=== Predecessor ===
a603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v464 #falseSuccessor: v462  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98571
stableDimension: 0
stamp: i32 [-98571] ⇊00000000fffe7ef5 ⇈00000000fffe7ef5
stampKind: i32
value: int[-98571|0xfffffffffffe7ef5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v464 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i604 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i604  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a603 
=== Succesors ===
=== Usages ===
i604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
=== Succesors ===
next: i605 
=== Usages ===
v164 
=== Predecessor ===
v462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v620 #next: i605  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a602 
=== Succesors ===
=== Usages ===
i605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
=== Succesors ===
next: v167 
=== Usages ===
v164 v171 i179 
=== Predecessor ===
i604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v618 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i604 
y: i605 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i604 y: i605  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
i605 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v165 #falseSuccessor: v166  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4571901447900615820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i605 
y: i12 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i605 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4567397848273245324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a363 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a363 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567397848273245324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i179  <|@  <|@
f <@~|@floating>@ <|@
tid a375 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a602 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a602  <|@  <|@
f <@~|@floating>@ <|@
tid a383 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a603 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a375 
array2: a383 
length: i605 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
v42 
=== Predecessor ===
v173 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a375 array2: a383 length: i605 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i12 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i179 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06981086127120707
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
i179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4549997728885553280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4567031241718950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a363 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a363 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4571901447900615820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v166 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4584109481183053477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v600 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
=== Succesors ===
next: j395 
=== Usages ===
v622 v396 
=== Predecessor ===
v140 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 #next: j395  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v392 
index: - 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v392 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
=== Succesors ===
next: i40 
=== Usages ===
v396 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 #next: i40  <|@  <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2eebe37
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j395 
metaspaceMethod: v392 
arguments: a3 a371 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j395 metaspaceMethod: v392 arguments: a3 a371  <|@  <|@
tid ?539 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 572
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - a363 - - - 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - a363 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
bci: 59
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v396 
stateDuring: ?539 
=== Succesors ===
next: v311 
=== Usages ===
v308 
=== Predecessor ===
j395 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v396 stateDuring: ?539 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i12 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i40 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06981086127120707
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v309 
falseSuccessor: v310 
=== Usages ===
=== Predecessor ===
i40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v309 #falseSuccessor: v310  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566866898802751383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580815167822124565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v242 v244 v274 v313 v574 
=== Succesors ===
next: a606 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v242 v244 v274 v313 v574 #next: a606  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a596 
=== Succesors ===
=== Usages ===
a606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
=== Succesors ===
next: v60 
=== Usages ===
a542 v422 
=== Predecessor ===
v241 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v623 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a606 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a606  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.12002300760529175
=== Inputs ===
condition: v422 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
a606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v422 #trueSuccessor: v59 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4567099000459426671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v209  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4580196095580485287
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v597 
y: v588 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v597 y: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 0.0019245433748502627
=== Inputs ===
condition: v589 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v589 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4539566131597049492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4580187360320268167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4583519421648498610
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a363 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a363 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595382304281841514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: a607 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a607  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a596 
=== Succesors ===
=== Usages ===
a607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
=== Succesors ===
next: v208 
=== Usages ===
a542 v423 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v633 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a607 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a607  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.12002300760529175
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v207 
falseSuccessor: v206 
=== Usages ===
=== Predecessor ===
a607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v207 #falseSuccessor: v206  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4581624077846423725
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4594636447227091541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v597 
y: v588 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v597 y: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 0.0019245433748502627
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4554024026757981078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4554583083411876735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v315 v316 
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v315 v316 #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a634 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a596 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a596  <|@  <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@65e4d19f
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>
=== Inputs ===
arguments: a634 i2 a3 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a634 i2 a3  <|@  <|@
tid ?541 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 576
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
d <@d|@=== Debug Properties ===
bci: 94
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.getTreeNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v404 
stateDuring: ?541 
=== Succesors ===
next: v71 
=== Usages ===
v71 
=== Predecessor ===
v314 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v404 stateDuring: ?541 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 97]
stamp: void
=== Inputs ===
result: a69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a69 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a69 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594625923002259939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4595192190366240468
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a542 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v317 
values: a606 a607 
=== Succesors ===
=== Usages ===
a543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: a606 a607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v318 v320 
=== Succesors ===
next: v72 
=== Usages ===
a542 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v318 v320 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a543 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a542 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a542  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B51" "B55" 
    successors "B44" "B53" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4596166997863938955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a74 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v73 
values: a543 a418 a420 
=== Succesors ===
=== Usages ===
?75 v626 v625 v126 ?540 v127 v624 v631 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v73 values: a543 a418 a420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.1618160651920837
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v72 
=== Succesors ===
next: i608 
=== Usages ===
a74 v84 v100 v110 v112 v211 v216 v474 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v72 #next: i608  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 578
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
v449 v561 i608 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
i608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i608 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 100]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v624 
=== Succesors ===
next: v80 
=== Usages ===
v77 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v624 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i608 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i608  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
trueSuccessorProbability: 0.8130949398797596
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i608 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594858853539801753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: a609 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a609  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a609 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v625 
=== Succesors ===
next: v88 
=== Usages ===
a412 
=== Predecessor ===
v78 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v625 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a412 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a609 
=== Succesors ===
=== Usages ===
v82 v415 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a609  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a412 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a412  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
trueSuccessorProbability: 0.7999768937497593
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
a609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v84 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4593720555396131352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584714013610476037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 120]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v474 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 120]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid i563 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105747
stableDimension: 0
stamp: i32 [-105747] ⇊00000000fffe62ed ⇈00000000fffe62ed
stampKind: i32
value: int[-105747|0xfffffffffffe62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
actionAndReason: i563 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?75 actionAndReason: i563 speculation: a6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584714013610476037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 120]
stamp: void
=== Inputs ===
=== Succesors ===
next: i91 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i91  <|@  <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@726fa6ec
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a3 a412 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3 a412  <|@  <|@
tid ?540 <|@
d <@d|@=== Debug Properties ===
bci: 126
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
d <@d|@=== Debug Properties ===
bci: 126
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v415 
stateDuring: ?540 
=== Succesors ===
next: v105 
=== Usages ===
v93 
=== Predecessor ===
v471 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v415 stateDuring: ?540 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i12 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i91 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
trueSuccessorProbability: 0.04043126684636118
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i91 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v104 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563533745906616265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: a610 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a610  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
=== Succesors ===
next: v114 
=== Usages ===
a418 v424 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v626 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a610 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a610  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.2801424178669688
=== Inputs ===
condition: v424 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
a610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v424 #trueSuccessor: v110 #falseSuccessor: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4555236813303553112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561620474457244006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a418 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a610 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a610  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4584395423869807501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585393398332343238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: a611 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a611  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
=== Succesors ===
next: v218 
=== Usages ===
a420 v425 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v631 #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a611 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a611  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.2801424178669688
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v216 
falseSuccessor: v217 
=== Usages ===
=== Predecessor ===
a611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v216 #falseSuccessor: v217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4577017089203177398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583190642290459569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?75 #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid a420 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a611 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a611  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid i546 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89883
stableDimension: 0
stamp: i32 [-89883] ⇊00000000fffea0e5 ⇈00000000fffea0e5
stampKind: i32
value: int[-89883|0xfffffffffffea0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-98571 - -89883] ⇊00000000fffe00e5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v544 
values: i546 i551 i553 i555 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i546 i551 i553 i555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v545 v550 v552 v554 
=== Succesors ===
next: v549 
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v545 v550 v552 v554 #next: v549  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 569
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 - - - - - 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i547 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i547 speculation: a6  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a594 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a594  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v612 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a594 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v612 
=== Succesors ===
next: v10 
=== Usages ===
a344 v345 v613 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v612 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
stamp: void
=== Inputs ===
value: a594 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a594  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 v120 v121 v210 v209 v219 v549 v561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
stamp: void
trueSuccessorProbability: 0.021629587643474564
=== Inputs ===
condition: v345 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
a594 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v345 #trueSuccessor: v8 #falseSuccessor: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@44b38674 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.021629587643474564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4581891525590909026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4606987596794314749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i595 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i595  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a594 
=== Succesors ===
=== Usages ===
i595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i595 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
=== Succesors ===
next: v453 
=== Usages ===
v445 i17 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v613 #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i18 v28 ?540 ?539 v404 ?75 v77 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i595 
y: i16 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i595 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$72/50528301@612a01a0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 23]
stamp: i32
=== Inputs ===
x: i2 
y: i17 
=== Succesors ===
=== Usages ===
v614 v445 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i595 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i595  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v33 v37 v143 ?540 ?539 v404 ?75 v82 v415 v593 v396 v627 v617 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v445 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v452 
=== Usages ===
=== Predecessor ===
i595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v445 #trueSuccessor: v450 #falseSuccessor: v452  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v1|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606987596794314749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a596 
=== Usages ===
a596 
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a596  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a594 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a594  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
result [v7|QWORD[.] + v6|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a344 
index: i18 
=== Succesors ===
=== Usages ===
a596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a596 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v450 
address: v614 
=== Succesors ===
next: v26 
=== Usages ===
a363 v364 v615 v616 v623 v629 v633 a634 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v450 address: v614 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
stamp: void
=== Inputs ===
value: a596 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a596  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 28]
stamp: void
trueSuccessorProbability: 0.07222389581498818
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
a596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v25 #falseSuccessor: v24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07222389581498818 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4589756134393700262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4606351132577997832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
result [v8|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a596 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
=== Succesors ===
next: i598 
=== Usages ===
v589 v632 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v629 #next: i598  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a596 
=== Succesors ===
=== Usages ===
i598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i598 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
=== Succesors ===
next: v31 
=== Usages ===
v28 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v615 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i598 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i598  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v589 v632 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 v93 v308 v171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
stamp: void
trueSuccessorProbability: 0.8099819565583852
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i598 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v8|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8099819565583852 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604797561580171310
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a599 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a599  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
result [v8|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a596 
=== Succesors ===
=== Usages ===
a599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a599 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v616 
=== Succesors ===
next: v36 
=== Usages ===
a371 v535 v619 v628 
=== Predecessor ===
v29 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v616 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid a371 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a599 
=== Succesors ===
=== Usages ===
v33 v396 v143 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a599  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a371 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a371  <|@  <|@
f <@~|@floating>@ <|@
tid a363 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a596 
=== Succesors ===
=== Usages ===
v237 v288 v312 ?539 v275 v124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a596  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
stamp: void
trueSuccessorProbability: 0.9050463630267387
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
a599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9050463630267387 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604168746118677132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a363 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a363 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589694944355118355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v456 #falseSuccessor: v454  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
result int[-95251|0xfffffffffffe8bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -95251
stableDimension: 0
stamp: i32 [-95251] ⇊00000000fffe8bed ⇈00000000fffe8bed
stampKind: i32
value: int[-95251|0xfffffffffffe8bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-95251|0xfffffffffffe8bed]] destination: B9 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4589694944355118355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
=== Succesors ===
next: v141 
=== Usages ===
v621 v586 
=== Predecessor ===
v454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v627 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 v587 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v600 
y: v585 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v600 y: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5799512987012987
=== Inputs ===
condition: v586 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v586 #trueSuccessor: v135 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5799512987012987 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4585995738532386516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=equals target_method_class=Ljava/lang/String; position=at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a371 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a371  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:43) [bci: 2]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v144 
falseSuccessor: v145 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v144 #falseSuccessor: v145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581492138905016020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:44) [bci: 5]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
result: a363 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a363 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4581492138905016020
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 7]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a599 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a599  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v535 
=== Succesors ===
trueSuccessor: v515 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v535 #trueSuccessor: v515 #falseSuccessor: v514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566814356523586114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4580908647155356812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
result [v10|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a599 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v628 
=== Succesors ===
next: v569 
=== Usages ===
v587 
=== Predecessor ===
v514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v628 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v601 
y: v585 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v601 y: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v587 
=== Succesors ===
trueSuccessor: v567 
falseSuccessor: v566 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v587 #trueSuccessor: v567 #falseSuccessor: v566  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a602 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a602  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a602 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
=== Succesors ===
next: v461 
=== Usages ===
a375 v376 v618 
=== Predecessor ===
v567 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v617 #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a602 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a602  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v376 
=== Succesors ===
trueSuccessor: v460 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
a602 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v376 #trueSuccessor: v460 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result int[-96523|0xfffffffffffe86f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96523
stableDimension: 0
stamp: i32 [-96523] ⇊00000000fffe86f5 ⇈00000000fffe86f5
stampKind: i32
value: int[-96523|0xfffffffffffe86f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96523|0xfffffffffffe86f5]] destination: B17 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: a603 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a603  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a599 
=== Succesors ===
=== Usages ===
a603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a603 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
=== Succesors ===
next: v465 
=== Usages ===
a383 v384 v620 
=== Predecessor ===
v458 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v619 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
value: a603 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a603  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v384 
=== Succesors ===
trueSuccessor: v464 
falseSuccessor: v462 
=== Usages ===
=== Predecessor ===
a603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v384 #trueSuccessor: v464 #falseSuccessor: v462  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v554 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
result int[-98571|0xfffffffffffe7ef5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -98571
stableDimension: 0
stamp: i32 [-98571] ⇊00000000fffe7ef5 ⇈00000000fffe7ef5
stampKind: i32
value: int[-98571|0xfffffffffffe7ef5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v464 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98571|0xfffffffffffe7ef5]] destination: B19 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i604 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i604  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a603 
=== Succesors ===
=== Usages ===
i604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i604 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
=== Succesors ===
next: i605 
=== Usages ===
v164 
=== Predecessor ===
v462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v620 #next: i605  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result [v14|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a602 
=== Succesors ===
=== Usages ===
i605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i605 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
=== Succesors ===
next: v167 
=== Usages ===
v164 v171 i179 
=== Predecessor ===
i604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v618 #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i604 
y: i605 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i604 y: i605  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 29]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v166 
=== Usages ===
=== Predecessor ===
i605 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v165 #falseSuccessor: v166  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4571901447900615820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 34]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i605 
y: i12 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i605 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:53) [bci: 38]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4567397848273245324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:54) [bci: 41]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a363 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a363 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567397848273245324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:57) [bci: 43]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i179  <|@  <|@
f <@~|@floating>@ <|@
tid a375 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 22]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a602 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a602  <|@  <|@
f <@~|@floating>@ <|@
tid a383 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:50) [bci: 26]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a603 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
kind: char
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(Object, Object, int, JavaKind) [bci: -1]
at org.graalvm.compiler.replacements.nodes.ArrayEqualsNode.equals(ArrayEqualsNode.java:202) [bci: 6]
at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:60) [bci: 59]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
array1: a375 
array2: a383 
length: i605 
lastLocationAccess: - 
=== Succesors ===
next: v51 
=== Usages ===
v42 
=== Predecessor ===
v173 >@ <|@
instruction <@ArrayEquals|@org.graalvm.compiler.replacements.nodes.ArrayEqualsNode>@ array1: a375 array2: a383 length: i605 lastLocationAccess: - #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i12 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i179 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06981086127120707
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
i179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ARRAY_EQUALS (~array1Value: v18|QWORD[.], ~array2Value: v19|QWORD[.], ~lengthValue: v17|DWORD) {temp1: v21|QWORD[*], temp2: v22|QWORD[*], temp3: v23|QWORD, temp4: v24|QWORD, temp5: -, tempXMM: -, vectorTemp1: v25|DOUBLE, vectorTemp2: v26|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4549997728885553280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4567031241718950148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a363 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a363 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4571901447900615820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:51) [bci: 32]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v166 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.StringSubstitutions.equals(StringSubstitutions.java:46) [bci: 8]
at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4584109481183053477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
result [v13|DWORD * 8 + 448] <|@
d <@d|@=== Debug Properties ===
displacement: 448
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v600 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
=== Succesors ===
next: j395 
=== Usages ===
v622 v396 
=== Predecessor ===
v140 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 #next: j395  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
result [v27|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v392 
index: - 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v392 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j395 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
=== Succesors ===
next: i40 
=== Usages ===
v396 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 #next: i40  <|@  <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2eebe37
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
computedAddress: j395 
metaspaceMethod: v392 
arguments: a3 a371 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j395 metaspaceMethod: v392 arguments: a3 a371  <|@  <|@
tid ?539 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 572
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - a363 - - - 
=== Succesors ===
=== Usages ===
i40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - a363 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i40 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 59
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v396 
stateDuring: ?539 
=== Succesors ===
next: v311 
=== Usages ===
v308 
=== Predecessor ===
j395 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v396 stateDuring: ?539 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i40 
y: i12 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i40 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
stamp: void
trueSuccessorProbability: 0.06981086127120707
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v309 
falseSuccessor: v310 
=== Usages ===
=== Predecessor ===
i40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v309 #falseSuccessor: v310  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v13|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - v1|DWORD v2|QWORD[.] - v12|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566866898802751383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580815167822124565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v242 v244 v274 v313 v574 
=== Succesors ===
next: a606 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v242 v244 v274 v313 v574 #next: a606  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
result [v8|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a596 
=== Succesors ===
=== Usages ===
a606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a606 <|@
result v30|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
=== Succesors ===
next: v60 
=== Usages ===
a542 v422 
=== Predecessor ===
v241 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v623 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a606 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a606  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.12002300760529175
=== Inputs ===
condition: v422 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
a606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v422 #trueSuccessor: v59 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD[.], y: v30|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4567099000459426671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v209  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4580196095580485287
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v597 
y: v588 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v597 y: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 0.0019245433748502627
=== Inputs ===
condition: v589 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v589 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4539566131597049492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4580187360320268167
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD[.]] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4583519421648498610
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a363 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a363 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595382304281841514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: a607 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a607  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
result [v8|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a596 
=== Succesors ===
=== Usages ===
a607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a607 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
=== Succesors ===
next: v208 
=== Usages ===
a542 v423 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v633 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
=== Inputs ===
value: a607 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a607  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
stamp: void
trueSuccessorProbability: 0.12002300760529175
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v207 
falseSuccessor: v206 
=== Usages ===
=== Predecessor ===
a607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v207 #falseSuccessor: v206  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD[.], y: v31|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4581624077846423725
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4594636447227091541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v597 
y: v588 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v597 y: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
stamp: void
trueSuccessorProbability: 0.0019245433748502627
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4554024026757981078
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4554583083411876735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v315 v316 
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v315 v316 #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a634 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a596 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a596  <|@  <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@65e4d19f
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>
=== Inputs ===
arguments: a634 i2 a3 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a634 i2 a3  <|@  <|@
tid ?541 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 576
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 94
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.getTreeNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v404 
stateDuring: ?541 
=== Succesors ===
next: v71 
=== Usages ===
v71 
=== Predecessor ===
v314 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v404 stateDuring: ?541 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 97]
stamp: void
=== Inputs ===
result: a69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a69 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a69 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:94] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594625923002259939
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4595192190366240468
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a542 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v317 
values: a606 a607 
=== Succesors ===
=== Usages ===
a543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v317 values: a606 a607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v318 v320 
=== Succesors ===
next: v72 
=== Usages ===
a542 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v318 v320 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a543 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a542 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a542  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
v317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B51" "B55" 
    successors "B44" "B53" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4596166997863938955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a74 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v73 
values: a543 a418 a420 
=== Succesors ===
=== Usages ===
?75 v626 v625 v126 ?540 v127 v624 v631 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v73 values: a543 a418 a420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.1618160651920837
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v72 
=== Succesors ===
next: i608 
=== Usages ===
a74 v84 v100 v110 v112 v211 v216 v474 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v72 #next: i608  <|@  <|@
tid ?75 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 578
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
v449 v561 i608 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
result [v36|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
i608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i608 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 100]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?75 
guard: - 
address: v624 
=== Succesors ===
next: v80 
=== Usages ===
v77 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?75 guard: - address: v624 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i608 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i608  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
stamp: void
trueSuccessorProbability: 0.8130949398797596
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
i608 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction CMP (x: v1|DWORD, y: [v36|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8130949398797596 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594858853539801753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
next: a609 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a609  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
result [v36|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a609 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v625 
=== Succesors ===
next: v88 
=== Usages ===
a412 
=== Predecessor ===
v78 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v625 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a412 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a609 
=== Succesors ===
=== Usages ===
v82 v415 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a609  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a412 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a412  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
stamp: void
trueSuccessorProbability: 0.7999768937497593
=== Inputs ===
condition: v82 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
a609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v82 #trueSuccessor: v84 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7999768937497593 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4593720555396131352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584714013610476037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 53]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 120]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v474 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 120]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid i563 <|@
result int[-105747|0xfffffffffffe62ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105747
stableDimension: 0
stamp: i32 [-105747] ⇊00000000fffe62ed ⇈00000000fffe62ed
stampKind: i32
value: int[-105747|0xfffffffffffe62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
actionAndReason: i563 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?75 actionAndReason: i563 speculation: a6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -105747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584714013610476037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 120]
stamp: void
=== Inputs ===
=== Succesors ===
next: i91 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i91  <|@  <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@726fa6ec
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a3 a412 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3 a412  <|@  <|@
tid ?540 <|@
d <@d|@=== Debug Properties ===
bci: 126
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - i2 a3 - - a74 - - 
=== Succesors ===
=== Usages ===
i91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - i2 a3 - - a74 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i91 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 126
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v415 
stateDuring: ?540 
=== Succesors ===
next: v105 
=== Usages ===
v93 
=== Predecessor ===
v471 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v415 stateDuring: ?540 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i91 
y: i12 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i91 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
stamp: void
trueSuccessorProbability: 0.04043126684636118
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i91 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v104 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:126] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04043126684636118 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563533745906616265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: a610 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a610  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
result [v36|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a610 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
=== Succesors ===
next: v114 
=== Usages ===
a418 v424 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v626 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a610 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a610  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.2801424178669688
=== Inputs ===
condition: v424 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
a610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v424 #trueSuccessor: v110 #falseSuccessor: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v36|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4555236813303553112
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561620474457244006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a418 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a610 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a610  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD[.]] destination: B51 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4584395423869807501
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
stamp: void
=== Inputs ===
result: a74 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a74 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585393398332343238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: a611 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a611  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
result [v36|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a74 
index: - 
=== Succesors ===
=== Usages ===
a611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a74 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a611 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
=== Succesors ===
next: v218 
=== Usages ===
a420 v425 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v631 #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
=== Inputs ===
value: a611 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a611  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
stamp: void
trueSuccessorProbability: 0.2801424178669688
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v216 
falseSuccessor: v217 
=== Usages ===
=== Predecessor ===
a611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v216 #falseSuccessor: v217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v36|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4577017089203177398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v73 
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v73 #next: v219  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
stamp: void
=== Inputs ===
result: a6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583190642290459569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?75 
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?75 #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid a420 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a611 
=== Succesors ===
=== Usages ===
a74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a611  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:98] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B55 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid i546 <|@
result int[-89883|0xfffffffffffea0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89883
stableDimension: 0
stamp: i32 [-89883] ⇊00000000fffea0e5 ⇈00000000fffea0e5
stampKind: i32
value: int[-89883|0xfffffffffffea0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89883|0xfffffffffffea0e5]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i547 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-98571 - -89883] ⇊00000000fffe00e5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v544 
values: i546 i551 i553 i555 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v544 values: i546 i551 i553 i555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v545 v550 v552 v554 
=== Succesors ===
next: v549 
=== Usages ===
i547 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v545 v550 v552 v554 #next: v549  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 569
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 - - - - - 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i547 
speculation: a6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i547 speculation: a6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@44b38674 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.021629587643474564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4606987596794314749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = AND (x: v1|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606987596794314749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07222389581498818 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4606351132577997832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v8|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8099819565583852 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604797561580171310
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9050463630267387 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604168746118677132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595382304281841514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD[.], y: v31|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4594636447227091541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594625923002259939
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4595192190366240468
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B51" "B55" 
    successors "B44" "B53" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4596166997863938955
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD[.]] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction CMP (x: v1|DWORD, y: [v36|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8130949398797596 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594858853539801753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7999768937497593 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584714013610476037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584714013610476037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:126] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04043126684636118 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563533745906616265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v36|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561620474457244006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD[.]] destination: B51 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585393398332343238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v36|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583190642290459569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:98] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B55 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4593720555396131352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4589756134393700262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589694944355118355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4589694944355118355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5799512987012987 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4585995738532386516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4581492138905016020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4580908647155356812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580815167822124565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v8|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD[.], y: v30|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4580196095580485287
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4580187360320268167
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD[.]] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4584395423869807501
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4584109481183053477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [v13|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [v27|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - v1|DWORD v2|QWORD[.] - v12|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4583519421648498610
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4581891525590909026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4581624077846423725
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581492138905016020
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4577017089203177398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v15|DWORD[.], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4571901447900615820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4571901447900615820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567397848273245324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ARRAY_EQUALS (~array1Value: v18|QWORD[.], ~array2Value: v19|QWORD[.], ~lengthValue: v17|DWORD) {temp1: v21|QWORD[*], temp2: v22|QWORD[*], temp3: v23|QWORD, temp4: v24|QWORD, temp5: -, tempXMM: -, vectorTemp1: v25|DOUBLE, vectorTemp2: v26|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4567031241718950148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4567397848273245324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4567099000459426671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566866898802751383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566814356523586114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4555236813303553112
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4554024026757981078
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4554583083411876735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:94] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v33|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4549997728885553280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4539566131597049492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -105747 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v1|DWORD v2|QWORD[.] - - v36|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89883|0xfffffffffffea0e5]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96523|0xfffffffffffe86f5]] destination: B17 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-98571|0xfffffffffffe7ef5]] destination: B19 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-95251|0xfffffffffffe8bed]] destination: B9 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore_3      
     6: ifnull        146
     9: aload_3       
    10: arraylength   
    11: dup           
    12: istore        6
    14: ifle          146
    17: aload_3       
    18: iload         6
    20: iconst_1      
    21: isub          
    22: iload_1       
    23: iand          
    24: aaload        
    25: dup           
    26: astore        4
    28: ifnull        146
    31: aload         4
    33: getfield      #33         // java.util.HashMap$Node.hash:int
    36: iload_1       
    37: if_icmpne     68
    40: aload         4
    42: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    45: dup           
    46: astore        7
    48: aload_2       
    49: if_acmpeq     65
    52: aload_2       
    53: ifnull        68
    56: aload_2       
    57: aload         7
    59: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    62: ifeq          68
    65: aload         4
    67: areturn       
    68: aload         4
    70: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
    73: dup           
    74: astore        5
    76: ifnull        146
    79: aload         4
    81: instanceof    #50         // java.util.HashMap$TreeNode
    84: ifeq          98
    87: aload         4
    89: checkcast     #50         // java.util.HashMap$TreeNode
    92: iload_1       
    93: aload_2       
    94: invokevirtual #37         // java.util.HashMap$TreeNode.getTreeNode:(int, java.lang.Object)java.util.HashMap$TreeNode
    97: areturn       
    98: aload         5
   100: getfield      #33         // java.util.HashMap$Node.hash:int
   103: iload_1       
   104: if_icmpne     135
   107: aload         5
   109: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   112: dup           
   113: astore        7
   115: aload_2       
   116: if_acmpeq     132
   119: aload_2       
   120: ifnull        135
   123: aload_2       
   124: aload         7
   126: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   129: ifeq          135
   132: aload         5
   134: areturn       
   135: aload         5
   137: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   140: dup           
   141: astore        5
   143: ifnonnull     98
   146: aconst_null   
   147: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@44b38674 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr    8  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.021629587643474564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4606987596794314749
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606987596794314749
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.07222389581498818 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4606351132577997832
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.8099819565583852 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604797561580171310
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.9050463630267387 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604168746118677132
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595382304281841514
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  300  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B41" 
    xhandlers
    flags 
    probability 4594636447227091541
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594625923002259939
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4595192190366240468
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B51" "B55" 
    successors "B44" "B53" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4596166997863938955
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - rdx|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.8130949398797596 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594858853539801753
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.7999768937497593 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584714013610476037
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584714013610476037
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - stack:28|DWORD stack:40|QWORD[.] - - stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:126] <|@ <|@
      nr  394  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.04043126684636118 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563533745906616265
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561620474457244006
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B51 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585393398332343238
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  438  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583190642290459569
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD stack:40|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:98] <|@ <|@
      nr  452  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B55 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4593720555396131352
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4589756134393700262
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589694944355118355
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4589694944355118355
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5799512987012987 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4585995738532386516
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4581492138905016020
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4580908647155356812
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580815167822124565
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  264  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4580196095580485287
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4580187360320268167
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4584395423869807501
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4584109481183053477
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOV [rax|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr  236  <|@ instruction r8|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - stack:28|DWORD stack:40|QWORD[.] - stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:59] <|@ <|@
      nr  248  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4583519421648498610
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4581891525590909026
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4581624077846423725
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581492138905016020
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4577017089203177398
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  446  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  154  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4571901447900615820
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4571901447900615820
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567397848273245324
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: r10|DWORD) {temp1: r11|QWORD[*], temp2: r8|QWORD[*], temp3: r9|QWORD, temp4: rbx|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  198  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4567031241718950148
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4567397848273245324
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4567099000459426671
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  272  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566866898802751383
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566814356523586114
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4555236813303553112
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  412  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4554024026757981078
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B33" "B39" 
    successors 
    xhandlers
    flags 
    probability 4554583083411876735
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:94] <|@ <|@
      nr  332  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4549997728885553280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B40" 
    xhandlers
    flags 
    probability 4539566131597049492
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B33 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 668] y: -105747 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@reference-map: [r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD stack:40|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5] <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  470  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  474  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[-96523|0xfffffffffffe86f5] <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r10|DWORD = MOVE input: int[-98571|0xfffffffffffe7ef5] <|@ <|@
      nr  162  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOVE input: int[-95251|0xfffffffffffe8bed] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore_3      
     6: ifnull        146
     9: aload_3       
    10: arraylength   
    11: dup           
    12: istore        6
    14: ifle          146
    17: aload_3       
    18: iload         6
    20: iconst_1      
    21: isub          
    22: iload_1       
    23: iand          
    24: aaload        
    25: dup           
    26: astore        4
    28: ifnull        146
    31: aload         4
    33: getfield      #33         // java.util.HashMap$Node.hash:int
    36: iload_1       
    37: if_icmpne     68
    40: aload         4
    42: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    45: dup           
    46: astore        7
    48: aload_2       
    49: if_acmpeq     65
    52: aload_2       
    53: ifnull        68
    56: aload_2       
    57: aload         7
    59: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    62: ifeq          68
    65: aload         4
    67: areturn       
    68: aload         4
    70: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
    73: dup           
    74: astore        5
    76: ifnull        146
    79: aload         4
    81: instanceof    #50         // java.util.HashMap$TreeNode
    84: ifeq          98
    87: aload         4
    89: checkcast     #50         // java.util.HashMap$TreeNode
    92: iload_1       
    93: aload_2       
    94: invokevirtual #37         // java.util.HashMap$TreeNode.getTreeNode:(int, java.lang.Object)java.util.HashMap$TreeNode
    97: areturn       
    98: aload         5
   100: getfield      #33         // java.util.HashMap$Node.hash:int
   103: iload_1       
   104: if_icmpne     135
   107: aload         5
   109: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   112: dup           
   113: astore        7
   115: aload_2       
   116: if_acmpeq     132
   119: aload_2       
   120: ifnull        135
   123: aload_2       
   124: aload         7
   126: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   129: ifeq          135
   132: aload         5
   134: areturn       
   135: aload         5
   137: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   140: dup           
   141: astore        5
   143: ifnonnull     98
   146: aconst_null   
   147: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@44b38674 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr    8  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.021629587643474564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B56" 
    xhandlers
    flags 
    probability 4606987596794314749
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = DEC rbx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606987596794314749
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.07222389581498818 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B36" 
    xhandlers
    flags 
    probability 4606351132577997832
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.8099819565583852 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604797561580171310
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.9050463630267387 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604168746118677132
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4595382304281841514
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  300  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  302  <|@ instruction BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4594636447227091541
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B38 -> B40 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" 
    successors "B43" 
    xhandlers
    flags 
    probability 4595192190366240468
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B51" "B55" 
    successors "B44" "B53" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4596166997863938955
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  344  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - rdx|DWORD rcx|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98] <|@ <|@
      nr  352  <|@ instruction BRANCH trueDestinationProbability: 0.8130949398797596 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594858853539801753
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.7999768937497593 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584714013610476037
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584714013610476037
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - stack:28|DWORD stack:40|QWORD[.] - - stack:48|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:126] <|@ <|@
      nr  394  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.04043126684636118 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563533745906616265
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  404  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561620474457244006
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B51 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585393398332343238
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  438  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4583190642290459569
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD stack:40|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:98] <|@ <|@
      nr  452  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B55 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4593720555396131352
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4589756134393700262
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4589694944355118355
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B28" 
    xhandlers
    flags 
    probability 4589694944355118355
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   92  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.5799512987012987 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4585995738532386516
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4581492138905016020
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B27" 
    xhandlers
    flags 
    probability 4580908647155356812
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  126  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B24" "B14" "B26" "B29" "B27" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580815167822124565
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  264  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" "B34" 
    xhandlers
    flags 
    probability 4580196095580485287
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B32 -> B40 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B42" 
    xhandlers
    flags 
    probability 4580187360320268167
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B34 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4584395423869807501
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B29" "B35" 
    xhandlers
    flags 
    probability 4584109481183053477
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = MOV [rax|DWORD * 8 + 448] size: QWORD <|@ <|@
      nr  236  <|@ instruction r8|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - stack:28|DWORD stack:40|QWORD[.] - stack:48|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:59] <|@ <|@
      nr  248  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4583519421648498610
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4581891525590909026
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 4581624077846423725
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  308  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4581492138905016020
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors 
    xhandlers
    flags 
    probability 4577017089203177398
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  446  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  138  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  154  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    probability 4576405047527986316
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4571901447900615820
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4571901447900615820
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4567397848273245324
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  194  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  196  <|@ instruction rsi|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: r10|DWORD) {temp1: r11|QWORD[*], temp2: r8|QWORD[*], temp3: r9|QWORD, temp4: rbx|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char <|@ <|@
      nr  198  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors 
    xhandlers
    flags 
    probability 4567031241718950148
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4567397848273245324
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 4567099000459426671
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  272  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566866898802751383
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B30" 
    xhandlers
    flags 
    probability 4566814356523586114
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B14 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4555236813303553112
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  412  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B38" 
    successors 
    xhandlers
    flags 
    probability 4554583083411876735
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:94] <|@ <|@
      nr  332  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" 
    xhandlers
    flags 
    probability 4549997728885553280
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B24 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction MOV [r15|QWORD + 668] y: -105747 size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@reference-map: [r10:0, stack:24]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:28|DWORD stack:40|QWORD[.] - - r10|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:98] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5] <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B9" "B17" "B19" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  470  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  474  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:569) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction r10|DWORD = MOVE input: int[-96523|0xfffffffffffe86f5] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B17 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction r10|DWORD = MOVE input: int[-98571|0xfffffffffffe7ef5] <|@ <|@
      nr  162  <|@ instruction rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B19 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|DWORD = MOVE input: int[-95251|0xfffffffffffe8bed] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore_3      
     6: ifnull        146
     9: aload_3       
    10: arraylength   
    11: dup           
    12: istore        6
    14: ifle          146
    17: aload_3       
    18: iload         6
    20: iconst_1      
    21: isub          
    22: iload_1       
    23: iand          
    24: aaload        
    25: dup           
    26: astore        4
    28: ifnull        146
    31: aload         4
    33: getfield      #33         // java.util.HashMap$Node.hash:int
    36: iload_1       
    37: if_icmpne     68
    40: aload         4
    42: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    45: dup           
    46: astore        7
    48: aload_2       
    49: if_acmpeq     65
    52: aload_2       
    53: ifnull        68
    56: aload_2       
    57: aload         7
    59: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    62: ifeq          68
    65: aload         4
    67: areturn       
    68: aload         4
    70: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
    73: dup           
    74: astore        5
    76: ifnull        146
    79: aload         4
    81: instanceof    #50         // java.util.HashMap$TreeNode
    84: ifeq          98
    87: aload         4
    89: checkcast     #50         // java.util.HashMap$TreeNode
    92: iload_1       
    93: aload_2       
    94: invokevirtual #37         // java.util.HashMap$TreeNode.getTreeNode:(int, java.lang.Object)java.util.HashMap$TreeNode
    97: areturn       
    98: aload         5
   100: getfield      #33         // java.util.HashMap$Node.hash:int
   103: iload_1       
   104: if_icmpne     135
   107: aload         5
   109: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   112: dup           
   113: astore        7
   115: aload_2       
   116: if_acmpeq     132
   119: aload_2       
   120: ifnull        135
   123: aload_2       
   124: aload         7
   126: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   129: ifeq          135
   132: aload         5
   134: areturn       
   135: aload         5
   137: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   140: dup           
   141: astore        5
   143: ifnonnull     98
   146: aconst_null   
   147: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b462485c00f84350200008954242448894c24188b1cc50c000000448bd341ffca4423d2413bda0f86bd04000048c1e003468b5490104585d20f841e010000468b1cd508000000423b14d50c0000000f8535000000468b04d510000000418bd848c1e303458bca49c1e103483bd90f8506010000498bc1488b6c24304883c438850500000000c5f877c3428b04d51800000085c00f84c30100004181fbaddeadde0f84f503000048c1e0034c8bd066908b542424413b520c0f8566000000418b7210448bde49c1e3034c3bd90f84750000004885c90f84f70300004c89542410488bf1498bd348b8ffffffffffffffff0f1f8000000000e8000000009085c04c8b5424100f85d6000000418b421885c00f846903000048c1e0034c8bd0488b4c2418eb8c418b421885c00f846701000085050000000048c1e0034c8bd0488b4c2418e969ffffff498bc2488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c34885c90f84950300008b410881f8addeadde0f8564000000483bd90f84df0000004585c00f84d102000042813cc508000000addeadde0f84fe00000044895c240c428b34d51800000085f60f847e020000817c240caddeadde0f84c30200008bc6e9c7feffff498bc2488b6c24304883c438850500000000c5f877c34c894c241044895c240c4489542408488b04c5c00100004c8b4040488bf1488bd3488bd8498bc0ffd09085c00f843e020000488b442410488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c34c894c2410488b442410488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c34c894c241044895c240c44895424088b410c85c00f8436020000428b14c50c00000085d20f842e0200008b34d50c000000448b14c50c000000443bd60f840a000000448b542408e9bbfeffff4585d20f842a01000048c1e00348c1e2034c8d58104c8d4210458bca41d1e1418bf183e61f4183e1e00f845c0000004f8d1c0b4f8d040849f7d9660f1f440000c4817e6f040bc4817e6f0c08c5fdefc1c4e27d17c00f85b60000004983c12075df85f60f84a1000000c4c17e6f4433e0c4c17e6f4c30e0c5fdefc1c4e27d17c00f858b000000e97f000000448bce83e6074183e1f80f843f0000004f8d1c0b4f8d040849f7d966660f1f8400000000004b8b1c0b4b3b1c080f85530000004983c10875ec85f60f843e000000498b5c33f8493b5c30f87539eb30448bcef7c6040000007410418b1b413b1875244d8d5b044d8d4004f7c602000000740d410fb71b450fb708413bd97507be01000000eb0233f685f60f84ad000000488b442410488b6c24304883c438850500000000c5f877c3498bc1488b6c24304883c438850500000000c5f877c348b80000000000000000488b6c24304883c438850500000000c5f877c3448b542408488b4c2418e946fdffff44895c240ce93cfdffff48b80000000000000000488b6c24304883c438850500000000c5f877c349c1e203498bf28b542424488b4c2418666690e80000000090488b6c24304883c438850500000000c5f877c3448b542408e9e9fcffff41c7879c020000ed62feff4d89a7a8020000e8000000009041bae5a0feff4589979c0200004d89a7a8020000e8000000009041baf586feffebe441baf57efeff8b542424ebd841baed8bfeffebd0e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1038a1f78, value=0x10fedfe60]:0x10fedfe60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@44b38674 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 51 8 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 53 10 BRANCH trueDestinationProbability: 0.021629587643474564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 59 block B2 null  <||@
  Comment 59 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 20 stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 63 22 stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 68 24 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 75 26 r10|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 81 28 r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 84 30 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 87 32 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B56  <||@
  Comment 93 block B3 null  <||@
  Comment 93 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 36 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 97 38 r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 102 40 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 105 42 BRANCH trueDestinationProbability: 0.07222389581498818 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 111 block B5 null  <||@
  Comment 111 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 52 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 119 54 CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 127 56 BRANCH trueDestinationProbability: 0.8099819565583852 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36  <||@
  Comment 133 block B6 null  <||@
  Comment 133 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 60 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 141 62 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 148 64 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 155 66 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 158 68 BRANCH trueDestinationProbability: 0.9050463630267387 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 164 block B7 null  <||@
  Comment 164 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 72 rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 167 74 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 176 12  <||@
  Comment 186 block B36 null  <||@
  Comment 186 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 298 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 194 300 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 196 302 BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 202 block B38 null  <||@
  Comment 202 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 202 312 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 202 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 209 314 BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B38 -> B40 falseDestination: B38 -> B42  <||@
  Comment 215 block B42 null  <||@
  Comment 215 338 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 215 340 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 219 342 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 222 346 JUMP ~[] destination: B42 -> B43  <||@
  Comment 222 block B43 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 222 348 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 224 344 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 228 350 CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98]  <||@
  Comment 228 [rcx:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1          |2             |3  |4  |5             |6  |7 
     locals:  |-  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 232 352 BRANCH trueDestinationProbability: 0.8130949398797596 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B53  <||@
  Comment 238 block B44 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 238 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 356 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 242 358 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 249 360 CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 252 362 BRANCH trueDestinationProbability: 0.7999768937497593 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 258 block B46 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 258 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 372 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 261 374 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 267 block B48 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 267 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 386 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 272 388 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 275 390 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 278 392 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:126]  <||@
  Comment 278 7  <||@
  Comment 295 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 300 [stack:16, stack:24]at java.util.HashMap.getNode(HashMap.java:579) [bci: 126, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4  |5                  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 301 394 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 303 400 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 308 396 BRANCH trueDestinationProbability: 0.04043126684636118 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B52  <||@
  Comment 314 block B49 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 314 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 402 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 318 404 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 320 406 BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 326 block B51 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 326 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 326 416 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 330 418 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 333 420 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 338 424 JUMP ~[] destination: B51 -> B43  <||@
  Comment 340 block B53 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 340 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 436 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 344 438 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 346 440 BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 352 block B55 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 352 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 450 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:98]  <||@
  Comment 352 [rax:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2                  |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 352 {infopoint: SAFEPOINT}  <||@
  Comment 352 11  <||@
  Comment 358 452 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 362 454 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 365 456 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 370 460 JUMP ~[] destination: B55 -> B43  <||@
  Comment 375 block B45 null  <||@
  Comment 375 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 366 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 378 368 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 387 12  <||@
  Comment 397 block B4 null  <||@
  Comment 397 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 397 46 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 407 48 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 416 12  <||@
  Comment 426 block B8 null  <||@
  Comment 426 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 426 78 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 429 80 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 435 block B10 null  <||@
  Comment 435 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 90 rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD  <||@
  Comment 438 92 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 438 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 444 94 BRANCH trueDestinationProbability: 0.5799512987012987 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28  <||@
  Comment 450 block B11 null  <||@
  Comment 450 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 450 98 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 453 100 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 459 block B13 null  <||@
  Comment 459 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 112 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 462 114 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 468 block B15 null  <||@
  Comment 468 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 468 124 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 468 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 480 126 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27  <||@
  Comment 486 block B27 null  <||@
  Comment 486 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 486 222 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 491 224 JUMP ~[] destination: B27 -> B30  <||@
  Comment 491 block B30 null  <||@
  Comment 491 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 262 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 499 264 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 501 266 BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 507 block B32 null  <||@
  Comment 507 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 276 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 507 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 515 278 BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B32 -> B40 falseDestination: B32 -> B34  <||@
  Comment 521 block B34 null  <||@
  Comment 521 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 286 rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 523 288 JUMP ~[] destination: B34 -> B42  <||@
  Comment 528 block B52 null  <||@
  Comment 528 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 528 430 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 531 432 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 540 12  <||@
  Comment 550 block B28 null  <||@
  Comment 550 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 550 228 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 555 230 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 560 232 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 565 234 rax|QWORD = MOV [rax|DWORD * 8 + 448] size: QWORD  <||@
  Comment 573 236 r8|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 577 238 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 580 240 rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 583 242 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 586 244 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 589 246 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:59]  <||@
  Comment 589 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 589 10  <||@
  Comment 591 [stack:8, stack:16, stack:24]at java.util.HashMap.getNode(HashMap.java:572) [bci: 59, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4                  |5  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 592 248 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 594 250 BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35  <||@
  Comment 600 block B35 null  <||@
  Comment 600 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 600 292 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 605 294 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 614 12  <||@
  Comment 624 block B1 null  <||@
  Comment 624 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 624 14 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 634 16 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 643 12  <||@
  Comment 653 block B37 null  <||@
  Comment 653 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 306 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 663 308 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 672 12  <||@
  Comment 682 block B12 null  <||@
  Comment 682 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 104 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 687 106 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 692 108 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 701 12  <||@
  Comment 711 block B54 null  <||@
  Comment 711 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 444 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 721 446 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 730 12  <||@
  Comment 740 block B16 null  <||@
  Comment 740 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 740 130 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 745 132 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 750 134 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 755 136 rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 758 138 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 760 140 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 766 block B18 null  <||@
  Comment 766 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 766 152 rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 774 154 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 776 156 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 782 block B20 null  <||@
  Comment 782 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 782 168 rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 789 170 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 797 172 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 800 174 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26  <||@
  Comment 806 block B26 null  <||@
  Comment 806 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 216 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 811 218 JUMP ~[] destination: B26 -> B30  <||@
  Comment 816 block B21 null  <||@
  Comment 816 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 178 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 819 180 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 825 block B23 null  <||@
  Comment 825 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 825 192 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 829 194 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 833 196 rsi|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: r10|DWORD) {temp1: r11|QWORD[*], temp2: r8|QWORD[*], temp3: r9|QWORD, temp4: rbx|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 1091 198 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1093 200 BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 1099 block B25 null  <||@
  Comment 1099 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1099 210 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1104 212 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1113 12  <||@
  Comment 1123 block B22 null  <||@
  Comment 1123 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1123 186 rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1126 188 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1135 12  <||@
  Comment 1145 block B31 null  <||@
  Comment 1145 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1145 270 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1155 272 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1164 12  <||@
  Comment 1174 block B29 null  <||@
  Comment 1174 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1174 254 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1179 256 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1184 258 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1189 block B14 null  <||@
  Comment 1189 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1189 118 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1194 120 JUMP ~[] destination: B14 -> B30  <||@
  Comment 1199 block B50 null  <||@
  Comment 1199 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1199 410 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1209 412 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1218 12  <||@
  Comment 1228 block B40 null  <||@
  Comment 1228 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1228 322 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 1232 324 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1235 326 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1239 328 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1244 330 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:94]  <||@
  Comment 1244 9  <||@
  Comment 1247 {HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>}  <||@
  Comment 1252 []at java.util.HashMap.getNode(HashMap.java:576) [bci: 94, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1253 332 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1262 12  <||@
  Comment 1272 block B24 null  <||@
  Comment 1272 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 204 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1277 206 JUMP ~[] destination: B24 -> B30  <||@
  Comment 1282 block B47 null  <||@
  Comment 1282 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1282 378 MOV [r15|QWORD + 668] y: -105747 size: DWORD  <||@
  Comment 1293 380 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1300 382 DEOPT info [bci:98]  <||@
  Comment 1300 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1305 [r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2                  |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1306 block B56 null  <||@
  Comment 1306 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1306 464 r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5]  <||@
  Comment 1312 466 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1312 block B57 null  <||@
  Comment 1312 468 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1312 470 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1319 472 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1326 474 DEOPT info [bci:0]  <||@
  Comment 1326 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1331 [rcx:0, rsi:0]at java.util.HashMap.getNode(HashMap.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1332 block B17 null  <||@
  Comment 1332 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 144 r10|DWORD = MOVE input: int[-96523|0xfffffffffffe86f5]  <||@
  Comment 1338 148 JUMP ~[] destination: B17 -> B57  <||@
  Comment 1340 block B19 null  <||@
  Comment 1340 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1340 160 r10|DWORD = MOVE input: int[-98571|0xfffffffffffe7ef5]  <||@
  Comment 1346 162 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1350 164 JUMP ~[] destination: B19 -> B57  <||@
  Comment 1352 block B9 null  <||@
  Comment 1352 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1352 84 r10|DWORD = MOVE input: int[-95251|0xfffffffffffe8bed]  <||@
  Comment 1358 86 JUMP ~[] destination: B9 -> B57  <||@
  Comment 1360 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1103168e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1360 4  <||@
  Comment 1366 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1038a1f88, value=0x10fee1500]:0x10fee1500}  <||@
  Comment 1366 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1353[java.util.HashMap.getNode(int, Object)]"
  method "HotSpotCompilation-1353[java.util.HashMap.getNode(int, Object)]"
  date 1527031669954
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 110895660 448b560849c1e203493bc20f85efa764ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b462485c00f84350200008954242448894c24188b1cc50c000000448bd341ffca4423d2413bda0f86bd04000048c1e003468b5490104585d20f841e010000468b1cd508000000423b14d50c0000000f8535000000468b04d510000000418bd848c1e303458bca49c1e103483bd90f8506010000498bc1488b6c24304883c4388505f0f8e9f1c5f877c3428b04d51800000085c00f84c30100004181fb826500f80f84f503000048c1e0034c8bd066908b542424413b520c0f8566000000418b7210448bde49c1e3034c3bd90f84750000004885c90f84f70300004c89542410488bf1498bd348b8ffffffffffffffff0f1f8000000000e854ab64ff9085c04c8b5424100f85d6000000418b421885c00f846903000048c1e0034c8bd0488b4c2418eb8c418b421885c00f8467010000850540f8e9f148c1e0034c8bd0488b4c2418e969ffffff498bc2488b6c24304883c43885051df8e9f1c5f877c348b80000000000000000488b6c24304883c438850500f8e9f1c5f877c34885c90f84950300008b410881f8da0200f80f8564000000483bd90f84df0000004585c00f84d102000042813cc508000000da0200f80f84fe00000044895c240c428b34d51800000085f60f847e020000817c240c826500f80f84c30200008bc6e9c7feffff498bc2488b6c24304883c438850584f7e9f1c5f877c34c894c241044895c240c4489542408488b04c5c00100004c8b4040488bf1488bd3488bd8498bc0ffd09085c00f843e020000488b442410488b6c24304883c43885053af7e9f1c5f877c348b80000000000000000488b6c24304883c43885051df7e9f1c5f877c348b80000000000000000488b6c24304883c438850500f7e9f1c5f877c34c894c2410488b442410488b6c24304883c4388505e3f6e9f1c5f877c348b80000000000000000488b6c24304883c4388505c6f6e9f1c5f877c34c894c241044895c240c44895424088b410c85c00f8436020000428b14c50c00000085d20f842e0200008b34d50c000000448b14c50c000000443bd60f840a000000448b542408e9bbfeffff4585d20f842a01000048c1e00348c1e2034c8d58104c8d4210458bca41d1e1418bf183e61f4183e1e00f845c0000004f8d1c0b4f8d040849f7d9660f1f440000c4817e6f040bc4817e6f0c08c5fdefc1c4e27d17c00f85b60000004983c12075df85f60f84a1000000c4c17e6f4433e0c4c17e6f4c30e0c5fdefc1c4e27d17c00f858b000000e97f000000448bce83e6074183e1f80f843f0000004f8d1c0b4f8d040849f7d966660f1f8400000000004b8b1c0b4b3b1c080f85530000004983c10875ec85f60f843e000000498b5c33f8493b5c30f87539eb30448bcef7c6040000007410418b1b413b1875244d8d5b044d8d4004f7c602000000740d410fb71b450fb708413bd97507be01000000eb0233f685f60f84ad000000488b442410488b6c24304883c438850547f5e9f1c5f877c3498bc1488b6c24304883c438850531f5e9f1c5f877c348b80000000000000000488b6c24304883c438850514f5e9f1c5f877c3448b542408488b4c2418e946fdffff44895c240ce93cfdffff48b80000000000000000488b6c24304883c4388505def4e9f1c5f877c349c1e203498bf28b542424488b4c2418666690e85ca564ff90488b6c24304883c4388505b2f4e9f1c5f877c3448b542408e9e9fcffff41c7879c020000ed62feff4d89a7a8020000e885ba64ff9041bae5a0feff4589979c0200004d89a7a8020000e86bba64ff9041baf586feffebe441baf57efeff8b542424ebd841baed8bfeffebd0e82b0da8ff90e845b964ff90f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1038a1f78, value=0x10fedfe60]:0x10fedfe60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@44b38674 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 51 8 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 53 10 BRANCH trueDestinationProbability: 0.021629587643474564 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 59 block B2 null  <||@
  Comment 59 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 20 stack:28|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 63 22 stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 68 24 rbx|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 75 26 r10|DWORD = DEC rbx|DWORD size: DWORD  <||@
  Comment 81 28 r10|DWORD = AND (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 84 30 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 87 32 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B56  <||@
  Comment 93 block B3 null  <||@
  Comment 93 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 36 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 97 38 r10|DWORD[.] = MOV [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 102 40 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 105 42 BRANCH trueDestinationProbability: 0.07222389581498818 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 111 block B5 null  <||@
  Comment 111 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 52 r11|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 119 54 CMP (x: rdx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 127 56 BRANCH trueDestinationProbability: 0.8099819565583852 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B36  <||@
  Comment 133 block B6 null  <||@
  Comment 133 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 60 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 141 62 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 148 64 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 155 66 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 158 68 BRANCH trueDestinationProbability: 0.9050463630267387 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 164 block B7 null  <||@
  Comment 164 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 72 rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 167 74 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 176 12  <||@
  Comment 186 block B36 null  <||@
  Comment 186 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 298 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 194 300 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 196 302 BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38  <||@
  Comment 202 block B38 null  <||@
  Comment 202 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 202 312 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 202 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 209 314 BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B38 -> B40 falseDestination: B38 -> B42  <||@
  Comment 215 block B42 null  <||@
  Comment 215 338 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 215 340 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 219 342 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 222 346 JUMP ~[] destination: B42 -> B43  <||@
  Comment 222 block B43 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 222 348 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 224 344 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 228 350 CMP (x: rdx|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98]  <||@
  Comment 228 [rcx:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1          |2             |3  |4  |5             |6  |7 
     locals:  |-  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 232 352 BRANCH trueDestinationProbability: 0.8130949398797596 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B53  <||@
  Comment 238 block B44 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 238 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 356 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 242 358 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 249 360 CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 252 362 BRANCH trueDestinationProbability: 0.7999768937497593 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 258 block B46 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 258 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 372 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 261 374 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 267 block B48 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 267 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 386 stack:48|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 272 388 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 275 390 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 278 392 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:126]  <||@
  Comment 278 7  <||@
  Comment 295 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 300 [stack:16, stack:24]at java.util.HashMap.getNode(HashMap.java:579) [bci: 126, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4  |5                  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 301 394 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 303 400 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 308 396 BRANCH trueDestinationProbability: 0.04043126684636118 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B52  <||@
  Comment 314 block B49 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 314 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 402 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 318 404 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 320 406 BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 326 block B51 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 326 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 326 416 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 330 418 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 333 420 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 338 424 JUMP ~[] destination: B51 -> B43  <||@
  Comment 340 block B53 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 340 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 436 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 344 438 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 346 440 BRANCH trueDestinationProbability: 0.2801424178669688 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 352 block B55 loop 0 depth 1 header:73|LoopBegin  <||@
  Comment 352 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 450 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:98]  <||@
  Comment 352 [rax:0, r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2                  |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 352 {infopoint: SAFEPOINT}  <||@
  Comment 352 11  <||@
  Comment 358 452 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 362 454 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 365 456 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 370 460 JUMP ~[] destination: B55 -> B43  <||@
  Comment 375 block B45 null  <||@
  Comment 375 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 366 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 378 368 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 387 12  <||@
  Comment 397 block B4 null  <||@
  Comment 397 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 397 46 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 407 48 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 416 12  <||@
  Comment 426 block B8 null  <||@
  Comment 426 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 426 78 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 429 80 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 435 block B10 null  <||@
  Comment 435 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 90 rax|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD  <||@
  Comment 438 92 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 438 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 444 94 BRANCH trueDestinationProbability: 0.5799512987012987 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B28  <||@
  Comment 450 block B11 null  <||@
  Comment 450 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 450 98 CMP (x: rbx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 453 100 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 459 block B13 null  <||@
  Comment 459 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 112 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 462 114 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 468 block B15 null  <||@
  Comment 468 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 468 124 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 468 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 480 126 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B27  <||@
  Comment 486 block B27 null  <||@
  Comment 486 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 486 222 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 491 224 JUMP ~[] destination: B27 -> B30  <||@
  Comment 491 block B30 null  <||@
  Comment 491 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 262 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 499 264 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 501 266 BRANCH trueDestinationProbability: 0.12002300760529175 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 507 block B32 null  <||@
  Comment 507 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 276 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 507 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 515 278 BRANCH trueDestinationProbability: 0.0019245433748502627 condition: = trueDestination: B32 -> B40 falseDestination: B32 -> B34  <||@
  Comment 521 block B34 null  <||@
  Comment 521 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 286 rax|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 523 288 JUMP ~[] destination: B34 -> B42  <||@
  Comment 528 block B52 null  <||@
  Comment 528 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 528 430 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 531 432 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 540 12  <||@
  Comment 550 block B28 null  <||@
  Comment 550 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 550 228 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 555 230 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 560 232 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 565 234 rax|QWORD = MOV [rax|DWORD * 8 + 448] size: QWORD  <||@
  Comment 573 236 r8|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 577 238 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 580 240 rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 583 242 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 586 244 rax|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 589 246 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.]]) [] callTarget: HotSpotMethod<Object.equals(Object)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:59]  <||@
  Comment 589 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 589 10  <||@
  Comment 591 [stack:8, stack:16, stack:24]at java.util.HashMap.getNode(HashMap.java:572) [bci: 59, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4                  |5  |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |-  |-  |-   <||@
  Comment 592 248 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 594 250 BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B35  <||@
  Comment 600 block B35 null  <||@
  Comment 600 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 600 292 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 605 294 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 614 12  <||@
  Comment 624 block B1 null  <||@
  Comment 624 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 624 14 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 634 16 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 643 12  <||@
  Comment 653 block B37 null  <||@
  Comment 653 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 306 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 663 308 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 672 12  <||@
  Comment 682 block B12 null  <||@
  Comment 682 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 104 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 687 106 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 692 108 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 701 12  <||@
  Comment 711 block B54 null  <||@
  Comment 711 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 444 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 721 446 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 730 12  <||@
  Comment 740 block B16 null  <||@
  Comment 740 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 740 130 stack:48|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 745 132 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 750 134 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 755 136 rax|DWORD[.] = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 758 138 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 760 140 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 766 block B18 null  <||@
  Comment 766 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 766 152 rdx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 774 154 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 776 156 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 782 block B20 null  <||@
  Comment 782 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 782 168 rsi|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 789 170 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 797 172 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 800 174 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B26  <||@
  Comment 806 block B26 null  <||@
  Comment 806 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 216 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 811 218 JUMP ~[] destination: B26 -> B30  <||@
  Comment 816 block B21 null  <||@
  Comment 816 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 178 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 819 180 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 825 block B23 null  <||@
  Comment 825 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 825 192 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 829 194 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 833 196 rsi|DWORD = ARRAY_EQUALS (~array1Value: rax|QWORD[.], ~array2Value: rdx|QWORD[.], ~lengthValue: r10|DWORD) {temp1: r11|QWORD[*], temp2: r8|QWORD[*], temp3: r9|QWORD, temp4: rbx|QWORD, temp5: -, tempXMM: -, vectorTemp1: xmm0|DOUBLE, vectorTemp2: xmm1|DOUBLE} arrayBaseOffset: 16 arrayIndexScale: 2 kind: char  <||@
  Comment 1091 198 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1093 200 BRANCH trueDestinationProbability: 0.06981086127120707 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 1099 block B25 null  <||@
  Comment 1099 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1099 210 rax|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1104 212 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1113 12  <||@
  Comment 1123 block B22 null  <||@
  Comment 1123 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1123 186 rax|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1126 188 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1135 12  <||@
  Comment 1145 block B31 null  <||@
  Comment 1145 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1145 270 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1155 272 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1164 12  <||@
  Comment 1174 block B29 null  <||@
  Comment 1174 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1174 254 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1179 256 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1184 258 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1189 block B14 null  <||@
  Comment 1189 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1189 118 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1194 120 JUMP ~[] destination: B14 -> B30  <||@
  Comment 1199 block B50 null  <||@
  Comment 1199 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1199 410 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1209 412 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1218 12  <||@
  Comment 1228 block B40 null  <||@
  Comment 1228 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1228 322 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4be400c8 encoding: base: 0 shift: 3  <||@
  Comment 1232 324 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1235 326 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1239 328 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1244 330 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:94]  <||@
  Comment 1244 9  <||@
  Comment 1247 {HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>}  <||@
  Comment 1252 []at java.util.HashMap.getNode(HashMap.java:576) [bci: 94, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1253 332 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1262 12  <||@
  Comment 1272 block B24 null  <||@
  Comment 1272 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 204 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1277 206 JUMP ~[] destination: B24 -> B30  <||@
  Comment 1282 block B47 null  <||@
  Comment 1282 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1282 378 MOV [r15|QWORD + 668] y: -105747 size: DWORD  <||@
  Comment 1293 380 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1300 382 DEOPT info [bci:98]  <||@
  Comment 1300 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1305 [r10:0, stack:24]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2                  |3  |4  |5             |6  |7 
     locals:  |-  |stack:28|DWORD  |stack:40|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |-   <||@
  Comment 1306 block B56 null  <||@
  Comment 1306 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1306 464 r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5]  <||@
  Comment 1312 466 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1312 block B57 null  <||@
  Comment 1312 468 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1312 470 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1319 472 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1326 474 DEOPT info [bci:0]  <||@
  Comment 1326 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1331 [rcx:0, rsi:0]at java.util.HashMap.getNode(HashMap.java:569) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1332 block B17 null  <||@
  Comment 1332 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 144 r10|DWORD = MOVE input: int[-96523|0xfffffffffffe86f5]  <||@
  Comment 1338 148 JUMP ~[] destination: B17 -> B57  <||@
  Comment 1340 block B19 null  <||@
  Comment 1340 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1340 160 r10|DWORD = MOVE input: int[-98571|0xfffffffffffe7ef5]  <||@
  Comment 1346 162 rdx|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1350 164 JUMP ~[] destination: B19 -> B57  <||@
  Comment 1352 block B9 null  <||@
  Comment 1352 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1352 84 r10|DWORD = MOVE input: int[-95251|0xfffffffffffe8bed]  <||@
  Comment 1358 86 JUMP ~[] destination: B9 -> B57  <||@
  Comment 1360 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1103168e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1360 4  <||@
  Comment 1366 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1038a1f88, value=0x10fee1500]:0x10fee1500}  <||@
  Comment 1366 5  <||@
  HexCodeFile>>> <|@
end_nmethod
