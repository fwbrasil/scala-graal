begin_compilation
  name " HotSpotCompilation-388[org.openjdk.jmh.infra.Blackhole.consume(Object)]"
  method "HotSpotCompilation-388[org.openjdk.jmh.infra.Blackhole.consume(Object)]"
  date 1527031672219
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:307) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i157 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i157  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/openjdk/jmh/infra/Blackhole;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 v160 ?13 v161 j149 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
displacement: 196
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i157 v78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BlackholeL2.tlrMask
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:307) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v160 
=== Succesors ===
next: v52 
=== Usages ===
i30 v16 ?13 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v160 #next: v52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:307) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i158 
=== Usages ===
=== Predecessor ===
i157 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i158 v56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BlackholeL2.tlr
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v161 
=== Succesors ===
next: v56 
=== Usages ===
i9 
=== Predecessor ===
v52 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v161 #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 10]
rawvalue: 1664525
stableDimension: 0
stamp: i32 [1664525] ⇊000000000019660d ⇈000000000019660d
stampKind: i32
value: int[1664525|0x19660d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$163/806663612@5d50a9e9
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 12]
stamp: i32
=== Inputs ===
x: i158 
y: i8 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i158 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 13]
rawvalue: 1013904223
stableDimension: 0
stamp: i32 [1013904223] ⇊000000003c6ef35f ⇈000000003c6ef35f
stampKind: i32
value: int[1013904223|0x3c6ef35f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 15]
stamp: i32
=== Inputs ===
x: i9 
y: i10 
=== Succesors ===
=== Usages ===
v56 ?13 v16 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BlackholeL2.tlr
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v161 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
i158 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v161 value: i11 stateAfter: - lastLocationAccess: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:309) [bci: 24]
stamp: void
=== Inputs ===
x: i11 
y: i157 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i11 y: i157  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:309) [bci: 24]
stamp: void
trueSuccessorProbability: 1.427474074500168E-7
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4504488872322793472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j89 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j89 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:211) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j120 
=== Usages ===
v166 v167 
=== Predecessor ===
v17 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j120  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j89 
index: - 
=== Succesors ===
=== Usages ===
j120 v122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j89 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:212) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
=== Succesors ===
next: j121 
=== Usages ===
j92 v169 v170 a103 v171 v172 v173 v174 
=== Predecessor ===
j89 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v166 #next: j121  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j89 
index: - 
=== Succesors ===
=== Usages ===
j121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j89 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:213) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v167 
=== Succesors ===
next: v96 
=== Usages ===
v93 
=== Predecessor ===
j120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v167 #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 239]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j92 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j92 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:214) [bci: 24]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: i64
=== Inputs ===
x: j120 
y: j101 
=== Succesors ===
=== Usages ===
v93 v122 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j120 y: j101  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 45]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j121 
y: j92 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j121 y: j92  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 a104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a57 ?13 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 51]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
j121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v94 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4474473671413507037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:220) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a104 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a104  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<Blackhole.consume(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 17]
rethrowException: false
sourceFile: Blackhole.java
sourceLine: 308
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i157 - i11 
=== Succesors ===
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i157 - i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_instance(KlassPointer)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@164f2451
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newInstance(ForeignCallDescriptor, KlassPointer) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:223) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?13 
arguments: v87 
=== Succesors ===
next: v107 
=== Usages ===
a108 
=== Predecessor ===
v94 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?13 arguments: v87 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
a104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4504434943876996792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 58]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
value: j92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v166 value: j92 stateAfter: - lastLocationAccess: - #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:217) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
address: v171 
=== Succesors ===
next: j123 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v171 #next: j123  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: v87 
index: - 
=== Succesors ===
=== Usages ===
j123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v87 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:521) [bci: 19]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v168 
=== Succesors ===
next: v124 
=== Usages ===
v124 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v168 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v169 
value: j123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
j123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v169 value: j123 stateAfter: - lastLocationAccess: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
value: v156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v174 value: v156 stateAfter: - lastLocationAccess: - #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:211) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:456) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
value: i88 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v170 value: i88 stateAfter: - lastLocationAccess: - #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j99 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 0]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 v130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 251]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v172 
value: j99 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v172 value: j99 stateAfter: - lastLocationAccess: - #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 251]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
value: j99 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v173 value: j99 stateAfter: - lastLocationAccess: - #next: v102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:528) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a103 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:529) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j120 
=== Succesors ===
next: v105 
=== Usages ===
a108 
=== Predecessor ===
v102 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j120 #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
a103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4504488872322793472
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v106 
values: a103 a104 
=== Succesors ===
=== Usages ===
j139 a72 v164 v162 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: a103 a104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v105 v107 
=== Succesors ===
next: v60 
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v105 v107 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a108 
index: - 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a108 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v162 
value: a57 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j139 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v162 value: a57 stateAfter: - lastLocationAccess: - #next: j139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a108 
=== Succesors ===
next: v145 
=== Usages ===
j141 
=== Predecessor ===
v60 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a108 #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j141 j150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j141 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$69/1536369811@24954c7b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j139 
y: i140 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j139 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
rawvalue: 4305764352
stableDimension: 0
stamp: i64 [4305764352] ⇊0000000100a4c000 ⇈0000000100a4c000
stampKind: i64
value: long[4305764352|0x100a4c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 v176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j141 
index: j144 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: j144  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v145 v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
value: i146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a159 
=== Usages ===
=== Predecessor ===
j139 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v175 value: i146 stateAfter: - lastLocationAccess: - #next: a159  <|@  <|@
f <@~|@floating>@ <|@
tid a61 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 14]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
rawvalue: Class:java.lang.ref.ReferenceQueue
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.ref.ReferenceQueue]
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a61 
index: - 
=== Succesors ===
=== Usages ===
a159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a61 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.NULL
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 14]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
nullCheck: false
stamp: n Ljava/lang/ref/ReferenceQueue;
=== Inputs ===
stateBefore: - 
guard: - 
address: v163 
=== Succesors ===
next: v70 
=== Usages ===
v69 
=== Predecessor ===
v145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v163 #next: v70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
a159 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a108 
index: - 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.queue
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
value: a159 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v164 value: a159 stateAfter: - lastLocationAccess: - #next: v71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
displacement: 212
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
op: Compress
stamp: n! -
=== Inputs ===
value: a108 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: BlackholeL2.obj1
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v165 
value: a72 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j149 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v165 value: a72 stateAfter: - lastLocationAccess: - #next: j149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v153 
=== Usages ===
j150 
=== Predecessor ===
v75 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid j150 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$69/1536369811@24954c7b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j149 
y: i140 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j149 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j150 
index: j144 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j150 index: j144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v176 
value: i146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
j149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v176 value: i146 stateAfter: - lastLocationAccess: - #next: v77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 41]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i30 i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/1238125873@2e12c680
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i157 
y: i29 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i157 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 44]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i30 
y: i29 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i30 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BlackholeL2.tlrMask
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 45]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v160 
value: i31 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v160 value: i31 stateAfter: - lastLocationAccess: - #next: v80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:314) [bci: 48]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182417514263066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:314) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:314) [bci: 48]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:307) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i157 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i157  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/openjdk/jmh/infra/Blackhole;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v165 v160 ?13 v161 j149 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
result [v0|QWORD[.] + 196] <|@
d <@d|@=== Debug Properties ===
displacement: 196
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i157 v78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i157 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BlackholeL2.tlrMask
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:307) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v160 
=== Succesors ===
next: v52 
=== Usages ===
i30 v16 ?13 
=== Predecessor ===
v51 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v160 #next: v52  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:307) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i158 
=== Usages ===
=== Predecessor ===
i157 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
result [v0|QWORD[.] + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i158 v56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i158 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BlackholeL2.tlr
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v161 
=== Succesors ===
next: v56 
=== Usages ===
i9 
=== Predecessor ===
v52 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v161 #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1664525|0x19660d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 10]
rawvalue: 1664525
stableDimension: 0
stamp: i32 [1664525] ⇊000000000019660d ⇈000000000019660d
stampKind: i32
value: int[1664525|0x19660d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$163/806663612@5d50a9e9
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 12]
stamp: i32
=== Inputs ===
x: i158 
y: i8 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i158 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[1013904223|0x3c6ef35f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 13]
rawvalue: 1013904223
stableDimension: 0
stamp: i32 [1013904223] ⇊000000003c6ef35f ⇈000000003c6ef35f
stampKind: i32
value: int[1013904223|0x3c6ef35f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 15]
stamp: i32
=== Inputs ===
x: i9 
y: i10 
=== Succesors ===
=== Usages ===
v56 ?13 v16 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i9 y: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BlackholeL2.tlr
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v161 
value: i11 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
i158 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v161 value: i11 stateAfter: - lastLocationAccess: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:309) [bci: 24]
stamp: void
=== Inputs ===
x: i11 
y: i157 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i11 y: i157  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:309) [bci: 24]
stamp: void
trueSuccessorProbability: 1.427474074500168E-7
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@49c6bd75 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 196] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1664525|0x19660d] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = IMUL (x: v3|DWORD, ~y: [v0|QWORD[.] + 192]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA [v4|DWORD + 1013904223] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 192], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.427474074500168E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4504488872322793472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j89 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j89 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:211) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j120 
=== Usages ===
v166 v167 
=== Predecessor ===
v17 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j120  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j89 
index: - 
=== Succesors ===
=== Usages ===
j120 v122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j89 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j120 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:212) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
=== Succesors ===
next: j121 
=== Usages ===
j92 v169 v170 a103 v171 v172 v173 v174 
=== Predecessor ===
j89 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v166 #next: j121  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j89 
index: - 
=== Succesors ===
=== Usages ===
j121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j89 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j121 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:213) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v167 
=== Succesors ===
next: v96 
=== Usages ===
v93 
=== Predecessor ===
j120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v167 #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 239]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j92 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j92 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:214) [bci: 24]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: i64
=== Inputs ===
x: j120 
y: j101 
=== Succesors ===
=== Usages ===
v93 v122 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j120 y: j101  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 45]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j121 
y: j92 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j121 y: j92  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 a104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a57 ?13 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:215) [bci: 51]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
j121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v94 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4474473671413507037
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:220) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a104 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a104  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<Blackhole.consume(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 17]
rethrowException: false
sourceFile: Blackhole.java
sourceLine: 308
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i157 - i11 
=== Succesors ===
=== Usages ===
a104 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i157 - i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a104 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_instance(KlassPointer)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@164f2451
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newInstance(ForeignCallDescriptor, KlassPointer) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:223) [bci: 110]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?13 
arguments: v87 
=== Succesors ===
next: v107 
=== Usages ===
a108 
=== Predecessor ===
v94 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?13 arguments: v87 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
a104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 20]
stack: v5|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x1109b68e0:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4504434943876996792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:216) [bci: 58]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v166 
value: j92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v166 value: j92 stateAfter: - lastLocationAccess: - #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
result [v6|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:217) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
address: v171 
=== Succesors ===
next: j123 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v171 #next: j123  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
result [v8|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: v87 
index: - 
=== Succesors ===
=== Usages ===
j123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v87 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j123 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:521) [bci: 19]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v168 
=== Succesors ===
next: v124 
=== Usages ===
v124 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v168 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v169 
value: j123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
j123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v169 value: j123 stateAfter: - lastLocationAccess: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
result meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
rawvalue: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:522) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
value: v156 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v174 value: v156 stateAfter: - lastLocationAccess: - #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:211) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:456) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v170 
value: i88 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v170 value: i88 stateAfter: - lastLocationAccess: - #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
result [v6|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j99 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 0]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 v130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 251]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v172 
value: j99 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v172 value: j99 stateAfter: - lastLocationAccess: - #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
result [v6|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j120 
index: - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j120 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 251]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:524) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
value: j99 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v173 value: j99 stateAfter: - lastLocationAccess: - #next: v102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:528) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a103 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a103 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatObject(NewObjectSnippets.java:529) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:218) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j120 
=== Succesors ===
next: v105 
=== Usages ===
a108 
=== Predecessor ===
v102 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j120 #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
a103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v8|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 16], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 24], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4504488872322793472
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a108 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v106 
values: a103 a104 
=== Succesors ===
=== Usages ===
j139 a72 v164 v162 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: a103 a104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstanceHelper(NewObjectSnippets.java:225) [bci: 115]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateInstance(NewObjectSnippets.java:205) [bci: 14]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v105 v107 
=== Succesors ===
next: v60 
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v105 v107 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
result [v12|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a108 
index: - 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a108 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.referent
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v162 
value: a57 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j139 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v162 value: a57 stateAfter: - lastLocationAccess: - #next: j139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j139 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a108 
=== Succesors ===
next: v145 
=== Usages ===
j141 
=== Predecessor ===
v60 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a108 #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j141 j150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j141 <|@
result v14|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$69/1536369811@24954c7b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j139 
y: i140 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j139 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
rawvalue: 4305764352
stableDimension: 0
stamp: i64 [4305764352] ⇊0000000100a4c000 ⇈0000000100a4c000
stampKind: i64
value: long[4305764352|0x100a4c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 v176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
result [v14|QWORD[*] + v15|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j141 
index: j144 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j141 index: j144  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v145 v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.ref.Reference.<init>(Reference.java:307) [bci: 6]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
value: i146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a159 
=== Usages ===
=== Predecessor ===
j139 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v175 value: i146 stateAfter: - lastLocationAccess: - #next: a159  <|@  <|@
f <@~|@floating>@ <|@
tid a61 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 14]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
rawvalue: Class:java.lang.ref.ReferenceQueue
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:java.lang.ref.ReferenceQueue]
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
result [v16|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a61 
index: - 
=== Succesors ===
=== Usages ===
a159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a61 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a159 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ReferenceQueue.NULL
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 14]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
nullCheck: false
stamp: n Ljava/lang/ref/ReferenceQueue;
=== Inputs ===
stateBefore: - 
guard: - 
address: v163 
=== Succesors ===
next: v70 
=== Usages ===
v69 
=== Predecessor ===
v145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v163 #next: v70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
a159 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
result [v12|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a108 
index: - 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Reference.queue
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v164 
value: a159 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v164 value: a159 stateAfter: - lastLocationAccess: - #next: v71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at java.lang.ref.Reference.<init>(Reference.java:308) [bci: 21]
at java.lang.ref.Reference.<init>(Reference.java:303) [bci: 3]
at java.lang.ref.WeakReference.<init>(WeakReference.java:57) [bci: 2]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
result [v0|QWORD[.] + 212] <|@
d <@d|@=== Debug Properties ===
displacement: 212
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
op: Compress
stamp: n! -
=== Inputs ===
value: a108 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: BlackholeL2.obj1
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v165 
value: a72 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j149 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v165 value: a72 stateAfter: - lastLocationAccess: - #next: j149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j149 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v153 
=== Usages ===
j150 
=== Predecessor ===
v75 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid j150 <|@
result v19|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$69/1536369811@24954c7b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j149 
y: i140 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j149 y: i140  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
result [v19|QWORD[*] + v15|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j150 
index: j144 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j150 index: j144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v176 
value: i146 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
j149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v176 value: i146 stateAfter: - lastLocationAccess: - #next: v77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:311) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 41]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i30 i31 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/1238125873@2e12c680
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i157 
y: i29 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i157 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 44]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i30 
y: i29 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i30 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BlackholeL2.tlrMask
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 45]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v160 
value: i31 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v160 value: i31 stateAfter: - lastLocationAccess: - #next: v80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
barriers: 12
location: ANY_LOCATION
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:312) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:314) [bci: 48]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + 12], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[*] = SHR v12|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[4305764352|0x100a4c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v14|QWORD[*] + v15|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + 16], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = COMPRESSPOINTER (input: v12|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 212], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v19|QWORD[*] + v15|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 196], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182417514263066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:314) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:314) [bci: 48]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@49c6bd75 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 196] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1664525|0x19660d] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = IMUL (x: v3|DWORD, ~y: [v0|QWORD[.] + 192]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = LEA [v4|DWORD + 1013904223] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 192], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.427474074500168E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182417514263066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4504488872322793472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4504434943876996792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v8|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 16], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 24], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD[.]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4504488872322793472
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + 12], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[*] = SHR v12|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[4305764352|0x100a4c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v14|QWORD[*] + v15|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v16|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + 16], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = COMPRESSPOINTER (input: v12|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 212], y: v18|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v19|QWORD[*] + v15|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 196], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4474473671413507037
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 20]
stack: v5|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x1109b68e0:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // org.openjdk.jmh.infra.BlackholeL2.tlrMask:int
     4: istore_2      
     5: aload_0       
     6: aload_0       
     7: getfield      #5          // org.openjdk.jmh.infra.BlackholeL2.tlr:int
    10: ldc           #12         // 1664525
    12: imul          
    13: ldc           #13         // 1013904223
    15: iadd          
    16: dup_x1        
    17: putfield      #5          // org.openjdk.jmh.infra.BlackholeL2.tlr:int
    20: istore_3      
    21: iload_3       
    22: iload_2       
    23: iand          
    24: ifne          48
    27: aload_0       
    28: new           #14         // java.lang.ref.WeakReference
    31: dup           
    32: aload_1       
    33: invokespecial #6          // java.lang.ref.WeakReference.<init>:(java.lang.Object)void
    36: putfield      #3          // org.openjdk.jmh.infra.BlackholeL2.obj1:java.lang.Object
    39: aload_0       
    40: iload_2       
    41: iconst_1      
    42: ishl          
    43: iconst_1      
    44: iadd          
    45: putfield      #4          // org.openjdk.jmh.infra.BlackholeL2.tlrMask:int
    48: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@49c6bd75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 196] size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = MOVE input: int[1664525|0x19660d] <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = IMUL (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 192]) size: DWORD <|@ <|@
      nr   16  <|@ instruction r14|DWORD = LEA [rsi|DWORD + 1013904223] size: DWORD <|@ <|@
      nr   18  <|@ instruction MOV (x: [rbx|QWORD[.] + 192], y: r14|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 1.427474074500168E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182417514263066
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4504488872322793472
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>} <|@ <|@
      nr   36  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4504434943876996792
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed} <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rsi|QWORD + 16], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD + 24], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4504488872322793472
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rbp|DWORD[.] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr   68  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOVE input: long[4305764352|0x100a4c000] <|@ <|@
      nr   72  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   74  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   76  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   82  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction MOV (x: [rbx|QWORD[.] + 212], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   90  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   92  <|@ instruction r13|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction r13|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rbx|QWORD[.] + 196], y: r13|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4474473671413507037
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rbx:0, rbp:0]
live-base-pointers: []
org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 20]
stack: r14|DWORD 
locals: rbx|QWORD[.] rbp|QWORD[.] r13|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x1109b68e0:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // org.openjdk.jmh.infra.BlackholeL2.tlrMask:int
     4: istore_2      
     5: aload_0       
     6: aload_0       
     7: getfield      #5          // org.openjdk.jmh.infra.BlackholeL2.tlr:int
    10: ldc           #12         // 1664525
    12: imul          
    13: ldc           #13         // 1013904223
    15: iadd          
    16: dup_x1        
    17: putfield      #5          // org.openjdk.jmh.infra.BlackholeL2.tlr:int
    20: istore_3      
    21: iload_3       
    22: iload_2       
    23: iand          
    24: ifne          48
    27: aload_0       
    28: new           #14         // java.lang.ref.WeakReference
    31: dup           
    32: aload_1       
    33: invokespecial #6          // java.lang.ref.WeakReference.<init>:(java.lang.Object)void
    36: putfield      #3          // org.openjdk.jmh.infra.BlackholeL2.obj1:java.lang.Object
    39: aload_0       
    40: iload_2       
    41: iconst_1      
    42: ishl          
    43: iconst_1      
    44: iadd          
    45: putfield      #4          // org.openjdk.jmh.infra.BlackholeL2.tlrMask:int
    48: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@49c6bd75 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 196] size: DWORD <|@ <|@
      nr   12  <|@ instruction rsi|DWORD = MOVE input: int[1664525|0x19660d] <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = IMUL (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 192]) size: DWORD <|@ <|@
      nr   16  <|@ instruction r14|DWORD = LEA [rsi|DWORD + 1013904223] size: DWORD <|@ <|@
      nr   18  <|@ instruction MOV (x: [rbx|QWORD[.] + 192], y: r14|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 1.427474074500168E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182417514263066
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4504488872322793472
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr   34  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>} <|@ <|@
      nr   36  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4504434943876996792
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr   46  <|@ instruction r10|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed} <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rsi|QWORD + 16], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [rsi|QWORD + 24], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4504488872322793472
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rbp|DWORD[.] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr   68  <|@ instruction r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   70  <|@ instruction r11|QWORD = MOVE input: long[4305764352|0x100a4c000] <|@ <|@
      nr   72  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   74  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue] <|@ <|@
      nr   76  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   82  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction MOV (x: [rbx|QWORD[.] + 212], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   90  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   92  <|@ instruction r13|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction r13|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV (x: [rbx|QWORD[.] + 196], y: r13|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4474473671413507037
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rbx:0, rbp:0]
live-base-pointers: []
org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 20]
stack: r14|DWORD 
locals: rbx|QWORD[.] rbp|QWORD[.] r13|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x1109b68e0:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // org.openjdk.jmh.infra.BlackholeL2.tlrMask:int
     4: istore_2      
     5: aload_0       
     6: aload_0       
     7: getfield      #5          // org.openjdk.jmh.infra.BlackholeL2.tlr:int
    10: ldc           #12         // 1664525
    12: imul          
    13: ldc           #13         // 1013904223
    15: iadd          
    16: dup_x1        
    17: putfield      #5          // org.openjdk.jmh.infra.BlackholeL2.tlr:int
    20: istore_3      
    21: iload_3       
    22: iload_2       
    23: iand          
    24: ifne          48
    27: aload_0       
    28: new           #14         // java.lang.ref.WeakReference
    31: dup           
    32: aload_1       
    33: invokespecial #6          // java.lang.ref.WeakReference.<init>:(java.lang.Object)void
    36: putfield      #3          // org.openjdk.jmh.infra.BlackholeL2.obj1:java.lang.Object
    39: aload_0       
    40: iload_2       
    41: iconst_1      
    42: ishl          
    43: iconst_1      
    44: iadd          
    45: putfield      #4          // org.openjdk.jmh.infra.BlackholeL2.tlrMask:int
    48: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410488bde488bea448babc4000000be0d6619000fafb3c0000000448db65ff36e3c4489b3c00000004585ee0f8413000000488b6c24104883c418850500000000c5f877c3498b77604c8d562049bbaddeaddeaddeadde4d3b57700f879a0000004d8957600f1886e00000004d8b93a80000004c8916c74608addeadde4489660c4c8966104c89661848c1ed03896e0c4c8bd649c1ea0949bb00c0a400010000004788241a49baaddeaddeaddeadde458b526844895610f08304240048c1ee0389b3d4000000488bf348c1ee094688241ef08304240041d1e541ffc54489abc4000000f083042400488b6c24104883c418850500000000c5f877c3498bf3e80000000090488bf0eb80e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1038a1f78, value=0x10fedfe60]:0x10fedfe60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@49c6bd75 slotKind: QWORD  <||@
  Comment 48 6 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 r13|DWORD = MOV [rbx|QWORD[.] + 196] size: DWORD  <||@
  Comment 61 12 rsi|DWORD = MOVE input: int[1664525|0x19660d]  <||@
  Comment 66 14 rsi|DWORD = IMUL (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 192]) size: DWORD  <||@
  Comment 73 16 r14|DWORD = LEA [rsi|DWORD + 1013904223] size: DWORD  <||@
  Comment 80 18 MOV (x: [rbx|QWORD[.] + 192], y: r14|DWORD) size: DWORD  <||@
  Comment 87 20 TEST (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 90 22 BRANCH trueDestinationProbability: 1.427474074500168E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5  <||@
  Comment 96 block B5 null  <||@
  Comment 96 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 26 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 105 12  <||@
  Comment 115 block B1 null  <||@
  Comment 115 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 115 30 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 119 32 r10|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 123 34 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>}  <||@
  Comment 123 {meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>}}  <||@
  Comment 133 36 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 137 38 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 143 block B3 null  <||@
  Comment 143 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 42 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 147 44 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 154 46 r10|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 161 48 MOV (x: [rsi|QWORD], y: r10|QWORD) size: QWORD  <||@
  Comment 164 50 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed}  <||@
  Comment 164 {meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed}}  <||@
  Comment 171 52 MOV (x: [rsi|QWORD + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 175 54 MOV (x: [rsi|QWORD + 16], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 179 56 MOV (x: [rsi|QWORD + 24], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 183 58 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 183 60 JUMP ~[] destination: B3 -> B4  <||@
  Comment 183 block B4 null  <||@
  Comment 183 62 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 183 64 rbp|DWORD[.] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3  <||@
  Comment 187 66 MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 190 68 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 197 70 r11|QWORD = MOVE input: long[4305764352|0x100a4c000]  <||@
  Comment 207 72 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 211 74 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue]  <||@
  Comment 211 {Object[Class:java.lang.ref.ReferenceQueue]}  <||@
  Comment 221 76 r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 225 78 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 229 80 MEMBAR barriers: 4  <||@
  Comment 234 82 rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3  <||@
  Comment 238 84 MOV (x: [rbx|QWORD[.] + 212], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 244 86 rsi|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 251 88 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 255 90 MEMBAR barriers: 4  <||@
  Comment 260 92 r13|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 263 94 r13|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 266 96 MOV (x: [rbx|QWORD[.] + 196], y: r13|DWORD) size: DWORD  <||@
  Comment 273 98 MEMBAR barriers: 4  <||@
  Comment 278 100 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 287 12  <||@
  Comment 297 block B2 null  <||@
  Comment 297 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 297 104 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 300 106 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x1109b68e0:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:20]  <||@
  Comment 300 {Stub<NewInstanceStub.newInstance>@0x1109b68e0:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 305 [rbx:0, rbp:0]at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rbx|QWORD[.]  |rbp|QWORD[.]  |r13|DWORD  |- 
     stack:   |r14|DWORD     |              |           |    <||@
  Comment 306 -1 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 309 110 JUMP ~[] destination: B2 -> B4  <||@
  Comment 311 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1103168e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 311 4  <||@
  Comment 317 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1038a1f88, value=0x10fee1500]:0x10fee1500}  <||@
  Comment 317 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-388[org.openjdk.jmh.infra.Blackhole.consume(Object)]"
  method "HotSpotCompilation-388[org.openjdk.jmh.infra.Blackhole.consume(Object)]"
  date 1527031672352
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1109e50e0 448b560849c1e203493bc20f856fad4fff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410488bde488bea448babc4000000be0d6619000fafb3c0000000448db65ff36e3c4489b3c00000004585ee0f8413000000488b6c24104883c4188505b7fed4f1c5f877c3498b77604c8d562049bb285d00c0070000004d3b57700f879a0000004d8957600f1886e00000004d8b93a80000004c8916c74608a50b00f84489660c4c8966104c89661848c1ed03896e0c4c8bd649c1ea0949bb00c0a400010000004788241a49bae00000c006000000458b526844895610f08304240048c1ee0389b3d4000000488bf348c1ee094688241ef08304240041d1e541ffc54489abc4000000f083042400488b6c24104883c418850501fed4f1c5f877c3498bf3e8cf16fdff90488bf0eb80e8c41693ff90e8dec24fff90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1038a1f78, value=0x10fedfe60]:0x10fedfe60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@49c6bd75 slotKind: QWORD  <||@
  Comment 48 6 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rbp|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 r13|DWORD = MOV [rbx|QWORD[.] + 196] size: DWORD  <||@
  Comment 61 12 rsi|DWORD = MOVE input: int[1664525|0x19660d]  <||@
  Comment 66 14 rsi|DWORD = IMUL (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 192]) size: DWORD  <||@
  Comment 73 16 r14|DWORD = LEA [rsi|DWORD + 1013904223] size: DWORD  <||@
  Comment 80 18 MOV (x: [rbx|QWORD[.] + 192], y: r14|DWORD) size: DWORD  <||@
  Comment 87 20 TEST (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 90 22 BRANCH trueDestinationProbability: 1.427474074500168E-7 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5  <||@
  Comment 96 block B5 null  <||@
  Comment 96 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 26 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 105 12  <||@
  Comment 115 block B1 null  <||@
  Comment 115 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 115 30 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 119 32 r10|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 123 34 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>}  <||@
  Comment 123 {meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>}}  <||@
  Comment 133 36 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 137 38 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 143 block B3 null  <||@
  Comment 143 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 42 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 147 44 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 154 46 r10|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 161 48 MOV (x: [rsi|QWORD], y: r10|QWORD) size: QWORD  <||@
  Comment 164 50 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed}  <||@
  Comment 164 {meta{HotSpotType<Ljava/lang/ref/WeakReference;, resolved>;compressed}}  <||@
  Comment 171 52 MOV (x: [rsi|QWORD + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 175 54 MOV (x: [rsi|QWORD + 16], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 179 56 MOV (x: [rsi|QWORD + 24], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 183 58 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 183 60 JUMP ~[] destination: B3 -> B4  <||@
  Comment 183 block B4 null  <||@
  Comment 183 62 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 183 64 rbp|DWORD[.] = COMPRESSPOINTER (input: rbp|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3  <||@
  Comment 187 66 MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 190 68 r10|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 197 70 r11|QWORD = MOVE input: long[4305764352|0x100a4c000]  <||@
  Comment 207 72 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 211 74 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.lang.ref.ReferenceQueue]  <||@
  Comment 211 {Object[Class:java.lang.ref.ReferenceQueue]}  <||@
  Comment 221 76 r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 225 78 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 229 80 MEMBAR barriers: 4  <||@
  Comment 234 82 rsi|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@59712fdc encoding: base: 0 shift: 3  <||@
  Comment 238 84 MOV (x: [rbx|QWORD[.] + 212], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 244 86 rsi|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 251 88 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 255 90 MEMBAR barriers: 4  <||@
  Comment 260 92 r13|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 263 94 r13|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 266 96 MOV (x: [rbx|QWORD[.] + 196], y: r13|DWORD) size: DWORD  <||@
  Comment 273 98 MEMBAR barriers: 4  <||@
  Comment 278 100 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 287 12  <||@
  Comment 297 block B2 null  <||@
  Comment 297 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 297 104 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 300 106 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<NewInstanceStub.newInstance>@0x1109b68e0:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:20]  <||@
  Comment 300 {Stub<NewInstanceStub.newInstance>@0x1109b68e0:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 305 [rbx:0, rbp:0]at org.openjdk.jmh.infra.Blackhole.consume(Blackhole.java:308) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rbx|QWORD[.]  |rbp|QWORD[.]  |r13|DWORD  |- 
     stack:   |r14|DWORD     |              |           |    <||@
  Comment 306 -1 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 309 110 JUMP ~[] destination: B2 -> B4  <||@
  Comment 311 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1103168e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 311 4  <||@
  Comment 317 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1038a1f88, value=0x10fee1500]:0x10fee1500}  <||@
  Comment 317 5  <||@
  HexCodeFile>>> <|@
end_nmethod
