begin_compilation
  name " HotSpotCompilation-2609[java.util.regex.Pattern$Branch.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-2609[java.util.regex.Pattern$Branch.match(Matcher, int, CharSequence)]"
  date 1527031666935
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a1312 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 v1431 v1381 v1339 v1389 v1421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 v46 v47 i139 i282 i1475 i195 i1474 i1476 i1473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1306 ?11 v520 ?26 ?79 ?81 v1556 v632 ?71 v774 ?1303 ?388 ?83 ?149 ?402 ?176 v697 ?203 v747 ?120 v640 ?290 v1547 ?416 v1540 v1587 v1588 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1303 ?11 v520 ?26 v774 ?81 v564 ?71 i118 v304 i195 v730 v299 v1559 v1566 v182 v308 v656 v1469 i1476 v1477 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?1303 ?11 v520 ?26 v774 ?81 ?71 v640 v697 v747 ?120 v632 ?290 v1574 v1548 v1583 v1584 v1585 v1586 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$Branch;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1303 ?11 v1534 v1535 v1538 ?26 ?81 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 v27 v37 i119 v338 v143 ?416 v163 v172 ?402 v286 v199 ?388 v304 v1477 ?26 ?285 ?79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
v0 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B91" "B23" "B55" "B82" 
    successors "B2" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i6 i44 i1473 i1474 i1475 
=== Succesors ===
=== Usages ===
?11 v13 v1537 ?26 v523 ?81 i44 ?1303 i1473 i1474 i1475 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i6 i44 i1473 i1474 i1475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.7098408589302279
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 4
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v8 
=== Succesors ===
next: i1480 
=== Usages ===
i10 v30 v40 v45 v377 v391 v405 v1150 v1075 v878 v1140 v888 v1105 v1130 v903 v908 v1045 v1120 v923 v1115 v1090 v940 v946 v1065 v958 v964 v1100 v976 v982 v988 v1055 v998 v1050 v1010 v1015 v1020 v1085 v1030 v1035 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v8 #next: i1480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.size
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
=== Succesors ===
next: v879 
=== Usages ===
v13 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1534 #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i1480 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i1480  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4602
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
v1315 i1482 a1485 v1575 a1487 i1488 v1491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v875 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
i1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v875 #falseSuccessor: v878  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1481 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.atoms
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
nullCheck: false
stamp: n [Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1535 
=== Succesors ===
next: i1482 
=== Usages ===
a490 v1536 
=== Predecessor ===
v875 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1535 #next: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1481 
=== Succesors ===
=== Usages ===
i1482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1536 
=== Succesors ===
next: v889 
=== Usages ===
v523 
=== Predecessor ===
a1481 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1536 #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i1482 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i1482  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v523 
=== Succesors ===
trueSuccessor: v885 
falseSuccessor: v888 
=== Usages ===
=== Predecessor ===
i1482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v523 #trueSuccessor: v885 #falseSuccessor: v888  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1483 
=== Usages ===
a1483 
=== Predecessor ===
v889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1483  <|@  <|@
f <@~|@floating>@ <|@
tid a490 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
op: Uncompress
stamp: a [Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
v1537 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a490 
index: i10 
=== Succesors ===
=== Usages ===
a1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a490 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: v885 
address: v1537 
=== Succesors ===
next: v21 
=== Usages ===
v792 ?83 v1541 v1544 v1571 ?203 ?388 ?79 ?402 ?149 ?71 ?176 ?1306 ?416 
=== Predecessor ===
v885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v885 address: v1537 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
stamp: void
=== Inputs ===
value: a1483 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1483  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
stamp: void
trueSuccessorProbability: 0.4158663727065506
=== Inputs ===
condition: v792 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
a1483 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v792 #trueSuccessor: v19 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604579926528802028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1484 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.conn
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 23]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1538 
=== Succesors ===
next: a1485 
=== Usages ===
v1539 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1538 #next: a1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1484 
=== Succesors ===
=== Usages ===
a1485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
nullCheck: true
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1539 
=== Succesors ===
next: v1575 
=== Usages ===
a516 v1575 
=== Predecessor ===
a1484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1539 #next: v1575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
object: a1485 
=== Succesors ===
next: i25 
=== Usages ===
=== Predecessor ===
a1485 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?11 object: a1485 #next: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a516 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1485 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1485  <|@  <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@7a1dd5e9
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a516 a2 i3 a4 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a516 a2 i3 a4  <|@  <|@
tid ?1303 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v520 
stateDuring: ?1303 
=== Succesors ===
next: v904 
=== Usages ===
v27 
=== Predecessor ===
v1575 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v520 stateDuring: ?1303 #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i6 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i25 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v903 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i25 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v903 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v901  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 i6 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10 i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 521
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4604579926528802028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4605) [bci: 39]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1486 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1483 
=== Succesors ===
=== Usages ===
v1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1571 
=== Succesors ===
next: v909 
=== Usages ===
v1456 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1571 #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1486 
y: v1455 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1486 y: v1455  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1456 
=== Succesors ===
trueSuccessor: v905 
falseSuccessor: v908 
=== Usages ===
=== Predecessor ===
v1486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1456 #trueSuccessor: v905 #falseSuccessor: v908  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1487 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1487  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1487 a1503 a1518 a1528 a1531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1540 
=== Succesors ===
next: i1488 
=== Usages ===
a540 v1542 
=== Predecessor ===
v905 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1540 #next: i1488  <|@  <|@
f <@~|@floating>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1487 
=== Succesors ===
=== Usages ===
i1488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1542 
=== Succesors ===
next: i1489 
=== Usages ===
v766 
=== Predecessor ===
a1487 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1542 #next: i1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1483 
=== Succesors ===
=== Usages ===
i1489 i1505 i1520 i1530 i1533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
=== Succesors ===
next: v924 
=== Usages ===
v766 v1543 
=== Predecessor ===
i1488 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1541 #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1489 
y: i1488 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1489 y: i1488  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v920 
falseSuccessor: v923 
=== Usages ===
=== Predecessor ===
i1489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v920 #falseSuccessor: v923  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1490 
=== Usages ===
v690 v564 i1492 v773 
=== Predecessor ===
v924 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1483 
=== Succesors ===
=== Usages ===
a1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1544 
=== Succesors ===
next: v1491 
=== Usages ===
a567 v1572 v1545 v1546 v1557 v1562 v1579 v1580 v1581 a1582 
=== Predecessor ===
v920 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1544 #next: v1491  <|@  <|@
f <@~|@floating>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1572 
=== Succesors ===
next: i1492 
=== Usages ===
v1462 v1458 v1460 
=== Predecessor ===
a1490 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1572 #next: i1492  <|@  <|@
f <@~|@floating>@ <|@
tid a540 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1487 
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1487  <|@  <|@
f <@~|@floating>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a540 
index: i1489 
=== Succesors ===
=== Usages ===
v564 i1492 v690 v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a540 index: i1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v920 
address: v1543 
=== Succesors ===
next: v564 
=== Usages ===
?71 ?1306 v790 ?79 ?83 ?203 ?176 ?149 v625 ?388 v690 ?402 v773 ?416 v764 v714 
=== Predecessor ===
v1491 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v920 address: v1543 #next: v564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v920 
address: v1543 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
i1492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v920 address: v1543 value: i3 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1491 
y: v1457 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1491 y: v1457  <|@  <|@
tid ?81 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4606
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
?71 ?1306 ?79 ?83 ?203 ?176 ?149 ?388 ?402 ?416 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@~|@floating>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 v1467 v1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.49957695833039556
=== Inputs ===
condition: v1458 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1458 #trueSuccessor: v89 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602660178734832200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 - 
=== Succesors ===
=== Usages ===
?120 ?1305 ?290 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 -  <|@  <|@
f <@~|@floating>@ <|@
tid a567 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1490 
=== Succesors ===
=== Usages ===
?120 ?290 v640 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
i1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" 
    successors "B12" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4603870455259032939
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v117 
values: i3 i1507 
=== Succesors ===
=== Usages ===
?120 v640 i282 v269 v342 v1550 v338 v593 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v117 values: i3 i1507  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v117 
values: i6 i139 
=== Succesors ===
=== Usages ===
?120 v122 v640 ?290 i139 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v117 values: i6 i139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2672188789668644
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v116 
=== Succesors ===
next: i1493 
=== Usages ===
i118 i119 v124 v134 v140 v1009 v975 v987 v939 v945 v981 v957 v963 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v116 #next: i1493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmin
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 6]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1545 
=== Succesors ===
next: v128 
=== Usages ===
v122 
=== Predecessor ===
v117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1545 #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i1493 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i1493  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4228
stackSize: 0
=== Inputs ===
outerFrameState: ?149 
values: a567 a2 i118 a4 i119 
=== Succesors ===
=== Usages ===
v1389 v1495 v1497 i1499 i1504 v1578 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?149 values: a567 a2 i118 a4 i119  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.5259333752357008
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
i1493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v123 #falseSuccessor: v124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 12]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1494 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1494  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
a1494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 13]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1546 
=== Succesors ===
next: v1495 
=== Usages ===
v1573 v1555 v1551 
=== Predecessor ===
v123 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1546 #next: v1495  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1494 
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?120 
guard: - 
address: v1573 
=== Succesors ===
next: v941 
=== Usages ===
v1464 
=== Predecessor ===
a1494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?120 guard: - address: v1573 #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1495 
y: v1463 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1495 y: v1463  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1464 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v939 
=== Usages ===
=== Predecessor ===
v1495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1464 #trueSuccessor: v936 #falseSuccessor: v939  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1496 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1496  <|@  <|@
f <@~|@floating>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1547 
=== Succesors ===
next: v947 
=== Usages ===
v269 
=== Predecessor ===
v936 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1547 #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i1496 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i118 y: i1496  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v942 
falseSuccessor: v945 
=== Usages ===
=== Predecessor ===
i1496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v942 #falseSuccessor: v945  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?120 
guard: - 
address: v1574 
=== Succesors ===
next: v959 
=== Usages ===
v1466 
=== Predecessor ===
v942 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?120 guard: - address: v1574 #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1497 
y: v1465 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1497 y: v1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1466 
=== Succesors ===
trueSuccessor: v954 
falseSuccessor: v957 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1466 #trueSuccessor: v954 #falseSuccessor: v957  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i6 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i118 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v963 
falseSuccessor: v960 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v963 #falseSuccessor: v960  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v964 
=== Usages ===
=== Predecessor ===
v965 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v964  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1398 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid i1399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149011
stableDimension: 0
stamp: i32 [-149011] ⇊00000000fffdb9ed ⇈00000000fffdb9ed
stampKind: i32
value: int[-149011|0xfffffffffffdb9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v964 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1498 
=== Usages ===
=== Predecessor ===
v965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1498  <|@  <|@
f <@~|@floating>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1548 
=== Succesors ===
next: i1499 
=== Usages ===
a585 v1549 
=== Predecessor ===
v960 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1548 #next: i1499  <|@  <|@
f <@~|@floating>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1498 
=== Succesors ===
=== Usages ===
i1499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?120 
guard: - 
address: v1549 
=== Succesors ===
next: v977 
=== Usages ===
v342 v593 
=== Predecessor ===
a1498 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?120 guard: - address: v1549 #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i1499 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i118 y: i1499  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v975 
=== Usages ===
=== Predecessor ===
i1499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v972 #falseSuccessor: v975  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i1499 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i118 y: i1499  <|@  <|@
f <@*|@fixed>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v978 
falseSuccessor: v981 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v978 #falseSuccessor: v981  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1500 
=== Usages ===
i1500 
=== Predecessor ===
v983 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1500  <|@  <|@
f <@~|@floating>@ <|@
tid a585 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1498 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1498  <|@  <|@
f <@~|@floating>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a585 
index: i118 
=== Succesors ===
=== Usages ===
i1500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a585 index: i118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v978 
address: v1550 
=== Succesors ===
next: v989 
=== Usages ===
v874 j800 
=== Predecessor ===
v978 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v978 address: v1550 #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid i873 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1500 
y: i873 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1500 y: i873  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v874 
=== Succesors ===
trueSuccessor: v984 
falseSuccessor: v987 
=== Usages ===
=== Predecessor ===
i1500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v874 #trueSuccessor: v984 #falseSuccessor: v987  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1501 
=== Usages ===
i1502 
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1501  <|@  <|@
f <@~|@floating>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1494 
=== Succesors ===
=== Usages ===
i1501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1551 
=== Succesors ===
next: i1502 
=== Usages ===
v350 
=== Predecessor ===
v984 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1551 #next: i1502  <|@  <|@
f <@~|@floating>@ <|@
tid a357 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/2034614602@5c2763a3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2105117569@79d0db9b
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1500 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1500  <|@  <|@
f <@~|@floating>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a357 
index: j800 
=== Succesors ===
=== Usages ===
i1502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a357 index: j800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v984 
address: v1552 
=== Succesors ===
next: v280 
=== Usages ===
v350 
=== Predecessor ===
i1501 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v984 address: v1552 #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
x: i1501 
y: i1502 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1501 y: i1502  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.7642676699811879
=== Inputs ===
condition: v350 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
i1502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v350 #trueSuccessor: v134 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598250064049195856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: a1503 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
=== Succesors ===
next: i1504 
=== Usages ===
a611 v1553 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1540 #next: i1504  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1503 
=== Succesors ===
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?120 
guard: - 
address: v1553 
=== Succesors ===
next: i1505 
=== Usages ===
v618 
=== Predecessor ===
a1503 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?120 guard: - address: v1553 #next: i1505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1505 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
=== Succesors ===
next: v999 
=== Usages ===
v1554 v618 
=== Predecessor ===
i1504 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1541 #next: v999  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1505 
y: i1504 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1505 y: i1504  <|@  <|@
f <@*|@fixed>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v995 
falseSuccessor: v998 
=== Usages ===
=== Predecessor ===
i1505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v995 #falseSuccessor: v998  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598250064049195856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
v625 
=== Predecessor ===
v999 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid a611 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1503 
=== Succesors ===
=== Usages ===
v1554 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1503  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a611 
index: i1505 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a611 index: i1505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v995 
address: v1554 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v995 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v995 address: v1554 value: i1492 stateAfter: - lastLocationAccess: - #next: v867  <|@  <|@
tid ?388 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 i6 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?388 
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?388 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i1473 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1410 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid i1411 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -158491
stableDimension: 0
stamp: i32 [-158491] ⇊00000000fffd94e5 ⇈00000000fffd94e5
stampKind: i32
value: int[-158491|0xfffffffffffd94e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590313160471596175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1506 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1506  <|@  <|@
f <@~|@floating>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1494 
=== Succesors ===
=== Usages ===
a1506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1555 
=== Succesors ===
next: v1578 
=== Usages ===
a628 v1578 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1555 #next: v1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?120 
object: a1506 
=== Succesors ===
next: i284 
=== Usages ===
=== Predecessor ===
a1506 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?120 object: a1506 #next: i284  <|@  <|@
f <@~|@floating>@ <|@
tid a628 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1506 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1506  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i118 
y: i43 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i118 y: i43  <|@  <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@3175f4bf
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a628 a2 i282 a4 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a628 a2 i282 a4  <|@  <|@
tid ?290 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4229
stackSize: 0
=== Inputs ===
outerFrameState: ?149 
values: a567 a2 - a4 i119 
=== Succesors ===
=== Usages ===
?285 ?1304 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?149 values: a567 a2 - a4 i119  <|@  <|@
tid ?1304 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?290 
values: - - - - 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?290 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v632 
stateDuring: ?1304 
=== Succesors ===
next: v1011 
=== Usages ===
v286 
=== Predecessor ===
v1578 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v632 stateDuring: ?1304 #next: v1011  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i6 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i284 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v1009 
falseSuccessor: v1006 
=== Usages ===
=== Predecessor ===
i284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v1009 #falseSuccessor: v1006  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1011 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v1010  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1007 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1007  <|@  <|@
tid ?285 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?290 
values: - - - - i6 
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?290 values: - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 633
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?285 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4590313160471596175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1507 
=== Usages ===
=== Predecessor ===
v1011 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1507  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4230) [bci: 26]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1556 
=== Succesors ===
next: v140 
=== Usages ===
i118 
=== Predecessor ===
v1006 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1556 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i119 
y: i43 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i119 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
loopBegin: v117 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1507 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v988  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1406 
=== Usages ===
=== Predecessor ===
v987 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1406  <|@  <|@
f <@~|@floating>@ <|@
tid i1407 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -154131
stableDimension: 0
stamp: i32 [-154131] ⇊00000000fffda5ed ⇈00000000fffda5ed
stampKind: i32
value: int[-154131|0xfffffffffffda5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v983 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v982  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1404 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1404  <|@  <|@
f <@~|@floating>@ <|@
tid i1405 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152091
stableDimension: 0
stamp: i32 [-152091] ⇊00000000fffdade5 ⇈00000000fffdade5
stampKind: i32
value: int[-152091|0xfffffffffffdade5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v976  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1402 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1402  <|@  <|@
f <@~|@floating>@ <|@
tid i1403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -151315
stableDimension: 0
stamp: i32 [-151315] ⇊00000000fffdb0ed ⇈00000000fffdb0ed
stampKind: i32
value: int[-151315|0xfffffffffffdb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v958  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1396 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1396  <|@  <|@
f <@~|@floating>@ <|@
tid i1397 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148787
stableDimension: 0
stamp: i32 [-148787] ⇊00000000fffdbacd ⇈00000000fffdbacd
stampKind: i32
value: int[-148787|0xfffffffffffdbacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v946  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1392 
=== Usages ===
=== Predecessor ===
v945 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1392  <|@  <|@
f <@~|@floating>@ <|@
tid i1393 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148243
stableDimension: 0
stamp: i32 [-148243] ⇊00000000fffdbced ⇈00000000fffdbced
stampKind: i32
value: int[-148243|0xfffffffffffdbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v946 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v940  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1390 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1390  <|@  <|@
f <@~|@floating>@ <|@
tid i1391 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147507
stableDimension: 0
stamp: i32 [-147507] ⇊00000000fffdbfcd ⇈00000000fffdbfcd
stampKind: i32
value: int[-147507|0xfffffffffffdbfcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v940 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599071462262021218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: i1508 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: i1508  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
i1508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.type
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 42]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1557 
=== Succesors ===
next: v1016 
=== Usages ===
v143 
=== Predecessor ===
v124 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1557 #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1508 
y: i6 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1508 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v1012 
falseSuccessor: v1015 
=== Usages ===
=== Predecessor ===
i1508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v1012 #falseSuccessor: v1015  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599071462262021218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i146 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i146  <|@  <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@47b4cf08
stamp: void
targetMethod: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
=== Inputs ===
arguments: a567 a2 i118 i119 a4 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a567 a2 i118 i119 a4  <|@  <|@
tid ?1305 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 0
=== Inputs ===
outerFrameState: ?149 
values: - - - - - 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?149 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
bci: 54
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Curly.match0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v640 
stateDuring: ?1305 
=== Succesors ===
next: v360 
=== Usages ===
i85 
=== Predecessor ===
v1012 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v640 stateDuring: ?1305 #next: v360  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
i146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1414  <|@  <|@
f <@~|@floating>@ <|@
tid i1415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -163603
stableDimension: 0
stamp: i32 [-163603] ⇊00000000fffd80ed ⇈00000000fffd80ed
stampKind: i32
value: int[-163603|0xfffffffffffd80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v1015 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B36" "B17" "B34" "B32" "B30" "B24" "B43" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1387 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-163603 - -147211] ⇊00000000fffd80c5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1384 
values: i1391 i1393 i1397 i1399 i1403 i1405 i1407 i1411 i1415 
=== Succesors ===
=== Usages ===
v1389 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1384 values: i1391 i1393 i1397 i1399 i1403 i1405 i1407 i1411 i1415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1390 v1392 v1396 v1398 v1402 v1404 v1406 v1410 v1414 
=== Succesors ===
next: v1389 
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1390 v1392 v1396 v1398 v1402 v1404 v1406 v1410 v1414 #next: v1389  <|@  <|@
f <@*|@fixed>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?120 
actionAndReason: i1387 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?120 actionAndReason: i1387 speculation: a1312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B46" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602675401754492509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 i3 a4 i1492 - 
=== Succesors ===
=== Usages ===
v1339 v1510 i1512 i1515 v1576 v1522 i1524 v1577 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 i3 a4 i1492 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1460 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1491 
y: v1459 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1491 y: v1459  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.3334272631208172
=== Inputs ===
condition: v1460 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1460 #trueSuccessor: v101 #falseSuccessor: v104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1509 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1509  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1588 
=== Succesors ===
next: v1021 
=== Usages ===
v1469 
=== Predecessor ===
v101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1588 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1509 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1509  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1469 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
i1509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1469 #trueSuccessor: v1017 #falseSuccessor: v1020  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1510 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1510  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1585 
=== Succesors ===
next: v1031 
=== Usages ===
v1467 
=== Predecessor ===
v1017 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1585 #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1510 
y: v1465 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1510 y: v1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1467 
=== Succesors ===
trueSuccessor: v1027 
falseSuccessor: v1030 
=== Usages ===
=== Predecessor ===
v1510 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1467 #trueSuccessor: v1027 #falseSuccessor: v1030  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6 
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1477 
=== Succesors ===
trueSuccessor: v1035 
falseSuccessor: v1032 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1477 #trueSuccessor: v1035 #falseSuccessor: v1032  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid i1345 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -165139
stableDimension: 0
stamp: i32 [-165139] ⇊00000000fffd7aed ⇈00000000fffd7aed
stampKind: i32
value: int[-165139|0xfffffffffffd7aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1035 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1511 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1511  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1511 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1583 
=== Succesors ===
next: i1512 
=== Usages ===
a648 v1558 
=== Predecessor ===
v1032 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1583 #next: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1511 
=== Succesors ===
=== Usages ===
i1512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1558 
=== Succesors ===
next: v1046 
=== Usages ===
v299 v656 
=== Predecessor ===
a1511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1558 #next: v1046  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1512 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1512  <|@  <|@
f <@*|@fixed>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v299 
=== Succesors ===
trueSuccessor: v1042 
falseSuccessor: v1045 
=== Usages ===
=== Predecessor ===
i1512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v299 #trueSuccessor: v1042 #falseSuccessor: v1045  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1512 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1512  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v656 
=== Succesors ===
trueSuccessor: v1047 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v656 #trueSuccessor: v1047 #falseSuccessor: v1050  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1513 
=== Usages ===
i1513 
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1513  <|@  <|@
f <@~|@floating>@ <|@
tid a648 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1511 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1511  <|@  <|@
f <@~|@floating>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a648 
index: i3 
=== Succesors ===
=== Usages ===
i1513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a648 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1047 
address: v1559 
=== Succesors ===
next: v1056 
=== Usages ===
i664 j803 v872 
=== Predecessor ===
v1047 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1047 address: v1559 #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid i871 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] ⇊0000000000000100 ⇈0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1513 
y: i871 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1513 y: i871  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v872 
=== Succesors ===
trueSuccessor: v1052 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
i1513 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v872 #trueSuccessor: v1052 #falseSuccessor: v1055  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1514 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1514  <|@  <|@
f <@~|@floating>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
a1514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v1580 
=== Succesors ===
next: i1515 
=== Usages ===
v1561 v1560 
=== Predecessor ===
v1052 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1580 #next: i1515  <|@  <|@
f <@~|@floating>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1514 
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1560 
=== Succesors ===
next: v1066 
=== Usages ===
v674 
=== Predecessor ===
a1514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1560 #next: v1066  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/2034614602@5c2763a3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2105117569@79d0db9b
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1513 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1513  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i664 
y: i1515 
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i664 y: i1515  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v674 
=== Succesors ===
trueSuccessor: v1062 
falseSuccessor: v1065 
=== Usages ===
=== Predecessor ===
i1515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v674 #trueSuccessor: v1062 #falseSuccessor: v1065  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1516 
=== Usages ===
i1516 
=== Predecessor ===
v1066 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1516  <|@  <|@
f <@~|@floating>@ <|@
tid j803 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/2034614602@5c2763a3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2105117569@79d0db9b
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1513 
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1513  <|@  <|@
f <@~|@floating>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j803 
index: a1514 
=== Succesors ===
=== Usages ===
i1516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j803 index: a1514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1062 
address: v1561 
=== Succesors ===
next: v166 
=== Usages ===
i804 
=== Predecessor ===
v1062 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1062 address: v1561 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid i804 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/2034614602@5c2763a3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2105117569@79d0db9b
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1516 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1516  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i804 
y: i6 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i804 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.7644122540863267
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
i1516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593757714032403494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v920 
address: v1543 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v920 address: v1543 value: i1492 stateAfter: - lastLocationAccess: - #next: v868  <|@  <|@
tid ?402 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 i6 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?402 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?402 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid i1474 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1517 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1517  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
a1517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1562 
=== Succesors ===
next: v1576 
=== Usages ===
a693 v1576 
=== Predecessor ===
v165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1562 #next: v1576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
object: a1517 
=== Succesors ===
next: i170 
=== Usages ===
=== Predecessor ===
a1517 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?71 object: a1517 #next: i170  <|@  <|@
f <@~|@floating>@ <|@
tid a693 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1517 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1517  <|@  <|@
f <@~|@floating>@ <|@
tid i1476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i3 
y: i43 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i43  <|@  <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@109cebfa
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a693 a2 i1476 a4 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a693 a2 i1476 a4  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 - 
=== Succesors ===
=== Usages ===
?171 ?1308 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 -  <|@  <|@
tid ?1308 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?176 
values: - - - - 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?176 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v697 
stateDuring: ?1308 
=== Succesors ===
next: v1076 
=== Usages ===
?171 v172 
=== Predecessor ===
v1576 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v697 stateDuring: ?1308 #next: v1076  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?176 
values: - - - - i170 
=== Succesors ===
=== Usages ===
v1421 i1519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?176 values: - - - - i170  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i6 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i170 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1072 
=== Usages ===
=== Predecessor ===
i170 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v1075 #falseSuccessor: v1072  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1417 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1417  <|@  <|@
f <@~|@floating>@ <|@
tid i1418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178707
stableDimension: 0
stamp: i32 [-178707] ⇊00000000fffd45ed ⇈00000000fffd45ed
stampKind: i32
value: int[-178707|0xfffffffffffd45ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
v1075 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1518 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
=== Succesors ===
next: i1519 
=== Usages ===
a700 v1563 
=== Predecessor ===
v1072 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1540 #next: i1519  <|@  <|@
f <@~|@floating>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1518 
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1519 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?171 
guard: - 
address: v1563 
=== Succesors ===
next: i1520 
=== Usages ===
v707 
=== Predecessor ===
a1518 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?171 guard: - address: v1563 #next: i1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
=== Succesors ===
next: v1086 
=== Usages ===
v1564 v707 
=== Predecessor ===
i1519 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1541 #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1520 
y: i1519 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1520 y: i1519  <|@  <|@
f <@*|@fixed>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v707 
=== Succesors ===
trueSuccessor: v1082 
falseSuccessor: v1085 
=== Usages ===
=== Predecessor ===
i1520 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v707 #trueSuccessor: v1082 #falseSuccessor: v1085  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B93" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
v714 
=== Predecessor ===
v1086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid a700 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1518 
=== Succesors ===
=== Usages ===
v1564 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1518  <|@  <|@
f <@~|@floating>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a700 
index: i1520 
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a700 index: i1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1082 
address: v1564 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1082 address: v1564 value: i1492 stateAfter: - lastLocationAccess: - #next: v461  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v714 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1424 
=== Usages ===
=== Predecessor ===
v1086 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1424  <|@  <|@
f <@~|@floating>@ <|@
tid i1425 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -181275
stableDimension: 0
stamp: i32 [-181275] ⇊00000000fffd3be5 ⇈00000000fffd3be5
stampKind: i32
value: int[-181275|0xfffffffffffd3be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
v1085 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1419 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-181275 - -178707] ⇊00000000fffd00e5 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1416 
values: i1418 i1425 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1416 values: i1418 i1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1417 v1424 
=== Succesors ===
next: v1421 
=== Usages ===
i1419 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1417 v1424 #next: v1421  <|@  <|@
f <@*|@fixed>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?171 
actionAndReason: i1419 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?171 actionAndReason: i1419 speculation: a1312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1356  <|@  <|@
f <@~|@floating>@ <|@
tid i1357 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -172827
stableDimension: 0
stamp: i32 [-172827] ⇊00000000fffd5ce5 ⇈00000000fffd5ce5
stampKind: i32
value: int[-172827|0xfffffffffffd5ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1065 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid i1353 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -170259
stableDimension: 0
stamp: i32 [-170259] ⇊00000000fffd66ed ⇈00000000fffd66ed
stampKind: i32
value: int[-170259|0xfffffffffffd66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1055 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid i1351 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168219
stableDimension: 0
stamp: i32 [-168219] ⇊00000000fffd6ee5 ⇈00000000fffd6ee5
stampKind: i32
value: int[-168219|0xfffffffffffd6ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1050 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1348 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1348  <|@  <|@
f <@~|@floating>@ <|@
tid i1349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -167443
stableDimension: 0
stamp: i32 [-167443] ⇊00000000fffd71ed ⇈00000000fffd71ed
stampKind: i32
value: int[-167443|0xfffffffffffd71ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1045 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid i1343 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164915
stableDimension: 0
stamp: i32 [-164915] ⇊00000000fffd7bcd ⇈00000000fffd7bcd
stampKind: i32
value: int[-164915|0xfffffffffffd7bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1030 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid i1336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164371
stableDimension: 0
stamp: i32 [-164371] ⇊00000000fffd7ded ⇈00000000fffd7ded
stampKind: i32
value: int[-164371|0xfffffffffffd7ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1020 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B69" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599673295418982517
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1491 
y: v1461 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1491 y: v1461  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Single; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1462 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1462 #trueSuccessor: v110 #falseSuccessor: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Single; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1521 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1521  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1587 
=== Succesors ===
next: v1091 
=== Usages ===
v182 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1587 #next: v1091  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1521 
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1521  <|@  <|@
f <@*|@fixed>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v1087 
falseSuccessor: v1090 
=== Usages ===
=== Predecessor ===
i1521 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v1087 #falseSuccessor: v1090  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1586 
=== Succesors ===
next: v1101 
=== Usages ===
v1468 
=== Predecessor ===
v1087 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1586 #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1522 
y: v1465 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1522 y: v1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1468 
=== Succesors ===
trueSuccessor: v1097 
falseSuccessor: v1100 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1468 #trueSuccessor: v1097 #falseSuccessor: v1100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1106 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1106  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6 
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v1105 
falseSuccessor: v1102 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v1105 #falseSuccessor: v1102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid i1367 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -184083
stableDimension: 0
stamp: i32 [-184083] ⇊00000000fffd30ed ⇈00000000fffd30ed
stampKind: i32
value: int[-184083|0xfffffffffffd30ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1523 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1523  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1523 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1584 
=== Succesors ===
next: i1524 
=== Usages ===
a722 v1565 
=== Predecessor ===
v1102 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1584 #next: i1524  <|@  <|@
f <@~|@floating>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1523 
=== Succesors ===
=== Usages ===
i1524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1565 
=== Succesors ===
next: v1116 
=== Usages ===
v308 v730 
=== Predecessor ===
a1523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1565 #next: v1116  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1524 
=== Succesors ===
=== Usages ===
v1116 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v1112 
falseSuccessor: v1115 
=== Usages ===
=== Predecessor ===
i1524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v1112 #falseSuccessor: v1115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1121  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1524 
=== Succesors ===
=== Usages ===
v1121 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v730 
=== Succesors ===
trueSuccessor: v1117 
falseSuccessor: v1120 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v730 #trueSuccessor: v1117 #falseSuccessor: v1120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1525 
=== Usages ===
i1525 
=== Predecessor ===
v1121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1525  <|@  <|@
f <@~|@floating>@ <|@
tid a722 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1523 
=== Succesors ===
=== Usages ===
v1566 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1523  <|@  <|@
f <@~|@floating>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a722 
index: i3 
=== Succesors ===
=== Usages ===
i1525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a722 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1117 
address: v1566 
=== Succesors ===
next: i1526 
=== Usages ===
i738 
=== Predecessor ===
v1117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1117 address: v1566 #next: i1526  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
i1526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Single.c
nodeSourcePosition: at java.util.regex.Pattern$Single.isSatisfiedBy(Pattern.java:3826) [bci: 2]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1581 
=== Succesors ===
next: v193 
=== Usages ===
v265 
=== Predecessor ===
i1525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1581 #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/2034614602@5c2763a3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2105117569@79d0db9b
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1525 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1525  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Single.isSatisfiedBy(Pattern.java:3826) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i738 
y: i1526 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i738 y: i1526  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.2357323300188121
=== Inputs ===
condition: v265 
=== Succesors ===
trueSuccessor: v192 
falseSuccessor: v191 
=== Usages ===
=== Predecessor ===
i1526 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v265 #trueSuccessor: v192 #falseSuccessor: v191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1527 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1527  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
a1527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1579 
=== Succesors ===
next: v1577 
=== Usages ===
a743 v1577 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1579 #next: v1577  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
object: a1527 
=== Succesors ===
next: i197 
=== Usages ===
=== Predecessor ===
a1527 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?71 object: a1527 #next: i197  <|@  <|@
f <@~|@floating>@ <|@
tid a743 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1527 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1527  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i3 
y: i43 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i43  <|@  <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@43ac69d
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a743 a2 i195 a4 
=== Succesors ===
=== Usages ===
i197 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a743 a2 i195 a4  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 - 
=== Succesors ===
=== Usages ===
?198 ?1307 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 -  <|@  <|@
tid ?1307 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?203 
values: - - - - 
=== Succesors ===
=== Usages ===
i197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v747 
stateDuring: ?1307 
=== Succesors ===
next: v1131 
=== Usages ===
?198 v199 
=== Predecessor ===
v1577 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v747 stateDuring: ?1307 #next: v1131  <|@  <|@
tid ?198 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?203 
values: - - - - i197 
=== Succesors ===
=== Usages ===
v1431 i1529 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: - - - - i197  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i6 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i197 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v1130 
falseSuccessor: v1127 
=== Usages ===
=== Predecessor ===
i197 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v1130 #falseSuccessor: v1127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1427 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1427  <|@  <|@
f <@~|@floating>@ <|@
tid i1428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -191507
stableDimension: 0
stamp: i32 [-191507] ⇊00000000fffd13ed ⇈00000000fffd13ed
stampKind: i32
value: int[-191507|0xfffffffffffd13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1528 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
=== Succesors ===
next: i1529 
=== Usages ===
a750 v1567 
=== Predecessor ===
v1127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1540 #next: i1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1528 
=== Succesors ===
=== Usages ===
i1529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?198 
guard: - 
address: v1567 
=== Succesors ===
next: i1530 
=== Usages ===
v757 
=== Predecessor ===
a1528 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?198 guard: - address: v1567 #next: i1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
=== Succesors ===
next: v1141 
=== Usages ===
v1568 v757 
=== Predecessor ===
i1529 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1541 #next: v1141  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1530 
y: i1529 
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1530 y: i1529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v757 
=== Succesors ===
trueSuccessor: v1137 
falseSuccessor: v1140 
=== Usages ===
=== Predecessor ===
i1530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v757 #trueSuccessor: v1137 #falseSuccessor: v1140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
v764 
=== Predecessor ===
v1141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid a750 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1528 
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1528  <|@  <|@
f <@~|@floating>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a750 
index: i1530 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a750 index: i1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1137 
address: v1568 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v1137 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1137 address: v1568 value: i1492 stateAfter: - lastLocationAccess: - #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1434 
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1434  <|@  <|@
f <@~|@floating>@ <|@
tid i1435 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -194075
stableDimension: 0
stamp: i32 [-194075] ⇊00000000fffd09e5 ⇈00000000fffd09e5
stampKind: i32
value: int[-194075|0xfffffffffffd09e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
v1140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B77" "B80" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1429 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-194075 - -191507] ⇊00000000fffd00e5 ⇈00000000fffd1ffd
valueDescription: i32
=== Inputs ===
merge: v1426 
values: i1428 i1435 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1426 values: i1428 i1435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1427 v1434 
=== Succesors ===
next: v1431 
=== Usages ===
i1429 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1427 v1434 #next: v1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?198 
actionAndReason: i1429 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?198 actionAndReason: i1429 speculation: a1312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593754906841726413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v920 
address: v1543 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v920 address: v1543 value: i1492 stateAfter: - lastLocationAccess: - #next: v869  <|@  <|@
tid ?416 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 i6 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?416 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?416 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i1475 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1372 
=== Usages ===
=== Predecessor ===
v1121 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid i1373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -187163
stableDimension: 0
stamp: i32 [-187163] ⇊00000000fffd24e5 ⇈00000000fffd24e5
stampKind: i32
value: int[-187163|0xfffffffffffd24e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1370 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1370  <|@  <|@
f <@~|@floating>@ <|@
tid i1371 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -186387
stableDimension: 0
stamp: i32 [-186387] ⇊00000000fffd27ed ⇈00000000fffd27ed
stampKind: i32
value: int[-186387|0xfffffffffffd27ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid i1365 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -183859
stableDimension: 0
stamp: i32 [-183859] ⇊00000000fffd31cd ⇈00000000fffd31cd
stampKind: i32
value: int[-183859|0xfffffffffffd31cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1360  <|@  <|@
f <@~|@floating>@ <|@
tid i1361 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -183315
stableDimension: 0
stamp: i32 [-183315] ⇊00000000fffd33ed ⇈00000000fffd33ed
stampKind: i32
value: int[-183315|0xfffffffffffd33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" "B49" "B65" "B64" "B63" "B62" "B86" "B85" "B72" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1337 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-190731 - -164371] ⇊00000000fffd00c5 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1334 
values: i1336 i1343 i1345 i1349 i1351 i1353 i1357 i1361 i1365 i1367 i1371 i1373 
=== Succesors ===
=== Usages ===
v1339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1334 values: i1336 i1343 i1345 i1349 i1351 i1353 i1357 i1361 i1365 i1367 i1371 i1373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1335 v1342 v1344 v1348 v1350 v1352 v1356 v1360 v1364 v1366 v1370 v1372 
=== Succesors ===
next: v1339 
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1335 v1342 v1344 v1348 v1350 v1352 v1356 v1360 v1364 v1366 v1370 v1372 #next: v1339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
actionAndReason: i1337 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1334 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?71 actionAndReason: i1337 speculation: a1312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i74 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i74  <|@  <|@
f <@~|@floating>@ <|@
tid a1582 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1490 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1490  <|@  <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1af41aa9
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1582 a2 i3 a4 
=== Succesors ===
=== Usages ===
i74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1582 a2 i3 a4  <|@  <|@
tid ?1306 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 - 
=== Succesors ===
=== Usages ===
i74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i74 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v774 
stateDuring: ?1306 
=== Succesors ===
next: v84 
=== Usages ===
i85 
=== Predecessor ===
v113 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v774 stateDuring: ?1306 #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
i74 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B42" 
    successors "B90" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602072300012559516
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v82 
values: i74 i146 
=== Succesors ===
=== Usages ===
?83 v37 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v82 values: i74 i146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v360 
=== Succesors ===
next: a1531 
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v360 #next: a1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
=== Succesors ===
next: i1532 
=== Usages ===
a776 v1569 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1540 #next: i1532  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 - i85 
=== Succesors ===
=== Usages ===
v1381 i1532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 - i85  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1531 
=== Succesors ===
=== Usages ===
i1532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v1569 
=== Succesors ===
next: i1533 
=== Usages ===
v783 
=== Predecessor ===
a1531 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v1569 #next: i1533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
=== Succesors ===
next: v1151 
=== Usages ===
v1570 v783 
=== Predecessor ===
i1532 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1541 #next: v1151  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1533 
y: i1532 
=== Succesors ===
=== Usages ===
v1151 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1533 y: i1532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v783 
=== Succesors ===
trueSuccessor: v1147 
falseSuccessor: v1150 
=== Usages ===
=== Predecessor ===
i1533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v783 #trueSuccessor: v1147 #falseSuccessor: v1150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602072300012559516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
v790 
=== Predecessor ===
v1151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid a776 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1531 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1531  <|@  <|@
f <@~|@floating>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a776 
index: i1533 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a776 index: i1533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1147 
address: v1570 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1147 address: v1570 value: i1492 stateAfter: - lastLocationAccess: - #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i6 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i85 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
trueSuccessorProbability: 0.7107110940891102
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v423 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v38 #falseSuccessor: v423  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599642076459069787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v866  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 i6 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?79 
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?79 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4594028467397514883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B79" "B59" 
    successors "B94" 
    xhandlers
    flags 
    probability 4596857775276552404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v425 v427 v461 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v425 v427 v461 #next: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors 
    xhandlers
    flags 
    probability 4596857775276552404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 57]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1381 
=== Usages ===
=== Predecessor ===
v1151 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1381  <|@  <|@
f <@~|@floating>@ <|@
tid i1383 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -200731
stableDimension: 0
stamp: i32 [-200731] ⇊00000000fffcefe5 ⇈00000000fffcefe5
stampKind: i32
value: int[-200731|0xfffffffffffcefe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?83 
actionAndReason: i1383 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?83 actionAndReason: i1383 speculation: a1312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1330 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1330  <|@  <|@
f <@~|@floating>@ <|@
tid i1331 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -142875
stableDimension: 0
stamp: i32 [-142875] ⇊00000000fffdd1e5 ⇈00000000fffdd1e5
stampKind: i32
value: int[-142875|0xfffffffffffdd1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1324  <|@  <|@
f <@~|@floating>@ <|@
tid i1325 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -136499
stableDimension: 0
stamp: i32 [-136499] ⇊00000000fffdeacd ⇈00000000fffdeacd
stampKind: i32
value: int[-136499|0xfffffffffffdeacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid i1319 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -127515
stableDimension: 0
stamp: i32 [-127515] ⇊00000000fffe0de5 ⇈00000000fffe0de5
stampKind: i32
value: int[-127515|0xfffffffffffe0de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1310 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid i1311 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124435
stableDimension: 0
stamp: i32 [-124435] ⇊00000000fffe19ed ⇈00000000fffe19ed
stampKind: i32
value: int[-124435|0xfffffffffffe19ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" "B97" "B96" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1313 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-145419 - -124435] ⇊00000000fffc00c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1309 
values: i1311 i1319 i1325 i1331 
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1309 values: i1311 i1319 i1325 i1331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1310 v1318 v1324 v1330 
=== Succesors ===
next: v1315 
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1310 v1318 v1324 v1330 #next: v1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i1313 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i1313 speculation: a1312  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a1312 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 v1431 v1381 v1339 v1389 v1421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i44 v46 v47 i139 i282 i1475 i195 i1474 i1476 i1473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1306 ?11 v520 ?26 ?79 ?81 v1556 v632 ?71 v774 ?1303 ?388 ?83 ?149 ?402 ?176 v697 ?203 v747 ?120 v640 ?290 v1547 ?416 v1540 v1587 v1588 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1303 ?11 v520 ?26 v774 ?81 v564 ?71 i118 v304 i195 v730 v299 v1559 v1566 v182 v308 v656 v1469 i1476 v1477 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?1303 ?11 v520 ?26 v774 ?81 ?71 v640 v697 v747 ?120 v632 ?290 v1574 v1548 v1583 v1584 v1585 v1586 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$Branch;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1303 ?11 v1534 v1535 v1538 ?26 ?81 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 v27 v37 i119 v338 v143 ?416 v163 v172 ?402 v286 v199 ?388 v304 v1477 ?26 ?285 ?79 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
v0 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@69ecbc6c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B91" "B23" "B55" "B82" 
    successors "B2" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i10 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i6 i44 i1473 i1474 i1475 
=== Succesors ===
=== Usages ===
?11 v13 v1537 ?26 v523 ?81 i44 ?1303 i1473 i1474 i1475 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i6 i44 i1473 i1474 i1475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.7098408589302279
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 4
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v8 
=== Succesors ===
next: i1480 
=== Usages ===
i10 v30 v40 v45 v377 v391 v405 v1150 v1075 v878 v1140 v888 v1105 v1130 v903 v908 v1045 v1120 v923 v1115 v1090 v940 v946 v1065 v958 v964 v1100 v976 v982 v988 v1055 v998 v1050 v1010 v1015 v1020 v1085 v1030 v1035 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v8 #next: i1480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1480 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.size
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
=== Succesors ===
next: v879 
=== Usages ===
v13 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1534 #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i1480 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i1480  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4602
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
v1315 i1482 a1485 v1575 a1487 i1488 v1491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v875 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
i1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v875 #falseSuccessor: v878  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1481 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1481 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.atoms
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
nullCheck: false
stamp: n [Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1535 
=== Succesors ===
next: i1482 
=== Usages ===
a490 v1536 
=== Predecessor ===
v875 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1535 #next: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1481 
=== Succesors ===
=== Usages ===
i1482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1482 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1536 
=== Succesors ===
next: v889 
=== Usages ===
v523 
=== Predecessor ===
a1481 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1536 #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i1482 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i1482  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v523 
=== Succesors ===
trueSuccessor: v885 
falseSuccessor: v888 
=== Usages ===
=== Predecessor ===
i1482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v523 #trueSuccessor: v885 #falseSuccessor: v888  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v6|DWORD[.] * 8 + 12]) size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1483 
=== Usages ===
a1483 
=== Predecessor ===
v889 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1483  <|@  <|@
f <@~|@floating>@ <|@
tid a490 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
op: Uncompress
stamp: a [Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
v1537 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1537 <|@
result [v7|QWORD[.] + v4|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a490 
index: i10 
=== Succesors ===
=== Usages ===
a1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a490 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1483 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: v885 
address: v1537 
=== Succesors ===
next: v21 
=== Usages ===
v792 ?83 v1541 v1544 v1571 ?203 ?388 ?79 ?402 ?149 ?71 ?176 ?1306 ?416 
=== Predecessor ===
v885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v885 address: v1537 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
stamp: void
=== Inputs ===
value: a1483 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1483  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
stamp: void
trueSuccessorProbability: 0.4158663727065506
=== Inputs ===
condition: v792 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
a1483 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v792 #trueSuccessor: v19 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4158663727065506 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604579926528802028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1484 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1484 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.conn
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 23]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1538 
=== Succesors ===
next: a1485 
=== Usages ===
v1539 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1538 #next: a1485  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
result [v9|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1484 
=== Succesors ===
=== Usages ===
a1485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1485 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
nullCheck: true
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1539 
=== Succesors ===
next: v1575 
=== Usages ===
a516 v1575 
=== Predecessor ===
a1484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1539 #next: v1575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
object: a1485 
=== Succesors ===
next: i25 
=== Usages ===
=== Predecessor ===
a1485 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?11 object: a1485 #next: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a516 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1485 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1485  <|@  <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@7a1dd5e9
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a516 a2 i3 a4 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a516 a2 i3 a4  <|@  <|@
tid ?1303 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i25 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v520 
stateDuring: ?1303 
=== Succesors ===
next: v904 
=== Usages ===
v27 
=== Predecessor ===
v1575 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v520 stateDuring: ?1303 #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i6 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i25 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v903 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
i25 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v903 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v10|DWORD[.] = MOV [v9|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v10|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v901  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 i6 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10 i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 521
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?26 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -133395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4604579926528802028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4605) [bci: 39]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1486 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid v1571 <|@
result [v8|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1483 
=== Succesors ===
=== Usages ===
v1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1486 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1571 
=== Succesors ===
next: v909 
=== Usages ===
v1456 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1571 #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1455 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1456 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1486 
y: v1455 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1486 y: v1455  <|@  <|@
f <@*|@fixed>@ <|@
tid v909 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1456 
=== Succesors ===
trueSuccessor: v905 
falseSuccessor: v908 
=== Usages ===
=== Predecessor ===
v1486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1456 #trueSuccessor: v905 #falseSuccessor: v908  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1487 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1487  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
result [v1|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1487 a1503 a1518 a1528 a1531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1487 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1540 
=== Succesors ===
next: i1488 
=== Usages ===
a540 v1542 
=== Predecessor ===
v905 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1540 #next: i1488  <|@  <|@
f <@~|@floating>@ <|@
tid v1542 <|@
result [v13|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1487 
=== Succesors ===
=== Usages ===
i1488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1488 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1542 
=== Succesors ===
next: i1489 
=== Usages ===
v766 
=== Predecessor ===
a1487 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1542 #next: i1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
result [v8|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1483 
=== Succesors ===
=== Usages ===
i1489 i1505 i1520 i1530 i1533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1489 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
=== Succesors ===
next: v924 
=== Usages ===
v766 v1543 
=== Predecessor ===
i1488 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1541 #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1489 
y: i1488 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1489 y: i1488  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v766 
=== Succesors ===
trueSuccessor: v920 
falseSuccessor: v923 
=== Usages ===
=== Predecessor ===
i1489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v766 #trueSuccessor: v920 #falseSuccessor: v923  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v13|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1490 
=== Usages ===
v690 v564 i1492 v773 
=== Predecessor ===
v924 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1483 
=== Succesors ===
=== Usages ===
a1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1490 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1544 
=== Succesors ===
next: v1491 
=== Usages ===
a567 v1572 v1545 v1546 v1557 v1562 v1579 v1580 v1581 a1582 
=== Predecessor ===
v920 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1544 #next: v1491  <|@  <|@
f <@~|@floating>@ <|@
tid v1572 <|@
result [v16|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1491 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v1572 
=== Succesors ===
next: i1492 
=== Usages ===
v1462 v1458 v1460 
=== Predecessor ===
a1490 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v1572 #next: i1492  <|@  <|@
f <@~|@floating>@ <|@
tid a540 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1487 
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1487  <|@  <|@
f <@~|@floating>@ <|@
tid v1543 <|@
result [v18|QWORD[.] + v15|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a540 
index: i1489 
=== Succesors ===
=== Usages ===
v564 i1492 v690 v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a540 index: i1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1492 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v920 
address: v1543 
=== Succesors ===
next: v564 
=== Usages ===
?71 ?1306 v790 ?79 ?83 ?203 ?176 ?149 v625 ?388 v690 ?402 v773 ?416 v764 v714 
=== Predecessor ===
v1491 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v920 address: v1543 #next: v564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v920 
address: v1543 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
i1492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v920 address: v1543 value: i3 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v1457 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1491 
y: v1457 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1491 y: v1457  <|@  <|@
tid ?81 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4606
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i10 
=== Succesors ===
=== Usages ===
?71 ?1306 ?79 ?83 ?203 ?176 ?149 ?388 ?402 ?416 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i10  <|@  <|@
f <@~|@floating>@ <|@
tid v1465 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 v1467 v1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.49957695833039556
=== Inputs ===
condition: v1458 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1458 #trueSuccessor: v89 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v15|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v15|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49957695833039556 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602660178734832200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 - 
=== Succesors ===
=== Usages ===
?120 ?1305 ?290 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 -  <|@  <|@
f <@~|@floating>@ <|@
tid a567 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1490 
=== Succesors ===
=== Usages ===
?120 ?290 v640 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
result [v16|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
i1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" 
    successors "B12" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4603870455259032939
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i118 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v117 
values: i3 i1507 
=== Succesors ===
=== Usages ===
?120 v640 i282 v269 v342 v1550 v338 v593 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v117 values: i3 i1507  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v117 
values: i6 i139 
=== Succesors ===
=== Usages ===
?120 v122 v640 ?290 i139 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v117 values: i6 i139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2672188789668644
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v116 
=== Succesors ===
next: i1493 
=== Usages ===
i118 i119 v124 v134 v140 v1009 v975 v987 v939 v945 v981 v957 v963 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v116 #next: i1493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1493 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmin
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 6]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1545 
=== Succesors ===
next: v128 
=== Usages ===
v122 
=== Predecessor ===
v117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1545 #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i1493 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i1493  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4228
stackSize: 0
=== Inputs ===
outerFrameState: ?149 
values: a567 a2 i118 a4 i119 
=== Succesors ===
=== Usages ===
v1389 v1495 v1497 i1499 i1504 v1578 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?149 values: a567 a2 i118 a4 i119  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.5259333752357008
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
i1493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v123 #falseSuccessor: v124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD, v22|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV [v16|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5259333752357008 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 12]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1494 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1494  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
result [v16|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
a1494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1494 <|@
result v24|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 13]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1546 
=== Succesors ===
next: v1495 
=== Usages ===
v1573 v1555 v1551 
=== Predecessor ===
v123 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1546 #next: v1495  <|@  <|@
f <@~|@floating>@ <|@
tid v1573 <|@
result [v24|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1494 
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1495 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?120 
guard: - 
address: v1573 
=== Succesors ===
next: v941 
=== Usages ===
v1464 
=== Predecessor ===
a1494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?120 guard: - address: v1573 #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1464 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1495 
y: v1463 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1495 y: v1463  <|@  <|@
f <@*|@fixed>@ <|@
tid v941 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1464 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v939 
=== Usages ===
=== Predecessor ===
v1495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1464 #trueSuccessor: v936 #falseSuccessor: v939  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v16|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v24|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1496 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1496  <|@  <|@
f <@~|@floating>@ <|@
tid v1547 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1496 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1547 
=== Succesors ===
next: v947 
=== Usages ===
v269 
=== Predecessor ===
v936 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1547 #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v269 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i1496 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i118 y: i1496  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v269 
=== Succesors ===
trueSuccessor: v942 
falseSuccessor: v945 
=== Usages ===
=== Predecessor ===
i1496 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v269 #trueSuccessor: v942 #falseSuccessor: v945  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid v1574 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1497 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?120 
guard: - 
address: v1574 
=== Succesors ===
next: v959 
=== Usages ===
v1466 
=== Predecessor ===
v942 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?120 guard: - address: v1574 #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid v1466 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1497 
y: v1465 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1497 y: v1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1466 
=== Succesors ===
trueSuccessor: v954 
falseSuccessor: v957 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1466 #trueSuccessor: v954 #falseSuccessor: v957  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i6 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i118 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v963 
falseSuccessor: v960 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v963 #falseSuccessor: v960  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v964 
=== Usages ===
=== Predecessor ===
v965 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v964  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1398 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid i1399 <|@
result int[-149011|0xfffffffffffdb9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149011
stableDimension: 0
stamp: i32 [-149011] ⇊00000000fffdb9ed ⇈00000000fffdb9ed
stampKind: i32
value: int[-149011|0xfffffffffffdb9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v964 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149011|0xfffffffffffdb9ed]] destination: B17 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1498 
=== Usages ===
=== Predecessor ===
v965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1498  <|@  <|@
f <@~|@floating>@ <|@
tid v1548 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1498 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1548 
=== Succesors ===
next: i1499 
=== Usages ===
a585 v1549 
=== Predecessor ===
v960 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1548 #next: i1499  <|@  <|@
f <@~|@floating>@ <|@
tid v1549 <|@
result [v25|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1498 
=== Succesors ===
=== Usages ===
i1499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1499 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?120 
guard: - 
address: v1549 
=== Succesors ===
next: v977 
=== Usages ===
v342 v593 
=== Predecessor ===
a1498 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?120 guard: - address: v1549 #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i1499 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i118 y: i1499  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v975 
=== Usages ===
=== Predecessor ===
i1499 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v972 #falseSuccessor: v975  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i1499 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i118 y: i1499  <|@  <|@
f <@*|@fixed>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v593 
=== Succesors ===
trueSuccessor: v978 
falseSuccessor: v981 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v593 #trueSuccessor: v978 #falseSuccessor: v981  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1500 
=== Usages ===
i1500 
=== Predecessor ===
v983 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1500  <|@  <|@
f <@~|@floating>@ <|@
tid a585 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1498 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1498  <|@  <|@
f <@~|@floating>@ <|@
tid v1550 <|@
result [v27|QWORD[.] + v21|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a585 
index: i118 
=== Succesors ===
=== Usages ===
i1500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a585 index: i118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1500 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v978 
address: v1550 
=== Succesors ===
next: v989 
=== Usages ===
v874 j800 
=== Predecessor ===
v978 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v978 address: v1550 #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid i873 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1500 
y: i873 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1500 y: i873  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v874 
=== Succesors ===
trueSuccessor: v984 
falseSuccessor: v987 
=== Usages ===
=== Predecessor ===
i1500 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v874 #trueSuccessor: v984 #falseSuccessor: v987  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSX [v27|QWORD[.] + v21|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1501 
=== Usages ===
i1502 
=== Predecessor ===
v989 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1501  <|@  <|@
f <@~|@floating>@ <|@
tid v1551 <|@
result [v24|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1494 
=== Succesors ===
=== Usages ===
i1501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1501 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1551 
=== Succesors ===
next: i1502 
=== Usages ===
v350 
=== Predecessor ===
v984 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1551 #next: i1502  <|@  <|@
f <@~|@floating>@ <|@
tid a357 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/2034614602@5c2763a3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2105117569@79d0db9b
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1500 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1500  <|@  <|@
f <@~|@floating>@ <|@
tid v1552 <|@
result [v30|QWORD[.] + v31|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a357 
index: j800 
=== Succesors ===
=== Usages ===
i1502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a357 index: j800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1502 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v984 
address: v1552 
=== Succesors ===
next: v280 
=== Usages ===
v350 
=== Predecessor ===
i1501 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v984 address: v1552 #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v350 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
x: i1501 
y: i1502 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1501 y: i1502  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.7642676699811879
=== Inputs ===
condition: v350 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
i1502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v350 #trueSuccessor: v134 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v24|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVZX v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: [v30|QWORD[.] + v31|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7642676699811879 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598250064049195856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: a1503 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1503 <|@
result v32|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
=== Succesors ===
next: i1504 
=== Usages ===
a611 v1553 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1540 #next: i1504  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
result [v32|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1503 
=== Succesors ===
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1504 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?120 
guard: - 
address: v1553 
=== Succesors ===
next: i1505 
=== Usages ===
v618 
=== Predecessor ===
a1503 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?120 guard: - address: v1553 #next: i1505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1505 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
=== Succesors ===
next: v999 
=== Usages ===
v1554 v618 
=== Predecessor ===
i1504 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1541 #next: v999  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1505 
y: i1504 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1505 y: i1504  <|@  <|@
f <@*|@fixed>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v618 
=== Succesors ===
trueSuccessor: v995 
falseSuccessor: v998 
=== Usages ===
=== Predecessor ===
i1505 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v618 #trueSuccessor: v995 #falseSuccessor: v998  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598250064049195856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
v625 
=== Predecessor ===
v999 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
f <@~|@floating>@ <|@
tid a611 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1503 
=== Succesors ===
=== Usages ===
v1554 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1503  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
result [v35|QWORD[.] + v34|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a611 
index: i1505 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a611 index: i1505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v995 
address: v1554 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v995 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v995 address: v1554 value: i1492 stateAfter: - lastLocationAccess: - #next: v867  <|@  <|@
tid ?388 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 i6 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?388 
=== Succesors ===
next: v377 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?388 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i1473 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[.] + v34|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD] destination: B23 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1410 
=== Usages ===
=== Predecessor ===
v999 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1410  <|@  <|@
f <@~|@floating>@ <|@
tid i1411 <|@
result int[-158491|0xfffffffffffd94e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -158491
stableDimension: 0
stamp: i32 [-158491] ⇊00000000fffd94e5 ⇈00000000fffd94e5
stampKind: i32
value: int[-158491|0xfffffffffffd94e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v998 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-158491|0xfffffffffffd94e5]] destination: B24 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590313160471596175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1506 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1506  <|@  <|@
f <@~|@floating>@ <|@
tid v1555 <|@
result [v24|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1494 
=== Succesors ===
=== Usages ===
a1506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1506 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1555 
=== Succesors ===
next: v1578 
=== Usages ===
a628 v1578 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1555 #next: v1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?120 
object: a1506 
=== Succesors ===
next: i284 
=== Usages ===
=== Predecessor ===
a1506 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?120 object: a1506 #next: i284  <|@  <|@
f <@~|@floating>@ <|@
tid a628 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1506 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1506  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i118 
y: i43 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i118 y: i43  <|@  <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@3175f4bf
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a628 a2 i282 a4 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a628 a2 i282 a4  <|@  <|@
tid ?290 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4229
stackSize: 0
=== Inputs ===
outerFrameState: ?149 
values: a567 a2 - a4 i119 
=== Succesors ===
=== Usages ===
?285 ?1304 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?149 values: a567 a2 - a4 i119  <|@  <|@
tid ?1304 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?290 
values: - - - - 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?290 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i284 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v632 
stateDuring: ?1304 
=== Succesors ===
next: v1011 
=== Usages ===
v286 
=== Predecessor ===
v1578 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v632 stateDuring: ?1304 #next: v1011  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i6 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i284 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v286 
=== Succesors ===
trueSuccessor: v1009 
falseSuccessor: v1006 
=== Usages ===
=== Predecessor ===
i284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v286 #trueSuccessor: v1009 #falseSuccessor: v1006  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v24|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v20|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 19, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1011 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v1010  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1007 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1007  <|@  <|@
tid ?285 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?290 
values: - - - - i6 
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?290 values: - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 633
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?285 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -162067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v20|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4590313160471596175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1507 
=== Usages ===
=== Predecessor ===
v1011 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1507  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1507 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4230) [bci: 26]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1556 
=== Succesors ===
next: v140 
=== Usages ===
i118 
=== Predecessor ===
v1006 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1556 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i119 
y: i43 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i119 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
loopBegin: v117 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1507 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD, v42|DWORD] destination: B28 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v989 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v988  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1406 
=== Usages ===
=== Predecessor ===
v987 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1406  <|@  <|@
f <@~|@floating>@ <|@
tid i1407 <|@
result int[-154131|0xfffffffffffda5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -154131
stableDimension: 0
stamp: i32 [-154131] ⇊00000000fffda5ed ⇈00000000fffda5ed
stampKind: i32
value: int[-154131|0xfffffffffffda5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v988 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154131|0xfffffffffffda5ed]] destination: B30 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v983 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v982  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1404 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1404  <|@  <|@
f <@~|@floating>@ <|@
tid i1405 <|@
result int[-152091|0xfffffffffffdade5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -152091
stableDimension: 0
stamp: i32 [-152091] ⇊00000000fffdade5 ⇈00000000fffdade5
stampKind: i32
value: int[-152091|0xfffffffffffdade5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152091|0xfffffffffffdade5]] destination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v976  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1402 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1402  <|@  <|@
f <@~|@floating>@ <|@
tid i1403 <|@
result int[-151315|0xfffffffffffdb0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -151315
stableDimension: 0
stamp: i32 [-151315] ⇊00000000fffdb0ed ⇈00000000fffdb0ed
stampKind: i32
value: int[-151315|0xfffffffffffdb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-151315|0xfffffffffffdb0ed]] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v958  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1396 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1396  <|@  <|@
f <@~|@floating>@ <|@
tid i1397 <|@
result int[-148787|0xfffffffffffdbacd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148787
stableDimension: 0
stamp: i32 [-148787] ⇊00000000fffdbacd ⇈00000000fffdbacd
stampKind: i32
value: int[-148787|0xfffffffffffdbacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148787|0xfffffffffffdbacd]] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v946  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1392 
=== Usages ===
=== Predecessor ===
v945 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1392  <|@  <|@
f <@~|@floating>@ <|@
tid i1393 <|@
result int[-148243|0xfffffffffffdbced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -148243
stableDimension: 0
stamp: i32 [-148243] ⇊00000000fffdbced ⇈00000000fffdbced
stampKind: i32
value: int[-148243|0xfffffffffffdbced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v946 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148243|0xfffffffffffdbced]] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: v940  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1390 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1390  <|@  <|@
f <@~|@floating>@ <|@
tid i1391 <|@
result int[-147507|0xfffffffffffdbfcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -147507
stableDimension: 0
stamp: i32 [-147507] ⇊00000000fffdbfcd ⇈00000000fffdbfcd
stampKind: i32
value: int[-147507|0xfffffffffffdbfcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v940 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147507|0xfffffffffffdbfcd]] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599071462262021218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v117 
=== Succesors ===
next: i1508 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v117 #next: i1508  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
result [v16|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
i1508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1508 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.type
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 42]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1557 
=== Succesors ===
next: v1016 
=== Usages ===
v143 
=== Predecessor ===
v124 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1557 #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1508 
y: i6 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1508 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1016 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v1012 
falseSuccessor: v1015 
=== Usages ===
=== Predecessor ===
i1508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v1012 #falseSuccessor: v1015  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v16|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599071462262021218
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i146 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i146  <|@  <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@47b4cf08
stamp: void
targetMethod: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
=== Inputs ===
arguments: a567 a2 i118 i119 a4 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a567 a2 i118 i119 a4  <|@  <|@
tid ?1305 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 0
=== Inputs ===
outerFrameState: ?149 
values: - - - - - 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?149 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i146 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 54
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Curly.match0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v640 
stateDuring: ?1305 
=== Succesors ===
next: v360 
=== Usages ===
i85 
=== Predecessor ===
v1012 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v640 stateDuring: ?1305 #next: v360  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
i146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:54, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B42 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1414  <|@  <|@
f <@~|@floating>@ <|@
tid i1415 <|@
result int[-163603|0xfffffffffffd80ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -163603
stableDimension: 0
stamp: i32 [-163603] ⇊00000000fffd80ed ⇈00000000fffd80ed
stampKind: i32
value: int[-163603|0xfffffffffffd80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
v1015 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-163603|0xfffffffffffd80ed]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B36" "B17" "B34" "B32" "B30" "B24" "B43" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1387 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-163603 - -147211] ⇊00000000fffd80c5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1384 
values: i1391 i1393 i1397 i1399 i1403 i1405 i1407 i1411 i1415 
=== Succesors ===
=== Usages ===
v1389 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1384 values: i1391 i1393 i1397 i1399 i1403 i1405 i1407 i1411 i1415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1390 v1392 v1396 v1398 v1402 v1404 v1406 v1410 v1414 
=== Succesors ===
next: v1389 
=== Usages ===
i1387 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1390 v1392 v1396 v1398 v1402 v1404 v1406 v1410 v1414 #next: v1389  <|@  <|@
f <@*|@fixed>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?120 
actionAndReason: i1387 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?120 actionAndReason: i1387 speculation: a1312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:3, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B46" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602675401754492509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 i3 a4 i1492 - 
=== Succesors ===
=== Usages ===
v1339 v1510 i1512 i1515 v1576 v1522 i1524 v1577 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 i3 a4 i1492 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1459 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1460 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1491 
y: v1459 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1491 y: v1459  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.3334272631208172
=== Inputs ===
condition: v1460 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1460 #trueSuccessor: v101 #falseSuccessor: v104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3334272631208172 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1509 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1509  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1509 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1588 
=== Succesors ===
next: v1021 
=== Usages ===
v1469 
=== Predecessor ===
v101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1588 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1509 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1509  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1469 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
i1509 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1469 #trueSuccessor: v1017 #falseSuccessor: v1020  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1510 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1510  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1510 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1585 
=== Succesors ===
next: v1031 
=== Usages ===
v1467 
=== Predecessor ===
v1017 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1585 #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1510 
y: v1465 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1510 y: v1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1467 
=== Succesors ===
trueSuccessor: v1027 
falseSuccessor: v1030 
=== Usages ===
=== Predecessor ===
v1510 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1467 #trueSuccessor: v1027 #falseSuccessor: v1030  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1036 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1036  <|@  <|@
f <@~|@floating>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6 
=== Succesors ===
=== Usages ===
v1036 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1477 
=== Succesors ===
trueSuccessor: v1035 
falseSuccessor: v1032 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1477 #trueSuccessor: v1035 #falseSuccessor: v1032  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid i1345 <|@
result int[-165139|0xfffffffffffd7aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -165139
stableDimension: 0
stamp: i32 [-165139] ⇊00000000fffd7aed ⇈00000000fffd7aed
stampKind: i32
value: int[-165139|0xfffffffffffd7aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1035 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-165139|0xfffffffffffd7aed]] destination: B49 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1511 
=== Usages ===
=== Predecessor ===
v1036 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1511  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1511 <|@
result v45|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1583 
=== Succesors ===
next: i1512 
=== Usages ===
a648 v1558 
=== Predecessor ===
v1032 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1583 #next: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid v1558 <|@
result [v45|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1511 
=== Succesors ===
=== Usages ===
i1512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1512 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1558 
=== Succesors ===
next: v1046 
=== Usages ===
v299 v656 
=== Predecessor ===
a1511 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1558 #next: v1046  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1512 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1512  <|@  <|@
f <@*|@fixed>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v299 
=== Succesors ===
trueSuccessor: v1042 
falseSuccessor: v1045 
=== Usages ===
=== Predecessor ===
i1512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v299 #trueSuccessor: v1042 #falseSuccessor: v1045  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1512 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1512  <|@  <|@
f <@*|@fixed>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v656 
=== Succesors ===
trueSuccessor: v1047 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v656 #trueSuccessor: v1047 #falseSuccessor: v1050  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1513 
=== Usages ===
i1513 
=== Predecessor ===
v1051 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1513  <|@  <|@
f <@~|@floating>@ <|@
tid a648 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1511 
=== Succesors ===
=== Usages ===
v1559 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1511  <|@  <|@
f <@~|@floating>@ <|@
tid v1559 <|@
result [v47|QWORD[.] + v2|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a648 
index: i3 
=== Succesors ===
=== Usages ===
i1513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a648 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1513 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1047 
address: v1559 
=== Succesors ===
next: v1056 
=== Usages ===
i664 j803 v872 
=== Predecessor ===
v1047 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1047 address: v1559 #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid i871 <|@
result short[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] ⇊0000000000000100 ⇈0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1513 
y: i871 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1513 y: i871  <|@  <|@
f <@*|@fixed>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v872 
=== Succesors ===
trueSuccessor: v1052 
falseSuccessor: v1055 
=== Usages ===
=== Predecessor ===
i1513 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v872 #trueSuccessor: v1052 #falseSuccessor: v1055  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSX [v47|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1514 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1514  <|@  <|@
f <@~|@floating>@ <|@
tid v1580 <|@
result [v16|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
a1514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1514 <|@
result v49|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v1580 
=== Succesors ===
next: i1515 
=== Usages ===
v1561 v1560 
=== Predecessor ===
v1052 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1580 #next: i1515  <|@  <|@
f <@~|@floating>@ <|@
tid v1560 <|@
result [v49|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1514 
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1515 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1560 
=== Succesors ===
next: v1066 
=== Usages ===
v674 
=== Predecessor ===
a1514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1560 #next: v1066  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/2034614602@5c2763a3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2105117569@79d0db9b
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1513 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1513  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i664 
y: i1515 
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i664 y: i1515  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v674 
=== Succesors ===
trueSuccessor: v1062 
falseSuccessor: v1065 
=== Usages ===
=== Predecessor ===
i1515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v674 #trueSuccessor: v1062 #falseSuccessor: v1065  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[.] = MOV [v16|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVZX v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP (x: v50|DWORD, y: [v49|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1516 
=== Usages ===
i1516 
=== Predecessor ===
v1066 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1516  <|@  <|@
f <@~|@floating>@ <|@
tid j803 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/2034614602@5c2763a3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2105117569@79d0db9b
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1513 
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1513  <|@  <|@
f <@~|@floating>@ <|@
tid v1561 <|@
result [v51|QWORD + v49|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j803 
index: a1514 
=== Succesors ===
=== Usages ===
i1516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j803 index: a1514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1516 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1062 
address: v1561 
=== Succesors ===
next: v166 
=== Usages ===
i804 
=== Predecessor ===
v1062 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1062 address: v1561 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid i804 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/2034614602@5c2763a3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2105117569@79d0db9b
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1516 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1516  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i804 
y: i6 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i804 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.7644122540863267
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
i1516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVZX v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVZXB [v51|QWORD + v49|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7644122540863267 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593757714032403494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v920 
address: v1543 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v920 address: v1543 value: i1492 stateAfter: - lastLocationAccess: - #next: v868  <|@  <|@
tid ?402 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 i6 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?402 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?402 #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid i1474 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v15|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B55 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1517 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1517  <|@  <|@
f <@~|@floating>@ <|@
tid v1562 <|@
result [v16|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
a1517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1517 <|@
result v54|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1562 
=== Succesors ===
next: v1576 
=== Usages ===
a693 v1576 
=== Predecessor ===
v165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1562 #next: v1576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
object: a1517 
=== Succesors ===
next: i170 
=== Usages ===
=== Predecessor ===
a1517 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?71 object: a1517 #next: i170  <|@  <|@
f <@~|@floating>@ <|@
tid a693 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1517 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1517  <|@  <|@
f <@~|@floating>@ <|@
tid i1476 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i3 
y: i43 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i43  <|@  <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@109cebfa
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a693 a2 i1476 a4 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a693 a2 i1476 a4  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 - 
=== Succesors ===
=== Usages ===
?171 ?1308 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 -  <|@  <|@
tid ?1308 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?176 
values: - - - - 
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?176 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i170 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v697 
stateDuring: ?1308 
=== Succesors ===
next: v1076 
=== Usages ===
?171 v172 
=== Predecessor ===
v1576 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v697 stateDuring: ?1308 #next: v1076  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?176 
values: - - - - i170 
=== Succesors ===
=== Usages ===
v1421 i1519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?176 values: - - - - i170  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i6 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i170 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1072 
=== Usages ===
=== Predecessor ===
i170 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v1075 #falseSuccessor: v1072  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = MOV [v16|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v54|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v57|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1417 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1417  <|@  <|@
f <@~|@floating>@ <|@
tid i1418 <|@
result int[-178707|0xfffffffffffd45ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178707
stableDimension: 0
stamp: i32 [-178707] ⇊00000000fffd45ed ⇈00000000fffd45ed
stampKind: i32
value: int[-178707|0xfffffffffffd45ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
v1075 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178707|0xfffffffffffd45ed]] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1518 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1518 <|@
result v58|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
=== Succesors ===
next: i1519 
=== Usages ===
a700 v1563 
=== Predecessor ===
v1072 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1540 #next: i1519  <|@  <|@
f <@~|@floating>@ <|@
tid v1563 <|@
result [v58|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1518 
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1519 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?171 
guard: - 
address: v1563 
=== Succesors ===
next: i1520 
=== Usages ===
v707 
=== Predecessor ===
a1518 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?171 guard: - address: v1563 #next: i1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1520 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
=== Succesors ===
next: v1086 
=== Usages ===
v1564 v707 
=== Predecessor ===
i1519 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1541 #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1520 
y: i1519 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1520 y: i1519  <|@  <|@
f <@*|@fixed>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v707 
=== Succesors ===
trueSuccessor: v1082 
falseSuccessor: v1085 
=== Usages ===
=== Predecessor ===
i1520 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v707 #trueSuccessor: v1082 #falseSuccessor: v1085  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v57|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v59|DWORD = MOV [v58|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B93" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
v714 
=== Predecessor ===
v1086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid a700 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1518 
=== Succesors ===
=== Usages ===
v1564 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1518  <|@  <|@
f <@~|@floating>@ <|@
tid v1564 <|@
result [v61|QWORD[.] + v60|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a700 
index: i1520 
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a700 index: i1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1082 
address: v1564 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1082 address: v1564 value: i1492 stateAfter: - lastLocationAccess: - #next: v461  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v714 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v60|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1424 
=== Usages ===
=== Predecessor ===
v1086 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1424  <|@  <|@
f <@~|@floating>@ <|@
tid i1425 <|@
result int[-181275|0xfffffffffffd3be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -181275
stableDimension: 0
stamp: i32 [-181275] ⇊00000000fffd3be5 ⇈00000000fffd3be5
stampKind: i32
value: int[-181275|0xfffffffffffd3be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
v1085 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181275|0xfffffffffffd3be5]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1419 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-181275 - -178707] ⇊00000000fffd00e5 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1416 
values: i1418 i1425 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1416 values: i1418 i1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1417 v1424 
=== Succesors ===
next: v1421 
=== Usages ===
i1419 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1417 v1424 #next: v1421  <|@  <|@
f <@*|@fixed>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?171 
actionAndReason: i1419 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?171 actionAndReason: i1419 speculation: a1312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v57|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1356  <|@  <|@
f <@~|@floating>@ <|@
tid i1357 <|@
result int[-172827|0xfffffffffffd5ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -172827
stableDimension: 0
stamp: i32 [-172827] ⇊00000000fffd5ce5 ⇈00000000fffd5ce5
stampKind: i32
value: int[-172827|0xfffffffffffd5ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1065 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-172827|0xfffffffffffd5ce5]] destination: B62 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid i1353 <|@
result int[-170259|0xfffffffffffd66ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -170259
stableDimension: 0
stamp: i32 [-170259] ⇊00000000fffd66ed ⇈00000000fffd66ed
stampKind: i32
value: int[-170259|0xfffffffffffd66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1055 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-170259|0xfffffffffffd66ed]] destination: B63 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid i1351 <|@
result int[-168219|0xfffffffffffd6ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168219
stableDimension: 0
stamp: i32 [-168219] ⇊00000000fffd6ee5 ⇈00000000fffd6ee5
stampKind: i32
value: int[-168219|0xfffffffffffd6ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1050 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168219|0xfffffffffffd6ee5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1348 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1348  <|@  <|@
f <@~|@floating>@ <|@
tid i1349 <|@
result int[-167443|0xfffffffffffd71ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -167443
stableDimension: 0
stamp: i32 [-167443] ⇊00000000fffd71ed ⇈00000000fffd71ed
stampKind: i32
value: int[-167443|0xfffffffffffd71ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1045 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-167443|0xfffffffffffd71ed]] destination: B65 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid i1343 <|@
result int[-164915|0xfffffffffffd7bcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164915
stableDimension: 0
stamp: i32 [-164915] ⇊00000000fffd7bcd ⇈00000000fffd7bcd
stampKind: i32
value: int[-164915|0xfffffffffffd7bcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1030 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164915|0xfffffffffffd7bcd]] destination: B66 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid i1336 <|@
result int[-164371|0xfffffffffffd7ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -164371
stableDimension: 0
stamp: i32 [-164371] ⇊00000000fffd7ded ⇈00000000fffd7ded
stampKind: i32
value: int[-164371|0xfffffffffffd7ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1020 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164371|0xfffffffffffd7ded]] destination: B67 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B69" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599673295418982517
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1491 
y: v1461 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1491 y: v1461  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Single; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1462 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1462 #trueSuccessor: v110 #falseSuccessor: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Single; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1521 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1521  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1521 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1587 
=== Succesors ===
next: v1091 
=== Usages ===
v182 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1587 #next: v1091  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1521 
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1521  <|@  <|@
f <@*|@fixed>@ <|@
tid v1091 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v1087 
falseSuccessor: v1090 
=== Usages ===
=== Predecessor ===
i1521 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v1087 #falseSuccessor: v1090  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v1522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1522 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1586 
=== Succesors ===
next: v1101 
=== Usages ===
v1468 
=== Predecessor ===
v1087 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1586 #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid v1468 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1522 
y: v1465 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1522 y: v1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1468 
=== Succesors ===
trueSuccessor: v1097 
falseSuccessor: v1100 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1468 #trueSuccessor: v1097 #falseSuccessor: v1100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1106 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1106  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6 
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v1105 
falseSuccessor: v1102 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v1105 #falseSuccessor: v1102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1366 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid i1367 <|@
result int[-184083|0xfffffffffffd30ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -184083
stableDimension: 0
stamp: i32 [-184083] ⇊00000000fffd30ed ⇈00000000fffd30ed
stampKind: i32
value: int[-184083|0xfffffffffffd30ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-184083|0xfffffffffffd30ed]] destination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1523 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1523  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a1523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1523 <|@
result v63|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1584 
=== Succesors ===
next: i1524 
=== Usages ===
a722 v1565 
=== Predecessor ===
v1102 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1584 #next: i1524  <|@  <|@
f <@~|@floating>@ <|@
tid v1565 <|@
result [v63|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1523 
=== Succesors ===
=== Usages ===
i1524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1524 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?71 
guard: - 
address: v1565 
=== Succesors ===
next: v1116 
=== Usages ===
v308 v730 
=== Predecessor ===
a1523 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?71 guard: - address: v1565 #next: v1116  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@ef48fd2
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1524 
=== Succesors ===
=== Usages ===
v1116 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v1112 
falseSuccessor: v1115 
=== Usages ===
=== Predecessor ===
i1524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v1112 #falseSuccessor: v1115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v64|DWORD = MOV [v63|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1121  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1524 
=== Succesors ===
=== Usages ===
v1121 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1524  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v730 
=== Succesors ===
trueSuccessor: v1117 
falseSuccessor: v1120 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v730 #trueSuccessor: v1117 #falseSuccessor: v1120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1525 
=== Usages ===
i1525 
=== Predecessor ===
v1121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1525  <|@  <|@
f <@~|@floating>@ <|@
tid a722 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1523 
=== Succesors ===
=== Usages ===
v1566 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1523  <|@  <|@
f <@~|@floating>@ <|@
tid v1566 <|@
result [v65|QWORD[.] + v2|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a722 
index: i3 
=== Succesors ===
=== Usages ===
i1525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a722 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1525 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1117 
address: v1566 
=== Succesors ===
next: i1526 
=== Usages ===
i738 
=== Predecessor ===
v1117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1117 address: v1566 #next: i1526  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
result [v16|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
i1526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1526 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Single.c
nodeSourcePosition: at java.util.regex.Pattern$Single.isSatisfiedBy(Pattern.java:3826) [bci: 2]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1581 
=== Succesors ===
next: v193 
=== Usages ===
v265 
=== Predecessor ===
i1525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1581 #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid i738 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/2034614602@5c2763a3
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2105117569@79d0db9b
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1525 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1525  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Single.isSatisfiedBy(Pattern.java:3826) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i738 
y: i1526 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i738 y: i1526  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@2d17f6af <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.2357323300188121
=== Inputs ===
condition: v265 
=== Succesors ===
trueSuccessor: v192 
falseSuccessor: v191 
=== Usages ===
=== Predecessor ===
i1526 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v265 #trueSuccessor: v192 #falseSuccessor: v191  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVSX [v65|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVZX v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: [v16|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2357323300188121 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1527 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1527  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
result [v16|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1490 
=== Succesors ===
=== Usages ===
a1527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1527 <|@
result v68|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1579 
=== Succesors ===
next: v1577 
=== Usages ===
a743 v1577 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1579 #next: v1577  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
object: a1527 
=== Succesors ===
next: i197 
=== Usages ===
=== Predecessor ===
a1527 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?71 object: a1527 #next: i197  <|@  <|@
f <@~|@floating>@ <|@
tid a743 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1527 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1527  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32
=== Inputs ===
x: i3 
y: i43 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i43  <|@  <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@43ac69d
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a743 a2 i195 a4 
=== Succesors ===
=== Usages ===
i197 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a743 a2 i195 a4  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 - 
=== Succesors ===
=== Usages ===
?198 ?1307 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 -  <|@  <|@
tid ?1307 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?203 
values: - - - - 
=== Succesors ===
=== Usages ===
i197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i197 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v747 
stateDuring: ?1307 
=== Succesors ===
next: v1131 
=== Usages ===
?198 v199 
=== Predecessor ===
v1577 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v747 stateDuring: ?1307 #next: v1131  <|@  <|@
tid ?198 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?203 
values: - - - - i197 
=== Succesors ===
=== Usages ===
v1431 i1529 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: - - - - i197  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i6 
=== Succesors ===
=== Usages ===
v1131 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i197 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v1130 
falseSuccessor: v1127 
=== Usages ===
=== Predecessor ===
i197 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v1130 #falseSuccessor: v1127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOV [v16|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v68|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v70|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1427 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1427  <|@  <|@
f <@~|@floating>@ <|@
tid i1428 <|@
result int[-191507|0xfffffffffffd13ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -191507
stableDimension: 0
stamp: i32 [-191507] ⇊00000000fffd13ed ⇈00000000fffd13ed
stampKind: i32
value: int[-191507|0xfffffffffffd13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
v1130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-191507|0xfffffffffffd13ed]] destination: B77 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1528 
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1528 <|@
result v72|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
=== Succesors ===
next: i1529 
=== Usages ===
a750 v1567 
=== Predecessor ===
v1127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1540 #next: i1529  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
result [v72|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1528 
=== Succesors ===
=== Usages ===
i1529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1529 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?198 
guard: - 
address: v1567 
=== Succesors ===
next: i1530 
=== Usages ===
v757 
=== Predecessor ===
a1528 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?198 guard: - address: v1567 #next: i1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1530 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
=== Succesors ===
next: v1141 
=== Usages ===
v1568 v757 
=== Predecessor ===
i1529 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1541 #next: v1141  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1530 
y: i1529 
=== Succesors ===
=== Usages ===
v1141 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1530 y: i1529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v757 
=== Succesors ===
trueSuccessor: v1137 
falseSuccessor: v1140 
=== Usages ===
=== Predecessor ===
i1530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v757 #trueSuccessor: v1137 #falseSuccessor: v1140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v71|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v73|DWORD = MOV [v72|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
v764 
=== Predecessor ===
v1141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid a750 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1528 
=== Succesors ===
=== Usages ===
v1568 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1528  <|@  <|@
f <@~|@floating>@ <|@
tid v1568 <|@
result [v75|QWORD[.] + v74|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a750 
index: i1530 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a750 index: i1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1137 
address: v1568 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v1137 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1137 address: v1568 value: i1492 stateAfter: - lastLocationAccess: - #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + v74|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1434 
=== Usages ===
=== Predecessor ===
v1141 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1434  <|@  <|@
f <@~|@floating>@ <|@
tid i1435 <|@
result int[-194075|0xfffffffffffd09e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -194075
stableDimension: 0
stamp: i32 [-194075] ⇊00000000fffd09e5 ⇈00000000fffd09e5
stampKind: i32
value: int[-194075|0xfffffffffffd09e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
v1140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-194075|0xfffffffffffd09e5]] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B77" "B80" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1429 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-194075 - -191507] ⇊00000000fffd00e5 ⇈00000000fffd1ffd
valueDescription: i32
=== Inputs ===
merge: v1426 
values: i1428 i1435 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1426 values: i1428 i1435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1427 v1434 
=== Succesors ===
next: v1431 
=== Usages ===
i1429 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1427 v1434 #next: v1431  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?198 
actionAndReason: i1429 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?198 actionAndReason: i1429 speculation: a1312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v71|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593754906841726413
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v920 
address: v1543 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v920 address: v1543 value: i1492 stateAfter: - lastLocationAccess: - #next: v869  <|@  <|@
tid ?416 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 i6 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?416 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?416 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i1475 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v15|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B82 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1372 
=== Usages ===
=== Predecessor ===
v1121 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid i1373 <|@
result int[-187163|0xfffffffffffd24e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -187163
stableDimension: 0
stamp: i32 [-187163] ⇊00000000fffd24e5 ⇈00000000fffd24e5
stampKind: i32
value: int[-187163|0xfffffffffffd24e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187163|0xfffffffffffd24e5]] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1370 
=== Usages ===
=== Predecessor ===
v1116 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1370  <|@  <|@
f <@~|@floating>@ <|@
tid i1371 <|@
result int[-186387|0xfffffffffffd27ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -186387
stableDimension: 0
stamp: i32 [-186387] ⇊00000000fffd27ed ⇈00000000fffd27ed
stampKind: i32
value: int[-186387|0xfffffffffffd27ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186387|0xfffffffffffd27ed]] destination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid i1365 <|@
result int[-183859|0xfffffffffffd31cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -183859
stableDimension: 0
stamp: i32 [-183859] ⇊00000000fffd31cd ⇈00000000fffd31cd
stampKind: i32
value: int[-183859|0xfffffffffffd31cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-183859|0xfffffffffffd31cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1360  <|@  <|@
f <@~|@floating>@ <|@
tid i1361 <|@
result int[-183315|0xfffffffffffd33ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -183315
stableDimension: 0
stamp: i32 [-183315] ⇊00000000fffd33ed ⇈00000000fffd33ed
stampKind: i32
value: int[-183315|0xfffffffffffd33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1334 
=== Predecessor ===
v1090 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-183315|0xfffffffffffd33ed]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" "B49" "B65" "B64" "B63" "B62" "B86" "B85" "B72" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1337 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-190731 - -164371] ⇊00000000fffd00c5 ⇈00000000fffd7ffd
valueDescription: i32
=== Inputs ===
merge: v1334 
values: i1336 i1343 i1345 i1349 i1351 i1353 i1357 i1361 i1365 i1367 i1371 i1373 
=== Succesors ===
=== Usages ===
v1339 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1334 values: i1336 i1343 i1345 i1349 i1351 i1353 i1357 i1361 i1365 i1367 i1371 i1373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1335 v1342 v1344 v1348 v1350 v1352 v1356 v1360 v1364 v1366 v1370 v1372 
=== Succesors ===
next: v1339 
=== Usages ===
i1337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1335 v1342 v1344 v1348 v1350 v1352 v1356 v1360 v1364 v1366 v1370 v1372 #next: v1339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?71 
actionAndReason: i1337 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1334 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?71 actionAndReason: i1337 speculation: a1312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:21, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i74 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i74  <|@  <|@
f <@~|@floating>@ <|@
tid a1582 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1490 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1490  <|@  <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1af41aa9
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1582 a2 i3 a4 
=== Succesors ===
=== Usages ===
i74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1582 a2 i3 a4  <|@  <|@
tid ?1306 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 - 
=== Succesors ===
=== Usages ===
i74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i74 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v774 
stateDuring: ?1306 
=== Succesors ===
next: v84 
=== Usages ===
i85 
=== Predecessor ===
v113 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v774 stateDuring: ?1306 #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
i74 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:28, 50] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|DWORD] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B42" 
    successors "B90" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602072300012559516
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i85 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v82 
values: i74 i146 
=== Succesors ===
=== Usages ===
?83 v37 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v82 values: i74 i146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v84 v360 
=== Succesors ===
next: a1531 
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v84 v360 #next: a1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1531 <|@
result v82|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
=== Succesors ===
next: i1532 
=== Usages ===
a776 v1569 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1540 #next: i1532  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 - i85 
=== Succesors ===
=== Usages ===
v1381 i1532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 - i85  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
result [v82|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1531 
=== Succesors ===
=== Usages ===
i1532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1532 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v1569 
=== Succesors ===
next: i1533 
=== Usages ===
v783 
=== Predecessor ===
a1531 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v1569 #next: i1533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1533 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1541 
=== Succesors ===
next: v1151 
=== Usages ===
v1570 v783 
=== Predecessor ===
i1532 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1541 #next: v1151  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@6ea76943
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1533 
y: i1532 
=== Succesors ===
=== Usages ===
v1151 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1533 y: i1532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v783 
=== Succesors ===
trueSuccessor: v1147 
falseSuccessor: v1150 
=== Usages ===
=== Predecessor ===
i1533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v783 #trueSuccessor: v1147 #falseSuccessor: v1150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v81|DWORD 
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v83|DWORD = MOV [v82|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50] <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602072300012559516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
v790 
=== Predecessor ===
v1151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid a776 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1531 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1531  <|@  <|@
f <@~|@floating>@ <|@
tid v1570 <|@
result [v85|QWORD[.] + v84|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a776 
index: i1533 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a776 index: i1533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1147 
address: v1570 
value: i1492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1147 address: v1570 value: i1492 stateAfter: - lastLocationAccess: - #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i6 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i85 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
stamp: void
trueSuccessorProbability: 0.7107110940891102
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v423 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v38 #falseSuccessor: v423  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + v84|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7107110940891102 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599642076459069787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: void
=== Inputs ===
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v866  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?81 
values: a1483 a2 - - i1492 i6 
=== Succesors ===
=== Usages ===
v866 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?81 values: a1483 a2 - - i1492 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?79 
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?79 #next: v45  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/542412190@6518095d
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
stamp: i32
=== Inputs ===
x: i10 
y: i43 
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i43  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD] destination: B91 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4594028467397514883
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
v423 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B79" "B59" 
    successors "B94" 
    xhandlers
    flags 
    probability 4596857775276552404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v425 v427 v461 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v425 v427 v461 #next: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors 
    xhandlers
    flags 
    probability 4596857775276552404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 57]
stamp: void
=== Inputs ===
result: i43 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i43 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1381 
=== Usages ===
=== Predecessor ===
v1151 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1381  <|@  <|@
f <@~|@floating>@ <|@
tid i1383 <|@
result int[-200731|0xfffffffffffcefe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -200731
stableDimension: 0
stamp: i32 [-200731] ⇊00000000fffcefe5 ⇈00000000fffcefe5
stampKind: i32
value: int[-200731|0xfffffffffffcefe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?83 
actionAndReason: i1383 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1150 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?83 actionAndReason: i1383 speculation: a1312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -200731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v81|DWORD 
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:31, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1330 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1330  <|@  <|@
f <@~|@floating>@ <|@
tid i1331 <|@
result int[-142875|0xfffffffffffdd1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -142875
stableDimension: 0
stamp: i32 [-142875] ⇊00000000fffdd1e5 ⇈00000000fffdd1e5
stampKind: i32
value: int[-142875|0xfffffffffffdd1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-142875|0xfffffffffffdd1e5]] destination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1324  <|@  <|@
f <@~|@floating>@ <|@
tid i1325 <|@
result int[-136499|0xfffffffffffdeacd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -136499
stableDimension: 0
stamp: i32 [-136499] ⇊00000000fffdeacd ⇈00000000fffdeacd
stampKind: i32
value: int[-136499|0xfffffffffffdeacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-136499|0xfffffffffffdeacd]] destination: B97 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid i1319 <|@
result int[-127515|0xfffffffffffe0de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -127515
stableDimension: 0
stamp: i32 [-127515] ⇊00000000fffe0de5 ⇈00000000fffe0de5
stampKind: i32
value: int[-127515|0xfffffffffffe0de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-127515|0xfffffffffffe0de5]] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v1310 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid i1311 <|@
result int[-124435|0xfffffffffffe19ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124435
stableDimension: 0
stamp: i32 [-124435] ⇊00000000fffe19ed ⇈00000000fffe19ed
stampKind: i32
value: int[-124435|0xfffffffffffe19ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124435|0xfffffffffffe19ed]] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" "B97" "B96" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1313 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-145419 - -124435] ⇊00000000fffc00c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1309 
values: i1311 i1319 i1325 i1331 
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1309 values: i1311 i1319 i1325 i1331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1310 v1318 v1324 v1330 
=== Succesors ===
next: v1315 
=== Usages ===
i1313 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1310 v1318 v1324 v1330 #next: v1315  <|@  <|@
f <@*|@fixed>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i1313 
speculation: a1312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i1313 speculation: a1312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@69ecbc6c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B91" "B23" "B55" "B82" 
    successors "B2" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v6|DWORD[.] * 8 + 12]) size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v7|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD[.], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4158663727065506 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v13|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 8] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v18|QWORD[.] + v15|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v15|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49957695833039556 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B46" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602675401754492509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3334272631208172 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B69" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599673295418982517
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:28, 50] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|DWORD] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B42" 
    successors "B90" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602072300012559516
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v81|DWORD 
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v83|DWORD = MOV [v82|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50] <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602072300012559516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v82|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[.] + v84|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7107110940891102 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599642076459069787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD] destination: B91 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602660178734832200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v16|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v24|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v26|DWORD = MOV [v25|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVSX [v27|QWORD[.] + v21|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v24|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVZX v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD, y: [v30|QWORD[.] + v31|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7642676699811879 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590313160471596175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v24|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v39|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v20|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 19, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD, y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4590313160471596175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|DWORD, v42|DWORD] destination: B28 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" 
    successors "B12" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4603870455259032939
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|DWORD, v22|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV [v16|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5259333752357008 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599071462262021218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v16|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599071462262021218
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:54, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|DWORD] destination: B42 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598250064049195856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v33|DWORD = MOV [v32|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598250064049195856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[.] + v34|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD] destination: B23 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v46|DWORD = MOV [v45|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSX [v47|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[.] = MOV [v16|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVZX v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP (x: v50|DWORD, y: [v49|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVZX v48|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVZXB [v51|QWORD + v49|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7644122540863267 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593757714032403494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v15|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|DWORD] destination: B55 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v64|DWORD = MOV [v63|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVSX [v65|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVZX v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|DWORD, y: [v16|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2357323300188121 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593754906841726413
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[.] + v15|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B82 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604579926528802028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v10|DWORD[.] = MOV [v9|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v10|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4604579926528802028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4594028467397514883
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B79" "B59" 
    successors "B94" 
    xhandlers
    flags 
    probability 4596857775276552404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors 
    xhandlers
    flags 
    probability 4596857775276552404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOV [v16|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v68|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v70|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v71|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v71|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v73|DWORD = MOV [v72|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + v74|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = MOV [v16|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v54|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v57|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v57|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction v59|DWORD = MOV [v58|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B93" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[.] + v60|DWORD * 4 + 16], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-142875|0xfffffffffffdd1e5]] destination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" "B97" "B96" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187163|0xfffffffffffd24e5]] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" "B49" "B65" "B64" "B63" "B62" "B86" "B85" "B72" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v8|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:21, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -133395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-191507|0xfffffffffffd13ed]] destination: B77 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B77" "B80" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v71|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178707|0xfffffffffffd45ed]] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v57|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-194075|0xfffffffffffd09e5]] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181275|0xfffffffffffd3be5]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186387|0xfffffffffffd27ed]] destination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-184083|0xfffffffffffd30ed]] destination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-183859|0xfffffffffffd31cd]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-183315|0xfffffffffffd33ed]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-172827|0xfffffffffffd5ce5]] destination: B62 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-170259|0xfffffffffffd66ed]] destination: B63 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-151315|0xfffffffffffdb0ed]] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B36" "B17" "B34" "B32" "B30" "B24" "B43" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v20|QWORD[.] v1|QWORD[.] v21|DWORD v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:3, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-167443|0xfffffffffffd71ed]] destination: B65 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-165139|0xfffffffffffd7aed]] destination: B49 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164915|0xfffffffffffd7bcd]] destination: B66 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-164371|0xfffffffffffd7ded]] destination: B67 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -162067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v20|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v22|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-154131|0xfffffffffffda5ed]] destination: B30 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149011|0xfffffffffffdb9ed]] destination: B17 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-152091|0xfffffffffffdade5]] destination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148787|0xfffffffffffdbacd]] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-148243|0xfffffffffffdbced]] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168219|0xfffffffffffd6ee5]] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-163603|0xfffffffffffd80ed]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -200731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v81|DWORD 
locals: v8|DWORD[.] v1|QWORD[.] - - v19|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:31, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124435|0xfffffffffffe19ed]] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-136499|0xfffffffffffdeacd]] destination: B97 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-158491|0xfffffffffffd94e5]] destination: B24 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-147507|0xfffffffffffdbfcd]] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-127515|0xfffffffffffe0de5]] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: iload         4
     5: aload_0       
     6: getfield      #2          // size:int
     9: if_icmpge     64
    12: aload_0       
    13: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    16: iload         4
    18: aaload        
    19: ifnonnull     40
    22: aload_0       
    23: getfield      #3          // conn:java.util.regex.Pattern$Node
    26: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    29: aload_1       
    30: iload_2       
    31: aload_3       
    32: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    35: ifeq          58
    38: iconst_1      
    39: ireturn       
    40: aload_0       
    41: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    44: iload         4
    46: aaload        
    47: aload_1       
    48: iload_2       
    49: aload_3       
    50: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    53: ifeq          58
    56: iconst_1      
    57: ireturn       
    58: iinc          
    61: goto          3
    64: iconst_0      
    65: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@69ecbc6c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   16  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B91" "B23" "B55" "B82" 
    successors "B2" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:3] <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.4158663727065506 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3] <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr  104  <|@ instruction rdi|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rbx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3] <|@ <|@
      nr  116  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOV [r9|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.49957695833039556 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B46" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602675401754492509
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.3334272631208172 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B69" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599673295418982517
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed} <|@ <|@
      nr  728  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ st <@st|@reference-map: [stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] stack:40|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:28, 50] <|@ <|@
      nr  932  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B42" 
    successors "B90" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602072300012559516
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  940  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r11|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50] <|@ <|@
      nr  944  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  946  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  948  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602072300012559516
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  956  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 0.7107110940891102 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599642076459069787
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr  966  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  968  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B91 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602660178734832200
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:72|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r9|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  208  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr  210  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  226  <|@ instruction CMP r9|DWORD y: 128 size: WORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr  236  <|@ instruction r9|QWORD = MOVZX r9|DWORD size: DWORD <|@ <|@
      nr  238  <|@ instruction TEST (x: rdi|DWORD, y: [rax|QWORD[.] + r9|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.7642676699811879 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590313160471596175
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 50] <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction r8|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:80|QWORD[.] stack:40|QWORD[.] - stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] stack:40|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 19, 28, 50] <|@ <|@
      nr  310  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4590313160471596175
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC stack:84|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction rbx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B28 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" 
    successors "B12" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4603870455259032939
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  154  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.5259333752357008 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599071462262021218
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599071462262021218
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] stack:40|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:54, 28, 50] <|@ <|@
      nr  488  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B42 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598250064049195856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  252  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:16, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598250064049195856
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B23 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr  556  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  572  <|@ instruction CMP rsi|DWORD y: 256 size: WORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  582  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50] <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|QWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD = MOVZXB [rsi|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction BRANCH trueDestinationProbability: 0.7644122540863267 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593757714032403494
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B55 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr  762  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  778  <|@ instruction rsi|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  780  <|@ instruction CMP (x: rsi|DWORD, y: [rbx|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.2357323300188121 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593754906841726413
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr  868  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B82 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604579926528802028
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction r8|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:32] <|@ <|@
      nr   72  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4604579926528802028
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" 
    xhandlers
    flags 
    probability 4594028467397514883
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B79" "B59" 
    successors "B94" 
    xhandlers
    flags 
    probability 4596857775276552404
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  982  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors 
    xhandlers
    flags 
    probability 4596857775276552404
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  988  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@reference-map: [rsi:0, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  796  <|@ instruction rcx|DWORD = INC stack:44|DWORD size: DWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ st <@st|@reference-map: [stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] stack:40|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50] <|@ <|@
      nr  804  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr  830  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B93" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  842  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B79 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:68|DWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  620  <|@ instruction rcx|DWORD = INC stack:44|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@reference-map: [stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] stack:40|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50] <|@ <|@
      nr  630  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  654  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr  656  <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  658  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B93" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B59 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOVE input: int[-142875|0xfffffffffffdd1e5] <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" "B97" "B96" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-187163|0xfffffffffffd24e5] <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" "B49" "B65" "B64" "B63" "B62" "B86" "B85" "B72" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  900  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  904  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:21, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction MOV [r15|QWORD + 668] y: -133395 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  812  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B77 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B77" "B80" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-178707|0xfffffffffffd45ed] <|@ <|@
      nr  638  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  682  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOVE input: int[-194075|0xfffffffffffd09e5] <|@ <|@
      nr  850  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-181275|0xfffffffffffd3be5] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction r10|DWORD = MOVE input: int[-186387|0xfffffffffffd27ed] <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: int[-184083|0xfffffffffffd30ed] <|@ <|@
      nr  754  <|@ instruction JUMP ~[] destination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r10|DWORD = MOVE input: int[-183859|0xfffffffffffd31cd] <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction r10|DWORD = MOVE input: int[-183315|0xfffffffffffd33ed] <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r10|DWORD = MOVE input: int[-172827|0xfffffffffffd5ce5] <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B62 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-170259|0xfffffffffffd66ed] <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B63 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction r10|DWORD = MOVE input: int[-151315|0xfffffffffffdb0ed] <|@ <|@
      nr  400  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B36" "B17" "B34" "B32" "B30" "B24" "B43" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: r8|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:56|QWORD[.] r9|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:3, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r10|DWORD = MOVE input: int[-167443|0xfffffffffffd71ed] <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B65 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r10|DWORD = MOVE input: int[-165139|0xfffffffffffd7aed] <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B49 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-164915|0xfffffffffffd7bcd] <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B66 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r10|DWORD = MOVE input: int[-164371|0xfffffffffffd7ded] <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B67 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction MOV [r15|QWORD + 668] y: -162067 size: DWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:16, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:80|QWORD[.] rdx|QWORD[.] - stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  360  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B30 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[-149011|0xfffffffffffdb9ed] <|@ <|@
      nr  198  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B17 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: int[-152091|0xfffffffffffdade5] <|@ <|@
      nr  380  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r10|DWORD = MOVE input: int[-148787|0xfffffffffffdbacd] <|@ <|@
      nr  420  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr  440  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction r10|DWORD = MOVE input: int[-168219|0xfffffffffffd6ee5] <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r10|DWORD = MOVE input: int[-163603|0xfffffffffffd80ed] <|@ <|@
      nr  498  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 668] y: -200731 size: DWORD <|@ <|@
      nr 1004  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:31, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOVE input: int[-124435|0xfffffffffffe19ed] <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1020  <|@ instruction r10|DWORD = MOVE input: int[-136499|0xfffffffffffdeacd] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B97 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r10|DWORD = MOVE input: int[-158491|0xfffffffffffd94e5] <|@ <|@
      nr  282  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B24 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVE input: int[-147507|0xfffffffffffdbfcd] <|@ <|@
      nr  460  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-127515|0xfffffffffffe0de5] <|@ <|@
      nr 1030  <|@ instruction JUMP ~[] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: iload         4
     5: aload_0       
     6: getfield      #2          // size:int
     9: if_icmpge     64
    12: aload_0       
    13: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    16: iload         4
    18: aaload        
    19: ifnonnull     40
    22: aload_0       
    23: getfield      #3          // conn:java.util.regex.Pattern$Node
    26: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    29: aload_1       
    30: iload_2       
    31: aload_3       
    32: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    35: ifeq          58
    38: iconst_1      
    39: ireturn       
    40: aload_0       
    41: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    44: iload         4
    46: aaload        
    47: aload_1       
    48: iload_2       
    49: aload_3       
    50: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    53: ifeq          58
    56: iconst_1      
    57: ireturn       
    58: iinc          
    61: goto          3
    64: iconst_0      
    65: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@69ecbc6c slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   16  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B91" "B23" "B55" "B82" 
    successors "B2" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:3] <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610379257827787935
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.4158663727065506 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3] <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr  104  <|@ instruction rdi|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607171389872032850
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rbx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3] <|@ <|@
      nr  116  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOV [r9|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.49957695833039556 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B46" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602675401754492509
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.3334272631208172 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B69" "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599673295418982517
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed} <|@ <|@
      nr  728  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  908  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  916  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ st <@st|@reference-map: [stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] stack:40|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:28, 50] <|@ <|@
      nr  936  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B42" 
    successors "B90" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602072300012559516
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  932  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r11|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50] <|@ <|@
      nr  944  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  946  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  952  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602072300012559516
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  956  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  958  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 0.7107110940891102 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599642076459069787
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr  966  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  968  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B91 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602660178734832200
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:72|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  160  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50] <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B18" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r9|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  208  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr  210  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B29" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  226  <|@ instruction CMP r9|DWORD y: 128 size: WORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4599662249001303668
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr  236  <|@ instruction r9|QWORD = MOVZX r9|DWORD size: DWORD <|@ <|@
      nr  238  <|@ instruction TEST (x: rdi|DWORD, y: [rax|QWORD[.] + r9|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.7642676699811879 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4590313160471596175
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 50] <|@ <|@
      nr  296  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rdi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:80|QWORD[.] stack:40|QWORD[.] - stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] stack:40|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 19, 28, 50] <|@ <|@
      nr  310  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B11" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4590313160471596175
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC stack:84|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction rbx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B28 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B28" 
    successors "B12" "B41" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4603870455259032939
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  154  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.5259333752357008 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599071462262021218
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599071462262021218
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ st <@st|@reference-map: [stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] stack:40|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:54, 28, 50] <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B42 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598250064049195856
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  252  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:16, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50] <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4598250064049195856
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B23 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  528  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr  556  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  570  <|@ instruction rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  572  <|@ instruction CMP rsi|DWORD y: 256 size: WORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  582  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50] <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595172232961555407
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|QWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD = MOVZXB [rsi|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  592  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction BRANCH trueDestinationProbability: 0.7644122540863267 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593757714032403494
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr  602  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B55 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  736  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  740  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50] <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50] <|@ <|@
      nr  762  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B83" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595169695791612021
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  776  <|@ instruction rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  778  <|@ instruction rsi|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  780  <|@ instruction CMP (x: rsi|DWORD, y: [rbx|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  782  <|@ instruction BRANCH trueDestinationProbability: 0.2357323300188121 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593754906841726413
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50] <|@ <|@
      nr  868  <|@ instruction r10|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B82 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4604579926528802028
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   54  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:32] <|@ <|@
      nr   72  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4604579926528802028
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B79" "B59" 
    successors 
    xhandlers
    flags 
    probability 4596857775276552404
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  988  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  792  <|@ st <@st|@reference-map: [rsi:0, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:68|DWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr  794  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  796  <|@ instruction rcx|DWORD = INC stack:44|DWORD size: DWORD <|@ <|@
      nr  798  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ st <@st|@reference-map: [stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] stack:40|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50] <|@ <|@
      nr  804  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  828  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr  830  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  832  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B94" 
    xhandlers
    flags 
    probability 4585819976835336864
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  842  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~[] destination: B79 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:68|DWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50] <|@ <|@
      nr  618  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  620  <|@ instruction rcx|DWORD = INC stack:44|DWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ st <@st|@reference-map: [stack:28, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:68|DWORD[.] stack:40|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50] <|@ <|@
      nr  630  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  652  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  654  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - stack:64|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50] <|@ <|@
      nr  656  <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  658  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B94" 
    xhandlers
    flags 
    probability 4585818896752402085
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B59 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOVE input: int[-142875|0xfffffffffffdd1e5] <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B96 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" "B98" "B97" "B96" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1046  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-187163|0xfffffffffffd24e5] <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B67" "B66" "B49" "B65" "B64" "B63" "B62" "B86" "B85" "B72" "B84" "B83" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  900  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  904  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r11|DWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:21, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction MOV [r15|QWORD + 668] y: -133395 size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed] <|@ <|@
      nr  812  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B77 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B77" "B80" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  856  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-178707|0xfffffffffffd45ed] <|@ <|@
      nr  638  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  682  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  848  <|@ instruction r10|DWORD = MOVE input: int[-194075|0xfffffffffffd09e5] <|@ <|@
      nr  850  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-181275|0xfffffffffffd3be5] <|@ <|@
      nr  676  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction r10|DWORD = MOVE input: int[-186387|0xfffffffffffd27ed] <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: int[-184083|0xfffffffffffd30ed] <|@ <|@
      nr  754  <|@ instruction JUMP ~[] destination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction r10|DWORD = MOVE input: int[-183859|0xfffffffffffd31cd] <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction r10|DWORD = MOVE input: int[-183315|0xfffffffffffd33ed] <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r10|DWORD = MOVE input: int[-172827|0xfffffffffffd5ce5] <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B62 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-170259|0xfffffffffffd66ed] <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B63 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction r10|DWORD = MOVE input: int[-151315|0xfffffffffffdb0ed] <|@ <|@
      nr  400  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B36" "B17" "B34" "B32" "B30" "B24" "B43" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: r8|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:56|QWORD[.] r9|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:3, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction r10|DWORD = MOVE input: int[-167443|0xfffffffffffd71ed] <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B65 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction r10|DWORD = MOVE input: int[-165139|0xfffffffffffd7aed] <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B49 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE input: int[-164915|0xfffffffffffd7bcd] <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B66 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r10|DWORD = MOVE input: int[-164371|0xfffffffffffd7ded] <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B67 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction MOV [r15|QWORD + 668] y: -162067 size: DWORD <|@ <|@
      nr  328  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  330  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:16, stack:40, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:80|QWORD[.] rdx|QWORD[.] - stack:56|QWORD[.] stack:84|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD stack:56|QWORD[.] stack:60|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction r10|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  360  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B30 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[-149011|0xfffffffffffdb9ed] <|@ <|@
      nr  198  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B17 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: int[-152091|0xfffffffffffdade5] <|@ <|@
      nr  380  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r10|DWORD = MOVE input: int[-148787|0xfffffffffffdbacd] <|@ <|@
      nr  420  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B36 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced] <|@ <|@
      nr  440  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction r10|DWORD = MOVE input: int[-168219|0xfffffffffffd6ee5] <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B64 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r10|DWORD = MOVE input: int[-163603|0xfffffffffffd80ed] <|@ <|@
      nr  498  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction MOV [r15|QWORD + 668] y: -200731 size: DWORD <|@ <|@
      nr 1004  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1006  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r11|DWORD[.] rdx|QWORD[.] - - rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
>@ <|@ instruction DEOPT info [bci:31, 50] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOVE input: int[-124435|0xfffffffffffe19ed] <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1020  <|@ instruction r10|DWORD = MOVE input: int[-136499|0xfffffffffffdeacd] <|@ <|@
      nr 1022  <|@ instruction JUMP ~[] destination: B97 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r10|DWORD = MOVE input: int[-158491|0xfffffffffffd94e5] <|@ <|@
      nr  282  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B24 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction r10|DWORD = MOVE input: int[-147507|0xfffffffffffdbfcd] <|@ <|@
      nr  460  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B100" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-127515|0xfffffffffffe0de5] <|@ <|@
      nr 1030  <|@ instruction JUMP ~[] destination: B98 -> B100 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: iload         4
     5: aload_0       
     6: getfield      #2          // size:int
     9: if_icmpge     64
    12: aload_0       
    13: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    16: iload         4
    18: aaload        
    19: ifnonnull     40
    22: aload_0       
    23: getfield      #3          // conn:java.util.regex.Pattern$Node
    26: getfield      #5          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    29: aload_1       
    30: iload_2       
    31: aload_3       
    32: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    35: ifeq          58
    38: iconst_1      
    39: ireturn       
    40: aload_0       
    41: getfield      #1          // atoms:java.util.regex.Pattern$Node[]
    44: iload         4
    46: aaload        
    47: aload_1       
    48: iload_2       
    49: aload_3       
    50: invokevirtual #6          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    53: ifeq          58
    56: iconst_1      
    57: ireturn       
    58: iinc          
    61: goto          3
    64: iconst_0      
    65: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048897424404889542438894c24344c8944242841ba000000000f1f8000000000448b5e10453bda0f8ec0070000448b5e14463b14dd0c0000000f830608000049c1e303478b5c93104585db0f84b203000042813cdd08000000addeadde0f859a070000448b4a3c428b1ccd0c000000428b3cdd100000003bdf0f86e7040000428b1cdd0c0000008b04dd0800000049c1e103418b6cb91041894cb91081f8addeadde0f84a000000081f8addeadde0f843502000081f8addeadde0f84cb020000896c242044895c241c448954242448c1e303488bf3488bda8bf9498bc048b8ffffffffffffffffe80000000090448b5c241c488b5424388b723c8b0cf50c000000468b04dd10000000413bc88b6c24200f86ac06000048c1e60342896c861085c00f8536030000850500000000448b54242441ffc24c8b4424288b4c2434488b742440e9d8feffff896c242044895c241c4489542424895c2418448bd349c1e2034c895424104c8b442428488b54243841ba00000000e9db0000000f1f4400008b34dd1c000000813cf508000000addeadde0f858a0600003b4a100f8dd505000041817808addeadde0f85a405000085c90f8c56050000458b480c428b3ccd0c0000003bf90f8e9b0400003bf90f865d05000049c1e103450fbf4c4910664181f980000f83010500008b3cf51000000048b8addeaddeaddeadde450fb7c942857c8810448954240c0f848c0000008b34f50c000000418504f448c1e603ffc14c8bca498bf848b8ffffffffffffffffe8000000009085c00f8487040000488b5424388b4a20448b54240c41ffc28b5c24184c8b4424288b34dd14000000413bf20f8f1affffff448954240c833cdd10000000000f852b050000488b7424104c8bd2448b44240c4c8b4c24280f1f4000e80000000090e953feffff8b6c2420448b5c241c8b723c448b04f50c000000468b14dd10000000453bc20f864e05000048c1e60342896c9610850500000000448b54242441ffc24c8b4424288b4c2434488b742440e937fdffff44895424243b4a100f8dc20300004c8b44242841817808addeadde0f85a403000085c90f8c91030000418b700c448b14f50c000000443bd10f8e71030000443bd10f866904000048c1e6030fbf744e106681fe00010f8317030000448b14dd100000000fb7c6423b04d50c0000000f83f30200000fb7f6420fb674d61085f60f857e01000041896cb910850500000000448b54242441ffc2488b742440e995fcffff44895424243b4a100f8dac02000041817808addeadde0f859302000085c90f8c80020000418b700c448b14f50c000000443bd10f8e60020000443bd10f86b801000048c1e6030fbf744e100fb7f63b34dd100000000f848f00000041896cb910850500000000448b54242441ffc2488b742440e91dfcffff4489542424448b5618468b14d50c000000438504d449c1e203498bf24c8bd2448bc9498bd848b8ffffffffffffffff0f1f440000e8000000009085c00f845a010000b801000000488b6c24504883c458850500000000c5f877c3b801000000488b6c24504883c458850500000000c5f877c3896c242044895c241c8b34dd0c000000418504f448c1e6038b4c2434ffc1488b5424384c8b44242848b8ffffffffffffffffe8000000009085c00f8407010000448b5c241c488b5424388b723c8b0cf50c000000468b04dd10000000413bc80f86320100008b6c242048c1e60342896c8610e971ffffff896c242044895c241c8b34dd0c000000418504f448c1e6038b4c2434ffc14c8bd24c8b44242848b8ffffffffffffffff666690e8000000009085c00f84b7000000448b5c241c488b542438448b523c468b04d50c000000468b0cdd10000000453bc10f86c40000008b6c242049c1e20343896c8a10e9f7feffff448954242441bae5d1fdff4589979c0200004d89a7a8020000e8000000009041bae524fdff4589979c0200004d89a7a8020000e80000000090488b54243841c7879c020000edf6fdff4d89a7a8020000e8000000009041baed13fdff8b6c2420448b5c241c488b5424384589979c0200004d89a7a8020000e8000000009041baed45fdff8b6c2420448b5c241c488b5424384589979c0200004d89a7a8020000e8000000009041bae509fdff8b6c2420ebb841bae53bfdff8b6c2420ebd441baed27fdffe95cffffff41baed30fdffe951ffffff41bacd31fdffe946ffffff41baed33fdffe93bffffff41bae55cfdffe930ffffff41baed66fdffe925ffffff448954240c8b6c2420448b5c241c41baedb0fdff448b4c240c4c8b4424104589979c0200004d89a7a8020000e8000000009041baed71fdffe9e8feffff41baed7afdffe9ddfeffff41bacd7bfdffe9d2feffff41baed7dfdffe9c7feffff8b6c2420448b5c241c488b54243841c7879c020000ed86fdff4d89a7a8020000e80000000090448954240c8b6c2420448b5c241c41baeda5fdff448b4c240c4c8b442410e977ffffff448954240c8b6c2420448b5c241c41baedb9fdff448b4c240c4c8b442410e954ffffff448954240c8b6c2420448b5c241c41bae5adfdff448b4c240c4c8b442410e931ffffff448954240c8b6c2420448b5c241c41bacdbafdff448b4c240c4c8b442410e90effffff448954240c8b6c2420448b5c241c41baedbcfdff448b4c240c4c8b442410e9ebfeffff41bae56efdffe9e7fdffff41baed80fdff448b4c240c4c8b4424108b6c2420448b5c241ce9c2feffff448b5424244c8b4424288b4c2434488b74244041c7879c020000e5effcff4d89a7a8020000e80000000090448954242441baed19feffe974fdffff448954242441bacdeafdffe964fdffff41bae594fdff448b4c240c4c8b442410e962feffff448954240c8b6c2420448b5c241c41bacdbffdff448b4c240c4c8b442410e93ffeffff448954242441bae50dfeffe91cfdffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1038a1f78, value=0x10fedfe60]:0x10fedfe60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@69ecbc6c slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 62 12 stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 67 14 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 73 16 JUMP ~[] destination: B0 -> B1  <||@
  Comment 73 block B1 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 73 18 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 80 20 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 84 22 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 87 24 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B99  <||@
  Comment 93 block B2 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 93 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 28 r11|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 97 30 CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:3]  <||@
  Comment 97 [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 105 32 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B98  <||@
  Comment 111 block B3 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 111 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 36 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 115 38 r11|DWORD[.] = MOV [r11|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 120 40 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 123 42 BRANCH trueDestinationProbability: 0.4158663727065506 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 129 block B7 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 129 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 129 94 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}  <||@
  Comment 129 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}}  <||@
  Comment 141 96 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B97  <||@
  Comment 147 block B8 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 147 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 100 r9|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3]  <||@
  Comment 147 [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 147 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 151 102 rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 151 [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 151 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 159 104 rdi|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 167 106 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 169 108 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B96  <||@
  Comment 175 block B9 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 175 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 175 112 rbx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 183 114 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3]  <||@
  Comment 183 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 183 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 190 116 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 194 118 rbp|DWORD = MOV [r9|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 199 120 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 204 122 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}  <||@
  Comment 204 {meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}}  <||@
  Comment 210 124 BRANCH trueDestinationProbability: 0.49957695833039556 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B45  <||@
  Comment 216 block B45 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 216 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 216 518 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 216 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 222 520 BRANCH trueDestinationProbability: 0.3334272631208172 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B68  <||@
  Comment 228 block B68 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 228 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 228 726 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}  <||@
  Comment 228 {meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}}  <||@
  Comment 234 728 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B88  <||@
  Comment 240 block B88 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 240 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 908 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 244 910 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 249 912 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 254 914 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 258 916 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 261 918 rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 264 922 rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 266 926 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 269 930 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:28, 50]  <||@
  Comment 269 7  <||@
  Comment 279 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 284 [stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 285 936 JUMP ~[] destination: B88 -> B89  <||@
  Comment 285 block B89 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 285 938 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 285 932 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 290 934 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 295 940 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 298 942 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50]  <||@
  Comment 298 [rdx:0, rsi:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4               |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
     stack:   |rax|DWORD     |              |   |   |                |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 298 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 305 944 r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 313 946 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 316 952 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 320 948 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B95  <||@
  Comment 326 block B90 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 326 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 326 954 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 330 956 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 335 958 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 337 960 BRANCH trueDestinationProbability: 0.7107110940891102 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B94  <||@
  Comment 343 block B91 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 343 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 343 964 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50]  <||@
  Comment 343 [rdx:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 343 {infopoint: SAFEPOINT}  <||@
  Comment 343 11  <||@
  Comment 349 966 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 357 968 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 362 970 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 366 972 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 371 974 JUMP ~[] destination: B91 -> B1  <||@
  Comment 376 block B10 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 376 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 376 128 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 380 130 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 385 132 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 390 134 stack:72|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 394 136 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 401 138 stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 406 142 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 411 144 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 416 146 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 422 148 JUMP ~[] destination: B10 -> B11  <||@
  Comment 427 block B12 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 427 158 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 432 160 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 439 162 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50]  <||@
  Comment 439 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 439 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 439 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 450 164 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39  <||@
  Comment 456 block B13 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 456 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 456 168 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 459 170 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37  <||@
  Comment 465 block B14 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 465 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 174 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50]  <||@
  Comment 465 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 465 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 465 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 473 176 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35  <||@
  Comment 479 block B15 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 479 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 180 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 481 182 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18  <||@
  Comment 487 block B18 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 487 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 487 206 r9|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 491 208 rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50]  <||@
  Comment 491 [rdx:0, rsi:0, r8:0, r9:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 491 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 499 210 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 501 212 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33  <||@
  Comment 507 block B19 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 507 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 216 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 509 218 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31  <||@
  Comment 515 block B20 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 515 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 222 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 519 224 r9|DWORD = MOVSX [r9|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 525 226 CMP r9|DWORD y: 128 size: WORD  <||@
  Comment 531 228 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29  <||@
  Comment 537 block B21 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 537 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 232 rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 544 234 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 544 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 554 236 r9|QWORD = MOVZX r9|DWORD size: DWORD  <||@
  Comment 558 238 TEST (x: rdi|DWORD, y: [rax|QWORD[.] + r9|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 563 244 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 568 240 BRANCH trueDestinationProbability: 0.7642676699811879 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25  <||@
  Comment 574 block B25 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 574 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 574 292 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 581 294 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 50]  <||@
  Comment 581 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 581 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 585 296 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 589 298 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 591 300 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 594 304 rdi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 597 308 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 19, 28, 50]  <||@
  Comment 597 7  <||@
  Comment 607 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 612 [stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4              
     locals:  |stack:80|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 613 310 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 615 312 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28  <||@
  Comment 621 block B28 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 621 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 334 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 626 336 rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 629 338 r10|DWORD = INC stack:84|DWORD size: DWORD  <||@
  Comment 637 340 rbx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 641 342 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 646 344 JUMP ~[] destination: B28 -> B11  <||@
  Comment 646 block B11 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 646 150 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 646 152 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 653 154 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 656 156 BRANCH trueDestinationProbability: 0.5259333752357008 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41  <||@
  Comment 662 block B41 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 662 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 468 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 667 470 CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 675 472 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 681 block B42 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 681 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 681 476 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 686 478 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 689 482 r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 694 484 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 699 486 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:54, 28, 50]  <||@
  Comment 699 9  <||@
  Comment 703 {HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>}  <||@
  Comment 708 [stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 709 492 JUMP ~[] destination: B42 -> B89  <||@
  Comment 714 block B22 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 714 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 714 246 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 718 248 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 723 250 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 726 252 r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50]  <||@
  Comment 726 [rdx:0, rsi:0, r11:0, stack:16, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 726 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 734 254 r10|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 742 256 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 745 258 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 751 block B23 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 751 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 751 262 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 755 264 MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 760 266 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50]  <||@
  Comment 760 [rdx:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 760 {infopoint: SAFEPOINT}  <||@
  Comment 760 11  <||@
  Comment 766 268 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 774 270 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 779 272 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 783 274 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 788 276 JUMP ~[] destination: B23 -> B1  <||@
  Comment 793 block B46 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 793 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 793 524 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 798 526 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 801 528 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B67  <||@
  Comment 807 block B47 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 807 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 807 532 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 812 534 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50]  <||@
  Comment 812 [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 812 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 812 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 820 536 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66  <||@
  Comment 826 block B48 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 826 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 826 540 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 828 542 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 834 block B50 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 834 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 552 rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 838 554 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50]  <||@
  Comment 838 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 838 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 846 556 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 849 558 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B65  <||@
  Comment 855 block B51 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 855 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 855 562 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 858 564 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B64  <||@
  Comment 864 block B52 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 864 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 864 568 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 868 570 rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 873 572 CMP rsi|DWORD y: 256 size: WORD  <||@
  Comment 878 574 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B63  <||@
  Comment 884 block B53 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 884 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 884 578 r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 892 580 rax|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 895 582 CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50]  <||@
  Comment 895 [rdx:0, rbx:0, r8:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 895 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 903 584 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B62  <||@
  Comment 909 block B54 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 909 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 909 588 rsi|QWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 912 590 rsi|DWORD = MOVZXB [rsi|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 918 592 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 920 594 BRANCH trueDestinationProbability: 0.7644122540863267 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 926 block B55 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 926 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 926 598 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 931 600 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50]  <||@
  Comment 931 [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 931 {infopoint: SAFEPOINT}  <||@
  Comment 931 11  <||@
  Comment 937 602 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 945 604 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 950 606 JUMP ~[] destination: B55 -> B1  <||@
  Comment 955 block B69 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 955 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 955 732 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 960 734 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 963 736 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B86  <||@
  Comment 969 block B70 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 969 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 740 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50]  <||@
  Comment 969 [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 969 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 969 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 977 742 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B85  <||@
  Comment 983 block B71 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 983 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 746 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 985 748 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 991 block B73 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 991 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 991 758 rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 995 760 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50]  <||@
  Comment 995 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 995 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1003 762 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1006 764 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B84  <||@
  Comment 1012 block B74 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 1012 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1012 768 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1015 770 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B83  <||@
  Comment 1021 block B75 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 1021 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1021 774 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1025 776 rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 1030 778 rsi|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 1033 780 CMP (x: rsi|DWORD, y: [rbx|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1040 782 BRANCH trueDestinationProbability: 0.2357323300188121 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B82  <||@
  Comment 1046 block B82 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 1046 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1046 864 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 1051 866 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50]  <||@
  Comment 1051 [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1051 {infopoint: SAFEPOINT}  <||@
  Comment 1051 11  <||@
  Comment 1057 868 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 1065 870 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1070 872 JUMP ~[] destination: B82 -> B1  <||@
  Comment 1075 block B4 null  <||@
  Comment 1075 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 46 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1080 48 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1084 50 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 1084 [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1084 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1092 52 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:3]  <||@
  Comment 1092 [rdx:0, rsi:0, r8:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1092 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1096 54 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1100 56 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1103 58 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1106 62 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1109 66 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1112 70 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:32]  <||@
  Comment 1112 7  <||@
  Comment 1127 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1132 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1133 72 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1135 74 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 1141 block B6 null  <||@
  Comment 1141 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1141 88 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1146 90 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1155 12  <||@
  Comment 1165 block B94 null  <||@
  Comment 1165 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1165 986 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1170 988 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1179 12  <||@
  Comment 1189 block B76 null  <||@
  Comment 1189 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1189 786 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1193 788 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1198 790 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1205 792 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50]  <||@
  Comment 1205 [rsi:0, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1205 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1209 794 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1213 796 rcx|DWORD = INC stack:44|DWORD size: DWORD  <||@
  Comment 1219 798 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1224 800 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1229 802 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50]  <||@
  Comment 1229 7  <||@
  Comment 1239 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1244 [stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1245 804 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1247 806 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 1253 block B78 null  <||@
  Comment 1253 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1253 822 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1258 824 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1263 826 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1266 828 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50]  <||@
  Comment 1266 [rdx:0, rsi:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4               |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1266 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1273 830 r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1281 832 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1284 834 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 1290 block B79 null  <||@
  Comment 1290 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1290 838 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1294 840 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1298 842 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 1303 844 JUMP ~[] destination: B79 -> B94  <||@
  Comment 1308 block B56 null  <||@
  Comment 1308 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1308 610 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1312 612 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1317 614 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1324 616 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50]  <||@
  Comment 1324 [rdx:0, rsi:0, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4               |5 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1324 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1328 618 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1332 620 rcx|DWORD = INC stack:44|DWORD size: DWORD  <||@
  Comment 1338 622 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1341 626 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1346 628 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50]  <||@
  Comment 1346 7  <||@
  Comment 1359 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1364 [stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1365 630 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1367 632 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1373 block B58 null  <||@
  Comment 1373 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1373 648 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1378 650 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1383 652 r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1387 654 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50]  <||@
  Comment 1387 [rdx:0, r10:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4               |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1387 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1395 656 r9|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1403 658 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1406 660 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 1412 block B59 null  <||@
  Comment 1412 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1412 664 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1416 666 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1420 668 MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 1425 670 JUMP ~[] destination: B59 -> B94  <||@
  Comment 1430 block B96 null  <||@
  Comment 1430 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1430 1010 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1435 1012 r10|DWORD = MOVE input: int[-142875|0xfffffffffffdd1e5]  <||@
  Comment 1441 1014 JUMP ~[] destination: B96 -> B100  <||@
  Comment 1441 block B100 null  <||@
  Comment 1441 1040 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1441 1042 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1448 1044 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1455 1046 DEOPT info [bci:3]  <||@
  Comment 1455 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1460 [rdx:0, stack:40, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1461 block B83 null  <||@
  Comment 1461 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1461 876 r10|DWORD = MOVE input: int[-187163|0xfffffffffffd24e5]  <||@
  Comment 1467 878 JUMP ~[] destination: B83 -> B87  <||@
  Comment 1467 block B87 null  <||@
  Comment 1467 898 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1467 900 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1474 902 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1481 904 DEOPT info [bci:21, 50]  <||@
  Comment 1481 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1486 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3                  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1487 block B5 null  <||@
  Comment 1487 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1487 78 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1492 80 MOV [r15|QWORD + 668] y: -133395 size: DWORD  <||@
  Comment 1503 82 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1510 84 DEOPT info [bci:35]  <||@
  Comment 1510 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1515 [rdx:0, stack:40, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |                 <||@
  Comment 1516 block B77 null  <||@
  Comment 1516 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1516 810 r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed]  <||@
  Comment 1522 812 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1526 814 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1531 816 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1536 818 JUMP ~[] destination: B77 -> B81  <||@
  Comment 1536 block B81 null  <||@
  Comment 1536 854 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1536 856 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1543 858 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1550 860 DEOPT info [bci:34, 28, 50]  <||@
  Comment 1550 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1555 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1556 block B57 null  <||@
  Comment 1556 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1556 636 r10|DWORD = MOVE input: int[-178707|0xfffffffffffd45ed]  <||@
  Comment 1562 638 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1566 640 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1571 642 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1576 644 JUMP ~[] destination: B57 -> B61  <||@
  Comment 1576 block B61 null  <||@
  Comment 1576 680 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1576 682 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1583 684 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1590 686 DEOPT info [bci:34, 28, 50]  <||@
  Comment 1590 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1595 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1596 block B80 null  <||@
  Comment 1596 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1596 848 r10|DWORD = MOVE input: int[-194075|0xfffffffffffd09e5]  <||@
  Comment 1602 850 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1606 852 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1608 block B60 null  <||@
  Comment 1608 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1608 674 r10|DWORD = MOVE input: int[-181275|0xfffffffffffd3be5]  <||@
  Comment 1614 676 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1618 678 JUMP ~[] destination: B60 -> B61  <||@
  Comment 1620 block B84 null  <||@
  Comment 1620 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1620 882 r10|DWORD = MOVE input: int[-186387|0xfffffffffffd27ed]  <||@
  Comment 1626 884 JUMP ~[] destination: B84 -> B87  <||@
  Comment 1631 block B72 null  <||@
  Comment 1631 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1631 752 r10|DWORD = MOVE input: int[-184083|0xfffffffffffd30ed]  <||@
  Comment 1637 754 JUMP ~[] destination: B72 -> B87  <||@
  Comment 1642 block B85 null  <||@
  Comment 1642 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1642 888 r10|DWORD = MOVE input: int[-183859|0xfffffffffffd31cd]  <||@
  Comment 1648 890 JUMP ~[] destination: B85 -> B87  <||@
  Comment 1653 block B86 null  <||@
  Comment 1653 892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1653 894 r10|DWORD = MOVE input: int[-183315|0xfffffffffffd33ed]  <||@
  Comment 1659 896 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1664 block B62 null  <||@
  Comment 1664 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1664 690 r10|DWORD = MOVE input: int[-172827|0xfffffffffffd5ce5]  <||@
  Comment 1670 692 JUMP ~[] destination: B62 -> B87  <||@
  Comment 1675 block B63 null  <||@
  Comment 1675 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1675 696 r10|DWORD = MOVE input: int[-170259|0xfffffffffffd66ed]  <||@
  Comment 1681 698 JUMP ~[] destination: B63 -> B87  <||@
  Comment 1686 block B33 null  <||@
  Comment 1686 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1686 388 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1691 390 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1695 392 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1700 394 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1700 block B34 null  <||@
  Comment 1700 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1700 398 r10|DWORD = MOVE input: int[-151315|0xfffffffffffdb0ed]  <||@
  Comment 1706 400 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1711 402 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1716 404 JUMP ~[] destination: B34 -> B44  <||@
  Comment 1716 block B44 null  <||@
  Comment 1716 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1716 510 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1723 512 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1730 514 DEOPT info [bci:3, 28, 50]  <||@
  Comment 1730 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1735 [rdx:0, r8:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0            |1             |2          |3                  |4        
     locals:  |r8|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:56|QWORD[.]  |r9|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1736 block B65 null  <||@
  Comment 1736 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1736 708 r10|DWORD = MOVE input: int[-167443|0xfffffffffffd71ed]  <||@
  Comment 1742 710 JUMP ~[] destination: B65 -> B87  <||@
  Comment 1747 block B49 null  <||@
  Comment 1747 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1747 546 r10|DWORD = MOVE input: int[-165139|0xfffffffffffd7aed]  <||@
  Comment 1753 548 JUMP ~[] destination: B49 -> B87  <||@
  Comment 1758 block B66 null  <||@
  Comment 1758 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 714 r10|DWORD = MOVE input: int[-164915|0xfffffffffffd7bcd]  <||@
  Comment 1764 716 JUMP ~[] destination: B66 -> B87  <||@
  Comment 1769 block B67 null  <||@
  Comment 1769 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1769 720 r10|DWORD = MOVE input: int[-164371|0xfffffffffffd7ded]  <||@
  Comment 1775 722 JUMP ~[] destination: B67 -> B87  <||@
  Comment 1780 block B26 null  <||@
  Comment 1780 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1780 316 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1784 318 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1789 320 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1794 322 JUMP ~[] destination: B26 -> B27  <||@
  Comment 1794 block B27 null  <||@
  Comment 1794 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1794 326 MOV [r15|QWORD + 668] y: -162067 size: DWORD  <||@
  Comment 1805 328 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1812 330 DEOPT info [bci:34, 19, 28, 50]  <||@
  Comment 1812 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1817 [rdx:0, r11:0, stack:16, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1             |2  |3                  |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |-  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1818 block B29 null  <||@
  Comment 1818 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1818 348 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1823 350 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1827 352 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1832 354 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1832 block B30 null  <||@
  Comment 1832 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1832 358 r10|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed]  <||@
  Comment 1838 360 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1843 362 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1848 364 JUMP ~[] destination: B30 -> B44  <||@
  Comment 1853 block B16 null  <||@
  Comment 1853 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1853 186 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1858 188 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1862 190 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1867 192 JUMP ~[] destination: B16 -> B17  <||@
  Comment 1867 block B17 null  <||@
  Comment 1867 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1867 196 r10|DWORD = MOVE input: int[-149011|0xfffffffffffdb9ed]  <||@
  Comment 1873 198 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1878 200 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1883 202 JUMP ~[] destination: B17 -> B44  <||@
  Comment 1888 block B31 null  <||@
  Comment 1888 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1888 368 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1893 370 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1897 372 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1902 374 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1902 block B32 null  <||@
  Comment 1902 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1902 378 r10|DWORD = MOVE input: int[-152091|0xfffffffffffdade5]  <||@
  Comment 1908 380 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1913 382 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1918 384 JUMP ~[] destination: B32 -> B44  <||@
  Comment 1923 block B35 null  <||@
  Comment 1923 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1923 408 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1928 410 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1932 412 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1937 414 JUMP ~[] destination: B35 -> B36  <||@
  Comment 1937 block B36 null  <||@
  Comment 1937 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1937 418 r10|DWORD = MOVE input: int[-148787|0xfffffffffffdbacd]  <||@
  Comment 1943 420 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1948 422 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1953 424 JUMP ~[] destination: B36 -> B44  <||@
  Comment 1958 block B37 null  <||@
  Comment 1958 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1958 428 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1963 430 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1967 432 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1972 434 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1972 block B38 null  <||@
  Comment 1972 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1972 438 r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced]  <||@
  Comment 1978 440 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1983 442 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1988 444 JUMP ~[] destination: B38 -> B44  <||@
  Comment 1993 block B64 null  <||@
  Comment 1993 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1993 702 r10|DWORD = MOVE input: int[-168219|0xfffffffffffd6ee5]  <||@
  Comment 1999 704 JUMP ~[] destination: B64 -> B87  <||@
  Comment 2004 block B43 null  <||@
  Comment 2004 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2004 496 r10|DWORD = MOVE input: int[-163603|0xfffffffffffd80ed]  <||@
  Comment 2010 498 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2015 500 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2020 502 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2024 504 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2029 506 JUMP ~[] destination: B43 -> B44  <||@
  Comment 2034 block B95 null  <||@
  Comment 2034 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2034 994 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2039 996 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2044 998 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2048 1000 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2053 1002 MOV [r15|QWORD + 668] y: -200731 size: DWORD  <||@
  Comment 2064 1004 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2071 1006 DEOPT info [bci:31, 50]  <||@
  Comment 2071 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 2076 [rdx:0, rsi:0, r8:0, r11:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
     stack:   |rax|DWORD     |              |   |   |           |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 2077 block B99 null  <||@
  Comment 2077 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2077 1034 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2082 1036 r10|DWORD = MOVE input: int[-124435|0xfffffffffffe19ed]  <||@
  Comment 2088 1038 JUMP ~[] destination: B99 -> B100  <||@
  Comment 2093 block B97 null  <||@
  Comment 2093 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2093 1018 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2098 1020 r10|DWORD = MOVE input: int[-136499|0xfffffffffffdeacd]  <||@
  Comment 2104 1022 JUMP ~[] destination: B97 -> B100  <||@
  Comment 2109 block B24 null  <||@
  Comment 2109 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2109 280 r10|DWORD = MOVE input: int[-158491|0xfffffffffffd94e5]  <||@
  Comment 2115 282 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2120 284 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2125 286 JUMP ~[] destination: B24 -> B44  <||@
  Comment 2130 block B39 null  <||@
  Comment 2130 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2130 448 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2135 450 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2139 452 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2144 454 JUMP ~[] destination: B39 -> B40  <||@
  Comment 2144 block B40 null  <||@
  Comment 2144 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2144 458 r10|DWORD = MOVE input: int[-147507|0xfffffffffffdbfcd]  <||@
  Comment 2150 460 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2155 462 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2160 464 JUMP ~[] destination: B40 -> B44  <||@
  Comment 2165 block B98 null  <||@
  Comment 2165 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2165 1026 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2170 1028 r10|DWORD = MOVE input: int[-127515|0xfffffffffffe0de5]  <||@
  Comment 2176 1030 JUMP ~[] destination: B98 -> B100  <||@
  Comment 2181 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1103168e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2181 4  <||@
  Comment 2187 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1038a1f88, value=0x10fee1500]:0x10fee1500}  <||@
  Comment 2187 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2609[java.util.regex.Pattern$Branch.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-2609[java.util.regex.Pattern$Branch.match(Matcher, int, CharSequence)]"
  date 1527031667868
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11069fe80 448b560849c1e203493bc20f85cfff83ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048897424404889542438894c24344c8944242841ba000000000f1f8000000000448b5e10453bda0f8ec0070000448b5e14463b14dd0c0000000f830608000049c1e303478b5c93104585db0f84b203000042813cdd08000000ed9f00f80f859a070000448b4a3c428b1ccd0c000000428b3cdd100000003bdf0f86e7040000428b1cdd0c0000008b04dd0800000049c1e103418b6cb91041894cb91081f85b3201f80f84a000000081f8df3201f80f843502000081f8dca200f80f84cb020000896c242044895c241c448954242448c1e303488bf3488bda8bf9498bc048b8ffffffffffffffffe8440384ff90448b5c241c488b5424388b723c8b0cf50c000000468b04dd10000000413bc88b6c24200f86ac06000048c1e60342896c861085c00f85360300008505295009f2448b54242441ffc24c8b4424288b4c2434488b742440e9d8feffff896c242044895c241c4489542424895c2418448bd349c1e2034c895424104c8b442428488b54243841ba00000000e9db0000000f1f4400008b34dd1c000000813cf508000000153201f80f858a0600003b4a100f8dd505000041817808da0200f80f85a405000085c90f8c56050000458b480c428b3ccd0c0000003bf90f8e9b0400003bf90f865d05000049c1e103450fbf4c4910664181f980000f83010500008b3cf51000000048b8583400c006000000450fb7c942857c8810448954240c0f848c0000008b34f50c000000418504f448c1e603ffc14c8bca498bf848b8ffffffffffffffffe8fc0184ff9085c00f8487040000488b5424388b4a20448b54240c41ffc28b5c24184c8b4424288b34dd14000000413bf20f8f1affffff448954240c833cdd10000000000f852b050000488b7424104c8bd2448b44240c4c8b4c24280f1f4000e83c97bbff90e953feffff8b6c2420448b5c241c8b723c448b04f50c000000468b14dd10000000453bc20f864e05000048c1e60342896c96108505884e09f2448b54242441ffc24c8b4424288b4c2434488b742440e937fdffff44895424243b4a100f8dc20300004c8b44242841817808da0200f80f85a403000085c90f8c91030000418b700c448b14f50c000000443bd10f8e71030000443bd10f866904000048c1e6030fbf744e106681fe00010f8317030000448b14dd100000000fb7c6423b04d50c0000000f83f30200000fb7f6420fb674d61085f60f857e01000041896cb9108505dd4d09f2448b54242441ffc2488b742440e995fcffff44895424243b4a100f8dac02000041817808da0200f80f859302000085c90f8c80020000418b700c448b14f50c000000443bd10f8e60020000443bd10f86b801000048c1e6030fbf744e100fb7f63b34dd100000000f848f00000041896cb9108505654d09f2448b54242441ffc2488b742440e91dfcffff4489542424448b5618468b14d50c000000438504d449c1e203498bf24c8bd2448bc9498bd848b8883b05c0070000000f1f440000e8542184ff9085c00f845a010000b801000000488b6c24504883c4588505fd4c09f2c5f877c3b801000000488b6c24504883c4588505e54c09f2c5f877c3896c242044895c241c8b34dd0c000000418504f448c1e6038b4c2434ffc1488b5424384c8b44242848b8ffffffffffffffffe884ff83ff9085c00f8407010000448b5c241c488b5424388b723c8b0cf50c000000468b04dd10000000413bc80f86320100008b6c242048c1e60342896c8610e971ffffff896c242044895c241c8b34dd0c000000418504f448c1e6038b4c2434ffc14c8bd24c8b44242848b8ffffffffffffffff666690e80cff83ff9085c00f84b7000000448b5c241c488b542438448b523c468b04d50c000000468b0cdd10000000453bc10f86c40000008b6c242049c1e20343896c8a10e9f7feffff448954242441bae5d1fdff4589979c0200004d89a7a8020000e8ca1184ff9041bae524fdff4589979c0200004d89a7a8020000e8b01184ff90488b54243841c7879c020000edf6fdff4d89a7a8020000e8931184ff9041baed13fdff8b6c2420448b5c241c488b5424384589979c0200004d89a7a8020000e86b1184ff9041baed45fdff8b6c2420448b5c241c488b5424384589979c0200004d89a7a8020000e8431184ff9041bae509fdff8b6c2420ebb841bae53bfdff8b6c2420ebd441baed27fdffe95cffffff41baed30fdffe951ffffff41bacd31fdffe946ffffff41baed33fdffe93bffffff41bae55cfdffe930ffffff41baed66fdffe925ffffff448954240c8b6c2420448b5c241c41baedb0fdff448b4c240c4c8b4424104589979c0200004d89a7a8020000e8b71084ff9041baed71fdffe9e8feffff41baed7afdffe9ddfeffff41bacd7bfdffe9d2feffff41baed7dfdffe9c7feffff8b6c2420448b5c241c488b54243841c7879c020000ed86fdff4d89a7a8020000e8651084ff90448954240c8b6c2420448b5c241c41baeda5fdff448b4c240c4c8b442410e977ffffff448954240c8b6c2420448b5c241c41baedb9fdff448b4c240c4c8b442410e954ffffff448954240c8b6c2420448b5c241c41bae5adfdff448b4c240c4c8b442410e931ffffff448954240c8b6c2420448b5c241c41bacdbafdff448b4c240c4c8b442410e90effffff448954240c8b6c2420448b5c241c41baedbcfdff448b4c240c4c8b442410e9ebfeffff41bae56efdffe9e7fdffff41baed80fdff448b4c240c4c8b4424108b6c2420448b5c241ce9c2feffff448b5424244c8b4424288b4c2434488b74244041c7879c020000e5effcff4d89a7a8020000e8620f84ff90448954242441baed19feffe974fdffff448954242441bacdeafdffe964fdffff41bae594fdff448b4c240c4c8b442410e962feffff448954240c8b6c2420448b5c241c41bacdbffdff448b4c240c4c8b442410e93ffeffff448954242441bae50dfeffe91cfdffffe8d661c7ff90e8f00d84ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1038a1f78, value=0x10fedfe60]:0x10fedfe60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@69ecbc6c slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:44|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 62 12 stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 67 14 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 73 16 JUMP ~[] destination: B0 -> B1  <||@
  Comment 73 block B1 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 73 18 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 80 20 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 84 22 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 87 24 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B99  <||@
  Comment 93 block B2 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 93 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 28 r11|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 97 30 CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:3]  <||@
  Comment 97 [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 105 32 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B98  <||@
  Comment 111 block B3 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 111 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 36 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 115 38 r11|DWORD[.] = MOV [r11|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 120 40 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 123 42 BRANCH trueDestinationProbability: 0.4158663727065506 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 129 block B7 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 129 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 129 94 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}  <||@
  Comment 129 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}}  <||@
  Comment 141 96 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B97  <||@
  Comment 147 block B8 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 147 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 100 r9|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3]  <||@
  Comment 147 [rdx:0, rsi:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 147 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 151 102 rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 151 [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 151 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 159 104 rdi|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 167 106 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 169 108 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B96  <||@
  Comment 175 block B9 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 175 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 175 112 rbx|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 183 114 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3]  <||@
  Comment 183 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 183 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 190 116 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 194 118 rbp|DWORD = MOV [r9|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 199 120 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 204 122 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}  <||@
  Comment 204 {meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}}  <||@
  Comment 210 124 BRANCH trueDestinationProbability: 0.49957695833039556 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B45  <||@
  Comment 216 block B45 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 216 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 216 518 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 216 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 222 520 BRANCH trueDestinationProbability: 0.3334272631208172 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B68  <||@
  Comment 228 block B68 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 228 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 228 726 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}  <||@
  Comment 228 {meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}}  <||@
  Comment 234 728 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B88  <||@
  Comment 240 block B88 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 240 906 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 908 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 244 910 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 249 912 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 254 914 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 258 916 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 261 918 rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 264 922 rdi|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 266 926 rax|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 269 930 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:28, 50]  <||@
  Comment 269 7  <||@
  Comment 279 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 284 [stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 285 936 JUMP ~[] destination: B88 -> B89  <||@
  Comment 285 block B89 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 285 938 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 285 932 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 290 934 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 295 940 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 298 942 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50]  <||@
  Comment 298 [rdx:0, rsi:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4               |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
     stack:   |rax|DWORD     |              |   |   |                |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 298 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 305 944 r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 313 946 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 316 952 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 320 948 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B95  <||@
  Comment 326 block B90 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 326 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 326 954 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 330 956 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 335 958 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 337 960 BRANCH trueDestinationProbability: 0.7107110940891102 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B94  <||@
  Comment 343 block B91 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 343 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 343 964 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50]  <||@
  Comment 343 [rdx:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 343 {infopoint: SAFEPOINT}  <||@
  Comment 343 11  <||@
  Comment 349 966 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 357 968 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 362 970 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 366 972 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 371 974 JUMP ~[] destination: B91 -> B1  <||@
  Comment 376 block B10 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 376 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 376 128 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 380 130 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 385 132 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 390 134 stack:72|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 394 136 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 401 138 stack:80|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 406 142 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 411 144 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 416 146 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 422 148 JUMP ~[] destination: B10 -> B11  <||@
  Comment 427 block B12 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 427 158 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 432 160 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 439 162 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50]  <||@
  Comment 439 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 439 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 439 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 450 164 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B39  <||@
  Comment 456 block B13 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 456 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 456 168 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 459 170 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B37  <||@
  Comment 465 block B14 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 465 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 174 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50]  <||@
  Comment 465 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 465 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 465 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 473 176 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B35  <||@
  Comment 479 block B15 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 479 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 180 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 481 182 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B18  <||@
  Comment 487 block B18 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 487 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 487 206 r9|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 491 208 rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50]  <||@
  Comment 491 [rdx:0, rsi:0, r8:0, r9:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 491 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 499 210 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 501 212 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B33  <||@
  Comment 507 block B19 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 507 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 216 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 509 218 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B31  <||@
  Comment 515 block B20 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 515 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 222 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 519 224 r9|DWORD = MOVSX [r9|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 525 226 CMP r9|DWORD y: 128 size: WORD  <||@
  Comment 531 228 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B29  <||@
  Comment 537 block B21 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 537 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 232 rdi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 544 234 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 544 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 554 236 r9|QWORD = MOVZX r9|DWORD size: DWORD  <||@
  Comment 558 238 TEST (x: rdi|DWORD, y: [rax|QWORD[.] + r9|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 563 244 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 568 240 BRANCH trueDestinationProbability: 0.7642676699811879 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25  <||@
  Comment 574 block B25 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 574 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 574 292 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 581 294 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 50]  <||@
  Comment 581 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 581 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 585 296 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 589 298 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 591 300 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 594 304 rdi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 597 308 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 19, 28, 50]  <||@
  Comment 597 7  <||@
  Comment 607 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 612 [stack:16, stack:24, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4              
     locals:  |stack:80|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 613 310 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 615 312 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B28  <||@
  Comment 621 block B28 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 621 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 334 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 626 336 rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 629 338 r10|DWORD = INC stack:84|DWORD size: DWORD  <||@
  Comment 637 340 rbx|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 641 342 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 646 344 JUMP ~[] destination: B28 -> B11  <||@
  Comment 646 block B11 loop 1 depth 2 outer 0 header:117|LoopBegin  <||@
  Comment 646 150 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 646 152 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 653 154 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 656 156 BRANCH trueDestinationProbability: 0.5259333752357008 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B41  <||@
  Comment 662 block B41 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 662 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 468 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 667 470 CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 675 472 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 681 block B42 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 681 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 681 476 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 686 478 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 689 482 r8|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 694 484 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 699 486 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:54, 28, 50]  <||@
  Comment 699 9  <||@
  Comment 703 {HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>}  <||@
  Comment 708 [stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 709 492 JUMP ~[] destination: B42 -> B89  <||@
  Comment 714 block B22 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 714 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 714 246 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 718 248 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 723 250 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 726 252 r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50]  <||@
  Comment 726 [rdx:0, rsi:0, r11:0, stack:16, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 726 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 734 254 r10|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 742 256 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 745 258 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 751 block B23 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 751 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 751 262 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 755 264 MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 760 266 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50]  <||@
  Comment 760 [rdx:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 760 {infopoint: SAFEPOINT}  <||@
  Comment 760 11  <||@
  Comment 766 268 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 774 270 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 779 272 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 783 274 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 788 276 JUMP ~[] destination: B23 -> B1  <||@
  Comment 793 block B46 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 793 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 793 524 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 798 526 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 801 528 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B67  <||@
  Comment 807 block B47 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 807 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 807 532 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 812 534 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50]  <||@
  Comment 812 [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 812 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 812 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 820 536 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B66  <||@
  Comment 826 block B48 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 826 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 826 540 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 828 542 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 834 block B50 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 834 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 834 552 rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 838 554 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50]  <||@
  Comment 838 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 838 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 846 556 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 849 558 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B65  <||@
  Comment 855 block B51 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 855 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 855 562 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 858 564 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B64  <||@
  Comment 864 block B52 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 864 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 864 568 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 868 570 rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 873 572 CMP rsi|DWORD y: 256 size: WORD  <||@
  Comment 878 574 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B63  <||@
  Comment 884 block B53 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 884 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 884 578 r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 892 580 rax|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 895 582 CMP (x: rax|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:21, 50]  <||@
  Comment 895 [rdx:0, rbx:0, r8:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 895 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 903 584 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B62  <||@
  Comment 909 block B54 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 909 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 909 588 rsi|QWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 912 590 rsi|DWORD = MOVZXB [rsi|QWORD + r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 918 592 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 920 594 BRANCH trueDestinationProbability: 0.7644122540863267 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 926 block B55 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 926 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 926 598 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 931 600 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50]  <||@
  Comment 931 [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 931 {infopoint: SAFEPOINT}  <||@
  Comment 931 11  <||@
  Comment 937 602 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 945 604 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 950 606 JUMP ~[] destination: B55 -> B1  <||@
  Comment 955 block B69 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 955 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 955 732 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 960 734 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 963 736 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B69 -> B70 falseDestination: B69 -> B86  <||@
  Comment 969 block B70 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 969 738 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 740 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50]  <||@
  Comment 969 [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 969 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 969 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 977 742 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B85  <||@
  Comment 983 block B71 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 983 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 983 746 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 985 748 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 991 block B73 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 991 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 991 758 rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 995 760 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50]  <||@
  Comment 995 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 995 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1003 762 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1006 764 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B84  <||@
  Comment 1012 block B74 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 1012 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1012 768 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1015 770 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B74 -> B75 falseDestination: B74 -> B83  <||@
  Comment 1021 block B75 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 1021 772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1021 774 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1025 776 rsi|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 1030 778 rsi|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 1033 780 CMP (x: rsi|DWORD, y: [rbx|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1040 782 BRANCH trueDestinationProbability: 0.2357323300188121 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B82  <||@
  Comment 1046 block B82 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 1046 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1046 864 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 1051 866 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 thread: r15 state [bci:44, 50]  <||@
  Comment 1051 [rdx:0, r8:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5          
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1051 {infopoint: SAFEPOINT}  <||@
  Comment 1051 11  <||@
  Comment 1057 868 r10|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 1065 870 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1070 872 JUMP ~[] destination: B82 -> B1  <||@
  Comment 1075 block B4 null  <||@
  Comment 1075 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 46 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1080 48 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 1084 50 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 1084 [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1084 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1092 52 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:3]  <||@
  Comment 1092 [rdx:0, rsi:0, r8:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1092 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1096 54 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1100 56 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1103 58 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1106 62 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1109 66 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1112 70 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:32]  <||@
  Comment 1112 7  <||@
  Comment 1127 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1132 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1133 72 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1135 74 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 1141 block B6 null  <||@
  Comment 1141 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1141 88 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1146 90 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1155 12  <||@
  Comment 1165 block B94 null  <||@
  Comment 1165 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1165 986 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1170 988 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955  <||@
  Comment 1179 12  <||@
  Comment 1189 block B76 null  <||@
  Comment 1189 784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1189 786 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1193 788 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1198 790 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1205 792 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50]  <||@
  Comment 1205 [rsi:0, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1205 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1209 794 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1213 796 rcx|DWORD = INC stack:44|DWORD size: DWORD  <||@
  Comment 1219 798 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1224 800 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1229 802 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50]  <||@
  Comment 1229 7  <||@
  Comment 1239 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1244 [stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1245 804 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1247 806 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 1253 block B78 null  <||@
  Comment 1253 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1253 822 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1258 824 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1263 826 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1266 828 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50]  <||@
  Comment 1266 [rdx:0, rsi:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4               |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1266 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1273 830 r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1281 832 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1284 834 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 1290 block B79 null  <||@
  Comment 1290 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1290 838 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1294 840 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1298 842 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 1303 844 JUMP ~[] destination: B79 -> B94  <||@
  Comment 1308 block B56 null  <||@
  Comment 1308 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1308 610 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1312 612 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1317 614 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1324 616 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:21, 50]  <||@
  Comment 1324 [rdx:0, rsi:0, stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4               |5 
     locals:  |stack:68|DWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1324 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1328 618 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1332 620 rcx|DWORD = INC stack:44|DWORD size: DWORD  <||@
  Comment 1338 622 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1341 626 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1346 628 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@53a5955 state [bci:31, 28, 50]  <||@
  Comment 1346 7  <||@
  Comment 1359 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1364 [stack:28, stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:68|DWORD[.]  |stack:40|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1365 630 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1367 632 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1373 block B58 null  <||@
  Comment 1373 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1373 648 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1378 650 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1383 652 r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1387 654 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34, 28, 50]  <||@
  Comment 1387 [rdx:0, r10:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4               |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:64|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1387 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1395 656 r9|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1403 658 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1406 660 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 1412 block B59 null  <||@
  Comment 1412 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1412 664 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1416 666 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@56572508 encoding: base: 0 shift: 3  <||@
  Comment 1420 668 MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 1425 670 JUMP ~[] destination: B59 -> B94  <||@
  Comment 1430 block B96 null  <||@
  Comment 1430 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1430 1010 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1435 1012 r10|DWORD = MOVE input: int[-142875|0xfffffffffffdd1e5]  <||@
  Comment 1441 1014 JUMP ~[] destination: B96 -> B100  <||@
  Comment 1441 block B100 null  <||@
  Comment 1441 1040 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1441 1042 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1448 1044 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1455 1046 DEOPT info [bci:3]  <||@
  Comment 1455 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1460 [rdx:0, stack:40, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1461 block B83 null  <||@
  Comment 1461 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1461 876 r10|DWORD = MOVE input: int[-187163|0xfffffffffffd24e5]  <||@
  Comment 1467 878 JUMP ~[] destination: B83 -> B87  <||@
  Comment 1467 block B87 null  <||@
  Comment 1467 898 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1467 900 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1474 902 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1481 904 DEOPT info [bci:21, 50]  <||@
  Comment 1481 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1486 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3                  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1487 block B5 null  <||@
  Comment 1487 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1487 78 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1492 80 MOV [r15|QWORD + 668] y: -133395 size: DWORD  <||@
  Comment 1503 82 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1510 84 DEOPT info [bci:35]  <||@
  Comment 1510 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1515 [rdx:0, stack:40, stack:64]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |                 <||@
  Comment 1516 block B77 null  <||@
  Comment 1516 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1516 810 r10|DWORD = MOVE input: int[-191507|0xfffffffffffd13ed]  <||@
  Comment 1522 812 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1526 814 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1531 816 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1536 818 JUMP ~[] destination: B77 -> B81  <||@
  Comment 1536 block B81 null  <||@
  Comment 1536 854 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1536 856 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1543 858 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1550 860 DEOPT info [bci:34, 28, 50]  <||@
  Comment 1550 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1555 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1556 block B57 null  <||@
  Comment 1556 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1556 636 r10|DWORD = MOVE input: int[-178707|0xfffffffffffd45ed]  <||@
  Comment 1562 638 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1566 640 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1571 642 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1576 644 JUMP ~[] destination: B57 -> B61  <||@
  Comment 1576 block B61 null  <||@
  Comment 1576 680 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1576 682 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1583 684 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1590 686 DEOPT info [bci:34, 28, 50]  <||@
  Comment 1590 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1595 [rdx:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1596 block B80 null  <||@
  Comment 1596 846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1596 848 r10|DWORD = MOVE input: int[-194075|0xfffffffffffd09e5]  <||@
  Comment 1602 850 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1606 852 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1608 block B60 null  <||@
  Comment 1608 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1608 674 r10|DWORD = MOVE input: int[-181275|0xfffffffffffd3be5]  <||@
  Comment 1614 676 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1618 678 JUMP ~[] destination: B60 -> B61  <||@
  Comment 1620 block B84 null  <||@
  Comment 1620 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1620 882 r10|DWORD = MOVE input: int[-186387|0xfffffffffffd27ed]  <||@
  Comment 1626 884 JUMP ~[] destination: B84 -> B87  <||@
  Comment 1631 block B72 null  <||@
  Comment 1631 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1631 752 r10|DWORD = MOVE input: int[-184083|0xfffffffffffd30ed]  <||@
  Comment 1637 754 JUMP ~[] destination: B72 -> B87  <||@
  Comment 1642 block B85 null  <||@
  Comment 1642 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1642 888 r10|DWORD = MOVE input: int[-183859|0xfffffffffffd31cd]  <||@
  Comment 1648 890 JUMP ~[] destination: B85 -> B87  <||@
  Comment 1653 block B86 null  <||@
  Comment 1653 892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1653 894 r10|DWORD = MOVE input: int[-183315|0xfffffffffffd33ed]  <||@
  Comment 1659 896 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1664 block B62 null  <||@
  Comment 1664 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1664 690 r10|DWORD = MOVE input: int[-172827|0xfffffffffffd5ce5]  <||@
  Comment 1670 692 JUMP ~[] destination: B62 -> B87  <||@
  Comment 1675 block B63 null  <||@
  Comment 1675 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1675 696 r10|DWORD = MOVE input: int[-170259|0xfffffffffffd66ed]  <||@
  Comment 1681 698 JUMP ~[] destination: B63 -> B87  <||@
  Comment 1686 block B33 null  <||@
  Comment 1686 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1686 388 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1691 390 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1695 392 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1700 394 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1700 block B34 null  <||@
  Comment 1700 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1700 398 r10|DWORD = MOVE input: int[-151315|0xfffffffffffdb0ed]  <||@
  Comment 1706 400 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1711 402 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1716 404 JUMP ~[] destination: B34 -> B44  <||@
  Comment 1716 block B44 null  <||@
  Comment 1716 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1716 510 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1723 512 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1730 514 DEOPT info [bci:3, 28, 50]  <||@
  Comment 1730 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1735 [rdx:0, r8:0, r11:0, stack:40, stack:64]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0            |1             |2          |3                  |4        
     locals:  |r8|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:56|QWORD[.]  |r9|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1736 block B65 null  <||@
  Comment 1736 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1736 708 r10|DWORD = MOVE input: int[-167443|0xfffffffffffd71ed]  <||@
  Comment 1742 710 JUMP ~[] destination: B65 -> B87  <||@
  Comment 1747 block B49 null  <||@
  Comment 1747 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1747 546 r10|DWORD = MOVE input: int[-165139|0xfffffffffffd7aed]  <||@
  Comment 1753 548 JUMP ~[] destination: B49 -> B87  <||@
  Comment 1758 block B66 null  <||@
  Comment 1758 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 714 r10|DWORD = MOVE input: int[-164915|0xfffffffffffd7bcd]  <||@
  Comment 1764 716 JUMP ~[] destination: B66 -> B87  <||@
  Comment 1769 block B67 null  <||@
  Comment 1769 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1769 720 r10|DWORD = MOVE input: int[-164371|0xfffffffffffd7ded]  <||@
  Comment 1775 722 JUMP ~[] destination: B67 -> B87  <||@
  Comment 1780 block B26 null  <||@
  Comment 1780 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1780 316 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1784 318 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1789 320 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1794 322 JUMP ~[] destination: B26 -> B27  <||@
  Comment 1794 block B27 null  <||@
  Comment 1794 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1794 326 MOV [r15|QWORD + 668] y: -162067 size: DWORD  <||@
  Comment 1805 328 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1812 330 DEOPT info [bci:34, 19, 28, 50]  <||@
  Comment 1812 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 1817 [rdx:0, r11:0, stack:16, stack:40, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1             |2  |3                  |4              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |-  |stack:56|QWORD[.]  |stack:84|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:60|DWORD   <||@
  Comment 1818 block B29 null  <||@
  Comment 1818 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1818 348 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1823 350 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1827 352 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1832 354 JUMP ~[] destination: B29 -> B30  <||@
  Comment 1832 block B30 null  <||@
  Comment 1832 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1832 358 r10|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed]  <||@
  Comment 1838 360 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1843 362 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1848 364 JUMP ~[] destination: B30 -> B44  <||@
  Comment 1853 block B16 null  <||@
  Comment 1853 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1853 186 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1858 188 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1862 190 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1867 192 JUMP ~[] destination: B16 -> B17  <||@
  Comment 1867 block B17 null  <||@
  Comment 1867 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1867 196 r10|DWORD = MOVE input: int[-149011|0xfffffffffffdb9ed]  <||@
  Comment 1873 198 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1878 200 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1883 202 JUMP ~[] destination: B17 -> B44  <||@
  Comment 1888 block B31 null  <||@
  Comment 1888 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1888 368 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1893 370 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1897 372 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1902 374 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1902 block B32 null  <||@
  Comment 1902 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1902 378 r10|DWORD = MOVE input: int[-152091|0xfffffffffffdade5]  <||@
  Comment 1908 380 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1913 382 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1918 384 JUMP ~[] destination: B32 -> B44  <||@
  Comment 1923 block B35 null  <||@
  Comment 1923 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1923 408 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1928 410 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1932 412 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1937 414 JUMP ~[] destination: B35 -> B36  <||@
  Comment 1937 block B36 null  <||@
  Comment 1937 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1937 418 r10|DWORD = MOVE input: int[-148787|0xfffffffffffdbacd]  <||@
  Comment 1943 420 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1948 422 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1953 424 JUMP ~[] destination: B36 -> B44  <||@
  Comment 1958 block B37 null  <||@
  Comment 1958 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1958 428 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1963 430 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1967 432 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1972 434 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1972 block B38 null  <||@
  Comment 1972 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1972 438 r10|DWORD = MOVE input: int[-148243|0xfffffffffffdbced]  <||@
  Comment 1978 440 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1983 442 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1988 444 JUMP ~[] destination: B38 -> B44  <||@
  Comment 1993 block B64 null  <||@
  Comment 1993 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1993 702 r10|DWORD = MOVE input: int[-168219|0xfffffffffffd6ee5]  <||@
  Comment 1999 704 JUMP ~[] destination: B64 -> B87  <||@
  Comment 2004 block B43 null  <||@
  Comment 2004 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2004 496 r10|DWORD = MOVE input: int[-163603|0xfffffffffffd80ed]  <||@
  Comment 2010 498 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2015 500 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2020 502 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2024 504 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2029 506 JUMP ~[] destination: B43 -> B44  <||@
  Comment 2034 block B95 null  <||@
  Comment 2034 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2034 994 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2039 996 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2044 998 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2048 1000 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2053 1002 MOV [r15|QWORD + 668] y: -200731 size: DWORD  <||@
  Comment 2064 1004 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2071 1006 DEOPT info [bci:31, 50]  <||@
  Comment 2071 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1038a1f90, value=0x10fee15fe]:0x10fee15fe}  <||@
  Comment 2076 [rdx:0, rsi:0, r8:0, r11:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4          |5 
     locals:  |r11|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |- 
     stack:   |rax|DWORD     |              |   |   |           |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD   <||@
  Comment 2077 block B99 null  <||@
  Comment 2077 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2077 1034 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2082 1036 r10|DWORD = MOVE input: int[-124435|0xfffffffffffe19ed]  <||@
  Comment 2088 1038 JUMP ~[] destination: B99 -> B100  <||@
  Comment 2093 block B97 null  <||@
  Comment 2093 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2093 1018 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2098 1020 r10|DWORD = MOVE input: int[-136499|0xfffffffffffdeacd]  <||@
  Comment 2104 1022 JUMP ~[] destination: B97 -> B100  <||@
  Comment 2109 block B24 null  <||@
  Comment 2109 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2109 280 r10|DWORD = MOVE input: int[-158491|0xfffffffffffd94e5]  <||@
  Comment 2115 282 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2120 284 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2125 286 JUMP ~[] destination: B24 -> B44  <||@
  Comment 2130 block B39 null  <||@
  Comment 2130 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2130 448 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2135 450 rbp|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2139 452 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2144 454 JUMP ~[] destination: B39 -> B40  <||@
  Comment 2144 block B40 null  <||@
  Comment 2144 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2144 458 r10|DWORD = MOVE input: int[-147507|0xfffffffffffdbfcd]  <||@
  Comment 2150 460 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2155 462 r8|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2160 464 JUMP ~[] destination: B40 -> B44  <||@
  Comment 2165 block B98 null  <||@
  Comment 2165 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2165 1026 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2170 1028 r10|DWORD = MOVE input: int[-127515|0xfffffffffffe0de5]  <||@
  Comment 2176 1030 JUMP ~[] destination: B98 -> B100  <||@
  Comment 2181 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1103168e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2181 4  <||@
  Comment 2187 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1038a1f88, value=0x10fee1500]:0x10fee1500}  <||@
  Comment 2187 5  <||@
  HexCodeFile>>> <|@
end_nmethod
