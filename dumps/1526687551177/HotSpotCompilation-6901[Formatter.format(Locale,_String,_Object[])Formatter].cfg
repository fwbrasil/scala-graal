begin_compilation
  name " HotSpotCompilation-6901[java.util.Formatter.format(Locale, String, Object[])]"
  method "HotSpotCompilation-6901[java.util.Formatter.format(Locale, String, Object[])]"
  date 1526687568790
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1461 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1461  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v66 v1494 v431 ?12 ?20 ?394 ?73 ?128 ?171 ?158 ?897 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1494 
=== Succesors ===
next: v1547 
=== Usages ===
v1547 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1494 #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/Locale;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?171 ?12 ?20 ?73 v495 ?128 v474 ?158 ?394 ?897 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v431 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?171 ?12 ?20 ?73 v1502 v1503 ?394 ?128 ?158 ?897 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2494
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 - - - - - - - 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1461 
=== Succesors ===
next: a11 
=== Usages ===
=== Predecessor ===
a1461 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1461 #next: a11  <|@  <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
returnStamp: a [Ljava/lang/Object; (unchecked=a [Ljava/util/Formatter$FormatString;)
signature: [Ljdk.vm.ci.meta.JavaType;@8f41453
stamp: void
targetMethod: HotSpotMethod<Formatter.parse(String)>
=== Inputs ===
arguments: a1 a3 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a3  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2497) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
?12 ?12 i17 i18 i43 ?897 ?897 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?897 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a11 <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Formatter.parse
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v431 
stateDuring: ?897 
=== Succesors ===
next: i1462 
=== Usages ===
?12 ?20 v1496 v1495 ?73 ?128 ?171 ?158 ?394 
=== Predecessor ===
v1547 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v431 stateDuring: ?897 #next: i1462  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - a11 
=== Succesors ===
=== Usages ===
v969 i1462 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - - a11  <|@  <|@
f <@~|@floating>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a11 
index: - 
=== Succesors ===
=== Usages ===
i1462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1462 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v1495 
=== Succesors ===
next: v1451 
=== Usages ===
v22 j678 v692 
=== Predecessor ===
a11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v1495 #next: v1451  <|@  <|@
f <@~|@floating>@ <|@
tid j678 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1462 
=== Succesors ===
=== Usages ===
j682 v684 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1462  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j682 j1359 j1410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j678 
y: j681 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j678 y: j681  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j682 
y: j678 
=== Succesors ===
=== Usages ===
v1451 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j682 y: j678  <|@  <|@
f <@~|@floating>@ <|@
tid i1007 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -143713
stableDimension: 0
stamp: i32 [-143713] ⇊00000000fffdce9f ⇈00000000fffdce9f
stampKind: i32
value: int[-143713|0xfffffffffffdce9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1008 i1008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.index(Formatter.java:2593) [bci: 0]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?394 ?73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 v537 v160 a1085 v906 v692 v594 v1456 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v684 
=== Succesors ===
trueSuccessor: v1447 
falseSuccessor: v1450 
=== Usages ===
=== Predecessor ===
i1462 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v684 #trueSuccessor: v1447 #falseSuccessor: v1450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1445 
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1445  <|@  <|@
f <@*|@fixed>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B110" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1449 
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1449  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1462 
y: i13 
=== Succesors ===
=== Usages ===
v1449 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1462 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v692 
=== Succesors ===
trueSuccessor: v1448 
falseSuccessor: v709 
=== Usages ===
=== Predecessor ===
v1450 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v692 #trueSuccessor: v1448 #falseSuccessor: v709  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1446 
=== Usages ===
=== Predecessor ===
v1449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1446  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1448 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1445 v1446 
=== Succesors ===
next: v15 
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1445 v1446 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 i64 v281 i1061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 v1010 v1022 v1032 v978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1149 v1150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1145 v1460 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v1444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B23" "B98" "B14" "B104" "B42" 
    successors "B6" "B109" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617001407344883683
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i17 i17 i17 i17 
=== Succesors ===
=== Usages ===
?20 ?73 ?171 i17 i17 ?158 i17 i17 ?394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i17 i17 i17 i17  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i18 i18 i18 i18 
=== Succesors ===
=== Usages ===
?20 ?73 i38 ?171 i18 i18 ?158 i18 i18 ?394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i18 i18 i18 i18  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i13 i64 i64 i64 i64 i64 
=== Succesors ===
=== Usages ===
?20 v22 v1496 ?73 ?128 ?171 i64 ?158 ?394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i13 i64 i64 i64 i64 i64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.72101372883296
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 5
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v15 
=== Succesors ===
next: v27 
=== Usages ===
i17 i18 i19 v25 v65 v67 v217 v218 v379 v794 v799 v789 v749 v779 v774 v769 v729 v754 v739 v744 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v15 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i1462 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i19 y: i1462  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
stamp: void
trueSuccessorProbability: 0.7881810862161587
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v23 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v23 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615561396821323718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1463 
=== Usages ===
v690 
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1463  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1444 v23 
=== Succesors ===
=== Usages ===
a1463 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1444 v23  <|@  <|@
f <@~|@floating>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a11 
index: i19 
=== Succesors ===
=== Usages ===
a1463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v690 
address: v1496 
=== Succesors ===
next: v1464 
=== Usages ===
a448 v1513 v1497 v1498 v1500 v1501 a1549 a1550 a1551 v1552 v1553 v1554 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v690 address: v1496 #next: v1464  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2502
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
v978 v1464 a1467 v1468 i1472 a1477 v1478 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1513 
=== Succesors ===
next: v86 
=== Usages ===
v1147 v1145 v1460 
=== Predecessor ===
a1463 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1513 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1464 
y: v1146 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1464 y: v1146  <|@  <|@
f <@~|@floating>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
i1465 a1469 a1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 i19 i19 i19 i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?208 ?203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 0.5289273050649689
=== Inputs ===
condition: v1147 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1147 #trueSuccessor: v79 #falseSuccessor: v85  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611542559700663216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1465 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.index
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.index(Formatter.java:2636) [bci: 1]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
=== Succesors ===
next: v341 
=== Usages ===
v341 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1497 #next: v341  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@6ede533
keySuccessors: [I@7af77a32
keys: [I@8e105b1
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
value: i1465 
=== Succesors ===
successors: v342 v343 v344 
=== Usages ===
=== Predecessor ===
i1465 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i1465 #successors: v342 v343 v344  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607799539553510130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1464 
y: v1144 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1464 y: v1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.8380436441764084
=== Inputs ===
condition: v1145 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1145 #trueSuccessor: v134 #falseSuccessor: v139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606757993882850451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1466 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1466  <|@  <|@
f <@~|@floating>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
a1466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1466 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.this$0
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/util/Formatter;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1498 
=== Succesors ===
next: a1467 
=== Usages ===
v1499 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1498 #next: a1467  <|@  <|@
f <@~|@floating>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1466 
=== Succesors ===
=== Usages ===
a1467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1499 
=== Succesors ===
next: v1468 
=== Usages ===
a460 v1514 
=== Predecessor ===
a1466 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1499 #next: v1468  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1467 
=== Succesors ===
=== Usages ===
v1468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1514 
=== Succesors ===
next: a1469 
=== Usages ===
v1149 
=== Predecessor ===
a1467 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1514 #next: a1469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.s
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
=== Succesors ===
next: v186 
=== Usages ===
a463 
=== Predecessor ===
v1468 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1497 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid a463 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1469 
=== Succesors ===
=== Usages ===
a396 a397 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1469  <|@  <|@
f <@~|@floating>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1468 
y: v1148 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1468 y: v1148  <|@  <|@
f <@~|@floating>@ <|@
tid a460 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1467 
=== Succesors ===
=== Usages ===
a400 a399 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1467  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.5924183141131246
=== Inputs ===
condition: v1149 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
a1469 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1149 #trueSuccessor: v179 #falseSuccessor: v185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603259812248755416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600667983186095990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v393  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1470 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1470  <|@  <|@
f <@~|@floating>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
i1470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1500 
=== Succesors ===
next: v730 
=== Usages ===
i468 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1500 #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1470 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1470  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i468 
y: i13 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i468 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v729 
=== Usages ===
=== Predecessor ===
i1470 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v726 #falseSuccessor: v729  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1471 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1471  <|@  <|@
f <@~|@floating>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
i1471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1501 
=== Succesors ===
next: v170 
=== Usages ===
i473 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1501 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1471 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1471  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@209fde72
keySuccessors: [I@4932632f
keys: [I@855a6d1
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: i473 
=== Succesors ===
successors: v165 v164 
=== Usages ===
=== Predecessor ===
i1471 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i473 #successors: v165 v164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid a1549 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1463 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1463  <|@  <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@899e6e7
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>
=== Inputs ===
arguments: a1549 a39 a2 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1549 a39 a2  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?898 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
tid ?898 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?171 
values: - - - 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?171 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.printInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v474 
stateDuring: ?898 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v474 stateDuring: ?898 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 2
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid i980 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -41747
stableDimension: 0
stamp: i32 [-41747] ⇊00000000ffff5ced ⇈00000000ffff5ced
stampKind: i32
value: int[-41747|0xffffffffffff5ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v989 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid i990 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -120083
stableDimension: 0
stamp: i32 [-120083] ⇊00000000fffe2aed ⇈00000000fffe2aed
stampKind: i32
value: int[-120083|0xfffffffffffe2aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v974 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid i975 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8723
stableDimension: 0
stamp: i32 [-8723] ⇊00000000ffffdded ⇈00000000ffffdded
stampKind: i32
value: int[-8723|0xffffffffffffdded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1472 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1472  <|@  <|@
f <@~|@floating>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i1472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 154]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1502 
=== Succesors ===
next: v740 
=== Usages ===
i43 v481 
=== Predecessor ===
v344 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1502 #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 156]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1472 
y: i9 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1472 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: i32
=== Inputs ===
x: i18 
y: i37 
=== Succesors ===
=== Usages ===
v44 v1503 ?128 ?128 i17 i18 v481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i18 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i38 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i43 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v739 
falseSuccessor: v736 
=== Usages ===
=== Predecessor ===
i1472 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v739 #falseSuccessor: v736  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v993  <|@  <|@
f <@~|@floating>@ <|@
tid i994 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -122643
stableDimension: 0
stamp: i32 [-122643] ⇊00000000fffe20ed ⇈00000000fffe20ed
stampKind: i32
value: int[-122643|0xfffffffffffe20ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i1472 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i1472  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v744 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v741 #falseSuccessor: v744  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1473 
=== Usages ===
a1475 
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1473  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
i1473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1553 
=== Succesors ===
next: v750 
=== Usages ===
i1457 
=== Predecessor ===
v741 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1553 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid i1457 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1473 
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1473  <|@  <|@
f <@~|@floating>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1457 
y: i13 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1457 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1456 
=== Succesors ===
trueSuccessor: v746 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
i1473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1456 #trueSuccessor: v746 #falseSuccessor: v749  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1474 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1474  <|@  <|@
f <@~|@floating>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
i1474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1552 
=== Succesors ===
next: v127 
=== Usages ===
i1453 
=== Predecessor ===
v746 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1552 #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i1453 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1474 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1474  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@209fde72
keySuccessors: [I@4932632f
keys: [I@855a6d1
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
value: i1453 
=== Succesors ===
successors: v122 v121 
=== Usages ===
=== Predecessor ===
i1474 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i1453 #successors: v122 v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1475 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1475  <|@  <|@
f <@~|@floating>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a4 
index: i38 
=== Succesors ===
=== Usages ===
a1475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v741 
address: v1503 
=== Succesors ===
next: v124 
=== Usages ===
a489 
=== Predecessor ===
v122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v741 address: v1503 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid a448 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1463 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1463  <|@  <|@
f <@~|@floating>@ <|@
tid a489 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1475 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1475  <|@  <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@562bc5c8
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>
=== Inputs ===
arguments: a448 a489 a2 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a448 a489 a2  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 190
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i38 i38 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?899 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i38 i38 a11 i19 - - -  <|@  <|@
tid ?899 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?128 
values: - - - 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?128 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.printInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v495 
stateDuring: ?899 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
a1475 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v495 stateDuring: ?899 #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid i982 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30739
stableDimension: 0
stamp: i32 [-30739] ⇊00000000ffff87ed ⇈00000000ffff87ed
stampKind: i32
value: int[-30739|0xffffffffffff87ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v997  <|@  <|@
f <@~|@floating>@ <|@
tid i998 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125971
stableDimension: 0
stamp: i32 [-125971] ⇊00000000fffe13ed ⇈00000000fffe13ed
stampKind: i32
value: int[-125971|0xfffffffffffe13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v995  <|@  <|@
f <@~|@floating>@ <|@
tid i996 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -123419
stableDimension: 0
stamp: i32 [-123419] ⇊00000000fffe1de5 ⇈00000000fffe1de5
stampKind: i32
value: int[-123419|0xfffffffffffe1de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610573034687243228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@~|@floating>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1464 
y: v1144 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1464 y: v1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1460 
=== Succesors ===
trueSuccessor: v751 
falseSuccessor: v754 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1460 #trueSuccessor: v751 #falseSuccessor: v754  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610573034687243228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1476 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
a1476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.this$0
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/util/Formatter;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1554 
=== Succesors ===
next: a1477 
=== Usages ===
v1504 
=== Predecessor ===
v751 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1554 #next: a1477  <|@  <|@
f <@~|@floating>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1476 
=== Succesors ===
=== Usages ===
a1477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1504 
=== Succesors ===
next: v1478 
=== Usages ===
a505 v1515 
=== Predecessor ===
a1476 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1504 #next: v1478  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1477 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1515 
=== Succesors ===
next: a1479 
=== Usages ===
v1150 
=== Predecessor ===
a1477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1515 #next: a1479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.s
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
=== Succesors ===
next: v416 
=== Usages ===
a508 
=== Predecessor ===
v1478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1497 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid a508 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1479 
=== Succesors ===
=== Usages ===
a396 a397 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1478 
y: v1148 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1478 y: v1148  <|@  <|@
f <@~|@floating>@ <|@
tid a505 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1477 
=== Succesors ===
=== Usages ===
a399 a400 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1477  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.5924183141131246
=== Inputs ===
condition: v1150 
=== Succesors ===
trueSuccessor: v410 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
a1479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1150 #trueSuccessor: v410 #falseSuccessor: v415  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607355497019049734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B10" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a397 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v389 
values: a463 a508 
=== Succesors ===
=== Usages ===
?200 v1505 ?295 v403 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: a463 a508  <|@  <|@
f <@~|@floating>@ <|@
tid a400 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v389 
values: a460 a505 
=== Succesors ===
=== Usages ===
j1123 ?216 ?288 ?200 ?901 ?277 v1507 ?295 v1508 v573 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: a460 a505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v390 v391 
=== Succesors ===
next: v770 
=== Usages ===
a397 a400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v390 v391 #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: a397 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a397  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v769 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v769 #falseSuccessor: v766  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1011 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1011  <|@  <|@
f <@~|@floating>@ <|@
tid i1012 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130579
stableDimension: 0
stamp: i32 [-130579] ⇊00000000fffe01ed ⇈00000000fffe01ed
stampKind: i32
value: int[-130579|0xfffffffffffe01ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1480 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1480  <|@  <|@
f <@~|@floating>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a397 
index: - 
=== Succesors ===
=== Usages ===
a1480 a1485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a397 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1505 
=== Succesors ===
next: v775 
=== Usages ===
a513 v514 v1506 
=== Predecessor ===
v766 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1505 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: a1480 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1480  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v774 
falseSuccessor: v771 
=== Usages ===
=== Predecessor ===
a1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v774 #falseSuccessor: v771  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1013 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid i1014 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131851
stableDimension: 0
stamp: i32 [-131851] ⇊00000000fffdfcf5 ⇈00000000fffdfcf5
stampKind: i32
value: int[-131851|0xfffffffffffdfcf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1481 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a400 
index: - 
=== Succesors ===
=== Usages ===
a1481 v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
=== Succesors ===
next: v780 
=== Usages ===
a523 v524 v1509 v1511 a1548 
=== Predecessor ===
v771 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1508 #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1481  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v524 
=== Succesors ===
trueSuccessor: v779 
falseSuccessor: v776 
=== Usages ===
=== Predecessor ===
a1481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v524 #trueSuccessor: v779 #falseSuccessor: v776  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid i1016 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -134411
stableDimension: 0
stamp: i32 [-134411] ⇊00000000fffdf2f5 ⇈00000000fffdf2f5
stampKind: i32
value: int[-134411|0xfffffffffffdf2f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1482 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1481 
=== Succesors ===
=== Usages ===
i1482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: i1483 
=== Usages ===
i280 i942 i555 v920 
=== Predecessor ===
v776 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: i1483  <|@  <|@
f <@~|@floating>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1480 
=== Succesors ===
=== Usages ===
i1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1506 
=== Succesors ===
next: i1484 
=== Usages ===
i263 j1057 v643 i612 i273 i555 ?295 j1452 
=== Predecessor ===
i1482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1506 #next: i1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a400 
index: - 
=== Succesors ===
=== Usages ===
i1484 v572 i1492 v629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
=== Succesors ===
next: v284 
=== Usages ===
i263 j1053 v537 v556 
=== Predecessor ===
i1483 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1507 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i1483 
y: i1484 
=== Succesors ===
=== Usages ===
v573 i280 v572 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1483 y: i1484  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i263 
y: i1482 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i263 y: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i280 
y: i37 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i280 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9451567136210046
=== Inputs ===
condition: v281 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
i1484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v281 #trueSuccessor: v282 #falseSuccessor: v283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609501881101477936
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1484 
y: i13 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1484 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v542 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v542 #falseSuccessor: v538  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4579887141049957158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609433650482189626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1482 
y: i1483 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1482 y: i1483  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i555 
y: i1484 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i555 y: i1484  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v559 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v559 #falseSuccessor: v557  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4579799805857268122
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B31" "B33" "B35" "B40" 
    successors 
    xhandlers
    flags 
    probability 4584347073080983136
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1008 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-143713 - -130579] ⇊00000000fffc0085
valueDescription: i32
=== Inputs ===
merge: v1005 
values: i1007 i1012 i1014 i1016 i1007 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1005 values: i1007 i1012 i1014 i1016 i1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1006 v1011 v1013 v1015 v1035 
=== Succesors ===
next: v1010 
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1006 v1011 v1013 v1015 v1035 #next: v1010  <|@  <|@
f <@~|@floating>@ <|@
tid a1551 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1463 
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1463  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2504
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 a1551 - - i100 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 a1551 - - i100  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
actionAndReason: i1008 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?73 actionAndReason: i1008 speculation: a39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609366102169094199
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1047 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1047  <|@  <|@
f <@~|@floating>@ <|@
tid a513 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1480 
=== Succesors ===
=== Usages ===
j1047 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a513 
=== Succesors ===
next: j1052 
=== Usages ===
v1516 
=== Predecessor ===
v557 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a513 #next: j1052  <|@  <|@
f <@~|@floating>@ <|@
tid a523 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
j1052 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a523 
=== Succesors ===
next: v1058 
=== Usages ===
v1517 
=== Predecessor ===
j1047 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a523 #next: v1058  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1047 
index: - 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1047 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1053 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1484 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1052 
index: j1053 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1052 index: j1053  <|@  <|@
f <@~|@floating>@ <|@
tid j1057 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1483 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1516 v1517 j1057 
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
j1052 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1516 v1517 j1057 #next: v572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1507 value: i263 stateAfter: - lastLocationAccess: - #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i287 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i287  <|@  <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@cdaef39
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a400 i263 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a400 i263  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: - - - 
=== Succesors ===
=== Usages ===
?200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - -  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?203 
values: a400 a397 
=== Succesors ===
=== Usages ===
?216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: a400 a397  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: a400 - 
=== Succesors ===
=== Usages ===
?232 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: a400 -  <|@  <|@
tid ?232 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: - - 
=== Succesors ===
=== Usages ===
?255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: - -  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?232 
values: - - 
=== Succesors ===
=== Usages ===
?277 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?232 values: - -  <|@  <|@
tid ?277 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?255 
values: a400 - 
=== Succesors ===
=== Usages ===
?295 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?255 values: a400 -  <|@  <|@
tid ?295 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?277 
values: a400 a397 i1483 
=== Succesors ===
=== Usages ===
?288 ?292 ?901 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?277 values: a400 a397 i1483  <|@  <|@
f <@~|@floating>@ <|@
tid a1548 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
?901 ?288 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1481  <|@  <|@
tid ?901 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?295 
values: - - a400 a1548 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?295 values: - - a400 a1548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v573 
stateDuring: ?901 
=== Succesors ===
next: a1485 
=== Usages ===
?288 a1085 i612 j1154 i942 v920 i1061 v1070 v906 v1111 
=== Predecessor ===
v283 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v573 stateDuring: ?901 #next: a1485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1505 
=== Succesors ===
next: i1486 
=== Usages ===
a579 v1510 
=== Predecessor ===
i287 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1505 #next: i1486  <|@  <|@
tid ?288 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?295 
values: - - a400 a1548 i287 
=== Succesors ===
=== Usages ===
a1085 v1022 i1486 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?295 values: - - a400 a1548 i287  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1485 
=== Succesors ===
=== Usages ===
i1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1486 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?288 
guard: - 
address: v1510 
=== Succesors ===
next: v790 
=== Usages ===
v643 
=== Predecessor ===
a1485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?288 guard: - address: v1510 #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1486 
y: i1483 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1486 y: i1483  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v643 
=== Succesors ===
trueSuccessor: v789 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
i1486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v643 #trueSuccessor: v789 #falseSuccessor: v786  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid i1024 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149779
stableDimension: 0
stamp: i32 [-149779] ⇊00000000fffdb6ed ⇈00000000fffdb6ed
stampKind: i32
value: int[-149779|0xfffffffffffdb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1020 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
v789 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i287 
y: i13 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i287 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v906 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v907 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v906 #trueSuccessor: v911 #falseSuccessor: v907  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1025 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1025  <|@  <|@
f <@~|@floating>@ <|@
tid i1026 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235105
stableDimension: 0
stamp: i32 [-235105] ⇊00000000fffc699f ⇈00000000fffc699f
stampKind: i32
value: int[-235105|0xfffffffffffc699f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1020 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1020 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-235105 - -148747] ⇊00000000fffc2085 ⇈00000000fffdffff
valueDescription: i32
=== Inputs ===
merge: v1017 
values: i1024 i1026 
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1017 values: i1024 i1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1023 v1025 
=== Succesors ===
next: v1022 
=== Usages ===
i1020 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1023 v1025 #next: v1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?288 
actionAndReason: i1020 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?288 actionAndReason: i1020 speculation: a39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1064 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1064  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1064 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1108 
=== Usages ===
v1518 v1519 
=== Predecessor ===
v907 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1108  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1108 v1110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
=== Succesors ===
next: j1109 
=== Usages ===
j1068 v1520 v1521 a1084 v1526 v1522 v1523 v1524 v1525 
=== Predecessor ===
j1064 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1518 #next: j1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1519 
=== Succesors ===
next: v1073 
=== Usages ===
v1074 
=== Predecessor ===
j1108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1519 #next: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid i1069 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i287 
y: i1069 
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i287 y: i1069  <|@  <|@
f <@~|@floating>@ <|@
tid j1060 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1112 v1165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1070 
=== Succesors ===
trueSuccessor: v1072 
falseSuccessor: v1071 
=== Usages ===
=== Predecessor ===
j1109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1070 #trueSuccessor: v1072 #falseSuccessor: v1071  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590365557341247618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid i1061 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i287 
y: i37 
=== Succesors ===
=== Usages ===
i1093 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i287 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i1092 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1093 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1093 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1061 
y: i1092 
=== Succesors ===
=== Usages ===
i1063 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1061 y: i1092  <|@  <|@
f <@~|@floating>@ <|@
tid i1062 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1063 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1063 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1093 
y: i1062 
=== Succesors ===
=== Usages ===
j1067 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1093 y: i1062  <|@  <|@
f <@~|@floating>@ <|@
tid j1067 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1063 
=== Succesors ===
=== Usages ===
j1068 v1522 v1523 v1524 v1525 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1063  <|@  <|@
f <@~|@floating>@ <|@
tid j1068 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
x: j1067 
y: j1108 
=== Succesors ===
=== Usages ===
v1074 v1110 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1067 y: j1108  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1109 
y: j1068 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1109 y: j1068  <|@  <|@
f <@*|@fixed>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1074 
=== Succesors ===
trueSuccessor: v1079 
falseSuccessor: v1078 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1074 #trueSuccessor: v1079 #falseSuccessor: v1078  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560436678219517306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1079 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590308545974466791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1110 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
value: j1068 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1097 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1518 value: j1068 stateAfter: - lastLocationAccess: - #next: v1097  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1067 
index: j1108 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1522 
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v1110 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1522 #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1067 
index: j1108 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1523 
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1523 #next: v1103  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1067 
index: j1108 
=== Succesors ===
=== Usages ===
v1103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1524 
=== Succesors ===
next: v1106 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1524 #next: v1106  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1067 
index: j1108 
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1525 
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
v1103 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1525 #next: v1111  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
v1111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1520 
value: i287 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1520 value: i287 stateAfter: - lastLocationAccess: - #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
value: j1060 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v1111 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1521 value: j1060 stateAfter: - lastLocationAccess: - #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
v1115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1526 
value: v1151 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1526 value: v1151 stateAfter: - lastLocationAccess: - #next: v1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1084 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1108 
=== Succesors ===
next: v1086 
=== Usages ===
a1089 
=== Predecessor ===
v1083 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1108 #next: v1086  <|@  <|@
f <@*|@fixed>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1087 
=== Predecessor ===
a1084 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576221298828238052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1075  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1071 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B50" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576677389762484668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1075 v1077 
=== Succesors ===
next: a1085 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1075 v1077 #next: a1085  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1085 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1085 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?288 
arguments: v1059 i287 i13 
=== Succesors ===
next: v1088 
=== Usages ===
a1089 
=== Predecessor ===
v1076 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?288 arguments: v1059 i287 i13 #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1087 
=== Predecessor ===
a1085 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1087 
values: a1084 a1085 
=== Succesors ===
=== Usages ===
v1531 a949 v1512 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1087 values: a1084 a1085  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1086 v1088 
=== Succesors ===
next: v1295 
=== Usages ===
a1089 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1086 v1088 #next: v1295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1168 
=== Usages ===
j1296 j1298 
=== Predecessor ===
v1087 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1482 
y: i287 
=== Succesors ===
=== Usages ===
i942 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1482 y: i287  <|@  <|@
f <@~|@floating>@ <|@
tid i942 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v920 
trueValue: i1482 
falseValue: i287 
=== Succesors ===
=== Usages ===
j1155 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v920 trueValue: i1482 falseValue: i287  <|@  <|@
f <@~|@floating>@ <|@
tid j1155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i942 
=== Succesors ===
=== Usages ===
j1359 v1531 j1159 v1165 v1292 j1342 j1348 j1352 j1356 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i942  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1155 
y: j1060 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1155 y: j1060  <|@  <|@
f <@~|@floating>@ <|@
tid j1301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1315 j1377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1355 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1356 j1407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1323 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1324 j1383 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1351 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1352 j1404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1037 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1389 j1332 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1347 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1348 j1401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j426 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1395 j1340 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1342 j1396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1048 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1384 v1397 j1325 j1333 v1343 j1390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1165 
=== Succesors ===
trueSuccessor: v1166 
falseSuccessor: v1167 
=== Usages ===
=== Predecessor ===
v1295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1165 #trueSuccessor: v1166 #falseSuccessor: v1167  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1166 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1171  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1089 
index: - 
=== Succesors ===
=== Usages ===
j1298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1089 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1298 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1295 
address: v1512 
=== Succesors ===
=== Usages ===
v1532 v1534 v1536 v1538 v1540 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1295 address: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1481 
=== Succesors ===
=== Usages ===
j1296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid j1296 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1295 
address: v1511 
=== Succesors ===
=== Usages ===
v1533 v1535 v1537 v1539 v1541 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1295 address: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid j1342 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1155 
y: j1341 
=== Succesors ===
=== Usages ===
v1343 v1345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1155 y: j1341  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1342 
y: j1048 
=== Succesors ===
=== Usages ===
v1171 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1342 y: j1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1343 
=== Succesors ===
trueSuccessor: v1169 
falseSuccessor: v1170 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1343 #trueSuccessor: v1169 #falseSuccessor: v1170  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1181 
=== Usages ===
=== Predecessor ===
v1171 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
v1169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1172 
=== Usages ===
=== Predecessor ===
v1171 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
v1170 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B99" 
    successors "B60" "B99" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1333 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1173 
values: j1048 j1340 
=== Succesors ===
=== Usages ===
v1541 j1340 v1540 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1173 values: j1048 j1340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1172 
=== Succesors ===
next: v1487 
=== Usages ===
v1487 v1177 v1178 j1333 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1172 #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1296 
index: j1333 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1296 index: j1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1173 
address: v1541 
=== Succesors ===
next: v1428 
=== Usages ===
v1428 
=== Predecessor ===
v1173 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1173 address: v1541 #next: v1428  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1298 
index: j1333 
=== Succesors ===
=== Usages ===
v1428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1298 index: j1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
value: v1487 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1180 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1540 value: v1487 stateAfter: - lastLocationAccess: - #next: v1180  <|@  <|@
f <@~|@floating>@ <|@
tid j1340 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1333 
y: j426 
=== Succesors ===
=== Usages ===
j1325 j1333 v1345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1333 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1342 
y: j1340 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1342 y: j1340  <|@  <|@
f <@*|@fixed>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1345 
=== Succesors ===
trueSuccessor: v1177 
falseSuccessor: v1179 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1345 #trueSuccessor: v1177 #falseSuccessor: v1179  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1173 
=== Succesors ===
next: v1183 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1173 #next: v1183  <|@  <|@
f <@*|@fixed>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
v1177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1325 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1182 
values: j1048 j1340 
=== Succesors ===
=== Usages ===
v1539 j1332 j1316 v1349 v1538 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1182 values: j1048 j1340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1181 v1183 
=== Succesors ===
next: v1205 
=== Usages ===
j1325 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1181 v1183 #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid j1348 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1155 
y: j1347 
=== Succesors ===
=== Usages ===
v1349 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1155 y: j1347  <|@  <|@
f <@~|@floating>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1348 
y: j1325 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1348 y: j1325  <|@  <|@
f <@*|@fixed>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1349 
=== Succesors ===
trueSuccessor: v1204 
falseSuccessor: v1203 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1349 #trueSuccessor: v1204 #falseSuccessor: v1203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1208 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
v1204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1488 
=== Usages ===
v1488 
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1488  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1296 
index: j1325 
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1296 index: j1325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1203 
address: v1539 
=== Succesors ===
next: v1426 
=== Usages ===
v1426 
=== Predecessor ===
v1203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1203 address: v1539 #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1298 
index: j1325 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1298 index: j1325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1538 
value: v1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1192 
=== Usages ===
=== Predecessor ===
v1488 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1538 value: v1488 stateAfter: - lastLocationAccess: - #next: v1192  <|@  <|@
f <@~|@floating>@ <|@
tid j1332 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1325 
y: j1037 
=== Succesors ===
=== Usages ===
j1316 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1325 y: j1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
v1426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1316 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1193 
values: j1332 j1325 
=== Succesors ===
=== Usages ===
v1537 j1324 j1308 v1353 v1536 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1193 values: j1332 j1325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1192 v1208 
=== Succesors ===
next: v1211 
=== Usages ===
j1316 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1192 v1208 #next: v1211  <|@  <|@
f <@~|@floating>@ <|@
tid j1352 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1155 
y: j1351 
=== Succesors ===
=== Usages ===
v1353 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1155 y: j1351  <|@  <|@
f <@~|@floating>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1352 
y: j1316 
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1352 y: j1316  <|@  <|@
f <@*|@fixed>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1353 
=== Succesors ===
trueSuccessor: v1210 
falseSuccessor: v1209 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1353 #trueSuccessor: v1210 #falseSuccessor: v1209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1214 
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1214  <|@  <|@
f <@*|@fixed>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
v1210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1489 
=== Usages ===
v1489 
=== Predecessor ===
v1211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1296 
index: j1316 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1296 index: j1316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1209 
address: v1537 
=== Succesors ===
next: v1424 
=== Usages ===
v1424 
=== Predecessor ===
v1209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1209 address: v1537 #next: v1424  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1298 
index: j1316 
=== Succesors ===
=== Usages ===
v1424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1298 index: j1316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1536 
value: v1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v1489 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1536 value: v1489 stateAfter: - lastLocationAccess: - #next: v1196  <|@  <|@
f <@~|@floating>@ <|@
tid j1324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1316 
y: j1323 
=== Succesors ===
=== Usages ===
j1308 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1316 y: j1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
v1424 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1308 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1197 
values: j1324 j1316 
=== Succesors ===
=== Usages ===
v1535 j1315 j1299 v1357 v1534 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1197 values: j1324 j1316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1196 v1214 
=== Succesors ===
next: v1217 
=== Usages ===
j1308 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1196 v1214 #next: v1217  <|@  <|@
f <@~|@floating>@ <|@
tid j1356 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1155 
y: j1355 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1155 y: j1355  <|@  <|@
f <@~|@floating>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1356 
y: j1308 
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1356 y: j1308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1357 
=== Succesors ===
trueSuccessor: v1216 
falseSuccessor: v1215 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1357 #trueSuccessor: v1216 #falseSuccessor: v1215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1220  <|@  <|@
f <@*|@fixed>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
v1216 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1490 
=== Usages ===
v1490 
=== Predecessor ===
v1217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1296 
index: j1308 
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1296 index: j1308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1215 
address: v1535 
=== Succesors ===
next: v1422 
=== Usages ===
v1422 
=== Predecessor ===
v1215 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1215 address: v1535 #next: v1422  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1298 
index: j1308 
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1298 index: j1308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
value: v1490 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1199 
=== Usages ===
=== Predecessor ===
v1490 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1534 value: v1490 stateAfter: - lastLocationAccess: - #next: v1199  <|@  <|@
f <@~|@floating>@ <|@
tid j1315 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1308 
y: j1301 
=== Succesors ===
=== Usages ===
j1299 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1308 y: j1301  <|@  <|@
f <@*|@fixed>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
v1422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1299 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1200 
values: j1315 j1308 
=== Succesors ===
=== Usages ===
v1533 v1360 v1532 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1200 values: j1315 j1308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1199 v1220 
=== Succesors ===
next: v1223 
=== Usages ===
j1299 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1199 v1220 #next: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid j1359 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1155 
y: j681 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1155 y: j681  <|@  <|@
f <@~|@floating>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1359 
y: j1299 
=== Succesors ===
=== Usages ===
v1223 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1359 y: j1299  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1360 
=== Succesors ===
trueSuccessor: v1222 
falseSuccessor: v1221 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1360 #trueSuccessor: v1222 #falseSuccessor: v1221  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1226  <|@  <|@
f <@*|@fixed>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1491 
=== Usages ===
i1491 
=== Predecessor ===
v1223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1491  <|@  <|@
f <@~|@floating>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1296 
index: j1299 
=== Succesors ===
=== Usages ===
i1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1296 index: j1299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1491 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1221 
address: v1533 
=== Succesors ===
next: v1420 
=== Usages ===
v1420 
=== Predecessor ===
v1221 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1221 address: v1533 #next: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1298 
index: j1299 
=== Succesors ===
=== Usages ===
v1420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1298 index: j1299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1532 
value: i1491 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1202 
=== Usages ===
=== Predecessor ===
i1491 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1532 value: i1491 stateAfter: - lastLocationAccess: - #next: v1202  <|@  <|@
f <@*|@fixed>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B55" "B72" "B71" 
    successors "B74" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1185 v1202 v1226 
=== Succesors ===
next: v1363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1185 v1202 v1226 #next: v1363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1233 
=== Usages ===
j1365 
=== Predecessor ===
v1186 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid j1154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i287 
=== Succesors ===
=== Usages ===
j1159 v1292 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i287  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1155 
y: j1154 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1155 y: j1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1292 
=== Succesors ===
trueSuccessor: v1232 
falseSuccessor: v1231 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1292 #trueSuccessor: v1232 #falseSuccessor: v1231  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1236 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1236  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1089 
index: j1155 
=== Succesors ===
=== Usages ===
j1365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1089 index: j1155  <|@  <|@
f <@~|@floating>@ <|@
tid j1365 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1363 
address: v1531 
=== Succesors ===
=== Usages ===
v1542 v1543 v1544 v1545 v1546 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1363 address: v1531  <|@  <|@
f <@~|@floating>@ <|@
tid j1159 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1154 
y: j1155 
=== Succesors ===
=== Usages ===
j1410 j1396 j1401 j1404 j1407 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1154 y: j1155  <|@  <|@
f <@~|@floating>@ <|@
tid j1396 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1159 
y: j1341 
=== Succesors ===
=== Usages ===
v1397 v1399 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1159 y: j1341  <|@  <|@
f <@~|@floating>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1396 
y: j1048 
=== Succesors ===
=== Usages ===
v1236 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1396 y: j1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1397 
=== Succesors ===
trueSuccessor: v1234 
falseSuccessor: v1235 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1397 #trueSuccessor: v1234 #falseSuccessor: v1235  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1245 
=== Usages ===
=== Predecessor ===
v1236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1245  <|@  <|@
f <@*|@fixed>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
v1234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
v1236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
v1235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B91" 
    successors "B78" "B91" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1390 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1238 
values: j1048 j1395 
=== Succesors ===
=== Usages ===
v1546 j1395 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1238 values: j1048 j1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1237 
=== Succesors ===
next: v1438 
=== Usages ===
j1390 v1241 v1242 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1237 #next: v1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1365 
index: j1390 
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1546 
value: v1439 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1244 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1546 value: v1439 stateAfter: - lastLocationAccess: - #next: v1244  <|@  <|@
f <@~|@floating>@ <|@
tid j1395 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1390 
y: j426 
=== Succesors ===
=== Usages ===
j1384 j1390 v1399 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1390 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1396 
y: j1395 
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1396 y: j1395  <|@  <|@
f <@*|@fixed>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1399 
=== Succesors ===
trueSuccessor: v1241 
falseSuccessor: v1243 
=== Usages ===
=== Predecessor ===
v1438 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1399 #trueSuccessor: v1241 #falseSuccessor: v1243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1238 
=== Succesors ===
next: v1247 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1238 #next: v1247  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
v1241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1384 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1246 
values: j1048 j1395 
=== Succesors ===
=== Usages ===
v1545 j1389 j1378 v1402 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1246 values: j1048 j1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1245 v1247 
=== Succesors ===
next: v1268 
=== Usages ===
j1384 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1245 v1247 #next: v1268  <|@  <|@
f <@~|@floating>@ <|@
tid j1401 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1159 
y: j1347 
=== Succesors ===
=== Usages ===
v1402 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1159 y: j1347  <|@  <|@
f <@~|@floating>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1401 
y: j1384 
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1401 y: j1384  <|@  <|@
f <@*|@fixed>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1402 
=== Succesors ===
trueSuccessor: v1267 
falseSuccessor: v1266 
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1402 #trueSuccessor: v1267 #falseSuccessor: v1266  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1271 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
v1267 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1437 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1437  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1365 
index: j1384 
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1384  <|@  <|@
f <@~|@floating>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1545 
value: v1443 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1256 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1545 value: v1443 stateAfter: - lastLocationAccess: - #next: v1256  <|@  <|@
f <@~|@floating>@ <|@
tid j1389 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1384 
y: j1037 
=== Succesors ===
=== Usages ===
j1378 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1384 y: j1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
v1437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1378 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1257 
values: j1389 j1384 
=== Succesors ===
=== Usages ===
v1544 j1383 j1372 v1405 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1257 values: j1389 j1384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1256 v1271 
=== Succesors ===
next: v1274 
=== Usages ===
j1378 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1256 v1271 #next: v1274  <|@  <|@
f <@~|@floating>@ <|@
tid j1404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1159 
y: j1351 
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1159 y: j1351  <|@  <|@
f <@~|@floating>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1404 
y: j1378 
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1404 y: j1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1405 
=== Succesors ===
trueSuccessor: v1273 
falseSuccessor: v1272 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1405 #trueSuccessor: v1273 #falseSuccessor: v1272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1277 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1277  <|@  <|@
f <@*|@fixed>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1260 
=== Predecessor ===
v1273 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1435  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1365 
index: j1378 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1378  <|@  <|@
f <@~|@floating>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1544 
value: v1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1259 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1544 value: v1442 stateAfter: - lastLocationAccess: - #next: v1259  <|@  <|@
f <@~|@floating>@ <|@
tid j1383 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1378 
y: j1323 
=== Succesors ===
=== Usages ===
j1372 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1378 y: j1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1260 
=== Predecessor ===
v1435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1372 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1260 
values: j1383 j1378 
=== Succesors ===
=== Usages ===
v1543 j1377 j1366 v1408 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1260 values: j1383 j1378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1259 v1277 
=== Succesors ===
next: v1280 
=== Usages ===
j1372 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1259 v1277 #next: v1280  <|@  <|@
f <@~|@floating>@ <|@
tid j1407 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1159 
y: j1355 
=== Succesors ===
=== Usages ===
v1408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1159 y: j1355  <|@  <|@
f <@~|@floating>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1407 
y: j1372 
=== Succesors ===
=== Usages ===
v1280 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1407 y: j1372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1408 
=== Succesors ===
trueSuccessor: v1279 
falseSuccessor: v1278 
=== Usages ===
=== Predecessor ===
v1260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1408 #trueSuccessor: v1279 #falseSuccessor: v1278  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1283 
=== Usages ===
=== Predecessor ===
v1280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1283  <|@  <|@
f <@*|@fixed>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1263 
=== Predecessor ===
v1279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1433 
=== Usages ===
=== Predecessor ===
v1280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1433  <|@  <|@
f <@~|@floating>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1365 
index: j1372 
=== Succesors ===
=== Usages ===
v1433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1372  <|@  <|@
f <@~|@floating>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1543 
value: v1441 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1262 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1543 value: v1441 stateAfter: - lastLocationAccess: - #next: v1262  <|@  <|@
f <@~|@floating>@ <|@
tid j1377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1372 
y: j1301 
=== Succesors ===
=== Usages ===
j1366 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1372 y: j1301  <|@  <|@
f <@*|@fixed>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1263 
=== Predecessor ===
v1433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1366 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1263 
values: j1377 j1372 
=== Succesors ===
=== Usages ===
v1542 v1411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1263 values: j1377 j1372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1262 v1283 
=== Succesors ===
next: v1286 
=== Usages ===
j1366 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1262 v1283 #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid j1410 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1159 
y: j681 
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1159 y: j681  <|@  <|@
f <@~|@floating>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1410 
y: j1366 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1410 y: j1366  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1411 
=== Succesors ===
trueSuccessor: v1285 
falseSuccessor: v1284 
=== Usages ===
=== Predecessor ===
v1263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1411 #trueSuccessor: v1285 #falseSuccessor: v1284  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1289 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v1285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1431 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1365 
index: j1366 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1366  <|@  <|@
f <@~|@floating>@ <|@
tid i1440 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1542 
value: i1440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1265 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1542 value: i1440 stateAfter: - lastLocationAccess: - #next: v1265  <|@  <|@
f <@*|@fixed>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v1431 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1242  <|@  <|@
f <@*|@fixed>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1249 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v1231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B90" "B89" 
    successors "B94" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1249 v1265 v1289 
=== Succesors ===
next: a949 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1249 v1265 v1289 #next: a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1089 
=== Succesors ===
next: v576 
=== Usages ===
j1135 a575 
=== Predecessor ===
v1250 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1089 #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid a575 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Compress
stamp: n! -
=== Inputs ===
value: a949 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
value: a575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1123 
=== Usages ===
=== Predecessor ===
a949 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1508 value: a575 stateAfter: - lastLocationAccess: - #next: j1123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a400 
=== Succesors ===
next: v1129 
=== Usages ===
j1125 
=== Predecessor ===
v576 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a400 #next: v1129  <|@  <|@
f <@~|@floating>@ <|@
tid i1124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1125 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1123 
y: i1124 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1123 y: i1124  <|@  <|@
f <@~|@floating>@ <|@
tid j1128 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1125 
index: j1128 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1125 index: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid i1130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1527 
value: i1130 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1492 
=== Usages ===
=== Predecessor ===
j1123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1527 value: i1130 stateAfter: - lastLocationAccess: - #next: i1492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
=== Succesors ===
next: v600 
=== Usages ===
j1136 i273 v594 v613 
=== Predecessor ===
v1129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1507 #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1492 
y: i13 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1492 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
i1492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v599 #falseSuccessor: v595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4561247506547066844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v598  <|@  <|@
f <@*|@fixed>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590935671009055886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i612 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i287 
y: i1483 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i287 y: i1483  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i612 
y: i1492 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i612 y: i1492  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v613 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v613 #trueSuccessor: v616 #falseSuccessor: v614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4561166423714311889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v615  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4565710564758059862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v598 v615 
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v598 v615 #next: v618  <|@  <|@
tid ?292 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?295 
values: - - 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?295 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?292 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?292  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590872958505596976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1133 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1133  <|@  <|@
f <@~|@floating>@ <|@
tid a579 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1485 
=== Succesors ===
=== Usages ===
j1133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a579 
=== Succesors ===
next: j1135 
=== Usages ===
v1528 
=== Predecessor ===
v614 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a579 #next: j1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a949 
=== Succesors ===
next: v1140 
=== Usages ===
v1529 
=== Predecessor ===
j1133 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a949 #next: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1133 
index: - 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1133 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1136 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1492 
=== Succesors ===
=== Usages ===
v1529 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1492  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1135 
index: j1136 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1135 index: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1483 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1528 v1529 j1452 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
j1135 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1528 v1529 j1452 #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i1483 
y: i1492 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1483 y: i1492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
value: i273 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1507 value: i273 stateAfter: - lastLocationAccess: - #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2531) [bci: 252]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1178 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1178  <|@  <|@
f <@*|@fixed>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1173 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1179 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604610294881663404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B11" "B100" 
    successors "B102" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a396 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v392 
values: a463 a508 
=== Succesors ===
=== Usages ===
v632 v404 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v392 values: a463 a508  <|@  <|@
f <@~|@floating>@ <|@
tid a399 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v392 
values: a460 a505 
=== Succesors ===
=== Usages ===
v1530 v632 ?242 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v392 values: a460 a505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v393 v395 
=== Succesors ===
next: v1493 
=== Usages ===
a396 a399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v393 v395 #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a399 
index: - 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
=== Succesors ===
next: v795 
=== Usages ===
v1153 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1530 #next: v795  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1493 
y: v1152 
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1493 y: v1152  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1153 
=== Succesors ===
trueSuccessor: v791 
falseSuccessor: v794 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1153 #trueSuccessor: v791 #falseSuccessor: v794  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: a396 
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a396  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1062) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v799 
falseSuccessor: v796 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v799 #falseSuccessor: v796  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B106" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1062) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid i1034 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -161555
stableDimension: 0
stamp: i32 [-161555] ⇊00000000fffd88ed ⇈00000000fffd88ed
stampKind: i32
value: int[-161555|0xfffffffffffd88ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1030 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
v799 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1062) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@291ca35d
stamp: void
targetMethod: HotSpotMethod<PrintStream.write(String)>
=== Inputs ===
arguments: a399 a396 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a399 a396  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: - - - 
=== Succesors ===
=== Usages ===
?228 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - -  <|@  <|@
tid ?228 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?208 
values: - - 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?208 values: - -  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 1065
stackSize: 0
=== Inputs ===
outerFrameState: ?228 
values: a399 - 
=== Succesors ===
=== Usages ===
?900 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?228 values: a399 -  <|@  <|@
tid ?900 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 669
stackSize: 0
=== Inputs ===
outerFrameState: ?242 
values: - - 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?242 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.write
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v632 
stateDuring: ?900 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v632 stateDuring: ?900 #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B106" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid i1029 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -161331
stableDimension: 0
stamp: i32 [-161331] ⇊00000000fffd89cd ⇈00000000fffd89cd
stampKind: i32
value: int[-161331|0xfffffffffffd89cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1030 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
v794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B103" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1030 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-161555 - -161331] ⇊00000000fffd88cd ⇈00000000fffd89ed
valueDescription: i32
=== Inputs ===
merge: v1027 
values: i1029 i1034 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1027 values: i1029 i1034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1028 v1033 
=== Succesors ===
next: v1032 
=== Usages ===
i1030 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1028 v1033 #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid a1550 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1463 
=== Succesors ===
=== Usages ===
?394 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1463  <|@  <|@
tid ?394 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2504
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 a1550 - - i100 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 a1550 - - i100  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?394 
actionAndReason: i1030 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?394 actionAndReason: i1030 speculation: a39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v999 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v999  <|@  <|@
f <@~|@floating>@ <|@
tid i1000 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -127027
stableDimension: 0
stamp: i32 [-127027] ⇊00000000fffe0fcd ⇈00000000fffe0fcd
stampKind: i32
value: int[-127027|0xfffffffffffe0fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" "B24" "B16" "B19" "B26" "B25" "B107" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i976 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-130315 - -8723] ⇊00000000fffe00c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v973 
values: i975 i980 i982 i990 i994 i996 i998 i1000 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v973 values: i975 i980 i982 i990 i994 i996 i998 i1000  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v974 v979 v981 v989 v993 v995 v997 v999 
=== Succesors ===
next: v978 
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v974 v979 v981 v989 v993 v995 v997 v999 #next: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
actionAndReason: i976 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?20 actionAndReason: i976 speculation: a39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 269]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 270]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v1449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid a972 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@2003779337
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@2003779337]
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112667
stableDimension: 0
stamp: i32 [-112667] ⇊00000000fffe47e5 ⇈00000000fffe47e5
stampKind: i32
value: int[-112667|0xfffffffffffe47e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i971 
speculation: a972 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i971 speculation: a972  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1461 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1461  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v66 v1494 v431 ?12 ?20 ?394 ?73 ?128 ?171 ?158 ?897 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1461 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v1494 
=== Succesors ===
next: v1547 
=== Usages ===
v1547 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1494 #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/Locale;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?171 ?12 ?20 ?73 v495 ?128 v474 ?158 ?394 ?897 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v431 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?171 ?12 ?20 ?73 v1502 v1503 ?394 ?128 ?158 ?897 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2494
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 - - - - - - - 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a1461 
=== Succesors ===
next: a11 
=== Usages ===
=== Predecessor ===
a1461 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a1461 #next: a11  <|@  <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
returnStamp: a [Ljava/lang/Object; (unchecked=a [Ljava/util/Formatter$FormatString;)
signature: [Ljdk.vm.ci.meta.JavaType;@8f41453
stamp: void
targetMethod: HotSpotMethod<Formatter.parse(String)>
=== Inputs ===
arguments: a1 a3 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a3  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2497) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
?12 ?12 i17 i18 i43 ?897 ?897 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?897 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - 
=== Succesors ===
=== Usages ===
a11 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a11 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
polymorphic: false
stamp: a [Ljava/lang/Object;
targetMethod: Direct#Formatter.parse
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v431 
stateDuring: ?897 
=== Succesors ===
next: i1462 
=== Usages ===
?12 ?20 v1496 v1495 ?73 ?128 ?171 ?158 ?394 
=== Predecessor ===
v1547 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v431 stateDuring: ?897 #next: i1462  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2501) [bci: 12]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2501
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i9 i9 - - - - - a11 
=== Succesors ===
=== Usages ===
v969 i1462 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i9 i9 - - - - - a11  <|@  <|@
f <@~|@floating>@ <|@
tid v1495 <|@
result [v5|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a11 
index: - 
=== Succesors ===
=== Usages ===
i1462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1462 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v1495 
=== Succesors ===
next: v1451 
=== Usages ===
v22 j678 v692 
=== Predecessor ===
a11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v1495 #next: v1451  <|@  <|@
f <@~|@floating>@ <|@
tid j678 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1462 
=== Succesors ===
=== Usages ===
j682 v684 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1462  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j682 j1359 j1410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j678 
y: j681 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j678 y: j681  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j682 
y: j678 
=== Succesors ===
=== Usages ===
v1451 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j682 y: j678  <|@  <|@
f <@~|@floating>@ <|@
tid i1007 <|@
result int[-143713|0xfffffffffffdce9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -143713
stableDimension: 0
stamp: i32 [-143713] ⇊00000000fffdce9f ⇈00000000fffdce9f
stampKind: i32
value: int[-143713|0xfffffffffffdce9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1008 i1008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.index(Formatter.java:2593) [bci: 0]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?394 ?73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i19 v537 v160 a1085 v906 v692 v594 v1456 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v684 
=== Succesors ===
trueSuccessor: v1447 
falseSuccessor: v1450 
=== Usages ===
=== Predecessor ===
i1462 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v684 #trueSuccessor: v1447 #falseSuccessor: v1450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e75c647 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v5|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v5|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = DEC v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1445 
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1445  <|@  <|@
f <@*|@fixed>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B110" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1449 
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1449  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1462 
y: i13 
=== Succesors ===
=== Usages ===
v1449 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1462 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v692 
=== Succesors ===
trueSuccessor: v1448 
falseSuccessor: v709 
=== Usages ===
=== Predecessor ===
v1450 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v692 #trueSuccessor: v1448 #falseSuccessor: v709  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1446 
=== Usages ===
=== Predecessor ===
v1449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1446  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1448 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1445 v1446 
=== Succesors ===
next: v15 
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1445 v1446 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v1152 <|@
result meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 i64 v281 i1061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a39 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 148]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 v1010 v1022 v1032 v978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1148 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1149 v1150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1144 <|@
result meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1145 v1460 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1146 <|@
result meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v1444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff], int[-1|0xffffffffffffffff], int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B23" "B98" "B14" "B104" "B42" 
    successors "B6" "B109" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617001407344883683
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i17 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i17 i17 i17 i17 
=== Succesors ===
=== Usages ===
?20 ?73 ?171 i17 i17 ?158 i17 i17 ?394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i17 i17 i17 i17  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i9 i38 i18 i18 i18 i18 
=== Succesors ===
=== Usages ===
?20 ?73 i38 ?171 i18 i18 ?158 i18 i18 ?394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i9 i38 i18 i18 i18 i18  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v16 
values: i13 i64 i64 i64 i64 i64 
=== Succesors ===
=== Usages ===
?20 v22 v1496 ?73 ?128 ?171 i64 ?158 ?394 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v16 values: i13 i64 i64 i64 i64 i64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.72101372883296
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 5
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v15 
=== Succesors ===
next: v27 
=== Usages ===
i17 i18 i19 v25 v65 v67 v217 v218 v379 v794 v799 v789 v749 v779 v774 v769 v729 v754 v739 v744 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v15 #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i19 
y: i1462 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i19 y: i1462  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 25]
stamp: void
trueSuccessorProbability: 0.7881810862161587
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v23 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v23 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD, v10|DWORD, v11|DWORD] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7881810862161587 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615561396821323718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1463 
=== Usages ===
v690 
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1463  <|@  <|@
f <@~|@floating>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1444 v23 
=== Succesors ===
=== Usages ===
a1463 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1444 v23  <|@  <|@
f <@~|@floating>@ <|@
tid v1496 <|@
result [v5|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a11 
index: i19 
=== Succesors ===
=== Usages ===
a1463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1463 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v690 
address: v1496 
=== Succesors ===
next: v1464 
=== Usages ===
a448 v1513 v1497 v1498 v1500 v1501 a1549 a1550 a1551 v1552 v1553 v1554 
=== Predecessor ===
v23 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v690 address: v1496 #next: v1464  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2502
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
v978 v1464 a1467 v1468 i1472 a1477 v1478 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
result [v12|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1464 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1513 
=== Succesors ===
next: v86 
=== Usages ===
v1147 v1145 v1460 
=== Predecessor ===
a1463 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1513 #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1464 
y: v1146 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1464 y: v1146  <|@  <|@
f <@~|@floating>@ <|@
tid v1497 <|@
result [v12|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
i1465 a1469 a1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 263]
stamp: i32
=== Inputs ===
x: i19 
y: i37 
=== Succesors ===
=== Usages ===
i19 i19 i19 i19 i19 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i19 y: i37  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?208 ?203 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 0.5289273050649689
=== Inputs ===
condition: v1147 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1147 #trueSuccessor: v79 #falseSuccessor: v85  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v5|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v13|DWORD = MOV [v12|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5289273050649689 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611542559700663216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FormatSpecifier; target_method=index target_method_class=Ljava/util/Formatter$FormatSpecifier; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1465 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1465 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.index
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.index(Formatter.java:2636) [bci: 1]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
=== Succesors ===
next: v341 
=== Usages ===
v341 
=== Predecessor ===
v79 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1497 #next: v341  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@6ede533
keySuccessors: [I@7af77a32
keys: [I@8e105b1
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
value: i1465 
=== Succesors ===
successors: v342 v343 v344 
=== Usages ===
=== Predecessor ===
i1465 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i1465 #successors: v342 v343 v344  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v15|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B7 -> B8, B7 -> B17, B7 -> B18] defaultTarget: B7 -> B17 strategy: SequentialStrategy[avgEffort=1.4222844898631943] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607799539553510130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1464 
y: v1144 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1464 y: v1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.8380436441764084
=== Inputs ===
condition: v1145 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1145 #trueSuccessor: v134 #falseSuccessor: v139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8380436441764084 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606757993882850451
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=print target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1466 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1466  <|@  <|@
f <@~|@floating>@ <|@
tid v1498 <|@
result [v12|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
a1466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1466 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.this$0
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/util/Formatter;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1498 
=== Succesors ===
next: a1467 
=== Usages ===
v1499 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1498 #next: a1467  <|@  <|@
f <@~|@floating>@ <|@
tid v1499 <|@
result [v16|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1466 
=== Succesors ===
=== Usages ===
a1467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1467 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1499 
=== Succesors ===
next: v1468 
=== Usages ===
a460 v1514 
=== Predecessor ===
a1466 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1499 #next: v1468  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
result [v17|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1467 
=== Succesors ===
=== Usages ===
v1468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1468 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1514 
=== Succesors ===
next: a1469 
=== Usages ===
v1149 
=== Predecessor ===
a1467 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1514 #next: a1469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1469 <|@
result v19|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.s
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
=== Succesors ===
next: v186 
=== Usages ===
a463 
=== Predecessor ===
v1468 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1497 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid a463 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1469 
=== Succesors ===
=== Usages ===
a396 a397 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1469  <|@  <|@
f <@~|@floating>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1468 
y: v1148 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1468 y: v1148  <|@  <|@
f <@~|@floating>@ <|@
tid a460 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1467 
=== Succesors ===
=== Usages ===
a400 a399 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1467  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.5924183141131246
=== Inputs ===
condition: v1149 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
a1469 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1149 #trueSuccessor: v179 #falseSuccessor: v185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v17|DWORD[.] = MOV [v16|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v18|DWORD = MOV [v17|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[.] = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5924183141131246 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603259812248755416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.], v21|QWORD[.]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600667983186095990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v393  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v185 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.], v21|QWORD[.]] destination: B11 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1470 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1470  <|@  <|@
f <@~|@floating>@ <|@
tid v1500 <|@
result [v12|DWORD[.] * 8 + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
i1470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1470 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1500 
=== Succesors ===
next: v730 
=== Usages ===
i468 
=== Predecessor ===
v139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1500 #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid i468 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1470 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1470  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i468 
y: i13 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i468 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v729 
=== Usages ===
=== Predecessor ===
i1470 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v726 #falseSuccessor: v729  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVZXB [v12|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1471 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1471  <|@  <|@
f <@~|@floating>@ <|@
tid v1501 <|@
result [v12|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
i1471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1471 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1501 
=== Succesors ===
next: v170 
=== Usages ===
i473 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1501 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1471 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1471  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@209fde72
keySuccessors: [I@4932632f
keys: [I@855a6d1
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: i473 
=== Succesors ===
successors: v165 v164 
=== Usages ===
=== Predecessor ===
i1471 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i473 #successors: v165 v164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZX [v12|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid a1549 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1463 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1463  <|@  <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@899e6e7
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>
=== Inputs ===
arguments: a1549 a39 a2 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1549 a39 a2  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2508
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?898 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 - - -  <|@  <|@
tid ?898 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?171 
values: - - - 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?171 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.printInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v474 
stateDuring: ?898 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v474 stateDuring: ?898 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 2
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v10|DWORD, v14|DWORD] destination: B14 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v979 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v979  <|@  <|@
f <@~|@floating>@ <|@
tid i980 <|@
result int[-41747|0xffffffffffff5ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -41747
stableDimension: 0
stamp: i32 [-41747] ⇊00000000ffff5ced ⇈00000000ffff5ced
stampKind: i32
value: int[-41747|0xffffffffffff5ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-41747|0xffffffffffff5ced]] destination: B15 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v989 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v989  <|@  <|@
f <@~|@floating>@ <|@
tid i990 <|@
result int[-120083|0xfffffffffffe2aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -120083
stableDimension: 0
stamp: i32 [-120083] ⇊00000000fffe2aed ⇈00000000fffe2aed
stampKind: i32
value: int[-120083|0xfffffffffffe2aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-120083|0xfffffffffffe2aed]] destination: B16 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2506) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v974 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid i975 <|@
result int[-8723|0xffffffffffffdded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8723
stableDimension: 0
stamp: i32 [-8723] ⇊00000000ffffdded ⇈00000000ffffdded
stampKind: i32
value: int[-8723|0xffffffffffffdded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-8723|0xffffffffffffdded]] destination: B17 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1472 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1472  <|@  <|@
f <@~|@floating>@ <|@
tid v1502 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i1472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1472 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 154]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1502 
=== Succesors ===
next: v740 
=== Usages ===
i43 v481 
=== Predecessor ===
v344 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1502 #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 156]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1472 
y: i9 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1472 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2516) [bci: 140]
stamp: i32
=== Inputs ===
x: i18 
y: i37 
=== Succesors ===
=== Usages ===
v44 v1503 ?128 ?128 i17 i18 v481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i18 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i38 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i43 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v739 
falseSuccessor: v736 
=== Usages ===
=== Predecessor ===
i1472 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v739 #falseSuccessor: v736  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v25|DWORD = MOV [v3|QWORD[.] + 12] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = DEC v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v993  <|@  <|@
f <@~|@floating>@ <|@
tid i994 <|@
result int[-122643|0xfffffffffffe20ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -122643
stableDimension: 0
stamp: i32 [-122643] ⇊00000000fffe20ed ⇈00000000fffe20ed
stampKind: i32
value: int[-122643|0xfffffffffffe20ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-122643|0xfffffffffffe20ed]] destination: B19 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2518) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i1472 
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i1472  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v481 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v744 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v481 #trueSuccessor: v741 #falseSuccessor: v744  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1473 
=== Usages ===
a1475 
=== Predecessor ===
v745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1473  <|@  <|@
f <@~|@floating>@ <|@
tid v1553 <|@
result [v12|DWORD[.] * 8 + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
i1473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1473 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.dt
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1553 
=== Succesors ===
next: v750 
=== Usages ===
i1457 
=== Predecessor ===
v741 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1553 #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid i1457 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1473 
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1473  <|@  <|@
f <@~|@floating>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1457 
y: i13 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1457 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1456 
=== Succesors ===
trueSuccessor: v746 
falseSuccessor: v749 
=== Usages ===
=== Predecessor ===
i1473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1456 #trueSuccessor: v746 #falseSuccessor: v749  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVZXB [v12|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1474 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1474  <|@  <|@
f <@~|@floating>@ <|@
tid v1552 <|@
result [v12|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
i1474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1474 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.c
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v1552 
=== Succesors ===
next: v127 
=== Usages ===
i1453 
=== Predecessor ===
v746 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1552 #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid i1453 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 15]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1474 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1474  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@209fde72
keySuccessors: [I@4932632f
keys: [I@855a6d1
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
value: i1453 
=== Succesors ===
successors: v122 v121 
=== Usages ===
=== Predecessor ===
i1474 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i1453 #successors: v122 v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZX [v12|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 140]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1475 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1475  <|@  <|@
f <@~|@floating>@ <|@
tid v1503 <|@
result [v3|QWORD[.] + v27|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a4 
index: i38 
=== Succesors ===
=== Usages ===
a1475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: i38  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1475 <|@
result v30|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v741 
address: v1503 
=== Succesors ===
next: v124 
=== Usages ===
a489 
=== Predecessor ===
v122 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v741 address: v1503 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid a448 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1463 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1463  <|@  <|@
f <@~|@floating>@ <|@
tid a489 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1475 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1475  <|@  <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@562bc5c8
stamp: void
targetMethod: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>
=== Inputs ===
arguments: a448 a489 a2 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a448 a489 a2  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 190
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: true
localsSize: 11
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i38 i38 a11 i19 - - - 
=== Succesors ===
=== Usages ===
?899 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i38 i38 a11 i19 - - -  <|@  <|@
tid ?899 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2747
stackSize: 0
=== Inputs ===
outerFrameState: ?128 
values: - - - 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?128 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
polymorphic: false
stamp: void
targetMethod: Direct#Formatter$FormatSpecifier.printInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v495 
stateDuring: ?899 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
a1475 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v495 stateDuring: ?899 #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2502) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v3|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v27|DWORD v27|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 190] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD, v27|DWORD, v14|DWORD] destination: B23 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2743) [bci: 18]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid i982 <|@
result int[-30739|0xffffffffffff87ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -30739
stableDimension: 0
stamp: i32 [-30739] ⇊00000000ffff87ed ⇈00000000ffff87ed
stampKind: i32
value: int[-30739|0xffffffffffff87ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v121 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30739|0xffffffffffff87ed]] destination: B24 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.print(Formatter.java:2739) [bci: 4]
at java.util.Formatter.format(Formatter.java:2520) [bci: 190]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v997 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v997  <|@  <|@
f <@~|@floating>@ <|@
tid i998 <|@
result int[-125971|0xfffffffffffe13ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125971
stableDimension: 0
stamp: i32 [-125971] ⇊00000000fffe13ed ⇈00000000fffe13ed
stampKind: i32
value: int[-125971|0xfffffffffffe13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v749 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125971|0xfffffffffffe13ed]] destination: B25 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2520) [bci: 188]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v995 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v995  <|@  <|@
f <@~|@floating>@ <|@
tid i996 <|@
result int[-123419|0xfffffffffffe1de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -123419
stableDimension: 0
stamp: i32 [-123419] ⇊00000000fffe1de5 ⇈00000000fffe1de5
stampKind: i32
value: int[-123419|0xfffffffffffe1de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123419|0xfffffffffffe1de5]] destination: B26 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610573034687243228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v755 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v755  <|@  <|@
f <@~|@floating>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1464 
y: v1144 
=== Succesors ===
=== Usages ===
v755 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1464 y: v1144  <|@  <|@
f <@*|@fixed>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1460 
=== Succesors ===
trueSuccessor: v751 
falseSuccessor: v754 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1460 #trueSuccessor: v751 #falseSuccessor: v754  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610573034687243228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1476 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1476  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
result [v12|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1463 
=== Succesors ===
=== Usages ===
a1476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1476 <|@
result v33|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.this$0
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 1]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/util/Formatter;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1554 
=== Succesors ===
next: a1477 
=== Usages ===
v1504 
=== Predecessor ===
v751 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1554 #next: a1477  <|@  <|@
f <@~|@floating>@ <|@
tid v1504 <|@
result [v33|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1476 
=== Succesors ===
=== Usages ===
a1477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1477 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter.a
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: n -
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1504 
=== Succesors ===
next: v1478 
=== Usages ===
a505 v1515 
=== Predecessor ===
a1476 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1504 #next: v1478  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
result [v34|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1477 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1478 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v1515 
=== Succesors ===
next: a1479 
=== Usages ===
v1150 
=== Predecessor ===
a1477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v1515 #next: a1479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1479 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FixedString.s
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
=== Succesors ===
next: v416 
=== Usages ===
a508 
=== Predecessor ===
v1478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1497 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid a508 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 8]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a1479 
=== Succesors ===
=== Usages ===
a396 a397 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1478 
y: v1148 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1478 y: v1148  <|@  <|@
f <@~|@floating>@ <|@
tid a505 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.access$000(Formatter.java:1851) [bci: 1]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 4]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1477 
=== Succesors ===
=== Usages ===
a399 a400 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1477  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.5924183141131246
=== Inputs ===
condition: v1150 
=== Succesors ===
trueSuccessor: v410 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
a1479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1150 #trueSuccessor: v410 #falseSuccessor: v415  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v34|DWORD[.] = MOV [v33|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v35|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5924183141131246 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607355497019049734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/StringBuilder; target_method=append target_method_class=Ljava/lang/StringBuilder; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.], v38|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B10" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a397 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v389 
values: a463 a508 
=== Succesors ===
=== Usages ===
?200 v1505 ?295 v403 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: a463 a508  <|@  <|@
f <@~|@floating>@ <|@
tid a400 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v389 
values: a460 a505 
=== Succesors ===
=== Usages ===
j1123 ?216 ?288 ?200 ?901 ?277 v1507 ?295 v1508 v573 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: a460 a505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v390 v391 
=== Succesors ===
next: v770 
=== Usages ===
a397 a400 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v390 v391 #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: a397 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a397  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v769 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v769 #falseSuccessor: v766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.], v40|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|QWORD[.], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1011 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1011  <|@  <|@
f <@~|@floating>@ <|@
tid i1012 <|@
result int[-130579|0xfffffffffffe01ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130579
stableDimension: 0
stamp: i32 [-130579] ⇊00000000fffe01ed ⇈00000000fffe01ed
stampKind: i32
value: int[-130579|0xfffffffffffe01ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v769 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130579|0xfffffffffffe01ed]] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1480 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1480  <|@  <|@
f <@~|@floating>@ <|@
tid v1505 <|@
result [v39|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a397 
index: - 
=== Succesors ===
=== Usages ===
a1480 a1485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a397 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1480 <|@
result v41|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1505 
=== Succesors ===
next: v775 
=== Usages ===
a513 v514 v1506 
=== Predecessor ===
v766 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1505 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: a1480 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1480  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v774 
falseSuccessor: v771 
=== Usages ===
=== Predecessor ===
a1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v774 #falseSuccessor: v771  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[.] = MOV [v39|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD[.], y: v41|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1013 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid i1014 <|@
result int[-131851|0xfffffffffffdfcf5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -131851
stableDimension: 0
stamp: i32 [-131851] ⇊00000000fffdfcf5 ⇈00000000fffdfcf5
stampKind: i32
value: int[-131851|0xfffffffffffdfcf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v774 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131851|0xfffffffffffdfcf5]] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1481 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
result [v40|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a400 
index: - 
=== Succesors ===
=== Usages ===
a1481 v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1481 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
=== Succesors ===
next: v780 
=== Usages ===
a523 v524 v1509 v1511 a1548 
=== Predecessor ===
v771 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1508 #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1481  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v524 
=== Succesors ===
trueSuccessor: v779 
falseSuccessor: v776 
=== Usages ===
=== Predecessor ===
a1481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v524 #trueSuccessor: v779 #falseSuccessor: v776  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v40|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid i1016 <|@
result int[-134411|0xfffffffffffdf2f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -134411
stableDimension: 0
stamp: i32 [-134411] ⇊00000000fffdf2f5 ⇈00000000fffdf2f5
stampKind: i32
value: int[-134411|0xfffffffffffdf2f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-134411|0xfffffffffffdf2f5]] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1482 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
result [v42|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1481 
=== Succesors ===
=== Usages ===
i1482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1482 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
=== Succesors ===
next: i1483 
=== Usages ===
i280 i942 i555 v920 
=== Predecessor ===
v776 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1509 #next: i1483  <|@  <|@
f <@~|@floating>@ <|@
tid v1506 <|@
result [v41|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1480 
=== Succesors ===
=== Usages ===
i1483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1483 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1506 
=== Succesors ===
next: i1484 
=== Usages ===
i263 j1057 v643 i612 i273 i555 ?295 j1452 
=== Predecessor ===
i1482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1506 #next: i1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1507 <|@
result [v40|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a400 
index: - 
=== Succesors ===
=== Usages ===
i1484 v572 i1492 v629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1484 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
=== Succesors ===
next: v284 
=== Usages ===
i263 j1053 v537 v556 
=== Predecessor ===
i1483 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1507 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i1483 
y: i1484 
=== Succesors ===
=== Usages ===
v573 i280 v572 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1483 y: i1484  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i263 
y: i1482 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i263 y: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i280 
y: i37 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i280 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9451567136210046
=== Inputs ===
condition: v281 
=== Succesors ===
trueSuccessor: v282 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
i1484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v281 #trueSuccessor: v282 #falseSuccessor: v283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v42|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV [v41|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v40|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = ADD (x: v44|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v46|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9451567136210046 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609501881101477936
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1484 
y: i13 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1484 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v542 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v542 #falseSuccessor: v538  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4579887141049957158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-143713|0xfffffffffffdce9f]] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609433650482189626
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1482 
y: i1483 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1482 y: i1483  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i555 
y: i1484 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i555 y: i1484  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v556 
=== Succesors ===
trueSuccessor: v559 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v556 #trueSuccessor: v559 #falseSuccessor: v557  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SUB (x: v43|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4579799805857268122
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1035 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1035  <|@  <|@
f <@*|@fixed>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-143713|0xfffffffffffdce9f]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B31" "B33" "B35" "B40" 
    successors 
    xhandlers
    flags 
    probability 4584347073080983136
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1008 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-143713 - -130579] ⇊00000000fffc0085
valueDescription: i32
=== Inputs ===
merge: v1005 
values: i1007 i1012 i1014 i1016 i1007 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1005 values: i1007 i1012 i1014 i1016 i1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1006 v1011 v1013 v1015 v1035 
=== Succesors ===
next: v1010 
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1006 v1011 v1013 v1015 v1035 #next: v1010  <|@  <|@
f <@~|@floating>@ <|@
tid a1551 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1463 
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1463  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2504
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 a1551 - - i100 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 a1551 - - i100  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
actionAndReason: i1008 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?73 actionAndReason: i1008 speculation: a39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: int[-2|0xfffffffffffffffe] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609366102169094199
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1047 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1047  <|@  <|@
f <@~|@floating>@ <|@
tid a513 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1480 
=== Succesors ===
=== Usages ===
j1047 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1047 <|@
result v52|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a513 
=== Succesors ===
next: j1052 
=== Usages ===
v1516 
=== Predecessor ===
v557 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a513 #next: j1052  <|@  <|@
f <@~|@floating>@ <|@
tid a523 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
j1052 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1052 <|@
result v54|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a523 
=== Succesors ===
next: v1058 
=== Usages ===
v1517 
=== Predecessor ===
j1047 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a523 #next: v1058  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
result [v52|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1047 
index: - 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1047 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1053 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1484 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
result [v54|QWORD[*] + v55|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1052 
index: j1053 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1052 index: j1053  <|@  <|@
f <@~|@floating>@ <|@
tid j1057 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1483 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1516 v1517 j1057 
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
j1052 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1516 v1517 j1057 #next: v572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v1058 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1507 value: i263 stateAfter: - lastLocationAccess: - #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v45|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v54|QWORD[*] + v55|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + 12], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v10|DWORD, v14|DWORD] destination: B42 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i287 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i287  <|@  <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@cdaef39
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a400 i263 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a400 i263  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: - - - 
=== Succesors ===
=== Usages ===
?200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - -  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?203 
values: a400 a397 
=== Succesors ===
=== Usages ===
?216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?203 values: a400 a397  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 166
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: a400 - 
=== Succesors ===
=== Usages ===
?232 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: a400 -  <|@  <|@
tid ?232 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 484
stackSize: 0
=== Inputs ===
outerFrameState: ?216 
values: - - 
=== Succesors ===
=== Usages ===
?255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?216 values: - -  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 76
stackSize: 0
=== Inputs ===
outerFrameState: ?232 
values: - - 
=== Succesors ===
=== Usages ===
?277 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?232 values: - -  <|@  <|@
tid ?277 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?255 
values: a400 - 
=== Succesors ===
=== Usages ===
?295 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?255 values: a400 -  <|@  <|@
tid ?295 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?277 
values: a400 a397 i1483 
=== Succesors ===
=== Usages ===
?288 ?292 ?901 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?277 values: a400 a397 i1483  <|@  <|@
f <@~|@floating>@ <|@
tid a1548 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1481 
=== Succesors ===
=== Usages ===
?901 ?288 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1481  <|@  <|@
tid ?901 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?295 
values: - - a400 a1548 
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?295 values: - - a400 a1548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i287 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v573 
stateDuring: ?901 
=== Succesors ===
next: a1485 
=== Usages ===
?288 a1085 i612 j1154 i942 v920 i1061 v1070 v906 v1111 
=== Predecessor ===
v283 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v573 stateDuring: ?901 #next: a1485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1485 <|@
result v59|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1505 
=== Succesors ===
next: i1486 
=== Usages ===
a579 v1510 
=== Predecessor ===
i287 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1505 #next: i1486  <|@  <|@
tid ?288 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?295 
values: - - a400 a1548 i287 
=== Succesors ===
=== Usages ===
a1085 v1022 i1486 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?295 values: - - a400 a1548 i287  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
result [v59|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1485 
=== Succesors ===
=== Usages ===
i1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1486 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?288 
guard: - 
address: v1510 
=== Succesors ===
next: v790 
=== Usages ===
v643 
=== Predecessor ===
a1485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?288 guard: - address: v1510 #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1486 
y: i1483 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1486 y: i1483  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v643 
=== Succesors ===
trueSuccessor: v789 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
i1486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v643 #trueSuccessor: v789 #falseSuccessor: v786  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v46|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v40|QWORD[.] v57|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v40|QWORD[.] v39|QWORD[.] v44|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v40|QWORD[.] v39|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v39|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v40|QWORD[.] v57|QWORD[.] v58|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v40|QWORD[.] v39|QWORD[.] v44|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v40|QWORD[.] v39|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction CMP (x: v44|DWORD, y: [v59|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid i1024 <|@
result int[-149779|0xfffffffffffdb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -149779
stableDimension: 0
stamp: i32 [-149779] ⇊00000000fffdb6ed ⇈00000000fffdb6ed
stampKind: i32
value: int[-149779|0xfffffffffffdb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1020 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
v789 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149779|0xfffffffffffdb6ed]] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v912 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i287 
y: i13 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i287 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v906 
=== Succesors ===
trueSuccessor: v911 
falseSuccessor: v907 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v906 #trueSuccessor: v911 #falseSuccessor: v907  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1025 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1025  <|@  <|@
f <@~|@floating>@ <|@
tid i1026 <|@
result int[-235105|0xfffffffffffc699f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235105
stableDimension: 0
stamp: i32 [-235105] ⇊00000000fffc699f ⇈00000000fffc699f
stampKind: i32
value: int[-235105|0xfffffffffffc699f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1020 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
v911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235105|0xfffffffffffc699f]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1020 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-235105 - -148747] ⇊00000000fffc2085 ⇈00000000fffdffff
valueDescription: i32
=== Inputs ===
merge: v1017 
values: i1024 i1026 
=== Succesors ===
=== Usages ===
v1022 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1017 values: i1024 i1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1023 v1025 
=== Succesors ===
next: v1022 
=== Usages ===
i1020 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1023 v1025 #next: v1022  <|@  <|@
f <@*|@fixed>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?288 
actionAndReason: i1020 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?288 actionAndReason: i1020 speculation: a39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v40|QWORD[.] v57|QWORD[.] v58|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v40|QWORD[.] v39|QWORD[.] v44|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v40|QWORD[.] v39|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1064 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1064  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1064 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1108 
=== Usages ===
v1518 v1519 
=== Predecessor ===
v907 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1108  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1108 v1110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1108 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
=== Succesors ===
next: j1109 
=== Usages ===
j1068 v1520 v1521 a1084 v1526 v1522 v1523 v1524 v1525 
=== Predecessor ===
j1064 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1518 #next: j1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1064 
index: - 
=== Succesors ===
=== Usages ===
j1109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1064 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1109 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1519 
=== Succesors ===
next: v1073 
=== Usages ===
v1074 
=== Predecessor ===
j1108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1519 #next: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid i1069 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i287 
y: i1069 
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i287 y: i1069  <|@  <|@
f <@~|@floating>@ <|@
tid j1060 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1112 v1165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1070 
=== Succesors ===
trueSuccessor: v1072 
falseSuccessor: v1071 
=== Usages ===
=== Predecessor ===
j1109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1070 #trueSuccessor: v1072 #falseSuccessor: v1071  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v58|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590365557341247618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid i1061 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i287 
y: i37 
=== Succesors ===
=== Usages ===
i1093 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i287 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i1092 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1093 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1093 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1061 
y: i1092 
=== Succesors ===
=== Usages ===
i1063 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1061 y: i1092  <|@  <|@
f <@~|@floating>@ <|@
tid i1062 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1063 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1063 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1093 
y: i1062 
=== Succesors ===
=== Usages ===
j1067 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1093 y: i1062  <|@  <|@
f <@~|@floating>@ <|@
tid j1067 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1063 
=== Succesors ===
=== Usages ===
j1068 v1522 v1523 v1524 v1525 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1063  <|@  <|@
f <@~|@floating>@ <|@
tid j1068 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
x: j1067 
y: j1108 
=== Succesors ===
=== Usages ===
v1074 v1110 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1067 y: j1108  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1109 
y: j1068 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1109 y: j1068  <|@  <|@
f <@*|@fixed>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1074 
=== Succesors ===
trueSuccessor: v1079 
falseSuccessor: v1078 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1074 #trueSuccessor: v1079 #falseSuccessor: v1078  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SHL v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA [v63|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = AND v64|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVSXD v65|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = ADD (x: v66|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560436678219517306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1077  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1079 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590308545974466791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1110 
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
value: j1068 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1097 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1518 value: j1068 stateAfter: - lastLocationAccess: - #next: v1097  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
result [v66|QWORD + v61|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1067 
index: j1108 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1522 
=== Succesors ===
next: v1100 
=== Usages ===
=== Predecessor ===
v1110 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1522 #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
result [v66|QWORD + v61|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1067 
index: j1108 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1523 
=== Succesors ===
next: v1103 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1523 #next: v1103  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
result [v66|QWORD + v61|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1067 
index: j1108 
=== Succesors ===
=== Usages ===
v1103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1524 
=== Succesors ===
next: v1106 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1524 #next: v1106  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
result [v66|QWORD + v61|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1067 
index: j1108 
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1067 index: j1108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
address: v1525 
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
v1103 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1525 #next: v1111  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
result [v61|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
v1111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1520 
value: i287 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1520 value: i287 stateAfter: - lastLocationAccess: - #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
result [v61|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
value: j1060 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v1111 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1521 value: j1060 stateAfter: - lastLocationAccess: - #next: v1115  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
result [v61|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1108 
index: - 
=== Succesors ===
=== Usages ===
v1115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1108 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1151 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1115 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1526 
value: v1151 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1526 value: v1151 stateAfter: - lastLocationAccess: - #next: v1083  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1084 
=== Usages ===
=== Predecessor ===
v1115 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1084 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1108 
=== Succesors ===
next: v1086 
=== Usages ===
a1089 
=== Predecessor ===
v1083 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1108 #next: v1086  <|@  <|@
f <@*|@fixed>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1087 
=== Predecessor ===
a1084 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v66|QWORD + v61|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v66|QWORD + v61|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v66|QWORD + v61|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v66|QWORD + v61|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + 12], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE v61|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.]] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576221298828238052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v1073 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1075  <|@  <|@
f <@*|@fixed>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
v1071 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B50" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576677389762484668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1075 v1077 
=== Succesors ===
next: a1085 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1075 v1077 #next: a1085  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1085 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1085 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?288 
arguments: v1059 i287 i13 
=== Succesors ===
next: v1088 
=== Usages ===
a1089 
=== Predecessor ===
v1076 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?288 arguments: v1059 i287 i13 #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1087 
=== Predecessor ===
a1085 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v69|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v40|QWORD[.] v57|QWORD[.] v58|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v40|QWORD[.] v39|QWORD[.] v44|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v40|QWORD[.] v39|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1089 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1087 
values: a1084 a1085 
=== Succesors ===
=== Usages ===
v1531 a949 v1512 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1087 values: a1084 a1085  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1086 v1088 
=== Succesors ===
next: v1295 
=== Usages ===
a1089 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1086 v1088 #next: v1295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1168 
=== Usages ===
j1296 j1298 
=== Predecessor ===
v1087 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1168  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1482 
y: i287 
=== Succesors ===
=== Usages ===
i942 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1482 y: i287  <|@  <|@
f <@~|@floating>@ <|@
tid i942 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v920 
trueValue: i1482 
falseValue: i287 
=== Succesors ===
=== Usages ===
j1155 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v920 trueValue: i1482 falseValue: i287  <|@  <|@
f <@~|@floating>@ <|@
tid j1155 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i942 
=== Succesors ===
=== Usages ===
j1359 v1531 j1159 v1165 v1292 j1342 j1348 j1352 j1356 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i942  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1155 
y: j1060 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1155 y: j1060  <|@  <|@
f <@~|@floating>@ <|@
tid j1301 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1315 j1377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1355 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1356 j1407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1323 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1324 j1383 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1351 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1352 j1404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1037 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1389 j1332 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1347 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1348 j1401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j426 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.ensureOpen(Formatter.java:2406) [bci: 1]
at java.util.Formatter.format(Formatter.java:2494) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1395 j1340 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1341 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1342 j1396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1048 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1384 v1397 j1325 j1333 v1343 j1390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1165 
=== Succesors ===
trueSuccessor: v1166 
falseSuccessor: v1167 
=== Usages ===
=== Predecessor ===
v1295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1165 #trueSuccessor: v1166 #falseSuccessor: v1167  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = CMOVE (falseValue: v58|DWORD, ~trueValue: v43|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v73|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1166 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
v1168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1171  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
result [v71|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1089 
index: - 
=== Succesors ===
=== Usages ===
j1298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1089 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1298 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1295 
address: v1512 
=== Succesors ===
=== Usages ===
v1532 v1534 v1536 v1538 v1540 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1295 address: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
result [v42|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1481 
=== Succesors ===
=== Usages ===
j1296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1481  <|@  <|@
f <@~|@floating>@ <|@
tid j1296 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1295 
address: v1511 
=== Succesors ===
=== Usages ===
v1533 v1535 v1537 v1539 v1541 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1295 address: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid j1342 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1155 
y: j1341 
=== Succesors ===
=== Usages ===
v1343 v1345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1155 y: j1341  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1342 
y: j1048 
=== Succesors ===
=== Usages ===
v1171 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1342 y: j1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1343 
=== Succesors ===
trueSuccessor: v1169 
falseSuccessor: v1170 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1343 #trueSuccessor: v1169 #falseSuccessor: v1170  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LEA [v71|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = LEA [v42|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v73|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1181 
=== Usages ===
=== Predecessor ===
v1171 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
v1169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1172 
=== Usages ===
=== Predecessor ===
v1171 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1172  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1173 
=== Predecessor ===
v1170 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B99" 
    successors "B60" "B99" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1333 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1173 
values: j1048 j1340 
=== Succesors ===
=== Usages ===
v1541 j1340 v1540 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1173 values: j1048 j1340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1172 
=== Succesors ===
next: v1487 
=== Usages ===
v1487 v1177 v1178 j1333 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1172 #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
result [v75|QWORD[*] + v77|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1296 
index: j1333 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1296 index: j1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
result v78|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1173 
address: v1541 
=== Succesors ===
next: v1428 
=== Usages ===
v1428 
=== Predecessor ===
v1173 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1173 address: v1541 #next: v1428  <|@  <|@
f <@~|@floating>@ <|@
tid v1540 <|@
result [v74|QWORD[.] + v77|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1298 
index: j1333 
=== Succesors ===
=== Usages ===
v1428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1298 index: j1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1540 
value: v1487 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1180 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1540 value: v1487 stateAfter: - lastLocationAccess: - #next: v1180  <|@  <|@
f <@~|@floating>@ <|@
tid j1340 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1333 
y: j426 
=== Succesors ===
=== Usages ===
j1325 j1333 v1345 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1333 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1342 
y: j1340 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1342 y: j1340  <|@  <|@
f <@*|@fixed>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1345 
=== Succesors ===
trueSuccessor: v1177 
falseSuccessor: v1179 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1345 #trueSuccessor: v1177 #falseSuccessor: v1179  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|V256_WORD = H [v75|QWORD[*] + v77|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v77|QWORD * 2], input: v78|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v77|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1173 
=== Succesors ===
next: v1183 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1173 #next: v1183  <|@  <|@
f <@*|@fixed>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
v1177 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1325 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1182 
values: j1048 j1340 
=== Succesors ===
=== Usages ===
v1539 j1332 j1316 v1349 v1538 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1182 values: j1048 j1340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1181 v1183 
=== Succesors ===
next: v1205 
=== Usages ===
j1325 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1181 v1183 #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid j1348 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1155 
y: j1347 
=== Succesors ===
=== Usages ===
v1349 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1155 y: j1347  <|@  <|@
f <@~|@floating>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1348 
y: j1325 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1348 y: j1325  <|@  <|@
f <@*|@fixed>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1349 
=== Succesors ===
trueSuccessor: v1204 
falseSuccessor: v1203 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1349 #trueSuccessor: v1204 #falseSuccessor: v1203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v73|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1208 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
v1204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1488 
=== Usages ===
v1488 
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1488  <|@  <|@
f <@~|@floating>@ <|@
tid v1539 <|@
result [v75|QWORD[*] + v80|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1296 
index: j1325 
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1296 index: j1325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1488 <|@
result v82|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1203 
address: v1539 
=== Succesors ===
next: v1426 
=== Usages ===
v1426 
=== Predecessor ===
v1203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1203 address: v1539 #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid v1538 <|@
result [v74|QWORD[.] + v80|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1298 
index: j1325 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1298 index: j1325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1538 
value: v1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1192 
=== Usages ===
=== Predecessor ===
v1488 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1538 value: v1488 stateAfter: - lastLocationAccess: - #next: v1192  <|@  <|@
f <@~|@floating>@ <|@
tid j1332 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1325 
y: j1037 
=== Succesors ===
=== Usages ===
j1316 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1325 y: j1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
v1426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|V128_WORD = H [v75|QWORD[*] + v80|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v80|QWORD * 2], input: v82|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1316 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1193 
values: j1332 j1325 
=== Succesors ===
=== Usages ===
v1537 j1324 j1308 v1353 v1536 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1193 values: j1332 j1325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1192 v1208 
=== Succesors ===
next: v1211 
=== Usages ===
j1316 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1192 v1208 #next: v1211  <|@  <|@
f <@~|@floating>@ <|@
tid j1352 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1155 
y: j1351 
=== Succesors ===
=== Usages ===
v1353 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1155 y: j1351  <|@  <|@
f <@~|@floating>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1352 
y: j1316 
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1352 y: j1316  <|@  <|@
f <@*|@fixed>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1353 
=== Succesors ===
trueSuccessor: v1210 
falseSuccessor: v1209 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1353 #trueSuccessor: v1210 #falseSuccessor: v1209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v73|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1214 
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1214  <|@  <|@
f <@*|@fixed>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
v1210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1489 
=== Usages ===
v1489 
=== Predecessor ===
v1211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1537 <|@
result [v75|QWORD[*] + v84|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1296 
index: j1316 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1296 index: j1316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1489 <|@
result v86|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1209 
address: v1537 
=== Succesors ===
next: v1424 
=== Usages ===
v1424 
=== Predecessor ===
v1209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1209 address: v1537 #next: v1424  <|@  <|@
f <@~|@floating>@ <|@
tid v1536 <|@
result [v74|QWORD[.] + v84|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1298 
index: j1316 
=== Succesors ===
=== Usages ===
v1424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1298 index: j1316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1536 
value: v1489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v1489 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1536 value: v1489 stateAfter: - lastLocationAccess: - #next: v1196  <|@  <|@
f <@~|@floating>@ <|@
tid j1324 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1316 
y: j1323 
=== Succesors ===
=== Usages ===
j1308 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1316 y: j1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1197 
=== Predecessor ===
v1424 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|V64_WORD = H [v75|QWORD[*] + v84|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v84|QWORD * 2], input: v86|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v84|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1308 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1197 
values: j1324 j1316 
=== Succesors ===
=== Usages ===
v1535 j1315 j1299 v1357 v1534 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1197 values: j1324 j1316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1196 v1214 
=== Succesors ===
next: v1217 
=== Usages ===
j1308 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1196 v1214 #next: v1217  <|@  <|@
f <@~|@floating>@ <|@
tid j1356 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1155 
y: j1355 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1155 y: j1355  <|@  <|@
f <@~|@floating>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1356 
y: j1308 
=== Succesors ===
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1356 y: j1308  <|@  <|@
f <@*|@fixed>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1357 
=== Succesors ===
trueSuccessor: v1216 
falseSuccessor: v1215 
=== Usages ===
=== Predecessor ===
v1197 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1357 #trueSuccessor: v1216 #falseSuccessor: v1215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v73|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1220 
=== Usages ===
=== Predecessor ===
v1217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1220  <|@  <|@
f <@*|@fixed>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
v1216 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1490 
=== Usages ===
v1490 
=== Predecessor ===
v1217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
result [v75|QWORD[*] + v88|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1296 
index: j1308 
=== Succesors ===
=== Usages ===
v1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1296 index: j1308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1490 <|@
result v90|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1215 
address: v1535 
=== Succesors ===
next: v1422 
=== Usages ===
v1422 
=== Predecessor ===
v1215 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1215 address: v1535 #next: v1422  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
result [v74|QWORD[.] + v88|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1298 
index: j1308 
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1298 index: j1308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
value: v1490 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1199 
=== Usages ===
=== Predecessor ===
v1490 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1534 value: v1490 stateAfter: - lastLocationAccess: - #next: v1199  <|@  <|@
f <@~|@floating>@ <|@
tid j1315 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1308 
y: j1301 
=== Succesors ===
=== Usages ===
j1299 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1308 y: j1301  <|@  <|@
f <@*|@fixed>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
v1422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|V32_WORD = H [v75|QWORD[*] + v88|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v88|QWORD * 2], input: v90|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v88|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1299 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1200 
values: j1315 j1308 
=== Succesors ===
=== Usages ===
v1533 v1360 v1532 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1200 values: j1315 j1308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1199 v1220 
=== Succesors ===
next: v1223 
=== Usages ===
j1299 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1199 v1220 #next: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid j1359 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1155 
y: j681 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1155 y: j681  <|@  <|@
f <@~|@floating>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1359 
y: j1299 
=== Succesors ===
=== Usages ===
v1223 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1359 y: j1299  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1360 
=== Succesors ===
trueSuccessor: v1222 
falseSuccessor: v1221 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1360 #trueSuccessor: v1222 #falseSuccessor: v1221  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = DEC v73|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1226  <|@  <|@
f <@*|@fixed>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1491 
=== Usages ===
i1491 
=== Predecessor ===
v1223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1491  <|@  <|@
f <@~|@floating>@ <|@
tid v1533 <|@
result [v75|QWORD[*] + v92|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1296 
index: j1299 
=== Succesors ===
=== Usages ===
i1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1296 index: j1299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1491 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1221 
address: v1533 
=== Succesors ===
next: v1420 
=== Usages ===
v1420 
=== Predecessor ===
v1221 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1221 address: v1533 #next: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
result [v74|QWORD[.] + v92|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1298 
index: j1299 
=== Succesors ===
=== Usages ===
v1420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1298 index: j1299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1532 
value: i1491 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1202 
=== Usages ===
=== Predecessor ===
i1491 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1532 value: i1491 stateAfter: - lastLocationAccess: - #next: v1202  <|@  <|@
f <@*|@fixed>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1186 
=== Predecessor ===
v1420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVSX [v75|QWORD[*] + v92|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[.] + v92|QWORD * 2], y: v94|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B55" "B72" "B71" 
    successors "B74" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1185 v1202 v1226 
=== Succesors ===
next: v1363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1185 v1202 v1226 #next: v1363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1233 
=== Usages ===
j1365 
=== Predecessor ===
v1186 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid j1154 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i287 
=== Succesors ===
=== Usages ===
j1159 v1292 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i287  <|@  <|@
f <@~|@floating>@ <|@
tid v1292 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1155 
y: j1154 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1155 y: j1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1292 
=== Succesors ===
trueSuccessor: v1232 
falseSuccessor: v1231 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1292 #trueSuccessor: v1232 #falseSuccessor: v1231  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v58|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v95|QWORD, y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1236 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1236  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
result [v71|QWORD[.] + v73|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1089 
index: j1155 
=== Succesors ===
=== Usages ===
j1365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1089 index: j1155  <|@  <|@
f <@~|@floating>@ <|@
tid j1365 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1363 
address: v1531 
=== Succesors ===
=== Usages ===
v1542 v1543 v1544 v1545 v1546 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1363 address: v1531  <|@  <|@
f <@~|@floating>@ <|@
tid j1159 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1154 
y: j1155 
=== Succesors ===
=== Usages ===
j1410 j1396 j1401 j1404 j1407 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1154 y: j1155  <|@  <|@
f <@~|@floating>@ <|@
tid j1396 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1159 
y: j1341 
=== Succesors ===
=== Usages ===
v1397 v1399 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1159 y: j1341  <|@  <|@
f <@~|@floating>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1396 
y: j1048 
=== Succesors ===
=== Usages ===
v1236 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1396 y: j1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1397 
=== Succesors ===
trueSuccessor: v1234 
falseSuccessor: v1235 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1397 #trueSuccessor: v1234 #falseSuccessor: v1235  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = LEA [v71|QWORD[.] + v73|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = SUB (x: v95|QWORD, ~y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v97|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1245 
=== Usages ===
=== Predecessor ===
v1236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1245  <|@  <|@
f <@*|@fixed>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
v1234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
v1236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1237  <|@  <|@
f <@~|@floating>@ <|@
tid v1439 <|@
result v99|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
v1235 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B91" 
    successors "B78" "B91" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1390 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1238 
values: j1048 j1395 
=== Succesors ===
=== Usages ===
v1546 j1395 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1238 values: j1048 j1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1237 
=== Succesors ===
next: v1438 
=== Usages ===
j1390 v1241 v1242 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1237 #next: v1438  <|@  <|@
f <@~|@floating>@ <|@
tid v1546 <|@
result [v96|QWORD[.] + v100|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1365 
index: j1390 
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1546 
value: v1439 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1244 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1546 value: v1439 stateAfter: - lastLocationAccess: - #next: v1244  <|@  <|@
f <@~|@floating>@ <|@
tid j1395 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1390 
y: j426 
=== Succesors ===
=== Usages ===
j1384 j1390 v1399 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1390 y: j426  <|@  <|@
f <@~|@floating>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1396 
y: j1395 
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1396 y: j1395  <|@  <|@
f <@*|@fixed>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1399 
=== Succesors ===
trueSuccessor: v1241 
falseSuccessor: v1243 
=== Usages ===
=== Predecessor ===
v1438 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1399 #trueSuccessor: v1241 #falseSuccessor: v1243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v100|QWORD * 2], input: v99|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = LEA [v100|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1238 
=== Succesors ===
next: v1247 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1238 #next: v1247  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1246 
=== Predecessor ===
v1241 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1384 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1246 
values: j1048 j1395 
=== Succesors ===
=== Usages ===
v1545 j1389 j1378 v1402 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1246 values: j1048 j1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1245 v1247 
=== Succesors ===
next: v1268 
=== Usages ===
j1384 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1245 v1247 #next: v1268  <|@  <|@
f <@~|@floating>@ <|@
tid j1401 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1159 
y: j1347 
=== Succesors ===
=== Usages ===
v1402 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1159 y: j1347  <|@  <|@
f <@~|@floating>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1401 
y: j1384 
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1401 y: j1384  <|@  <|@
f <@*|@fixed>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1402 
=== Succesors ===
trueSuccessor: v1267 
falseSuccessor: v1266 
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1402 #trueSuccessor: v1267 #falseSuccessor: v1266  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = LEA [v97|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|QWORD, y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1271 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1271  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
v1267 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1437 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1437  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
result [v96|QWORD[.] + v102|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1365 
index: j1384 
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1384  <|@  <|@
f <@~|@floating>@ <|@
tid v1443 <|@
result v104|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1545 
value: v1443 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1256 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1545 value: v1443 stateAfter: - lastLocationAccess: - #next: v1256  <|@  <|@
f <@~|@floating>@ <|@
tid j1389 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1384 
y: j1037 
=== Succesors ===
=== Usages ===
j1378 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1384 y: j1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
v1437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v102|QWORD * 2], input: v104|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = LEA [v102|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|QWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1378 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1257 
values: j1389 j1384 
=== Succesors ===
=== Usages ===
v1544 j1383 j1372 v1405 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1257 values: j1389 j1384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1256 v1271 
=== Succesors ===
next: v1274 
=== Usages ===
j1378 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1256 v1271 #next: v1274  <|@  <|@
f <@~|@floating>@ <|@
tid j1404 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1159 
y: j1351 
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1159 y: j1351  <|@  <|@
f <@~|@floating>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1404 
y: j1378 
=== Succesors ===
=== Usages ===
v1274 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1404 y: j1378  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1405 
=== Succesors ===
trueSuccessor: v1273 
falseSuccessor: v1272 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1405 #trueSuccessor: v1273 #falseSuccessor: v1272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = LEA [v97|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|QWORD, y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1277 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1277  <|@  <|@
f <@*|@fixed>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1260 
=== Predecessor ===
v1273 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|QWORD] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v1274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1435  <|@  <|@
f <@~|@floating>@ <|@
tid v1544 <|@
result [v96|QWORD[.] + v106|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1365 
index: j1378 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1378  <|@  <|@
f <@~|@floating>@ <|@
tid v1442 <|@
result v108|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1544 
value: v1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1259 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1544 value: v1442 stateAfter: - lastLocationAccess: - #next: v1259  <|@  <|@
f <@~|@floating>@ <|@
tid j1383 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1378 
y: j1323 
=== Succesors ===
=== Usages ===
j1372 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1378 y: j1323  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1260 
=== Predecessor ===
v1435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v106|QWORD * 2], input: v108|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = LEA [v106|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|QWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1372 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1260 
values: j1383 j1378 
=== Succesors ===
=== Usages ===
v1543 j1377 j1366 v1408 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1260 values: j1383 j1378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1259 v1277 
=== Succesors ===
next: v1280 
=== Usages ===
j1372 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1259 v1277 #next: v1280  <|@  <|@
f <@~|@floating>@ <|@
tid j1407 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1159 
y: j1355 
=== Succesors ===
=== Usages ===
v1408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1159 y: j1355  <|@  <|@
f <@~|@floating>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1407 
y: j1372 
=== Succesors ===
=== Usages ===
v1280 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1407 y: j1372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1408 
=== Succesors ===
trueSuccessor: v1279 
falseSuccessor: v1278 
=== Usages ===
=== Predecessor ===
v1260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1408 #trueSuccessor: v1279 #falseSuccessor: v1278  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA [v97|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v110|QWORD, y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1283 
=== Usages ===
=== Predecessor ===
v1280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1283  <|@  <|@
f <@*|@fixed>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1263 
=== Predecessor ===
v1279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|QWORD] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1433 
=== Usages ===
=== Predecessor ===
v1280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1433  <|@  <|@
f <@~|@floating>@ <|@
tid v1543 <|@
result [v96|QWORD[.] + v110|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1365 
index: j1372 
=== Succesors ===
=== Usages ===
v1433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1372  <|@  <|@
f <@~|@floating>@ <|@
tid v1441 <|@
result v112|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1543 
value: v1441 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1262 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1543 value: v1441 stateAfter: - lastLocationAccess: - #next: v1262  <|@  <|@
f <@~|@floating>@ <|@
tid j1377 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1372 
y: j1301 
=== Succesors ===
=== Usages ===
j1366 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1372 y: j1301  <|@  <|@
f <@*|@fixed>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1263 
=== Predecessor ===
v1433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v110|QWORD * 2], input: v112|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = LEA [v110|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1366 <|@
result v114|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1263 
values: j1377 j1372 
=== Succesors ===
=== Usages ===
v1542 v1411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1263 values: j1377 j1372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1262 v1283 
=== Succesors ===
next: v1286 
=== Usages ===
j1366 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1262 v1283 #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid j1410 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1159 
y: j681 
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1159 y: j681  <|@  <|@
f <@~|@floating>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1410 
y: j1366 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1410 y: j1366  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1411 
=== Succesors ===
trueSuccessor: v1285 
falseSuccessor: v1284 
=== Usages ===
=== Predecessor ===
v1263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1411 #trueSuccessor: v1285 #falseSuccessor: v1284  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = DEC v97|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v114|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1289 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v1285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1431 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid v1542 <|@
result [v96|QWORD[.] + v114|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1365 
index: j1366 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1365 index: j1366  <|@  <|@
f <@~|@floating>@ <|@
tid i1440 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1542 
value: i1440 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1265 
=== Usages ===
=== Predecessor ===
v1284 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1542 value: i1440 stateAfter: - lastLocationAccess: - #next: v1265  <|@  <|@
f <@*|@fixed>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v1431 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[.] + v114|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1242  <|@  <|@
f <@*|@fixed>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD] destination: B91 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1249 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
v1231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B90" "B89" 
    successors "B94" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1249 v1265 v1289 
=== Succesors ===
next: a949 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1249 v1265 v1289 #next: a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a949 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1089 
=== Succesors ===
next: v576 
=== Usages ===
j1135 a575 
=== Predecessor ===
v1250 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1089 #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid a575 <|@
result v116|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Compress
stamp: n! -
=== Inputs ===
value: a949 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a949  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1508 
value: a575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1123 
=== Usages ===
=== Predecessor ===
a949 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1508 value: a575 stateAfter: - lastLocationAccess: - #next: j1123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1123 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a400 
=== Succesors ===
next: v1129 
=== Usages ===
j1125 
=== Predecessor ===
v576 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a400 #next: v1129  <|@  <|@
f <@~|@floating>@ <|@
tid i1124 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1125 <|@
result v117|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1123 
y: i1124 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1123 y: i1124  <|@  <|@
f <@~|@floating>@ <|@
tid j1128 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
result [v117|QWORD[*] + v118|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1125 
index: j1128 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1125 index: j1128  <|@  <|@
f <@~|@floating>@ <|@
tid i1130 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1527 
value: i1130 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1492 
=== Usages ===
=== Predecessor ===
j1123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1527 value: i1130 stateAfter: - lastLocationAccess: - #next: i1492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1492 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
=== Succesors ===
next: v600 
=== Usages ===
j1136 i273 v594 v613 
=== Predecessor ===
v1129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1507 #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1492 
y: i13 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1492 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
i1492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v599 #falseSuccessor: v595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + 16], y: v116|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[*] = SHR v40|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v117|QWORD[*] + v118|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOV [v40|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v119|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4561247506547066844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v598  <|@  <|@
f <@*|@fixed>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590935671009055886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i612 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i287 
y: i1483 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i287 y: i1483  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i612 
y: i1492 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i612 y: i1492  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v613 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v613 #trueSuccessor: v616 #falseSuccessor: v614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SUB (x: v58|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v119|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4561166423714311889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v615  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4565710564758059862
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v598 v615 
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v598 v615 #next: v618  <|@  <|@
tid ?292 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?295 
values: - - 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?295 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?292 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?292  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -158305 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v40|QWORD[.] v39|QWORD[.] v44|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v40|QWORD[.] v39|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590872958505596976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1133 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1133  <|@  <|@
f <@~|@floating>@ <|@
tid a579 <|@
result v121|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1485 
=== Succesors ===
=== Usages ===
j1133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1133 <|@
result v122|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a579 
=== Succesors ===
next: j1135 
=== Usages ===
v1528 
=== Predecessor ===
v614 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a579 #next: j1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1135 <|@
result v123|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i64
=== Inputs ===
object: a949 
=== Succesors ===
next: v1140 
=== Usages ===
v1529 
=== Predecessor ===
j1133 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a949 #next: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
result [v122|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1133 
index: - 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1133 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1136 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1492 
=== Succesors ===
=== Usages ===
v1529 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1492  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
result [v123|QWORD[*] + v124|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1135 
index: j1136 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1135 index: j1136  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1483 
=== Succesors ===
=== Usages ===
v1140 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1528 v1529 j1452 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
j1135 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1528 v1529 j1452 #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: i32
=== Inputs ===
x: i1483 
y: i1492 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1483 y: i1492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
value: i273 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v1140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1507 value: i273 stateAfter: - lastLocationAccess: - #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2531) [bci: 252]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[*] = MOVE v121|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[*] = MOVE v71|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVSXD v119|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v122|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v123|QWORD[*] + v124|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v44|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + 12], y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v10|DWORD, v14|DWORD] destination: B98 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584911768267530006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1178 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1178  <|@  <|@
f <@*|@fixed>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1173 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1179 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B99 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604610294881663404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.], v38|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B11" "B100" 
    successors "B102" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a396 <|@
result v127|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v392 
values: a463 a508 
=== Succesors ===
=== Usages ===
v632 v404 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v392 values: a463 a508  <|@  <|@
f <@~|@floating>@ <|@
tid a399 <|@
result v128|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v392 
values: a460 a505 
=== Succesors ===
=== Usages ===
v1530 v632 ?242 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v392 values: a460 a505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v393 v395 
=== Succesors ===
next: v1493 
=== Usages ===
a396 a399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v393 v395 #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1530 <|@
result [v128|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a399 
index: - 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
=== Succesors ===
next: v795 
=== Usages ===
v1153 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1530 #next: v795  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1493 
y: v1152 
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1493 y: v1152  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1153 
=== Succesors ===
trueSuccessor: v791 
falseSuccessor: v794 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1153 #trueSuccessor: v791 #falseSuccessor: v794  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v127|QWORD[.], v128|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v128|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:481) [bci: 1]
at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
value: a396 
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a396  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1062) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v799 
falseSuccessor: v796 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v799 #falseSuccessor: v796  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v127|QWORD[.], y: v127|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B106" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1062) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid i1034 <|@
result int[-161555|0xfffffffffffd88ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -161555
stableDimension: 0
stamp: i32 [-161555] ⇊00000000fffd88ed ⇈00000000fffd88ed
stampKind: i32
value: int[-161555|0xfffffffffffd88ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1030 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
v799 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-161555|0xfffffffffffd88ed]] destination: B103 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1062) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v800 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@291ca35d
stamp: void
targetMethod: HotSpotMethod<PrintStream.write(String)>
=== Inputs ===
arguments: a399 a396 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a399 a396  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Object, Locale)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2595
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: - - - 
=== Succesors ===
=== Usages ===
?228 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - -  <|@  <|@
tid ?228 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?208 
values: - - 
=== Succesors ===
=== Usages ===
?242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?208 values: - -  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 1065
stackSize: 0
=== Inputs ===
outerFrameState: ?228 
values: a399 - 
=== Succesors ===
=== Usages ===
?900 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?228 values: a399 -  <|@  <|@
tid ?900 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 669
stackSize: 0
=== Inputs ===
outerFrameState: ?242 
values: - - 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?242 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
at java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.write
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v632 
stateDuring: ?900 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v632 stateDuring: ?900 #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v127|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: v128|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v10|DWORD, v14|DWORD] destination: B104 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B106" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/io/PrintStream; target_method=append target_method_class=Ljava/io/PrintStream; position=at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
at java.util.Formatter.format(Formatter.java:2508) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid i1029 <|@
result int[-161331|0xfffffffffffd89cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -161331
stableDimension: 0
stamp: i32 [-161331] ⇊00000000fffd89cd ⇈00000000fffd89cd
stampKind: i32
value: int[-161331|0xfffffffffffd89cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1030 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
v794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-161331|0xfffffffffffd89cd]] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B103" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1030 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-161555 - -161331] ⇊00000000fffd88cd ⇈00000000fffd89ed
valueDescription: i32
=== Inputs ===
merge: v1027 
values: i1029 i1034 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1027 values: i1029 i1034  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1028 v1033 
=== Succesors ===
next: v1032 
=== Usages ===
i1030 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1028 v1033 #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid a1550 <|@
result v130|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1463 
=== Succesors ===
=== Usages ===
?394 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1463  <|@  <|@
tid ?394 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<Formatter.format(Locale, String, Object[])>
duringCall: false
localsSize: 11
locksSize: 0
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2504
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i17 i18 a11 i19 a1550 - - i100 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i17 i18 a11 i19 a1550 - - i100  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?394 
actionAndReason: i1030 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?394 actionAndReason: i1030 speculation: a39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: int[-2|0xfffffffffffffffe] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD v130|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Formatter$FixedString; target_method=index target_method_class=Ljava/util/Formatter$FixedString; position=at java.util.Formatter.format(Formatter.java:2504) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v999 
=== Usages ===
=== Predecessor ===
v755 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v999  <|@  <|@
f <@~|@floating>@ <|@
tid i1000 <|@
result int[-127027|0xfffffffffffe0fcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -127027
stableDimension: 0
stamp: i32 [-127027] ⇊00000000fffe0fcd ⇈00000000fffe0fcd
stampKind: i32
value: int[-127027|0xfffffffffffe0fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
v754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-127027|0xfffffffffffe0fcd]] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" "B24" "B16" "B19" "B26" "B25" "B107" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i976 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-130315 - -8723] ⇊00000000fffe00c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v973 
values: i975 i980 i982 i990 i994 i996 i998 i1000 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v973 values: i975 i980 i982 i990 i994 i996 i998 i1000  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v974 v979 v981 v989 v993 v995 v997 v999 
=== Succesors ===
next: v978 
=== Usages ===
i976 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v974 v979 v981 v989 v993 v995 v997 v999 #next: v978  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?20 
actionAndReason: i976 
speculation: a39 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?20 actionAndReason: i976 speculation: a39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v131|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 269]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2533) [bci: 270]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.format(Formatter.java:2503) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v969 
=== Usages ===
=== Predecessor ===
v1449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid a972 <|@
result v132|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@2003779337
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@2003779337]
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i971 <|@
result int[-112667|0xfffffffffffe47e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112667
stableDimension: 0
stamp: i32 [-112667] ⇊00000000fffe47e5 ⇈00000000fffe47e5
stampKind: i32
value: int[-112667|0xfffffffffffe47e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i971 
speculation: a972 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i971 speculation: a972  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2003779337] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -112667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v132|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v5|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e75c647 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v5|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v5|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = DEC v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B110" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-1|0xffffffffffffffff], int[-1|0xffffffffffffffff], int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B23" "B98" "B14" "B104" "B42" 
    successors "B6" "B109" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617001407344883683
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD, v10|DWORD, v11|DWORD] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7881810862161587 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615561396821323718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v5|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v13|DWORD = MOV [v12|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5289273050649689 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611542559700663216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v15|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B7 -> B8, B7 -> B17, B7 -> B18] defaultTarget: B7 -> B17 strategy: SequentialStrategy[avgEffort=1.4222844898631943] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607799539553510130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8380436441764084 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606757993882850451
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v17|DWORD[.] = MOV [v16|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v18|DWORD = MOV [v17|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[.] = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5924183141131246 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603259812248755416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.], v21|QWORD[.]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B10" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.], v40|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|QWORD[.], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[.] = MOV [v39|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD[.], y: v41|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v40|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD[.], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOV [v42|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV [v41|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v40|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = ADD (x: v44|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v46|DWORD, ~y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9451567136210046 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609501881101477936
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609433650482189626
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SUB (x: v43|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609366102169094199
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[*] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVSXD v45|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v52|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v54|QWORD[*] + v55|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + 12], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v10|DWORD, v14|DWORD] destination: B42 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610573034687243228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610573034687243228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v34|DWORD[.] = MOV [v33|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v35|DWORD = MOV [v34|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v35|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5924183141131246 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607355497019049734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.], v38|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction v25|DWORD = MOV [v3|QWORD[.] + 12] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = DEC v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVZXB [v12|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZX [v12|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v29|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[.] = MOV [v3|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v27|DWORD v27|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 190] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD, v27|DWORD, v14|DWORD] destination: B23 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604610294881663404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD[.], v38|QWORD[.]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B11" "B100" 
    successors "B102" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      LIR
      nr   -1  <|@ instruction [v127|QWORD[.], v128|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v128|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v127|QWORD[.], y: v127|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v127|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: v128|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v10|DWORD, v14|DWORD] destination: B104 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600667983186095990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.], v21|QWORD[.]] destination: B11 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVZXB [v12|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZX [v12|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v23|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v10|DWORD, v14|DWORD] destination: B14 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v46|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v40|QWORD[.] v57|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v40|QWORD[.] v39|QWORD[.] v44|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v40|QWORD[.] v39|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v39|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v40|QWORD[.] v57|QWORD[.] v58|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v40|QWORD[.] v39|QWORD[.] v44|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v40|QWORD[.] v39|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction CMP (x: v44|DWORD, y: [v59|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v58|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v58|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590365557341247618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SHL v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = LEA [v63|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = AND v64|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVSXD v65|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = ADD (x: v66|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590308545974466791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v66|QWORD + v61|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v66|QWORD + v61|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v66|QWORD + v61|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v66|QWORD + v61|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + 12], y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE v61|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.]] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = CMOVE (falseValue: v58|DWORD, ~trueValue: v43|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v73|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LEA [v71|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = LEA [v42|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v73|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v73|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|V128_WORD = H [v75|QWORD[*] + v80|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v80|QWORD * 2], input: v82|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v80|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v73|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|QWORD, y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|V64_WORD = H [v75|QWORD[*] + v84|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v84|QWORD * 2], input: v86|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v84|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v73|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|V32_WORD = H [v75|QWORD[*] + v88|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v88|QWORD * 2], input: v90|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v88|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = DEC v73|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVSX [v75|QWORD[*] + v92|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[.] + v92|QWORD * 2], y: v94|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B55" "B72" "B71" 
    successors "B74" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v58|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v95|QWORD, y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B90" "B89" 
    successors "B94" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + 16], y: v116|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[*] = SHR v40|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v117|QWORD[*] + v118|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOV [v40|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v119|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590935671009055886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = SUB (x: v58|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v119|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590872958505596976
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[*] = MOVE v121|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[*] = MOVE v71|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVSXD v119|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOV v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v122|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v123|QWORD[*] + v124|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v125|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v44|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + 12], y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD, v10|DWORD, v14|DWORD] destination: B98 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = LEA [v71|QWORD[.] + v73|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = SUB (x: v95|QWORD, ~y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v97|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = LEA [v97|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v102|QWORD, y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v102|QWORD * 2], input: v104|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = LEA [v102|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|QWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = LEA [v97|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|QWORD, y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v106|QWORD * 2], input: v108|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = LEA [v106|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|QWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA [v97|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v110|QWORD, y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v110|QWORD * 2], input: v112|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = LEA [v110|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD = DEC v97|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v114|QWORD, y: v115|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v96|QWORD[.] + v114|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B90 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B99 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B99" 
    successors "B60" "B99" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|V256_WORD = H [v75|QWORD[*] + v77|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v77|QWORD * 2], input: v78|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v77|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4584911768267530006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD] destination: B91 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B91" 
    successors "B78" "B91" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v96|QWORD[.] + v100|QWORD * 2], input: v99|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = LEA [v100|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|QWORD, y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|QWORD] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|QWORD] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|QWORD] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576221298828238052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B50" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576677389762484668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v69|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v40|QWORD[.] v57|QWORD[.] v58|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v40|QWORD[.] v39|QWORD[.] v44|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v40|QWORD[.] v39|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[.]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560436678219517306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4579887141049957158
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-143713|0xfffffffffffdce9f]] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B31" "B33" "B35" "B40" 
    successors 
    xhandlers
    flags 
    probability 4584347073080983136
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: int[-2|0xfffffffffffffffe] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD v50|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4579799805857268122
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-143713|0xfffffffffffdce9f]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4561247506547066844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4565710564758059862
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -158305 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v40|QWORD[.] v39|QWORD[.] v44|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v40|QWORD[.] v39|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4561166423714311889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-131851|0xfffffffffffdfcf5]] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-130579|0xfffffffffffe01ed]] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-120083|0xfffffffffffe2aed]] destination: B16 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" "B24" "B16" "B19" "B26" "B25" "B107" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v131|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-127027|0xfffffffffffe0fcd]] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235105|0xfffffffffffc699f]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v40|QWORD[.] v57|QWORD[.] v58|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v40|QWORD[.] v39|QWORD[.] v44|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: v40|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: v40|QWORD[.] v39|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-122643|0xfffffffffffe20ed]] destination: B19 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-123419|0xfffffffffffe1de5]] destination: B26 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B106" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-161555|0xfffffffffffd88ed]] destination: B103 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B103" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: int[-2|0xfffffffffffffffe] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v9|DWORD v10|DWORD v5|QWORD[.] v11|DWORD v130|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-41747|0xffffffffffff5ced]] destination: B15 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-134411|0xfffffffffffdf2f5]] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-149779|0xfffffffffffdb6ed]] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2003779337] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -112667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v132|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: v5|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125971|0xfffffffffffe13ed]] destination: B25 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B106" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-161331|0xfffffffffffd89cd]] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-8723|0xffffffffffffdded]] destination: B17 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30739|0xffffffffffff87ed]] destination: B24 -> B108 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #31         // ensureOpen:()void
     4: iconst_m1     
     5: istore        4
     7: iconst_m1     
     8: istore        5
    10: aload_0       
    11: aload_2       
    12: invokespecial #38         // parse:(java.lang.String)java.util.Formatter$FormatString[]
    15: astore        6
    17: iconst_0      
    18: istore        7
    20: iload         7
    22: aload         6
    24: arraylength   
    25: if_icmpge     269
    28: aload         6
    30: iload         7
    32: aaload        
    33: astore        8
    35: aload         8
    37: invokeinterface#39, 1      // java.util.Formatter$FormatString.index:()int
    42: istore        9
    44: iload         9
    46: tableswitch   [3] {-2: 72, -1: 84, 0: 140} default: 198
    72: aload         8
    74: aconst_null   
    75: aload_1       
    76: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
    81: goto          252
    84: iload         4
    86: iflt          102
    89: aload_3       
    90: ifnull        117
    93: iload         4
    95: aload_3       
    96: arraylength   
    97: iconst_1      
    98: isub          
    99: if_icmple     117
   102: new           #56         // java.util.MissingFormatArgumentException
   105: dup           
   106: aload         8
   108: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   113: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   116: athrow        
   117: aload         8
   119: aload_3       
   120: ifnonnull     127
   123: aconst_null   
   124: goto          131
   127: aload_3       
   128: iload         4
   130: aaload        
   131: aload_1       
   132: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   137: goto          252
   140: iinc          
   143: iload         5
   145: istore        4
   147: aload_3       
   148: ifnull        175
   151: iload         5
   153: aload_3       
   154: arraylength   
   155: iconst_1      
   156: isub          
   157: if_icmple     175
   160: new           #56         // java.util.MissingFormatArgumentException
   163: dup           
   164: aload         8
   166: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   171: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   174: athrow        
   175: aload         8
   177: aload_3       
   178: ifnonnull     185
   181: aconst_null   
   182: goto          189
   185: aload_3       
   186: iload         5
   188: aaload        
   189: aload_1       
   190: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   195: goto          252
   198: iload         9
   200: iconst_1      
   201: isub          
   202: istore        4
   204: aload_3       
   205: ifnull        232
   208: iload         4
   210: aload_3       
   211: arraylength   
   212: iconst_1      
   213: isub          
   214: if_icmple     232
   217: new           #56         // java.util.MissingFormatArgumentException
   220: dup           
   221: aload         8
   223: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   228: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   231: athrow        
   232: aload         8
   234: aload_3       
   235: ifnonnull     242
   238: aconst_null   
   239: goto          246
   242: aload_3       
   243: iload         4
   245: aaload        
   246: aload_1       
   247: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   252: goto          263
   255: astore        10
   257: aload_0       
   258: aload         10
   260: putfield      #34         // lastException:java.io.IOException
   263: iinc          
   266: goto          20
   269: aload_0       
   270: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e75c647 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   24  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rax:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: rax|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   28  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B110" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   56  <|@ instruction stack:72|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   58  <|@ instruction stack:76|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B23" "B98" "B14" "B104" "B42" 
    successors "B6" "B109" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617001407344883683
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   64  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.7881810862161587 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615561396821323718
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction rbx|DWORD[.] = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.5289273050649689 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611542559700663216
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   86  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B7 -> B8, B7 -> B17, B7 -> B18] defaultTarget: B7 -> B17 strategy: SequentialStrategy[avgEffort=1.4222844898631943] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607799539553510130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.8380436441764084 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606757993882850451
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rax:0, rbx:0, rdi:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr  102  <|@ instruction r13|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction BRANCH trueDestinationProbability: 0.5924183141131246 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603259812248755416
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B10" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  302  <|@ instruction stack:104|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:112|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  322  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction r14|DWORD[.] = MOV [rdi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  334  <|@ instruction stack:92|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction stack:88|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r9|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  352  <|@ instruction rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  354  <|@ instruction stack:116|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r14|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction stack:120|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rsi|DWORD = ADD (x: rbx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction r10|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.9451567136210046 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609501881101477936
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609433650482189626
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609366102169094199
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction stack:88|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  428  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + r14|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  434  <|@ instruction rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  438  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B42 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610573034687243228
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610573034687243228
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rdi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rax:0, rbx:0, rdi:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr  286  <|@ instruction r13|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  288  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.5924183141131246 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607355497019049734
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:88|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [r8:0, stack:40, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - r8|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD state [bci:20] <|@ <|@
      nr  188  <|@ instruction rdx|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|DWORD = MOVZXB [rbx|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rsi|DWORD = MOVZX [rbx|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:92|DWORD stack:92|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 190] <|@ <|@
      nr  242  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction stack:72|DWORD = STACKMOVE (input: stack:92|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  246  <|@ instruction stack:76|DWORD = STACKMOVE (input: stack:92|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  248  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B23 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604610294881663404
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B11" "B100" 
    successors "B102" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction CMP [rdi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr 1002  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr 1008  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction stack:112|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@reference-map: [stack:16, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: stack:112|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr 1026  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1030  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B104 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600667983186095990
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B11 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction rsi|DWORD = MOVZXB [rbx|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  128  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rsi|DWORD = MOVZX [rbx|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  136  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr  152  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:128|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [stack:0, stack:16, stack:24, stack:36, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:112|QWORD[.] stack:128|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:112|QWORD[.] stack:104|QWORD[.] stack:116|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:112|QWORD[.] stack:104|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr  472  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r10|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  478  <|@ instruction rbx|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [r10:0, r14:0, stack:0, stack:16, stack:24, stack:36, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:112|QWORD[.] stack:128|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:112|QWORD[.] r14|QWORD[.] rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:112|QWORD[.] r14|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  526  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  528  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590365557341247618
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  540  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  542  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  546  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590308545974466791
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  560  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  562  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  566  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  570  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction r9|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B55" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  608  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  610  <|@ instruction rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  612  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  614  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  630  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  640  <|@ instruction JUMP ~[] destination: B57 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B57" "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  666  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  668  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  670  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  680  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  682  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr  692  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  704  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  706  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr  716  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  728  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  730  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  740  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  752  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  754  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B55" "B72" "B71" 
    successors "B74" "B92" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  760  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  762  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B90" "B89" 
    successors "B94" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  912  <|@ instruction MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  918  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  922  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B96" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590935671009055886
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  932  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B96 falseDestination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590872958505596976
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction r11|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  962  <|@ instruction r11|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  966  <|@ instruction rsi|QWORD = LEA [rax|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  974  <|@ instruction rbx|DWORD = ADD (x: stack:116|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B98 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B55 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  770  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  774  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  808  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  810  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  820  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  822  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  824  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  830  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  832  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  844  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  846  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  848  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B86" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  854  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  856  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  868  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  870  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  872  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  880  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  894  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B90 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4584911768267530006
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  990  <|@ instruction JUMP ~[] destination: B99 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B99" 
    successors "B60" "B99" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4586495417344775198
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  650  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  652  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  654  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  786  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B77" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4584911768267530006
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B91 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B91" 
    successors "B78" "B91" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4586495417344775198
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  792  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  794  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  796  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction JUMP ~[] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B89 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576221298828238052
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B50" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576677389762484668
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  594  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  598  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16, stack:24, stack:36, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:112|QWORD[.] stack:128|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:112|QWORD[.] stack:104|QWORD[.] r14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:112|QWORD[.] stack:104|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4560436678219517306
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4579887141049957158
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[-143713|0xfffffffffffdce9f] <|@ <|@
      nr  378  <|@ instruction rbx|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B31" "B33" "B35" "B40" 
    successors 
    xhandlers
    flags 
    probability 4584347073080983136
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@reference-map: [rbx:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: int[-2|0xfffffffffffffffe] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD rbx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4579799805857268122
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|DWORD = MOVE input: int[-143713|0xfffffffffffdce9f] <|@ <|@
      nr  394  <|@ instruction rbx|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4561247506547066844
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors 
    xhandlers
    flags 
    probability 4565710564758059862
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction MOV [r15|QWORD + 668] y: -158305 size: DWORD <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  948  <|@ st <@st|@reference-map: [rdi:0, stack:24, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] stack:104|QWORD[.] stack:116|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: rdi|QWORD[.] stack:104|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" 
    xhandlers
    flags 
    probability 4561166423714311889
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r10|DWORD = MOVE input: int[-131851|0xfffffffffffdfcf5] <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-130579|0xfffffffffffe01ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r10|DWORD = MOVE input: int[-120083|0xfffffffffffe2aed] <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B16 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" "B24" "B16" "B19" "B26" "B25" "B107" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVE input: int[-127027|0xfffffffffffe0fcd] <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction r10|DWORD = MOVE input: int[-235105|0xfffffffffffc699f] <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r14|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [rdi:0, r11:0, r14:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rdi|QWORD[.] r14|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] r11|QWORD[.] rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: rdi|QWORD[.] r11|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122643|0xfffffffffffe20ed] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B19 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B26 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B106" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOVE input: int[-161555|0xfffffffffffd88ed] <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B103 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B103" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [rbx:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: int[-2|0xfffffffffffffffe] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD rbx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B15 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r10|DWORD = MOVE input: int[-134411|0xfffffffffffdf2f5] <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed] <|@ <|@
      nr  488  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction r14|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2003779337] <|@ <|@
      nr 1074  <|@ instruction MOV [r15|QWORD + 668] y: -112667 size: DWORD <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1078  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: stack:64|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B25 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B106" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOVE input: int[-161331|0xfffffffffffd89cd] <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded] <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B17 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B24 -> B108 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #31         // ensureOpen:()void
     4: iconst_m1     
     5: istore        4
     7: iconst_m1     
     8: istore        5
    10: aload_0       
    11: aload_2       
    12: invokespecial #38         // parse:(java.lang.String)java.util.Formatter$FormatString[]
    15: astore        6
    17: iconst_0      
    18: istore        7
    20: iload         7
    22: aload         6
    24: arraylength   
    25: if_icmpge     269
    28: aload         6
    30: iload         7
    32: aaload        
    33: astore        8
    35: aload         8
    37: invokeinterface#39, 1      // java.util.Formatter$FormatString.index:()int
    42: istore        9
    44: iload         9
    46: tableswitch   [3] {-2: 72, -1: 84, 0: 140} default: 198
    72: aload         8
    74: aconst_null   
    75: aload_1       
    76: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
    81: goto          252
    84: iload         4
    86: iflt          102
    89: aload_3       
    90: ifnull        117
    93: iload         4
    95: aload_3       
    96: arraylength   
    97: iconst_1      
    98: isub          
    99: if_icmple     117
   102: new           #56         // java.util.MissingFormatArgumentException
   105: dup           
   106: aload         8
   108: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   113: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   116: athrow        
   117: aload         8
   119: aload_3       
   120: ifnonnull     127
   123: aconst_null   
   124: goto          131
   127: aload_3       
   128: iload         4
   130: aaload        
   131: aload_1       
   132: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   137: goto          252
   140: iinc          
   143: iload         5
   145: istore        4
   147: aload_3       
   148: ifnull        175
   151: iload         5
   153: aload_3       
   154: arraylength   
   155: iconst_1      
   156: isub          
   157: if_icmple     175
   160: new           #56         // java.util.MissingFormatArgumentException
   163: dup           
   164: aload         8
   166: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   171: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   174: athrow        
   175: aload         8
   177: aload_3       
   178: ifnonnull     185
   181: aconst_null   
   182: goto          189
   185: aload_3       
   186: iload         5
   188: aaload        
   189: aload_1       
   190: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   195: goto          252
   198: iload         9
   200: iconst_1      
   201: isub          
   202: istore        4
   204: aload_3       
   205: ifnull        232
   208: iload         4
   210: aload_3       
   211: arraylength   
   212: iconst_1      
   213: isub          
   214: if_icmple     232
   217: new           #56         // java.util.MissingFormatArgumentException
   220: dup           
   221: aload         8
   223: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   228: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   231: athrow        
   232: aload         8
   234: aload_3       
   235: ifnonnull     242
   238: aconst_null   
   239: goto          246
   242: aload_3       
   243: iload         4
   245: aaload        
   246: aload_1       
   247: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   252: goto          263
   255: astore        10
   257: aload_0       
   258: aload         10
   260: putfield      #34         // lastException:java.io.IOException
   263: iinc          
   266: goto          20
   269: aload_0       
   270: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B4" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e75c647 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2494) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 12]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12] <|@ <|@
      nr   24  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rax:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: rax|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15] <|@ <|@
      nr   28  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B110" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   56  <|@ instruction stack:72|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   58  <|@ instruction stack:76|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B23" "B98" "B14" "B104" "B42" 
    successors "B6" "B109" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617001407344883683
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   64  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.7881810862161587 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4615561396821323718
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction rbx|DWORD[.] = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr   76  <|@ instruction rbp|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed} <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.5289273050649689 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611542559700663216
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   86  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B7 -> B8, B7 -> B17, B7 -> B18] defaultTarget: B7 -> B17 strategy: SequentialStrategy[avgEffort=1.4222844898631943] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607799539553510130
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.8380436441764084 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B30" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4606757993882850451
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rax:0, rbx:0, rdi:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr  102  <|@ instruction r13|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction BRANCH trueDestinationProbability: 0.5924183141131246 condition: = trueDestination: B9 -> B30 falseDestination: B9 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B9" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  302  <|@ instruction stack:104|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:112|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  320  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  322  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction r14|DWORD[.] = MOV [rdi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  334  <|@ instruction stack:92|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609897793370789234
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction stack:88|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction r9|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  352  <|@ instruction rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  354  <|@ instruction stack:116|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r14|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  358  <|@ instruction stack:120|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rsi|DWORD = ADD (x: rbx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  362  <|@ instruction r10|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  364  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.9451567136210046 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609501881101477936
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609433650482189626
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609366102169094199
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction stack:88|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  428  <|@ instruction rbx|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + r14|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  434  <|@ instruction rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  438  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B42 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B28" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610573034687243228
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B101" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610573034687243228
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rdi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rdi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [rax:0, rbx:0, rdi:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD rax|QWORD[.] r9|DWORD - - - 
>@ <|@ instruction rsi|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:20] <|@ <|@
      nr  286  <|@ instruction r13|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  288  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.5924183141131246 condition: = trueDestination: B28 -> B30 falseDestination: B28 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:88|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [r8:0, stack:40, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - r8|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD state [bci:20] <|@ <|@
      nr  188  <|@ instruction rdx|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction r10|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  192  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rbx|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|DWORD = MOVZXB [rbx|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rsi|DWORD = MOVZX [rbx|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4605661259839582587
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2520) [bci: 190]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:92|DWORD stack:92|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 190] <|@ <|@
      nr  242  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction [stack:72|DWORD, stack:76|DWORD] = MULTISTACKMOVE (inputs: [stack:92|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  248  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B23 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B9" "B28" 
    successors "B102" "B105" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction CMP [rdi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed} <|@ <|@
      nr 1002  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B104" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr 1008  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607645447657887924
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction stack:112|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@reference-map: [stack:16, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:669) [bci: 9]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1065) [bci: 20]
locals: stack:112|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:57) [bci: 2]
locals: - - 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76] <|@ <|@
      nr 1026  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1030  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction JUMP ~[] destination: B104 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction rsi|DWORD = MOVZXB [rbx|DWORD[.] * 8 + 26] size: DWORD <|@ <|@
      nr  128  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rsi|DWORD = MOVZX [rbx|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  136  <|@ instruction CMP rsi|DWORD y: 100 size: DWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4595802685987145030
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  148  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76] <|@ <|@
      nr  152  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B44" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  460  <|@ instruction stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  464  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:128|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [stack:0, stack:16, stack:24, stack:36, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:112|QWORD[.] stack:128|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:112|QWORD[.] stack:104|QWORD[.] stack:116|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:112|QWORD[.] stack:104|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr  472  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r10|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  478  <|@ instruction rbx|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [r10:0, r14:0, stack:0, stack:16, stack:24, stack:36, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:112|QWORD[.] stack:128|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:112|QWORD[.] r14|QWORD[.] rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:112|QWORD[.] r14|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction CMP (x: rbx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145695
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  526  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  528  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  530  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" "B51" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590365557341247618
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  540  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  542  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  546  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B53 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590308545974466791
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  560  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  562  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  564  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  566  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  570  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction r9|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B51 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B73" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  608  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  610  <|@ instruction rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  612  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  614  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr  616  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B54 -> B73 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B61" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  628  <|@ instruction rdx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  630  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  632  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  666  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  668  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  670  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B64 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  680  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  682  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  684  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" 
    successors "B67" "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr  692  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  704  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  706  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  708  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B64" 
    successors "B70" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr  716  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  728  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  730  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" 
    successors "B73" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  740  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  752  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  754  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B54" "B72" "B70" 
    successors "B74" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  760  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  762  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B73" "B90" "B88" 
    successors "B97" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590999016972145694
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  912  <|@ instruction MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  918  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  920  <|@ instruction r10|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  922  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  924  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B93 -> B97 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590935671009055886
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  932  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B97 falseDestination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590872958505596976
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction r11|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  956  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  962  <|@ instruction r11|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  964  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  966  <|@ instruction rsi|QWORD = LEA [rax|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  974  <|@ instruction rbx|DWORD = ADD (x: stack:116|DWORD, y: stack:92|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B98 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  768  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  770  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  774  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B82" "B81" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  808  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  810  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  818  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  820  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  822  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  824  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B79" 
    successors "B85" "B84" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  830  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  832  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B85 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  844  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  846  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  848  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B82" 
    successors "B88" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  852  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  854  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  856  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B88 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  868  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  870  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  872  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B85" 
    successors "B93" "B90" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4586495417344775198
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  880  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B93 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584911768267530006
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B90 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B56" "B59" 
    successors "B61" "B59" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  650  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  652  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  654  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B61 falseDestination: B59 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577488218090034206
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  786  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B77" 
    successors "B79" "B77" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4586495417344775198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  792  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  794  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  796  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B79 falseDestination: B77 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B48" "B49" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576677389762484668
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  594  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  598  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16, stack:24, stack:36, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:112|QWORD[.] stack:128|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:112|QWORD[.] stack:104|QWORD[.] r14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: stack:112|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: stack:112|QWORD[.] stack:104|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
      nr  602  <|@ instruction r9|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4579887141049957158
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE input: int[-143713|0xfffffffffffdce9f] <|@ <|@
      nr  378  <|@ instruction rbx|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B31" "B33" "B35" "B40" 
    successors 
    xhandlers
    flags 
    probability 4584347073080983136
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr  402  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@reference-map: [rbx:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: int[-2|0xfffffffffffffffe] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD rbx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4579799805857268122
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|DWORD = MOVE input: int[-143713|0xfffffffffffdce9f] <|@ <|@
      nr  394  <|@ instruction rbx|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" "B95" 
    successors 
    xhandlers
    flags 
    probability 4565710564758059862
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction MOV [r15|QWORD + 668] y: -158305 size: DWORD <|@ <|@
      nr  946  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  948  <|@ st <@st|@reference-map: [rdi:0, stack:24, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] stack:104|QWORD[.] stack:116|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: rdi|QWORD[.] stack:104|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction r10|DWORD = MOVE input: int[-131851|0xfffffffffffdfcf5] <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B33 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-130579|0xfffffffffffe01ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r10|DWORD = MOVE input: int[-120083|0xfffffffffffe2aed] <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B16 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" "B24" "B16" "B19" "B26" "B25" "B107" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2502) [bci: 20]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVE input: int[-127027|0xfffffffffffe0fcd] <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction r10|DWORD = MOVE input: int[-235105|0xfffffffffffc699f] <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  488  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction r14|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [rdi:0, r11:0, r14:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rdi|QWORD[.] r14|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] r11|QWORD[.] rbx|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2]
locals: rdi|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2]
locals: rdi|QWORD[.] r11|QWORD[.] 
java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11]
locals: - - - 
java.util.Formatter.format(Formatter.java:2508) [bci: 76]
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOVE input: int[-122643|0xfffffffffffe20ed] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B19 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5] <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B26 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B106" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1012  <|@ instruction r10|DWORD = MOVE input: int[-161555|0xfffffffffffd88ed] <|@ <|@
      nr 1014  <|@ instruction JUMP ~[] destination: B103 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" "B103" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3 <|@ <|@
      nr 1044  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1048  <|@ st <@st|@reference-map: [rbx:0, stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2504) [bci: 42]
stack: int[-2|0xfffffffffffffffe] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD stack:72|DWORD stack:64|QWORD[.] stack:80|DWORD rbx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B15 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r10|DWORD = MOVE input: int[-134411|0xfffffffffffdf2f5] <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B35 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2003779337] <|@ <|@
      nr 1074  <|@ instruction MOV [r15|QWORD + 668] y: -112667 size: DWORD <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1078  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:80, stack:88]
live-base-pointers: []
java.util.Formatter.format(Formatter.java:2501) [bci: 15]
stack: stack:64|QWORD[.] 
locals: stack:56|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] int[-1|0xffffffffffffffff] int[-1|0xffffffffffffffff] - - - - - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B25 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B106" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOVE input: int[-161331|0xfffffffffffd89cd] <|@ <|@
      nr 1038  <|@ instruction JUMP ~[] destination: B105 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded] <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B17 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed] <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B24 -> B108 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #31         // ensureOpen:()void
     4: iconst_m1     
     5: istore        4
     7: iconst_m1     
     8: istore        5
    10: aload_0       
    11: aload_2       
    12: invokespecial #38         // parse:(java.lang.String)java.util.Formatter$FormatString[]
    15: astore        6
    17: iconst_0      
    18: istore        7
    20: iload         7
    22: aload         6
    24: arraylength   
    25: if_icmpge     269
    28: aload         6
    30: iload         7
    32: aaload        
    33: astore        8
    35: aload         8
    37: invokeinterface#39, 1      // java.util.Formatter$FormatString.index:()int
    42: istore        9
    44: iload         9
    46: tableswitch   [3] {-2: 72, -1: 84, 0: 140} default: 198
    72: aload         8
    74: aconst_null   
    75: aload_1       
    76: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
    81: goto          252
    84: iload         4
    86: iflt          102
    89: aload_3       
    90: ifnull        117
    93: iload         4
    95: aload_3       
    96: arraylength   
    97: iconst_1      
    98: isub          
    99: if_icmple     117
   102: new           #56         // java.util.MissingFormatArgumentException
   105: dup           
   106: aload         8
   108: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   113: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   116: athrow        
   117: aload         8
   119: aload_3       
   120: ifnonnull     127
   123: aconst_null   
   124: goto          131
   127: aload_3       
   128: iload         4
   130: aaload        
   131: aload_1       
   132: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   137: goto          252
   140: iinc          
   143: iload         5
   145: istore        4
   147: aload_3       
   148: ifnull        175
   151: iload         5
   153: aload_3       
   154: arraylength   
   155: iconst_1      
   156: isub          
   157: if_icmple     175
   160: new           #56         // java.util.MissingFormatArgumentException
   163: dup           
   164: aload         8
   166: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   171: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   174: athrow        
   175: aload         8
   177: aload_3       
   178: ifnonnull     185
   181: aconst_null   
   182: goto          189
   185: aload_3       
   186: iload         5
   188: aaload        
   189: aload_1       
   190: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   195: goto          252
   198: iload         9
   200: iconst_1      
   201: isub          
   202: istore        4
   204: aload_3       
   205: ifnull        232
   208: iload         4
   210: aload_3       
   211: arraylength   
   212: iconst_1      
   213: isub          
   214: if_icmple     232
   217: new           #56         // java.util.MissingFormatArgumentException
   220: dup           
   221: aload         8
   223: invokeinterface#41, 1      // java.util.Formatter$FormatString.toString:()java.lang.String
   228: invokespecial #42         // java.util.MissingFormatArgumentException.<init>:(java.lang.String)void
   231: athrow        
   232: aload         8
   234: aload_3       
   235: ifnonnull     242
   238: aconst_null   
   239: goto          246
   242: aload_3       
   243: iload         4
   245: aaload        
   246: aload_1       
   247: invokeinterface#40, 3      // java.util.Formatter$FormatString.print:(java.lang.Object, java.util.Locale)void
   252: goto          263
   255: astore        10
   257: aload_0       
   258: aload         10
   260: putfield      #34         // lastException:java.io.IOException
   263: iinc          
   266: goto          20
   269: aload_0       
   270: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec7848896c247048895424584c89442450448b5610438504d44c8bd6488bd14c895424486690e800000000904889442440448b500c448954243c418bfa488bf748ffce483bfe0f87090000004585d20f851f07000041b900000000c7442438ffffffffc7442434ffffffff660f1f440000660f1f440000453bd10f8ef505000044894c2430428b5c88108b3cdd08000000418be9ffc581ffaddeadde0f85300100008b34dd0c00000083fefe0f841700000083fe000f845901000083feff0f84e5060000e9e006000081ffaddeadde0f852b0200008b3cdd100000008b3cfd100000008b34fd08000000448b2cdd0c00000049c1e50348c1e70381feaddeadde0f85b40100004c896c241848897c24104d85ed0f84c2050000418b750c85f60f84ae050000448b771044897424244585f60f842a060000895c2428468b0cf50c0000008b1cf50c000000895c240c448b770c897424088bf34103f6448bd6452bd14183fa010f8ded0100004585f60f8c19050000442bcb453bf10f8f2f05000089742428448b5424248b742408896c242c48c1e60349c1e2034d63f68bdb488d7e104b8d747210488bd3e80000000090488b7c2410448b5c242844895f0c448b4c242c448b54243c488b442440e9a5feffff81ffaddeadde0f851f0500008b3cdd100000008b3cfd100000008b34fd08000000448b2cdd0c00000049c1e50348c1e70381feaddeadde0f84f7feffffe9a6000000896c242c895c24284c8b442450418b700c8bd6ffca448b54243841ffc2443bd20f8ff1040000413bf20f86f00400008b5c24280fb634dd1a00000085f60f853f0500000fb734dd1800000083fe640f854c050000438b74901048c1e3038bd648c1e203488bf3488b4c245844895424246690e80000000090448b4c242c48894424608b442424894424388b44242489442434488b442460448b54243c488b442440e9bdfdffff896c242c817f08addeadde0f85d60400004d85ed0f8467040000488bf7498bd548897c24100f1f8000000000e80000000090448b4c242c448b54243c488b442440e977fdffff896c242c0fb634dd1a00000085f60f85cf0300000fb734dd1800000083fe640f853404000048c1e303488bf348ba0000000000000000488b4c2458666690e80000000090448b4c242c448b54243c488b442440e91ffdffff448bde44894c2428448b542424896c242c458bf249c1e603488bf7418bd34c8934240f1f4000e80000000090448be84c8b742418458b560c8b5c240c423b1cd50c0000000f87ca0300004585ed0f8c5a030000498b7760498b57704181fdffffff000f838b020000418bcdd1e18d491783e1f84863c94c8bd94c03de4c3bda0f876e0200004d895f600f188431c00000000f188431000100000f188431400100000f1884318001000044896e0c48c70601000000c74608addeadde488bc64489542408448b4c2428448bf3453be9418bfd410f4ff94863ff4883ff010f8c9e000000448b542424488d70104a8d14d5100000004c8d57f04d85d249c7c3000000000f8da80100004c8d57f84d3bda0f8f13000000c4a17a6f045ac4a17a7f045e4d8d53084d8bda4c8d57fc4d3bda0f8f13000000c4a1f96e045ac4a1f97e045e4d8d53044d8bda4c8d57fe4d3bda0f8f13000000c4a1796e045ac4a1797e045e4d8d53024d8bda4c8bd749ffca4d3bda0f8f0a000000420fbf145a664289145e4963f5483bf70f8f8a000000488b7c2410488bf048c1ee03897710488bf748c1ee0948ba00c024080100000044882416448b570c4585d20f8ca6010000452bee453bd50f8f9a010000448b5c2408418bf348c1e6034963d2458bde488d7e10488d745010498bd34489542424e800000000908b5c240c035c2424488b7c2410895f0c448b4c242c448b54243c488b442440e909fbffff488d547810482bf7488d7ef04885ff0f8d9e00000049c7c200000000488d7ef84c3bd70f8f11000000c5f9efc0c4a17a7f0452498d7a084c8bd7488d7efc4c3bd70f8f11000000c5f9efc0c4a1f97e0452498d7a044c8bd7488d7efe4c3bd70f8f11000000c5f9efc0c4a1797e0452498d7a024c8bd748ffce4c3bd60f8ff4feffff6646892452e9eafeffff0f1f8000000000660f1f440000c4a17e6f045ac4a17e7f045e4d8d5b104d3bda7eebe93efeffffc5f9efc049c7c2000000006666660f1f840000000000c4a17e7f04524d8d52104c3bd77ef1e93fffffff448954240848beaddeaddeaddeadde418bd5b900000000448bf3e80000000090448b4c2428e9aefdffff488b442448488b6c24704883c478850500000000c5f877c341ba9fcefdff8b5c242848c1e3034589979c0200004d89a7a8020000e8000000009041ba9fcefdff8b5c2428ebdc41c7879c0200009f95fdff4d89a7a8020000e8000000009041baf5fcfdffebbc41baed01feffebb441baed2afeff4589979c0200004d89a7a8020000e8000000009041bacd0ffeffebe441ba9f69fcff488b7c24104d8bde4c8b34244589979c0200004d89a7a8020000e8000000009041baed20feffebb641bae51dfeffebae41baed88fdff48c1e3034589979c0200004d89a7a8020000e8000000009041baed5cffffeb8841baf5f2fdffe92bffffff41baedb6fdffeb9749baaddeaddeaddeadde41c7879c020000e547feff4d8997a8020000e8000000009041baed13feffe948ffffff41bacd89fdffeb9841baedddffffe935ffffff41baed87ffffe92affffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6e75c647 slotKind: QWORD  <||@
  Comment 48 6 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 62 12 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 62 [rcx:0, rdx:0, rsi:0, r8:0, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2494) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4  |5  |6  |7  |8  |9  |10 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |-  |-  |-  |-  |-  |-  |-    <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 69 18 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 72 20 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 77 22 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter.parse(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:12]  <||@
  Comment 77 9  <||@
  Comment 79 {HotSpotMethod<Formatter.parse(String)>}  <||@
  Comment 84 [stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2501) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-    <||@
  Comment 85 24 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 90 26 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:15]  <||@
  Comment 90 [rax:0, stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2501) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-  
     stack:   |rax|QWORD[.]       |                   |   |                   |                            |                            |   |   |   |   |     <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 94 28 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 99 30 rdi|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 102 32 rsi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 108 34 CMP (x: rdi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 111 36 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 117 block B2 null  <||@
  Comment 117 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 44 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 120 46 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B110  <||@
  Comment 126 block B4 null  <||@
  Comment 126 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 54 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 132 56 stack:72|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 140 58 stack:76|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 148 60 JUMP ~[] destination: B4 -> B5  <||@
  Comment 148 block B5 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 148 62 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 160 64 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 163 66 BRANCH trueDestinationProbability: 0.7881810862161587 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B109  <||@
  Comment 169 block B6 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 169 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 70 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 174 72 rbx|DWORD[.] = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 179 74 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:20]  <||@
  Comment 179 [rax:0, rbx:0, stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |rax|QWORD[.]  |r9|DWORD  |-  |-  |-    <||@
  Comment 179 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 186 76 rbp|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 191 78 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}  <||@
  Comment 191 {meta{HotSpotType<Ljava/util/Formatter$FormatSpecifier;, resolved>;compressed}}  <||@
  Comment 197 80 BRANCH trueDestinationProbability: 0.5289273050649689 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B27  <||@
  Comment 203 block B7 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 203 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 84 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 210 86 AMD64HOTSPOTSTRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[-2|0xfffffffffffffffe], int[-1|0xffffffffffffffff], int[0|0x0]] keyTargets: [B7 -> B8, B7 -> B17, B7 -> B18] defaultTarget: B7 -> B17 strategy: SequentialStrategy[avgEffort=1.4222844898631943]  <||@
  Comment 242 block B8 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 242 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 90 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}  <||@
  Comment 242 {meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}}  <||@
  Comment 248 92 BRANCH trueDestinationProbability: 0.8380436441764084 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 254 block B9 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 254 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 96 rdi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 261 98 rdi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD state [bci:20]  <||@
  Comment 261 [rax:0, rbx:0, stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |rax|QWORD[.]  |r9|DWORD  |-  |-  |-    <||@
  Comment 261 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 268 100 rsi|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:20]  <||@
  Comment 268 [rax:0, rbx:0, rdi:0, stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |rax|QWORD[.]  |r9|DWORD  |-  |-  |-    <||@
  Comment 268 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 275 102 r13|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 283 104 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 287 106 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 291 108 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 291 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 297 110 BRANCH trueDestinationProbability: 0.5924183141131246 condition: = trueDestination: B9 -> B30 falseDestination: B9 -> B101  <||@
  Comment 303 block B30 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 303 300 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 303 302 stack:104|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 308 304 stack:112|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 313 306 TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 316 308 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 322 block B32 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 322 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 322 318 rsi|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 326 320 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 328 322 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 334 block B34 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 334 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 334 332 r14|DWORD[.] = MOV [rdi|QWORD[.] + 16] size: DWORD  <||@
  Comment 338 334 stack:92|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 343 336 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 346 338 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 352 block B36 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 352 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 348 stack:88|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 356 350 r9|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 364 352 rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 371 354 stack:116|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 375 356 r14|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD  <||@
  Comment 379 358 stack:120|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 383 360 rsi|DWORD = ADD (x: rbx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 388 362 r10|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 394 364 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 398 366 BRANCH trueDestinationProbability: 0.9451567136210046 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B43  <||@
  Comment 404 block B37 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 404 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 370 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 407 372 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 413 block B39 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 413 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 384 r9|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 416 386 CMP (x: r14|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 419 388 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B42  <||@
  Comment 425 block B42 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 425 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 425 410 stack:88|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 429 412 r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 434 414 rsi|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD  <||@
  Comment 438 416 stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 442 418 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 446 420 rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 446 422 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 450 424 r10|QWORD[*] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 450 426 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 453 428 rbx|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 455 430 rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 459 432 rsi|QWORD = LEA [r10|QWORD[*] + r14|QWORD * 2 + 16] size: QWORD  <||@
  Comment 464 434 rdx|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 467 436 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 467 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x10b07dc78, value=0x118a11d40]:0x118a11d40}  <||@
  Comment 473 438 rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 478 440 r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 483 442 MOV (x: [rdi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 487 444 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 492 446 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 497 448 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 502 450 JUMP ~[] destination: B42 -> B5  <||@
  Comment 507 block B27 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 507 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 274 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}  <||@
  Comment 507 {meta{HotSpotType<Ljava/util/Formatter$FixedString;, resolved>;compressed}}  <||@
  Comment 513 276 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B107  <||@
  Comment 519 block B28 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 519 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 280 rdi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 526 282 rdi|DWORD[.] = MOV [rdi|DWORD[.] * 8 + 16] size: DWORD state [bci:20]  <||@
  Comment 526 [rax:0, rbx:0, stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |rax|QWORD[.]  |r9|DWORD  |-  |-  |-    <||@
  Comment 526 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 533 284 rsi|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:20]  <||@
  Comment 533 [rax:0, rbx:0, rdi:0, stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6             |7         |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |rax|QWORD[.]  |r9|DWORD  |-  |-  |-    <||@
  Comment 533 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 540 286 r13|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 548 288 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 552 290 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 556 292 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 556 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 562 294 BRANCH trueDestinationProbability: 0.5924183141131246 condition: = trueDestination: B28 -> B30 falseDestination: B28 -> B101  <||@
  Comment 573 block B18 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 573 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 180 stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 577 182 stack:88|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 581 184 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 586 186 rsi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD state [bci:20]  <||@
  Comment 586 [r8:0, stack:40, stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3            |4               |5               |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |r8|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |-  |-  |-    <||@
  Comment 586 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 590 188 rdx|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 594 190 r10|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 602 192 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 605 194 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 611 block B20 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 611 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 611 204 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 614 206 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B26  <||@
  Comment 620 block B21 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 620 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 620 210 rbx|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD  <||@
  Comment 624 212 rsi|DWORD = MOVZXB [rbx|DWORD[.] * 8 + 26] size: DWORD  <||@
  Comment 632 214 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 634 216 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25  <||@
  Comment 640 block B22 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 640 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 220 rsi|DWORD = MOVZX [rbx|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 648 222 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 651 224 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 657 block B23 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 657 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 657 228 rsi|DWORD[.] = MOV [r8|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 662 230 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 666 232 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 672 234 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 675 236 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 680 238 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 685 240 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 190]  <||@
  Comment 685 9  <||@
  Comment 687 {HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>}  <||@
  Comment 692 [stack:64, stack:72, stack:80, stack:88]at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2520) [bci: 190, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:92|DWORD  |stack:92|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |-  |-  |-    <||@
  Comment 693 242 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 698 -1 [stack:72|DWORD, stack:76|DWORD] = MULTISTACKMOVE (inputs: [stack:92|DWORD, stack:92|DWORD], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 724 248 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 729 250 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 734 252 JUMP ~[] destination: B23 -> B5  <||@
  Comment 739 block B101 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 739 998 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 739 118 stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 743 1000 CMP [rdi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}  <||@
  Comment 743 {meta{HotSpotType<Ljava/io/PrintStream;, resolved>;compressed}}  <||@
  Comment 750 1002 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B105  <||@
  Comment 756 block B102 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 756 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 756 1006 TEST (x: r13|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 759 1008 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B104  <||@
  Comment 765 block B104 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 765 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 1018 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 768 1020 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 771 1022 stack:112|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 776 1024 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 20, 2, 11, 76]  <||@
  Comment 776 9  <||@
  Comment 783 {HotSpotMethod<PrintStream.write(String)>}  <||@
  Comment 788 [stack:16, stack:64, stack:72, stack:80, stack:88]at java.io.PrintStream.print(PrintStream.java:669) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1065) [bci: 20, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:112|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:57) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |-  |-  |-    <||@
  Comment 789 1026 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 794 1028 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 799 1030 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 804 1032 JUMP ~[] destination: B104 -> B5  <||@
  Comment 809 block B12 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 809 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 809 124 stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 813 126 rsi|DWORD = MOVZXB [rbx|DWORD[.] * 8 + 26] size: DWORD  <||@
  Comment 821 128 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 823 130 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B16  <||@
  Comment 829 block B13 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 829 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 829 134 rsi|DWORD = MOVZX [rbx|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 837 136 CMP rsi|DWORD y: 100 size: DWORD  <||@
  Comment 840 138 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 846 block B14 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 846 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 142 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 850 144 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 853 146 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 863 148 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 868 150 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 76]  <||@
  Comment 868 9  <||@
  Comment 871 {HotSpotMethod<Formatter$FormatSpecifier.printInteger(Object, Locale)>}  <||@
  Comment 876 [stack:64, stack:72, stack:80, stack:88]at java.util.Formatter$FormatSpecifier.print(Formatter.java:2747) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |-  |-  |-    <||@
  Comment 877 152 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 882 154 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 887 156 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 892 158 JUMP ~[] destination: B14 -> B5  <||@
  Comment 897 block B43 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 897 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 454 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 900 456 stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 905 458 r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 910 460 stack:84|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 914 462 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 921 464 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 924 466 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 927 468 stack:128|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 931 470 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:17, 21, 2, 2, 21, 2, 2, 11, 76]  <||@
  Comment 931 9  <||@
  Comment 935 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 940 [stack:0, stack:16, stack:24, stack:36, stack:64, stack:72, stack:80, stack:88]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                   |1                  
     locals:  |-                   |-                  
     stack:   |stack:112|QWORD[.]  |stack:128|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1                   |2               
     locals:  |stack:112|QWORD[.]  |stack:104|QWORD[.]  |stack:116|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:112|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:112|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1                  
     locals:  |stack:112|QWORD[.]  |stack:104|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |-  |-  |-    <||@
  Comment 941 472 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 944 474 r14|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 949 476 r10|DWORD[.] = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 953 478 rbx|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 957 480 CMP (x: rbx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 2, 21, 2, 2, 11, 76]  <||@
  Comment 957 [r10:0, r14:0, stack:0, stack:16, stack:24, stack:36, stack:64, stack:72, stack:80, stack:88]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                   |1                   |2         
     locals:  |-                   |-                   |          
     stack:   |stack:112|QWORD[.]  |stack:128|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1             |2         
     locals:  |stack:112|QWORD[.]  |r14|QWORD[.]  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:112|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:112|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1            
     locals:  |stack:112|QWORD[.]  |r14|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |-  |-  |-    <||@
  Comment 957 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 965 482 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B45  <||@
  Comment 971 block B45 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 971 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 971 498 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 974 500 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B48  <||@
  Comment 980 block B48 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 980 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 980 524 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 984 526 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 988 528 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 995 530 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B53  <||@
  Comment 1001 block B49 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1001 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1001 534 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1006 536 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 1009 538 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 1012 540 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1015 542 r11|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1021 544 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1024 546 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B49 -> B53 falseDestination: B49 -> B51  <||@
  Comment 1030 block B51 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1030 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1030 556 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 1034 558 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1042 560 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1050 562 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1058 564 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1066 566 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1070 568 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1077 570 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1077 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1084 572 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1084 574 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1087 576 stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1092 578 r9|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1097 580 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1100 582 JUMP ~[] destination: B51 -> B54  <||@
  Comment 1100 block B54 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1100 606 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1100 608 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1103 610 rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: >  <||@
  Comment 1110 612 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1113 614 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 1117 616 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B54 -> B73 falseDestination: B54 -> B56  <||@
  Comment 1123 block B56 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1123 622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1123 624 r10|DWORD[.] = MOVE stack:92|DWORD[.] moveKind: DWORD  <||@
  Comment 1128 626 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1132 628 rdx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 1140 630 r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD  <||@
  Comment 1144 632 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1147 638 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1154 634 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B56 -> B61 falseDestination: B56 -> B59  <||@
  Comment 1160 block B61 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1160 664 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1160 666 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 1164 668 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1167 670 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B61 -> B64 falseDestination: B61 -> B63  <||@
  Comment 1173 block B63 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1173 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 678 xmm0|V128_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1179 680 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1185 682 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1189 684 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1192 686 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1192 block B64 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1192 688 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1192 690 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 1196 692 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1199 694 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66  <||@
  Comment 1205 block B66 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1205 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1205 702 xmm0|V64_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1211 704 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1217 706 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1221 708 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1224 710 JUMP ~[] destination: B66 -> B67  <||@
  Comment 1224 block B67 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1224 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1224 714 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 1228 716 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1231 718 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69  <||@
  Comment 1237 block B69 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1237 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1237 726 xmm0|V32_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1243 728 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1249 730 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1253 732 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1256 734 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1256 block B70 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1256 736 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1256 738 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 1262 740 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1265 742 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72  <||@
  Comment 1271 block B72 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1271 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1271 750 rdx|DWORD = MOVSX [rdx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 1276 752 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 1281 754 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1281 block B73 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1281 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1281 758 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1284 760 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1287 762 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B93  <||@
  Comment 1293 block B93 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1293 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1293 904 rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1298 910 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 1305 912 MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1308 914 rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1315 916 rdx|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1325 918 MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1329 920 r10|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1333 922 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1336 924 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B93 -> B97 falseDestination: B93 -> B95  <||@
  Comment 1342 block B95 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1342 930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 932 r13|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1345 934 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1348 936 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B95 -> B97 falseDestination: B95 -> B98  <||@
  Comment 1354 block B98 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1354 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1354 952 r11|DWORD[.] = MOVE stack:120|DWORD[.] moveKind: DWORD  <||@
  Comment 1359 954 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 1366 956 rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1366 958 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1366 960 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1369 962 r11|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 1372 964 rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1376 966 rsi|QWORD = LEA [rax|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1381 968 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1384 970 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1389 972 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x118a11d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1389 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x10b07dc78, value=0x118a11d40]:0x118a11d40}  <||@
  Comment 1395 974 rbx|DWORD = ADD (x: stack:116|DWORD, y: stack:92|DWORD) size: DWORD  <||@
  Comment 1403 976 rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1408 978 MOV (x: [rdi|QWORD[.] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1411 980 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1416 982 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1421 984 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1426 986 JUMP ~[] destination: B98 -> B5  <||@
  Comment 1431 block B74 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1431 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1431 766 rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1436 768 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 1439 770 rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1443 772 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1446 774 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 1452 block B75 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1452 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1452 778 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1459 780 JUMP ~[] destination: B75 -> B79  <||@
  Comment 1459 block B79 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1459 804 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1459 806 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1463 808 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1466 810 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B79 -> B82 falseDestination: B79 -> B81  <||@
  Comment 1472 block B81 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1472 816 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1472 818 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1476 820 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1482 822 rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1486 824 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1489 826 JUMP ~[] destination: B81 -> B82  <||@
  Comment 1489 block B82 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1489 828 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1489 830 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1493 832 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1496 834 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B82 -> B85 falseDestination: B82 -> B84  <||@
  Comment 1502 block B84 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1502 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1502 842 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1506 844 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1512 846 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1516 848 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1519 850 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1519 block B85 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1519 852 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1519 854 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1523 856 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1526 858 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B85 -> B88 falseDestination: B85 -> B87  <||@
  Comment 1532 block B87 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1532 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1532 866 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1536 868 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1542 870 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1546 872 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1549 874 JUMP ~[] destination: B87 -> B88  <||@
  Comment 1549 block B88 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1549 876 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1549 878 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1552 880 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1555 882 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B88 -> B93 falseDestination: B88 -> B90  <||@
  Comment 1561 block B90 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1561 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1561 892 MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1566 896 JUMP ~[] destination: B90 -> B93  <||@
  Comment 1571 block B59 loop 1 depth 2 outer 0 header:1173|LoopBegin  <||@
  Comment 1571 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1584 650 xmm0|V256_WORD = H [rdx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1590 652 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1596 654 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1600 656 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1603 658 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B61 falseDestination: B59 -> B59  <||@
  Comment 1610 block B76 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1610 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1610 784 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1614 786 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1621 788 JUMP ~[] destination: B76 -> B77  <||@
  Comment 1621 block B77 loop 2 depth 2 outer 0 header:1238|LoopBegin  <||@
  Comment 1621 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1632 792 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1638 794 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1642 796 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1645 798 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B79 falseDestination: B77 -> B77  <||@
  Comment 1652 block B53 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1652 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1652 586 stack:120|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1657 592 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1657 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1667 594 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1670 596 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1675 598 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1678 600 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 2, 21, 2, 2, 11, 76]  <||@
  Comment 1678 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1683 [stack:0, stack:8, stack:16, stack:24, stack:36, stack:64, stack:72, stack:80, stack:88]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                   |1                   |2         
     locals:  |-                   |-                   |          
     stack:   |stack:112|QWORD[.]  |stack:128|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1                   |2         
     locals:  |stack:112|QWORD[.]  |stack:104|QWORD[.]  |r14|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:112|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:112|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1                  
     locals:  |stack:112|QWORD[.]  |stack:104|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |-  |-  |-    <||@
  Comment 1684 602 r9|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1689 604 JUMP ~[] destination: B53 -> B54  <||@
  Comment 1694 block B109 null  <||@
  Comment 1694 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1694 1066 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1699 1068 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1708 12  <||@
  Comment 1718 block B38 null  <||@
  Comment 1718 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1718 376 r10|DWORD = MOVE input: int[-143713|0xfffffffffffdce9f]  <||@
  Comment 1724 378 rbx|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD  <||@
  Comment 1728 380 JUMP ~[] destination: B38 -> B41  <||@
  Comment 1728 block B41 null  <||@
  Comment 1728 398 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1728 400 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 1732 402 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1739 404 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1746 406 DEOPT info [bci:42]  <||@
  Comment 1746 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1751 [rbx:0, stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                           |1                  |2  |3                  |4               |5               |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]           |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |rbx|QWORD[.]  |-  |-  
     stack:   |int[-2|0xfffffffffffffffe]  |                   |   |                   |                |                |                   |                |              |   |     <||@
  Comment 1752 block B40 null  <||@
  Comment 1752 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1752 392 r10|DWORD = MOVE input: int[-143713|0xfffffffffffdce9f]  <||@
  Comment 1758 394 rbx|DWORD[.] = MOVE stack:88|DWORD[.] moveKind: DWORD  <||@
  Comment 1762 396 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1764 block B97 null  <||@
  Comment 1764 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1764 944 MOV [r15|QWORD + 668] y: -158305 size: DWORD  <||@
  Comment 1775 946 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1782 948 DEOPT info [bci:26, 21, 2, 2, 21, 2, 2, 11, 76]  <||@
  Comment 1782 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1787 [rdi:0, stack:24, stack:64, stack:72, stack:80, stack:88]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2               
     locals:  |rdi|QWORD[.]  |stack:104|QWORD[.]  |stack:116|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                  
     locals:  |rdi|QWORD[.]  |stack:104|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |-  |-  |-    <||@
  Comment 1788 block B33 null  <||@
  Comment 1788 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1788 326 r10|DWORD = MOVE input: int[-131851|0xfffffffffffdfcf5]  <||@
  Comment 1794 328 JUMP ~[] destination: B33 -> B41  <||@
  Comment 1796 block B31 null  <||@
  Comment 1796 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 312 r10|DWORD = MOVE input: int[-130579|0xfffffffffffe01ed]  <||@
  Comment 1802 314 JUMP ~[] destination: B31 -> B41  <||@
  Comment 1804 block B16 null  <||@
  Comment 1804 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1804 168 r10|DWORD = MOVE input: int[-120083|0xfffffffffffe2aed]  <||@
  Comment 1810 170 JUMP ~[] destination: B16 -> B108  <||@
  Comment 1810 block B108 null  <||@
  Comment 1810 1056 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1810 1058 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1817 1060 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1824 1062 DEOPT info [bci:20]  <||@
  Comment 1824 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1829 [stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2502) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |-  |-  |-    <||@
  Comment 1830 block B107 null  <||@
  Comment 1830 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1830 1052 r10|DWORD = MOVE input: int[-127027|0xfffffffffffe0fcd]  <||@
  Comment 1836 1054 JUMP ~[] destination: B107 -> B108  <||@
  Comment 1838 block B46 null  <||@
  Comment 1838 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1838 504 r10|DWORD = MOVE input: int[-235105|0xfffffffffffc699f]  <||@
  Comment 1844 512 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1844 block B47 null  <||@
  Comment 1844 514 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1844 488 rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1849 490 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1852 492 r14|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 1856 516 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1863 518 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1870 520 DEOPT info [bci:20, 21, 2, 2, 21, 2, 2, 11, 76]  <||@
  Comment 1870 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1875 [rdi:0, r11:0, r14:0, stack:64, stack:72, stack:80, stack:88]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |-             |-             |          
     stack:   |rdi|QWORD[.]  |r14|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdi|QWORD[.]  |r11|QWORD[.]  |rbx|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:484) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:166) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:76) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdi|QWORD[.]  |r11|QWORD[.] 
  at java.util.Formatter$FixedString.print(Formatter.java:2595) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.util.Formatter.format(Formatter.java:2508) [bci: 76, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4               |5               |6                  |7               |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |-  |-  |-    <||@
  Comment 1876 block B19 null  <||@
  Comment 1876 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1876 198 r10|DWORD = MOVE input: int[-122643|0xfffffffffffe20ed]  <||@
  Comment 1882 200 JUMP ~[] destination: B19 -> B108  <||@
  Comment 1884 block B26 null  <||@
  Comment 1884 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1884 268 r10|DWORD = MOVE input: int[-123419|0xfffffffffffe1de5]  <||@
  Comment 1890 270 JUMP ~[] destination: B26 -> B108  <||@
  Comment 1892 block B103 null  <||@
  Comment 1892 1010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1892 1012 r10|DWORD = MOVE input: int[-161555|0xfffffffffffd88ed]  <||@
  Comment 1898 1014 JUMP ~[] destination: B103 -> B106  <||@
  Comment 1898 block B106 null  <||@
  Comment 1898 1040 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1898 1042 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@66f84bc4 encoding: base: 0 shift: 3  <||@
  Comment 1902 1044 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1909 1046 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1916 1048 DEOPT info [bci:42]  <||@
  Comment 1916 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1921 [rbx:0, stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2504) [bci: 42, duringCall: false, rethrow: false]
              |0                           |1                  |2  |3                  |4               |5               |6                  |7               |8             |9  |10 
     locals:  |stack:56|QWORD[.]           |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD  |stack:72|DWORD  |stack:64|QWORD[.]  |stack:80|DWORD  |rbx|QWORD[.]  |-  |-  
     stack:   |int[-2|0xfffffffffffffffe]  |                   |   |                   |                |                |                   |                |              |   |     <||@
  Comment 1922 block B15 null  <||@
  Comment 1922 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1922 162 r10|DWORD = MOVE input: int[-41747|0xffffffffffff5ced]  <||@
  Comment 1928 164 JUMP ~[] destination: B15 -> B108  <||@
  Comment 1930 block B35 null  <||@
  Comment 1930 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1930 342 r10|DWORD = MOVE input: int[-134411|0xfffffffffffdf2f5]  <||@
  Comment 1936 344 JUMP ~[] destination: B35 -> B41  <||@
  Comment 1941 block B44 null  <||@
  Comment 1941 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1941 486 r10|DWORD = MOVE input: int[-149779|0xfffffffffffdb6ed]  <||@
  Comment 1947 494 JUMP ~[] destination: B44 -> B47  <||@
  Comment 1949 block B110 null  <||@
  Comment 1949 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1949 1072 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@2003779337]  <||@
  Comment 1949 {Object[d.a@2003779337]}  <||@
  Comment 1959 1074 MOV [r15|QWORD + 668] y: -112667 size: DWORD  <||@
  Comment 1970 1076 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1977 1078 DEOPT info [bci:15]  <||@
  Comment 1977 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1982 [stack:64, stack:72, stack:80, stack:88]at java.util.Formatter.format(Formatter.java:2501) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3                  |4                           |5                           |6  |7  |8  |9  |10 
     locals:  |stack:56|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |int[-1|0xffffffffffffffff]  |int[-1|0xffffffffffffffff]  |-  |-  |-  |-  |-  
     stack:   |stack:64|QWORD[.]  |                   |   |                   |                            |                            |   |   |   |   |     <||@
  Comment 1983 block B25 null  <||@
  Comment 1983 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1983 262 r10|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed]  <||@
  Comment 1989 264 JUMP ~[] destination: B25 -> B108  <||@
  Comment 1994 block B105 null  <||@
  Comment 1994 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1994 1036 r10|DWORD = MOVE input: int[-161331|0xfffffffffffd89cd]  <||@
  Comment 2000 1038 JUMP ~[] destination: B105 -> B106  <||@
  Comment 2002 block B17 null  <||@
  Comment 2002 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2002 174 r10|DWORD = MOVE input: int[-8723|0xffffffffffffdded]  <||@
  Comment 2008 176 JUMP ~[] destination: B17 -> B108  <||@
  Comment 2013 block B24 null  <||@
  Comment 2013 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2013 256 r10|DWORD = MOVE input: int[-30739|0xffffffffffff87ed]  <||@
  Comment 2019 258 JUMP ~[] destination: B24 -> B108  <||@
  Comment 2024 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2024 4  <||@
  Comment 2030 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2030 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6901[java.util.Formatter.format(Locale, String, Object[])]"
  method "HotSpotCompilation-6901[java.util.Formatter.format(Locale, String, Object[])]"
  date 1526687569723
end_compilation
