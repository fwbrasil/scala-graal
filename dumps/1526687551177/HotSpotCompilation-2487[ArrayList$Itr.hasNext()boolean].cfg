begin_compilation
  name " HotSpotCompilation-2487[java.util.ArrayList$Itr.hasNext()]"
  method "HotSpotCompilation-2487[java.util.ArrayList$Itr.hasNext()]"
  date 1526687578524
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a31 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a31  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/ArrayList$Itr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v34 v35 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a31 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a31 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v35 
=== Succesors ===
next: i32 
=== Usages ===
v36 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v35 #next: i32  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList$Itr.hasNext()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 854
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a31 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v36 
=== Succesors ===
next: i33 
=== Usages ===
v6 
=== Predecessor ===
a31 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v36 #next: i33  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v34 
=== Succesors ===
next: v10 
=== Usages ===
v6 
=== Predecessor ===
i32 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v34 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i33 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i32 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v6 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v6 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 19]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i33 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a31 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a31  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/ArrayList$Itr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v34 v35 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a31 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a31 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 5]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v35 
=== Succesors ===
next: i32 
=== Usages ===
v36 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v35 #next: i32  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList$Itr.hasNext()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 854
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a31 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i32 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.access$000(ArrayList.java:107) [bci: 1]
at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 8]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v36 
=== Succesors ===
next: i33 
=== Usages ===
v6 
=== Predecessor ===
a31 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v36 #next: i33  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i33 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v34 
=== Succesors ===
next: v10 
=== Usages ===
v6 
=== Predecessor ===
i32 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v34 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i33 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i32 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 11]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v6 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v6 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 19]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i33 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7c051f3a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7c051f3a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // cursor:int
     4: aload_0       
     5: getfield      #0          // this$0:java.util.ArrayList
     8: invokestatic  #6          // java.util.ArrayList.access$000:(java.util.ArrayList)int
    11: if_icmpeq     18
    14: iconst_1      
    15: goto          19
    18: iconst_0      
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7c051f3a slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // cursor:int
     4: aload_0       
     5: getfield      #0          // this$0:java.util.ArrayList
     8: invokestatic  #6          // java.util.ArrayList.access$000:(java.util.ArrayList)int
    11: if_icmpeq     18
    14: iconst_1      
    15: goto          19
    18: iconst_0      
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7c051f3a slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   20  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // cursor:int
     4: aload_0       
     5: getfield      #0          // this$0:java.util.ArrayList
     8: invokestatic  #6          // java.util.ArrayList.access$000:(java.util.ArrayList)int
    11: if_icmpeq     18
    14: iconst_1      
    15: goto          19
    18: iconst_0      
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b46188b04c510000000448b560c443bd00f95c00fb6c0488b6c24104883c418850500000000c5f877c3e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7c051f3a slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 51 10 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0]at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 62 14 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 65 16 rax|DWORD = SETCC condition: !=  <||@
  Comment 71 20 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 80 12  <||@
  Comment 90 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 90 4  <||@
  Comment 96 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 96 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2487[java.util.ArrayList$Itr.hasNext()]"
  method "HotSpotCompilation-2487[java.util.ArrayList$Itr.hasNext()]"
  date 1526687578542
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1196532e0 448b560849c1e203493bc20f856f1b3bff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b46188b04c510000000448b560c443bd00f95c00fb6c0488b6c24104883c4188505d08c88f0c5f877c3e861c47aff90e8bb313bff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7c051f3a slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 51 10 rax|DWORD = MOV [rax|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0]at java.util.ArrayList$Itr.hasNext(ArrayList.java:854) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 62 14 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 65 16 rax|DWORD = SETCC condition: !=  <||@
  Comment 71 20 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 80 12  <||@
  Comment 90 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 90 4  <||@
  Comment 96 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 96 5  <||@
  HexCodeFile>>> <|@
end_nmethod
