begin_compilation
  name " HotSpotCompilation-2258[java.lang.String.substring(int)]"
  method "HotSpotCompilation-2258[java.lang.String.substring(int)]"
  date 1526687561862
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v522 v28 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 i9 v12 j157 v40 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1926
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - 
=== Succesors ===
=== Usages ===
v182 a272 a209 a318 i516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v10 v12 v348 v245 a272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v90 #falseSuccessor: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -18963
stableDimension: 0
stamp: i32 [-18963] ⇊00000000ffffb5ed ⇈00000000ffffb5ed
stampKind: i32
value: int[-18963|0xffffffffffffb5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v90 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a515 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a515  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v522 
=== Succesors ===
next: i516 
=== Usages ===
a78 v523 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v522 #next: i516  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a515 
=== Succesors ===
=== Usages ===
i516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 17]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v523 
=== Succesors ===
next: v99 
=== Usages ===
i9 v40 
=== Predecessor ===
a515 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v523 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
stamp: i32
=== Inputs ===
x: i516 
y: i2 
=== Succesors ===
=== Usages ===
v10 j364 v33 v295 i248 v257 a272 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i516 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i4 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
i516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v98 #falseSuccessor: v96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21523
stableDimension: 0
stamp: i32 [-21523] ⇊00000000ffffabed ⇈00000000ffffabed
stampKind: i32
value: int[-21523|0xffffffffffffabed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
stamp: void
trueSuccessorProbability: 0.9565316786229763
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4606790890968105438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 55]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B13" 
    xhandlers
    flags 
    probability 4586425266346385952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1933) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i516 
y: i2 
=== Succesors ===
=== Usages ===
v103 v141 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i516 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 a318 a209 i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1933) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i32 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 v342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v228 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j338 j234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a209 a318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a209 a318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j350 j358 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
trueSuccessorProbability: 0.09311697510464179
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v102 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21779
stableDimension: 0
stamp: i32 [-21779] ⇊00000000ffffaaed ⇈00000000ffffaaed
stampKind: i32
value: int[-21779|0xffffffffffffaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: j196 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j196 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j216 
=== Usages ===
v526 v527 
=== Predecessor ===
v100 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j216  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j196 
index: - 
=== Succesors ===
=== Usages ===
j216 v218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
=== Succesors ===
next: j217 
=== Usages ===
j350 j222 v544 
=== Predecessor ===
j196 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v526 #next: j217  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j196 
index: - 
=== Succesors ===
=== Usages ===
j217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
=== Succesors ===
next: v204 
=== Usages ===
v201 
=== Predecessor ===
j216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v527 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j216 
y: j349 
=== Succesors ===
=== Usages ===
v201 v218 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j216 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j217 
y: j350 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j217 y: j350  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v203 
=== Usages ===
=== Predecessor ===
j217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v202 #falseSuccessor: v203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4541098085029924260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a209 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a209 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v194 i207 i32 
=== Succesors ===
next: j210 
=== Usages ===
j210 
=== Predecessor ===
v202 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v194 i207 i32 #next: j210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j210 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a209 
=== Succesors ===
next: v223 
=== Usages ===
j222 
=== Predecessor ===
a209 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a209 #next: v223  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
j210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571269965642086409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
value: j350 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v526 value: j350 stateAfter: - lastLocationAccess: - #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j216 
index: - 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j216 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v544 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v544 #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v220 
values: j216 j210 
=== Succesors ===
=== Usages ===
v529 v528 a107 v545 v546 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v220 values: j216 j210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v221 v223 
=== Succesors ===
next: a107 
=== Usages ===
j222 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v221 v223 #next: a107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j222 
=== Succesors ===
next: j234 
=== Usages ===
a113 
=== Predecessor ===
v220 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j222 #next: j234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
=== Succesors ===
next: v235 
=== Usages ===
v235 
=== Predecessor ===
a107 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v541 #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v528 
value: j234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
j234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v528 value: j234 stateAfter: - lastLocationAccess: - #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v529 
value: v354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v529 value: v354 stateAfter: - lastLocationAccess: - #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
value: a125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v545 value: a125 stateAfter: - lastLocationAccess: - #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a113 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v546 value: i4 stateAfter: - lastLocationAccess: - #next: a113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a113 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a107 
=== Succesors ===
next: v114 
=== Usages ===
v61 
=== Predecessor ===
v245 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a107 #next: v114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
a113 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a113 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a113 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4585841940148355211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v140 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v140 #falseSuccessor: v138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4526267998656987262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -36449
stableDimension: 0
stamp: i32 [-36449] ⇊00000000ffff719f ⇈00000000ffff719f
stampKind: i32
value: int[-36449|0xffffffffffff719f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B8" "B14" 
    successors 
    xhandlers
    flags 
    probability 4526267998656987262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-36449 - -18963] ⇊00000000ffff2085
valueDescription: i32
=== Inputs ===
merge: v176 
values: i178 i186 i188 i190 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v176 values: i178 i186 i188 i190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v177 v185 v187 v191 
=== Succesors ===
next: v182 
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v177 v185 v187 v191 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid a179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i180 
speculation: a179 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i180 speculation: a179  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" "B20" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: j251 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j251 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j292 
=== Usages ===
v530 v531 
=== Predecessor ===
v138 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j292  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j251 
index: - 
=== Succesors ===
=== Usages ===
j292 v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j251 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v530 
=== Succesors ===
next: j293 
=== Usages ===
j255 v532 v533 a271 v538 v534 v535 v536 v537 
=== Predecessor ===
j251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v530 #next: j293  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j251 
index: - 
=== Succesors ===
=== Usages ===
j293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j251 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
=== Succesors ===
next: v260 
=== Usages ===
v261 
=== Predecessor ===
j292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v531 #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid i256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i256 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v257 
=== Succesors ===
trueSuccessor: v259 
falseSuccessor: v258 
=== Usages ===
=== Predecessor ===
j293 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v257 #trueSuccessor: v259 #falseSuccessor: v258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4585273316936379003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i9 
y: i32 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i9 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i279 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i248 
y: i279 
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i248 y: i279  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i280 
y: i249 
=== Succesors ===
=== Usages ===
j254 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i280 y: i249  <|@  <|@
f <@~|@floating>@ <|@
tid j254 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i250 
=== Succesors ===
=== Usages ===
j255 v534 v535 v536 v537 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i250  <|@  <|@
f <@~|@floating>@ <|@
tid j255 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: i64
=== Inputs ===
x: j254 
y: j292 
=== Succesors ===
=== Usages ===
v261 v294 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j254 y: j292  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j293 
y: j255 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j293 y: j255  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v266 
falseSuccessor: v265 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v266 #falseSuccessor: v265  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4555179618396949217
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
v266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585222191977373157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v530 
value: j255 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v530 value: j255 stateAfter: - lastLocationAccess: - #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j254 
index: j292 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j254 index: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
address: v534 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v534 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j254 
index: j292 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j254 index: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
address: v535 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v535 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j254 
index: j292 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j254 index: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
address: v536 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v536 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j254 
index: j292 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j254 index: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
address: v537 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v537 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v532 value: i9 stateAfter: - lastLocationAccess: - #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
value: j247 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v533 value: j247 stateAfter: - lastLocationAccess: - #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v538 
value: v357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v538 value: v357 stateAfter: - lastLocationAccess: - #next: v270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: a271 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j292 
=== Succesors ===
next: v273 
=== Usages ===
a276 
=== Predecessor ===
v270 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j292 #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
a271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571194462954202561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
v258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571603462626249327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v262 v264 
=== Succesors ===
next: a272 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v262 v264 #next: a272  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a272 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v246 i9 i4 
=== Succesors ===
next: v275 
=== Usages ===
a276 
=== Predecessor ===
v263 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v246 i9 i4 #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
a272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v274 
values: a271 a272 
=== Succesors ===
=== Usages ===
v525 a172 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v274 values: a271 a272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v273 v275 
=== Succesors ===
next: v432 
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v273 v275 #next: v432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v375 
=== Usages ===
j433 j435 
=== Predecessor ===
v274 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a276 
index: - 
=== Succesors ===
=== Usages ===
j435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a276 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j435 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v432 
address: v525 
=== Succesors ===
=== Usages ===
v550 v552 v554 v556 v558 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v432 address: v525  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a515 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a515  <|@  <|@
f <@~|@floating>@ <|@
tid j157 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at com.oracle.graal.enterprise.I.b.loadVector(JavaKind, char[], int, StructuralInput$Memory) [bci: -1]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:105) [bci: 26]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a78 
index: j157 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a78 index: j157  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v432 
address: v524 
=== Succesors ===
=== Usages ===
v551 v553 v555 v557 v559 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v432 address: v524  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i9 
=== Succesors ===
=== Usages ===
j497 j479 j485 j489 j493 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j364 
y: j478 
=== Succesors ===
=== Usages ===
v480 v482 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j478  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j462 v480 j470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j479 
y: j105 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j479 y: j105  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v373 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v373 #falseSuccessor: v374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.I.b.loadVector(JavaKind, char[], int, StructuralInput$Memory) [bci: -1]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:105) [bci: 26]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B43" 
    successors "B26" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j470 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v377 
values: j105 j477 
=== Succesors ===
=== Usages ===
v559 j477 v558 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v377 values: j105 j477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v376 
=== Succesors ===
next: v517 
=== Usages ===
v517 v381 v382 j470 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v376 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j433 
index: j470 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j433 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v377 
address: v559 
=== Succesors ===
next: v514 
=== Usages ===
v514 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v377 address: v559 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j435 
index: j470 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
value: v517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v558 value: v517 stateAfter: - lastLocationAccess: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid j477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j470 
y: j159 
=== Succesors ===
=== Usages ===
j462 j470 v482 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j470 y: j159  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j479 
y: j477 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j479 y: j477  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v383 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v381 #falseSuccessor: v383  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v377 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v377 #next: v387  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v386 
values: j105 j477 
=== Succesors ===
=== Usages ===
v557 j469 j453 v486 v556 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v386 values: j105 j477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v385 v387 
=== Succesors ===
next: v409 
=== Usages ===
j462 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v385 v387 #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid j484 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j364 
y: j484 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j484  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j485 
y: j462 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j485 y: j462  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v407 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v408 #falseSuccessor: v407  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
v518 
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j433 
index: j462 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j433 index: j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v407 
address: v557 
=== Succesors ===
next: v512 
=== Usages ===
v512 
=== Predecessor ===
v407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v407 address: v557 #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j435 
index: j462 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
value: v518 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v556 value: v518 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j462 
y: j237 
=== Succesors ===
=== Usages ===
j453 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j462 y: j237  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j453 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v397 
values: j469 j462 
=== Succesors ===
=== Usages ===
v555 j461 j445 v490 v554 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v397 values: j469 j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v396 v412 
=== Succesors ===
next: v415 
=== Usages ===
j453 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v396 v412 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j364 
y: j488 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j488  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j489 
y: j453 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j489 y: j453  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v490 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v490 #trueSuccessor: v414 #falseSuccessor: v413  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v418  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
v519 
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j433 
index: j453 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j433 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v413 
address: v555 
=== Succesors ===
next: v510 
=== Usages ===
v510 
=== Predecessor ===
v413 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v413 address: v555 #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j435 
index: j453 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v554 
value: v519 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v554 value: v519 stateAfter: - lastLocationAccess: - #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j453 
y: j460 
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j460  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v401 
values: j461 j453 
=== Succesors ===
=== Usages ===
v553 j452 j436 v494 v552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v401 values: j461 j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v400 v418 
=== Succesors ===
next: v421 
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v400 v418 #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j364 
y: j492 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j492  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j493 
y: j445 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j493 y: j445  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v494 
=== Succesors ===
trueSuccessor: v420 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v494 #trueSuccessor: v420 #falseSuccessor: v419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
v520 
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j433 
index: j445 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j433 index: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v419 
address: v553 
=== Succesors ===
next: v508 
=== Usages ===
v508 
=== Predecessor ===
v419 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v419 address: v553 #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j435 
index: j445 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
value: v520 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v552 value: v520 stateAfter: - lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid j438 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j445 
y: j438 
=== Succesors ===
=== Usages ===
j436 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j445 y: j438  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v404 
values: j452 j445 
=== Succesors ===
=== Usages ===
v551 v498 v550 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v404 values: j452 j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v403 v424 
=== Succesors ===
next: v427 
=== Usages ===
j436 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v403 v424 #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid j496 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j364 
y: j496 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j496  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j497 
y: j436 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j497 y: j436  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v426 #falseSuccessor: v425  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i521 
=== Usages ===
i521 
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i521  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j433 
index: j436 
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j433 index: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v425 
address: v551 
=== Succesors ===
next: v506 
=== Usages ===
v506 
=== Predecessor ===
v425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v425 address: v551 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j435 
index: j436 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
value: i521 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
i521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v550 value: i521 stateAfter: - lastLocationAccess: - #next: v406  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
v506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v406 v430 
=== Succesors ===
next: a172 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v406 v430 #next: a172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a276 
=== Succesors ===
next: j307 
=== Usages ===
a120 
=== Predecessor ===
v390 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a276 #next: j307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j307 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j322 
=== Usages ===
v539 v540 
=== Predecessor ===
a172 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j322  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j307 
index: - 
=== Succesors ===
=== Usages ===
j322 v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j307 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
=== Succesors ===
next: j323 
=== Usages ===
j358 j328 v547 
=== Predecessor ===
j307 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v539 #next: j323  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j307 
index: - 
=== Succesors ===
=== Usages ===
j323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j307 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v540 
=== Succesors ===
next: v315 
=== Usages ===
v312 
=== Predecessor ===
j322 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v540 #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j322 
y: j349 
=== Succesors ===
=== Usages ===
v312 v324 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j322 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j323 
y: j358 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j323 y: j358  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v312 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v314 
=== Usages ===
=== Predecessor ===
j323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v312 #trueSuccessor: v313 #falseSuccessor: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4555906728925032356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a318 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a318 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v194 i207 i32 
=== Succesors ===
next: j319 
=== Usages ===
j319 
=== Predecessor ===
v313 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v194 i207 i32 #next: j319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j319 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a318 
=== Succesors ===
next: v329 
=== Usages ===
j328 
=== Predecessor ===
a318 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a318 #next: v329  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
j319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4585784566526437460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
value: j358 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v539 value: j358 stateAfter: - lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j322 
index: - 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j322 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v547 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v547 #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j328 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v326 
values: j322 j319 
=== Succesors ===
=== Usages ===
v543 v542 a117 v548 v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v326 values: j322 j319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v327 v329 
=== Succesors ===
next: a117 
=== Usages ===
j328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v327 v329 #next: a117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a117 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j328 
=== Succesors ===
next: j338 
=== Usages ===
a123 
=== Predecessor ===
v326 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j328 #next: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
=== Succesors ===
next: v339 
=== Usages ===
v339 
=== Predecessor ===
a117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v541 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v542 
value: j338 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
j338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v542 value: j338 stateAfter: - lastLocationAccess: - #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
value: v354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 value: v354 stateAfter: - lastLocationAccess: - #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a120 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a172 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
value: a120 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 value: a120 stateAfter: - lastLocationAccess: - #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a123 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v549 value: i4 stateAfter: - lastLocationAccess: - #next: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a117 
=== Succesors ===
next: v124 
=== Usages ===
v62 
=== Predecessor ===
v348 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a117 #next: v124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
a123 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a123 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a123 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v377 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v377  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v522 v28 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 i9 v12 j157 v40 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.substring(int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1926
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - 
=== Succesors ===
=== Usages ===
v182 a272 a209 a318 i516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v10 v12 v348 v245 a272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v90 #falseSuccessor: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c11c583 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result int[-18963|0xffffffffffffb5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -18963
stableDimension: 0
stamp: i32 [-18963] ⇊00000000ffffb5ed ⇈00000000ffffb5ed
stampKind: i32
value: int[-18963|0xffffffffffffb5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v90 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-18963|0xffffffffffffb5ed]] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1926) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a515 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a515  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a515 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v522 
=== Succesors ===
next: i516 
=== Usages ===
a78 v523 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v522 #next: i516  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a515 
=== Succesors ===
=== Usages ===
i516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i516 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 17]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v523 
=== Succesors ===
next: v99 
=== Usages ===
i9 v40 
=== Predecessor ===
a515 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v523 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 19]
stamp: i32
=== Inputs ===
x: i516 
y: i2 
=== Succesors ===
=== Usages ===
v10 j364 v33 v295 i248 v257 a272 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i516 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i4 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
i516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v98 #falseSuccessor: v96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1926) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v3|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result int[-21523|0xffffffffffffabed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21523
stableDimension: 0
stamp: i32 [-21523] ⇊00000000ffffabed ⇈00000000ffffabed
stampKind: i32
value: int[-21523|0xffffffffffffabed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21523|0xffffffffffffabed]] destination: B3 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1930) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 35]
stamp: void
trueSuccessorProbability: 0.9565316786229763
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9565316786229763 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4606790890968105438
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 55]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B13" 
    xhandlers
    flags 
    probability 4586425266346385952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:1933) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1933) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i516 
y: i2 
=== Succesors ===
=== Usages ===
v103 v141 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i516 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 a318 a209 i248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1933) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i32 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 v342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v228 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result [v5|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j338 j234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a209 a318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a209 a318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j350 j358 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
trueSuccessorProbability: 0.09311697510464179
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v102 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result int[-21779|0xffffffffffffaaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21779
stableDimension: 0
stamp: i32 [-21779] ⇊00000000ffffaaed ⇈00000000ffffaaed
stampKind: i32
value: int[-21779|0xffffffffffffaaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21779|0xffffffffffffaaed]] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:198) [bci: 37]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: j196 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j196 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j216 
=== Usages ===
v526 v527 
=== Predecessor ===
v100 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j216  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j196 
index: - 
=== Succesors ===
=== Usages ===
j216 v218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j216 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
=== Succesors ===
next: j217 
=== Usages ===
j350 j222 v544 
=== Predecessor ===
j196 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v526 #next: j217  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j196 
index: - 
=== Succesors ===
=== Usages ===
j217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j217 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v527 
=== Succesors ===
next: v204 
=== Usages ===
v201 
=== Predecessor ===
j216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v527 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j216 
y: j349 
=== Succesors ===
=== Usages ===
v201 v218 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j216 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j217 
y: j350 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j217 y: j350  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v203 
=== Usages ===
=== Predecessor ===
j217 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v202 #falseSuccessor: v203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v7|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4541098085029924260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a209 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a209 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v194 i207 i32 
=== Succesors ===
next: j210 
=== Usages ===
j210 
=== Predecessor ===
v202 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v194 i207 i32 #next: j210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j210 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a209 
=== Succesors ===
next: v223 
=== Usages ===
j222 
=== Predecessor ===
a209 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a209 #next: v223  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
j210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1926) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571269965642086409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v526 
value: j350 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v526 value: j350 stateAfter: - lastLocationAccess: - #next: v214  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result [v7|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j216 
index: - 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j216 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v544 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v544 #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
v214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v7|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j222 <|@
result v10|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v220 
values: j216 j210 
=== Succesors ===
=== Usages ===
v529 v528 a107 v545 v546 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v220 values: j216 j210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v221 v223 
=== Succesors ===
next: a107 
=== Usages ===
j222 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v221 v223 #next: a107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a107 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j222 
=== Succesors ===
next: j234 
=== Usages ===
a113 
=== Predecessor ===
v220 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j222 #next: j234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j234 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
=== Succesors ===
next: v235 
=== Usages ===
v235 
=== Predecessor ===
a107 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v541 #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
result [v10|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v528 
value: j234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
j234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v528 value: j234 stateAfter: - lastLocationAccess: - #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
result [v10|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v529 
value: v354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v529 value: v354 stateAfter: - lastLocationAccess: - #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v10|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a125 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
value: a125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v545 value: a125 stateAfter: - lastLocationAccess: - #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v10|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j222 
index: - 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j222 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a113 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v546 value: i4 stateAfter: - lastLocationAccess: - #next: a113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a113 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a107 
=== Succesors ===
next: v114 
=== Usages ===
v61 
=== Predecessor ===
v245 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a107 #next: v114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
a113 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a113 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a113 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*]], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4585841940148355211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:186) [bci: 52]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
trueSuccessorProbability: 9.999999999998899E-5
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v140 
falseSuccessor: v138 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v140 #falseSuccessor: v138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4526267998656987262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result int[-36449|0xffffffffffff719f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -36449
stableDimension: 0
stamp: i32 [-36449] ⇊00000000ffff719f ⇈00000000ffff719f
stampKind: i32
value: int[-36449|0xffffffffffff719f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-36449|0xffffffffffff719f]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B8" "B14" 
    successors 
    xhandlers
    flags 
    probability 4526267998656987262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i180 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-36449 - -18963] ⇊00000000ffff2085
valueDescription: i32
=== Inputs ===
merge: v176 
values: i178 i186 i188 i190 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v176 values: i178 i186 i188 i190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v177 v185 v187 v191 
=== Succesors ===
next: v182 
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v177 v185 v187 v191 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid a179 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i180 
speculation: a179 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i180 speculation: a179  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1926) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" "B20" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:189) [bci: 64]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: j251 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j251 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j292 
=== Usages ===
v530 v531 
=== Predecessor ===
v138 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j292  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j251 
index: - 
=== Succesors ===
=== Usages ===
j292 v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j251 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j292 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v530 
=== Succesors ===
next: j293 
=== Usages ===
j255 v532 v533 a271 v538 v534 v535 v536 v537 
=== Predecessor ===
j251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v530 #next: j293  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j251 
index: - 
=== Succesors ===
=== Usages ===
j293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j251 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j293 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v531 
=== Succesors ===
next: v260 
=== Usages ===
v261 
=== Predecessor ===
j292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v531 #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid i256 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i256 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i256  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v257 
=== Succesors ===
trueSuccessor: v259 
falseSuccessor: v258 
=== Usages ===
=== Predecessor ===
j293 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v257 #trueSuccessor: v259 #falseSuccessor: v258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4585273316936379003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i9 
y: i32 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i9 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i279 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i248 
y: i279 
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i248 y: i279  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i280 
y: i249 
=== Succesors ===
=== Usages ===
j254 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i280 y: i249  <|@  <|@
f <@~|@floating>@ <|@
tid j254 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i250 
=== Succesors ===
=== Usages ===
j255 v534 v535 v536 v537 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i250  <|@  <|@
f <@~|@floating>@ <|@
tid j255 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: i64
=== Inputs ===
x: j254 
y: j292 
=== Succesors ===
=== Usages ===
v261 v294 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j254 y: j292  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j293 
y: j255 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j293 y: j255  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v266 
falseSuccessor: v265 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v266 #falseSuccessor: v265  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA [v16|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = AND v17|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4555179618396949217
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
v266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585222191977373157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v530 
value: j255 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v530 value: j255 stateAfter: - lastLocationAccess: - #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
result [v19|QWORD + v14|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j254 
index: j292 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j254 index: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
address: v534 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v534 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
result [v19|QWORD + v14|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j254 
index: j292 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j254 index: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
address: v535 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v535 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result [v19|QWORD + v14|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j254 
index: j292 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j254 index: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
address: v536 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v536 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result [v19|QWORD + v14|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j254 
index: j292 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j254 index: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
address: v537 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v537 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
result [v14|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v296 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v532 value: i9 stateAfter: - lastLocationAccess: - #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
result [v14|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
value: j247 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v533 value: j247 stateAfter: - lastLocationAccess: - #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
result [v14|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v538 
value: v357 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v538 value: v357 stateAfter: - lastLocationAccess: - #next: v270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: a271 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a271 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j292 
=== Succesors ===
next: v273 
=== Usages ===
a276 
=== Predecessor ===
v270 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j292 #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
a271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571194462954202561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
v258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571603462626249327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v262 v264 
=== Succesors ===
next: a272 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v262 v264 #next: a272  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a272 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v246 i9 i4 
=== Succesors ===
next: v275 
=== Usages ===
a276 
=== Predecessor ===
v263 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v246 i9 i4 #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
a272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1926) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a276 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v274 
values: a271 a272 
=== Succesors ===
=== Usages ===
v525 a172 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v274 values: a271 a272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v273 v275 
=== Succesors ===
next: v432 
=== Usages ===
a276 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v273 v275 #next: v432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v375 
=== Usages ===
j433 j435 
=== Predecessor ===
v274 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
result [v24|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a276 
index: - 
=== Succesors ===
=== Usages ===
j435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a276 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j435 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v432 
address: v525 
=== Succesors ===
=== Usages ===
v550 v552 v554 v556 v558 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v432 address: v525  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.substring(String.java:1929) [bci: 14]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a515 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a515  <|@  <|@
f <@~|@floating>@ <|@
tid j157 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at com.oracle.graal.enterprise.I.b.loadVector(JavaKind, char[], int, StructuralInput$Memory) [bci: -1]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:105) [bci: 26]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
result [v26|QWORD[.] + v27|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a78 
index: j157 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a78 index: j157  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v432 
address: v524 
=== Succesors ===
=== Usages ===
v551 v553 v555 v557 v559 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v432 address: v524  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i9 
=== Succesors ===
=== Usages ===
j497 j479 j485 j489 j493 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j364 
y: j478 
=== Succesors ===
=== Usages ===
v480 v482 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j478  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j462 v480 j470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j479 
y: j105 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j479 y: j105  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v373 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v373 #falseSuccessor: v374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = LEA [v24|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = LEA [v26|QWORD[.] + v27|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v29|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
v373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.I.b.loadVector(JavaKind, char[], int, StructuralInput$Memory) [bci: -1]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:105) [bci: 26]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B43" 
    successors "B26" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j470 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v377 
values: j105 j477 
=== Succesors ===
=== Usages ===
v559 j477 v558 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v377 values: j105 j477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v376 
=== Succesors ===
next: v517 
=== Usages ===
v517 v381 v382 j470 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v376 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [v28|QWORD[.] + v31|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j433 
index: j470 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j433 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
result v32|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v377 
address: v559 
=== Succesors ===
next: v514 
=== Usages ===
v514 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v377 address: v559 #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [v25|QWORD[.] + v31|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j435 
index: j470 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
value: v517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v558 value: v517 stateAfter: - lastLocationAccess: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid j477 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j470 
y: j159 
=== Succesors ===
=== Usages ===
j462 j470 v482 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j470 y: j159  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j479 
y: j477 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j479 y: j477  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v383 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v381 #falseSuccessor: v383  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|V256_WORD = H [v28|QWORD[.] + v31|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v31|QWORD * 2], input: v32|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v31|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v377 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v377 #next: v387  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j462 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v386 
values: j105 j477 
=== Succesors ===
=== Usages ===
v557 j469 j453 v486 v556 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v386 values: j105 j477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v385 v387 
=== Succesors ===
next: v409 
=== Usages ===
j462 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v385 v387 #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid j484 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j364 
y: j484 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j484  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j485 
y: j462 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j485 y: j462  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v407 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v408 #falseSuccessor: v407  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
v518 
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
result [v28|QWORD[.] + v34|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j433 
index: j462 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j433 index: j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
result v36|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v407 
address: v557 
=== Succesors ===
next: v512 
=== Usages ===
v512 
=== Predecessor ===
v407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v407 address: v557 #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
result [v25|QWORD[.] + v34|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j435 
index: j462 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
value: v518 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v556 value: v518 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j462 
y: j237 
=== Succesors ===
=== Usages ===
j453 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j462 y: j237  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|V128_WORD = H [v28|QWORD[.] + v34|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v34|QWORD * 2], input: v36|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j453 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v397 
values: j469 j462 
=== Succesors ===
=== Usages ===
v555 j461 j445 v490 v554 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v397 values: j469 j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v396 v412 
=== Succesors ===
next: v415 
=== Usages ===
j453 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v396 v412 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j364 
y: j488 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j488  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j489 
y: j453 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j489 y: j453  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v490 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v413 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v490 #trueSuccessor: v414 #falseSuccessor: v413  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v29|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v418  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
v519 
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result [v28|QWORD[.] + v38|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j433 
index: j453 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j433 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
result v40|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v413 
address: v555 
=== Succesors ===
next: v510 
=== Usages ===
v510 
=== Predecessor ===
v413 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v413 address: v555 #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
result [v25|QWORD[.] + v38|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j435 
index: j453 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v554 
value: v519 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v400 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v554 value: v519 stateAfter: - lastLocationAccess: - #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j453 
y: j460 
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j453 y: j460  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|V64_WORD = H [v28|QWORD[.] + v38|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v38|QWORD * 2], input: v40|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j445 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v401 
values: j461 j453 
=== Succesors ===
=== Usages ===
v553 j452 j436 v494 v552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v401 values: j461 j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v400 v418 
=== Succesors ===
next: v421 
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v400 v418 #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j364 
y: j492 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j492  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j493 
y: j445 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j493 y: j445  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v494 
=== Succesors ===
trueSuccessor: v420 
falseSuccessor: v419 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v494 #trueSuccessor: v420 #falseSuccessor: v419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v29|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
v520 
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
result [v28|QWORD[.] + v42|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j433 
index: j445 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j433 index: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
result v44|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v419 
address: v553 
=== Succesors ===
next: v508 
=== Usages ===
v508 
=== Predecessor ===
v419 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v419 address: v553 #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result [v25|QWORD[.] + v42|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j435 
index: j445 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
value: v520 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v552 value: v520 stateAfter: - lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid j438 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j445 
y: j438 
=== Succesors ===
=== Usages ===
j436 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j445 y: j438  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|V32_WORD = H [v28|QWORD[.] + v42|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v42|QWORD * 2], input: v44|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j436 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v404 
values: j452 j445 
=== Succesors ===
=== Usages ===
v551 v498 v550 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v404 values: j452 j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v403 v424 
=== Succesors ===
next: v427 
=== Usages ===
j436 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v403 v424 #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid j496 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j364 
y: j496 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j364 y: j496  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j497 
y: j436 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j497 y: j436  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v498 
=== Succesors ===
trueSuccessor: v426 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v498 #trueSuccessor: v426 #falseSuccessor: v425  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = DEC v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
v426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i521 
=== Usages ===
i521 
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i521  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [v28|QWORD[.] + v46|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j433 
index: j436 
=== Succesors ===
=== Usages ===
i521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j433 index: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i521 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v425 
address: v551 
=== Succesors ===
next: v506 
=== Usages ===
v506 
=== Predecessor ===
v425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v425 address: v551 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [v25|QWORD[.] + v46|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j435 
index: j436 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
value: i521 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
i521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v550 value: i521 stateAfter: - lastLocationAccess: - #next: v406  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
v506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSX [v28|QWORD[.] + v46|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[.] + v46|QWORD * 2], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v406 v430 
=== Succesors ===
next: a172 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v406 v430 #next: a172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a172 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.substring(String.java:1933) [bci: 52]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a276 
=== Succesors ===
next: j307 
=== Usages ===
a120 
=== Predecessor ===
v390 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a276 #next: j307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j307 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j322 
=== Usages ===
v539 v540 
=== Predecessor ===
a172 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j322  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j307 
index: - 
=== Succesors ===
=== Usages ===
j322 v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j307 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j322 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
=== Succesors ===
next: j323 
=== Usages ===
j358 j328 v547 
=== Predecessor ===
j307 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v539 #next: j323  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j307 
index: - 
=== Succesors ===
=== Usages ===
j323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j307 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j323 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v540 
=== Succesors ===
next: v315 
=== Usages ===
v312 
=== Predecessor ===
j322 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v540 #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid j358 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j322 
y: j349 
=== Succesors ===
=== Usages ===
v312 v324 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j322 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j323 
y: j358 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j323 y: j358  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v312 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v314 
=== Usages ===
=== Predecessor ===
j323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v312 #trueSuccessor: v313 #falseSuccessor: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v49|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4555906728925032356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a318 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a318 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v194 i207 i32 
=== Succesors ===
next: j319 
=== Usages ===
j319 
=== Predecessor ===
v313 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v194 i207 i32 #next: j319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j319 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a318 
=== Succesors ===
next: v329 
=== Usages ===
j328 
=== Predecessor ===
a318 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a318 #next: v329  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
j319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1926) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4585784566526437460
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
value: j358 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v539 value: j358 stateAfter: - lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v49|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j322 
index: - 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j322 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v547 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v547 #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v49|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j328 <|@
result v52|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v326 
values: j322 j319 
=== Succesors ===
=== Usages ===
v543 v542 a117 v548 v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v326 values: j322 j319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v327 v329 
=== Succesors ===
next: a117 
=== Usages ===
j328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v327 v329 #next: a117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a117 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j328 
=== Succesors ===
next: j338 
=== Usages ===
a123 
=== Predecessor ===
v326 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j328 #next: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j338 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
=== Succesors ===
next: v339 
=== Usages ===
v339 
=== Predecessor ===
a117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v541 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result [v52|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v542 
value: j338 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
j338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v542 value: j338 stateAfter: - lastLocationAccess: - #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result [v52|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
value: v354 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 value: v354 stateAfter: - lastLocationAccess: - #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [v52|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a120 <|@
result v55|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a172 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
value: a120 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 value: a120 stateAfter: - lastLocationAccess: - #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result [v52|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j328 
index: - 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j328 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
value: i4 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a123 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v549 value: i4 stateAfter: - lastLocationAccess: - #next: a123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a117 
=== Succesors ===
next: v124 
=== Usages ===
v62 
=== Predecessor ===
v348 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a117 #next: v124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
a123 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v62  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a123 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a123 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[*]], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v52|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[*] + 12], y: v55|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4584178047909398220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v377 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v377  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B43 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c11c583 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1926) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SUB (x: v3|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9565316786229763 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4606790890968105438
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B13" 
    xhandlers
    flags 
    probability 4586425266346385952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4585841940148355211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" "B20" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4585273316936379003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA [v16|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = AND v17|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v19|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585222191977373157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + v14|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = LEA [v24|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = LEA [v26|QWORD[.] + v27|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v29|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v29|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|V128_WORD = H [v28|QWORD[.] + v34|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v34|QWORD * 2], input: v36|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v29|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|V64_WORD = H [v28|QWORD[.] + v38|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v38|QWORD * 2], input: v40|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v38|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v29|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|V32_WORD = H [v28|QWORD[.] + v42|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v42|QWORD * 2], input: v44|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = DEC v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVSX [v28|QWORD[.] + v46|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD[.] + v46|QWORD * 2], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v49|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4585784566526437460
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v49|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE v52|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[*]], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v52|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[*] + 12], y: v55|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4584178047909398220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B43 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B43" 
    successors "B26" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585841372036443955
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|V256_WORD = H [v28|QWORD[.] + v31|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v25|QWORD[.] + v31|QWORD * 2], input: v32|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v31|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v7|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571269965642086409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v7|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v5|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*]], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571194462954202561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571603462626249327
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1926) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4555906728925032356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1926) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4555179618396949217
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4541098085029924260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v57|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1926) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4526267998656987262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-36449|0xffffffffffff719f]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B8" "B14" 
    successors 
    xhandlers
    flags 
    probability 4526267998656987262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:1926) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21779|0xffffffffffffaaed]] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-18963|0xffffffffffffb5ed]] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21523|0xffffffffffffabed]] destination: B3 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          13
     4: new           #6          // java.lang.StringIndexOutOfBoundsException
     7: dup           
     8: iload_1       
     9: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    12: athrow        
    13: aload_0       
    14: getfield      #1          // value:char[]
    17: arraylength   
    18: iload_1       
    19: isub          
    20: istore_2      
    21: iload_2       
    22: ifge          34
    25: new           #6          // java.lang.StringIndexOutOfBoundsException
    28: dup           
    29: iload_2       
    30: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    33: athrow        
    34: iload_1       
    35: ifne          42
    38: aload_0       
    39: goto          55
    42: new           #43         // java.lang.String
    45: dup           
    46: aload_0       
    47: getfield      #1          // value:char[]
    50: iload_1       
    51: iload_2       
    52: invokespecial #59         // <init>:(char[], int, int)void
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c11c583 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.lang.String.substring(String.java:1926) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   28  <|@ instruction r11|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.9565316786229763 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4606790890968105438
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B13" 
    xhandlers
    flags 
    probability 4586425266346385952
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   58  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4585841940148355211
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" "B20" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4585273316936379003
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rdx|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr  170  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585222191977373157
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  190  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  198  <|@ instruction MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3 <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = LEA [r10|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD = MOVSXD stack:36|DWORD size: QWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  250  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  284  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  298  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  300  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  308  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr  310  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  322  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  324  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  332  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  334  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  346  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  348  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  350  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  380  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4585784566526437460
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  426  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  432  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4584178047909398220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B43 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B43" 
    successors "B26" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585841372036443955
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  268  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  270  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  272  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4576834172781702963
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571269965642086409
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  110  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr  126  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571194462954202561
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571603462626249327
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  224  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1926) [bci: 0]
locals: stack:32|QWORD[.] r14|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4555906728925032356
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  392  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  394  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1926) [bci: 0]
locals: stack:32|QWORD[.] r14|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  396  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" 
    xhandlers
    flags 
    probability 4555179618396949217
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4541098085029924260
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   92  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1926) [bci: 0]
locals: stack:32|QWORD[.] r14|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   98  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4526267998656987262
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r10|DWORD = MOVE input: int[-36449|0xffffffffffff719f] <|@ <|@
      nr  142  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B8" "B14" 
    successors 
    xhandlers
    flags 
    probability 4526267998656987262
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1926) [bci: 0]
locals: stack:32|QWORD[.] r14|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r10|DWORD = MOVE input: int[-21779|0xffffffffffffaaed] <|@ <|@
      nr   72  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[-18963|0xffffffffffffb5ed] <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] <|@ <|@
      nr   38  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          13
     4: new           #6          // java.lang.StringIndexOutOfBoundsException
     7: dup           
     8: iload_1       
     9: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    12: athrow        
    13: aload_0       
    14: getfield      #1          // value:char[]
    17: arraylength   
    18: iload_1       
    19: isub          
    20: istore_2      
    21: iload_2       
    22: ifge          34
    25: new           #6          // java.lang.StringIndexOutOfBoundsException
    28: dup           
    29: iload_2       
    30: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    33: athrow        
    34: iload_1       
    35: ifne          42
    38: aload_0       
    39: goto          55
    42: new           #43         // java.lang.String
    45: dup           
    46: aload_0       
    47: getfield      #1          // value:char[]
    50: iload_1       
    51: iload_2       
    52: invokespecial #59         // <init>:(char[], int, int)void
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c11c583 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.lang.String.substring(String.java:1926) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - 
>@ <|@ instruction rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   28  <|@ instruction r11|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.9565316786229763 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4606790890968105438
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B13" 
    xhandlers
    flags 
    probability 4586425266346385952
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   58  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" "B16" 
    xhandlers
    flags 
    probability 4585841940148355211
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B19" 
    xhandlers
    flags 
    probability 4585273316936379003
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rdx|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr  170  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B21 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4585222191977373157
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  190  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  198  <|@ instruction MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  202  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  204  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B27" "B25" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3 <|@ <|@
      nr  242  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = LEA [r10|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD = MOVSXD stack:36|DWORD size: QWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  250  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B27 falseDestination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B30" "B29" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  284  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  286  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  298  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  300  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B33" "B32" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  308  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr  310  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  322  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  324  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  326  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B30" 
    successors "B36" "B35" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  332  <|@ instruction r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  334  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B36 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  346  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  348  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  350  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B33" 
    successors "B39" "B38" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B39 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4584178047909398220
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B36" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  380  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4585784566526437460
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B40" 
    successors 
    xhandlers
    flags 
    probability 4585841372036443955
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  426  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  432  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B25" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585841372036443955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  268  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  270  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  272  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B27 falseDestination: B25 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   82  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571269965642086409
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr  110  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4571316631737928868
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr  126  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571603462626249327
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  224  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1926) [bci: 0]
locals: stack:32|QWORD[.] r14|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4555906728925032356
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  392  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  394  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1926) [bci: 0]
locals: stack:32|QWORD[.] r14|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  396  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4541098085029924260
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   92  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   94  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1926) [bci: 0]
locals: stack:32|QWORD[.] r14|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   98  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4526267998656987262
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r10|DWORD = MOVE input: int[-36449|0xffffffffffff719f] <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B8" "B14" 
    successors 
    xhandlers
    flags 
    probability 4526267998656987262
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.String.substring(String.java:1926) [bci: 0]
locals: stack:32|QWORD[.] r14|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r10|DWORD = MOVE input: int[-21779|0xffffffffffffaaed] <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|DWORD = MOVE input: int[-18963|0xffffffffffffb5ed] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          13
     4: new           #6          // java.lang.StringIndexOutOfBoundsException
     7: dup           
     8: iload_1       
     9: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    12: athrow        
    13: aload_0       
    14: getfield      #1          // value:char[]
    17: arraylength   
    18: iload_1       
    19: isub          
    20: istore_2      
    21: iload_2       
    22: ifge          34
    25: new           #6          // java.lang.StringIndexOutOfBoundsException
    28: dup           
    29: iload_2       
    30: invokespecial #4          // java.lang.StringIndexOutOfBoundsException.<init>:(int)void
    33: athrow        
    34: iload_1       
    35: ifne          42
    38: aload_0       
    39: goto          55
    42: new           #43         // java.lang.String
    45: dup           
    46: aload_0       
    47: getfield      #1          // value:char[]
    50: iload_1       
    51: iload_2       
    52: invokespecial #59         // <init>:(char[], int, int)void
    55: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf24585f60f8ced020000458b550c428b34d50c000000448bde452bde4585db0f8cda0200004585f60f8516000000498bc5488b6c24204883c428850500000000c5f877c349b8addeaddeaddeadde4183fb010f8c9d010000443bf60f8f6f020000498b4760498b77704181fbffffff000f83da010000418bd3d1e28d521783e2f84863d2488bca4803c8483bce0f87bd01000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489580c48c70001000000c74008addeadde44895c240c4c896c2410458bea488d7010458bd549c1e2034963d6498d54521048634c240c4c8d51f04d85d249c7c3000000000f8dd90000004c8d51f84d3bda0f8f13000000c4a17a6f045ac4a17a7f045e4d8d53084d8bda4c8d51fc4d3bda0f8f13000000c4a1f96e045ac4a1f97e045e4d8d53044d8bda4c8d51fe4d3bda0f8f13000000c4a1796e045ac4a1797e045e4d8d53024d8bda48ffc94c3bd90f8f0a000000420fbf145a664289145e498b7760488d5618493b57700f87f0000000498957600f1886d800000049b8addeaddeaddeadde488bd6498b88a800000048890ec74608addeadde48c1e80389460c44896610488bc2488b6c24204883c428850500000000c5f877c30f1f8000000000c4a17e6f045ac4a17e7f045e4d8d5b104d3bda7eebe90dffffff443bf60f8ff1000000498b4760488d7018493b77700f8792000000498977600f1880d8000000488bf0498b90a8000000488910c74008addeaddec7400caddeadde44896010488bc6488b6c24204883c428850500000000c5f877c34c896c241048beaddeaddeaddeadde418bd3b90000000044895c240c458beae80000000090e95cfeffff4c8be848beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0498bc5e9f3feffff4c896c241048beaddeaddeaddeaddeba02000000b901000000e8000000009049b8addeaddeaddeaddee94bffffff41ba9f71ffff4c896c24104589979c0200004d89a7a8020000e8000000009041baedaaffffebdf41baedb5ffffebd741baedabffffebcfe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c11c583 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 24 r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 67 26 rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 67 [r10:0, r13:0]at java.lang.String.substring(String.java:1926) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 67 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 75 28 r11|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 81 30 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 84 32 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 90 block B4 null  <||@
  Comment 90 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 44 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 93 46 BRANCH trueDestinationProbability: 0.9565316786229763 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 99 block B5 null  <||@
  Comment 99 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 50 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 102 52 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 111 12  <||@
  Comment 121 block B6 null  <||@
  Comment 121 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 56 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 121 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 131 58 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 135 60 BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B13  <||@
  Comment 141 block B13 null  <||@
  Comment 141 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 141 134 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 144 136 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16  <||@
  Comment 150 block B16 null  <||@
  Comment 150 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 150 156 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 154 158 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 158 160 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 165 162 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B21  <||@
  Comment 171 block B17 null  <||@
  Comment 171 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 171 166 rdx|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 176 168 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 179 170 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 182 172 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 185 174 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 191 176 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 194 178 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B21 falseDestination: B17 -> B19  <||@
  Comment 200 block B19 null  <||@
  Comment 200 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 188 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 204 190 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 212 192 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 220 194 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 228 196 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 236 198 MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 240 200 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 247 202 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 247 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 254 204 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 254 206 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 259 208 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 264 210 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 267 212 JUMP ~[] destination: B19 -> B22  <||@
  Comment 267 block B22 null  <||@
  Comment 267 236 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 267 238 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 271 240 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3  <||@
  Comment 278 242 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 281 244 rdx|QWORD[.] = LEA [r10|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 286 246 rcx|QWORD = MOVSXD stack:36|DWORD size: QWORD  <||@
  Comment 291 248 r10|QWORD = LEA [rcx|QWORD - 16] size: QWORD  <||@
  Comment 295 250 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 298 256 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 305 252 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B27 falseDestination: B22 -> B25  <||@
  Comment 311 block B27 null  <||@
  Comment 311 282 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 311 284 r10|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 315 286 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 318 288 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 324 block B29 null  <||@
  Comment 324 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 296 xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 330 298 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 336 300 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 340 302 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 343 304 JUMP ~[] destination: B29 -> B30  <||@
  Comment 343 block B30 null  <||@
  Comment 343 306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 343 308 r10|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 347 310 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 350 312 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32  <||@
  Comment 356 block B32 null  <||@
  Comment 356 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 356 320 xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 362 322 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 368 324 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 372 326 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 375 328 JUMP ~[] destination: B32 -> B33  <||@
  Comment 375 block B33 null  <||@
  Comment 375 330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 375 332 r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 379 334 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 382 336 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B36 falseDestination: B33 -> B35  <||@
  Comment 388 block B35 null  <||@
  Comment 388 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 344 xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 394 346 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 400 348 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 404 350 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 407 352 JUMP ~[] destination: B35 -> B36  <||@
  Comment 407 block B36 null  <||@
  Comment 407 354 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 407 356 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 410 358 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 413 360 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B39 falseDestination: B36 -> B38  <||@
  Comment 419 block B38 null  <||@
  Comment 419 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 419 368 rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 424 370 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 429 372 JUMP ~[] destination: B38 -> B39  <||@
  Comment 429 block B39 null  <||@
  Comment 429 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 376 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 433 378 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 437 380 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 441 382 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 447 block B41 null  <||@
  Comment 447 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 406 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 451 408 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 458 410 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 458 414 JUMP ~[] destination: B41 -> B42  <||@
  Comment 458 block B42 null  <||@
  Comment 458 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 458 412 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 458 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 468 418 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 471 420 rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 478 422 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 481 424 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 481 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 488 426 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3  <||@
  Comment 492 428 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 495 430 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 499 432 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 502 434 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 511 12  <||@
  Comment 521 block B25 loop 0 depth 1 header:377|LoopBegin  <||@
  Comment 521 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 528 268 xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 534 270 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 540 272 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 544 274 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 547 276 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B27 falseDestination: B25 -> B25  <||@
  Comment 554 block B7 null  <||@
  Comment 554 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 64 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 557 66 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 563 block B9 null  <||@
  Comment 563 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 78 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 567 80 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 571 82 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 575 84 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 581 block B11 null  <||@
  Comment 581 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 106 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 585 108 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 592 110 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 592 112 JUMP ~[] destination: B11 -> B12  <||@
  Comment 592 block B12 null  <||@
  Comment 592 114 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 592 116 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 595 118 rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 602 120 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 605 122 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 605 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 612 124 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 612 {NarrowOop[char[0]{}]}  <||@
  Comment 619 126 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 623 128 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 626 130 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 635 12  <||@
  Comment 645 block B21 null  <||@
  Comment 645 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 645 216 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 650 222 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 650 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 660 224 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 663 226 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 668 228 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 673 230 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 676 232 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 676 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 681 [r13:0, stack:16]at java.lang.String.substring(String.java:1926) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 682 234 JUMP ~[] destination: B21 -> B22  <||@
  Comment 687 block B40 null  <||@
  Comment 687 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 687 386 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 690 388 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 690 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 700 390 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 705 392 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 710 394 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 710 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 715 [r13:0, stack:16]at java.lang.String.substring(String.java:1926) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 716 396 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 719 398 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 722 402 JUMP ~[] destination: B40 -> B42  <||@
  Comment 727 block B10 null  <||@
  Comment 727 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 727 88 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 732 90 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 732 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 742 92 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 747 94 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 752 96 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 752 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 757 [stack:16]at java.lang.String.substring(String.java:1926) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 758 98 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 758 100 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 758 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 768 102 JUMP ~[] destination: B10 -> B12  <||@
  Comment 773 block B14 null  <||@
  Comment 773 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 773 140 r10|DWORD = MOVE input: int[-36449|0xffffffffffff719f]  <||@
  Comment 779 144 JUMP ~[] destination: B14 -> B15  <||@
  Comment 779 block B15 null  <||@
  Comment 779 146 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 779 18 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 784 148 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 791 150 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 798 152 DEOPT info [bci:0]  <||@
  Comment 798 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 803 [stack:16]at java.lang.String.substring(String.java:1926) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 804 block B8 null  <||@
  Comment 804 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 804 70 r10|DWORD = MOVE input: int[-21779|0xffffffffffffaaed]  <||@
  Comment 810 74 JUMP ~[] destination: B8 -> B15  <||@
  Comment 812 block B1 null  <||@
  Comment 812 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 812 16 r10|DWORD = MOVE input: int[-18963|0xffffffffffffb5ed]  <||@
  Comment 818 20 JUMP ~[] destination: B1 -> B15  <||@
  Comment 820 block B3 null  <||@
  Comment 820 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 820 36 r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed]  <||@
  Comment 826 40 JUMP ~[] destination: B3 -> B15  <||@
  Comment 828 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 828 4  <||@
  Comment 834 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 834 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2258[java.lang.String.substring(int)]"
  method "HotSpotCompilation-2258[java.lang.String.substring(int)]"
  date 1526687562203
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1195d7560 448b560849c1e203493bc20f85efd842ff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf24585f60f8ced020000458b550c428b34d50c000000448bde452bde4585db0f8cda0200004585f60f8516000000498bc5488b6c24204883c4288505314a90f0c5f877c349b8d01600c0070000004183fb010f8c9d010000443bf60f8f6f020000498b4760498b77704181fbffffff000f83da010000418bd3d1e28d521783e2f84863d2488bca4803c8483bce0f87bd01000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489580c48c70001000000c74008410000f844895c240c4c896c2410458bea488d7010458bd549c1e2034963d6498d54521048634c240c4c8d51f04d85d249c7c3000000000f8dd90000004c8d51f84d3bda0f8f13000000c4a17a6f045ac4a17a7f045e4d8d53084d8bda4c8d51fc4d3bda0f8f13000000c4a1f96e045ac4a1f97e045e4d8d53044d8bda4c8d51fe4d3bda0f8f13000000c4a1796e045ac4a1797e045e4d8d53024d8bda48ffc94c3bd90f8f0a000000420fbf145a664289145e498b7760488d5618493b57700f87f0000000498957600f1886d800000049b8d01600c007000000488bd6498b88a800000048890ec74608da0200f848c1e80389460c44896610488bc2488b6c24204883c4288505a14890f0c5f877c30f1f8000000000c4a17e6f045ac4a17e7f045e4d8d5b104d3bda7eebe90dffffff443bf60f8ff1000000498b4760488d7018493b77700f8792000000498977600f1880d8000000488bf0498b90a8000000488910c74008da0200f8c7400c35da01d844896010488bc6488b6c24204883c4288505254890f0c5f877c34c896c241048be080200c007000000418bd3b90000000044895c240c458beae897cab8ff90e95cfeffff4c8be848be680b00c007000000ba02000000b901000000e875cab8ff90488bf0498bc5e9f3feffff4c896c241048be680b00c007000000ba02000000b901000000e84bcab8ff9049b8d01600c007000000e94bffffff41ba9f71ffff4c896c24104589979c0200004d89a7a8020000e87bed42ff9041baedaaffffebdf41baedb5ffffebd741baedabffffebcfe8ff7e82ff90e859ec42ff90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@c11c583 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 24 r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 67 26 rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 67 [r10:0, r13:0]at java.lang.String.substring(String.java:1926) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 67 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 75 28 r11|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 81 30 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 84 32 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 90 block B4 null  <||@
  Comment 90 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 44 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 93 46 BRANCH trueDestinationProbability: 0.9565316786229763 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 99 block B5 null  <||@
  Comment 99 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 50 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 102 52 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 111 12  <||@
  Comment 121 block B6 null  <||@
  Comment 121 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 56 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 121 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 131 58 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 135 60 BRANCH trueDestinationProbability: 0.09311697510464179 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B13  <||@
  Comment 141 block B13 null  <||@
  Comment 141 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 141 134 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 144 136 BRANCH trueDestinationProbability: 9.999999999998899E-5 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B16  <||@
  Comment 150 block B16 null  <||@
  Comment 150 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 150 156 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 154 158 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 158 160 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 165 162 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B16 -> B17 falseDestination: B16 -> B21  <||@
  Comment 171 block B17 null  <||@
  Comment 171 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 171 166 rdx|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 176 168 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 179 170 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 182 172 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 185 174 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 191 176 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 194 178 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B21 falseDestination: B17 -> B19  <||@
  Comment 200 block B19 null  <||@
  Comment 200 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 188 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 204 190 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 212 192 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 220 194 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 228 196 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 236 198 MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 240 200 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 247 202 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 247 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 254 204 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 254 206 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 259 208 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 264 210 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 267 212 JUMP ~[] destination: B19 -> B22  <||@
  Comment 267 block B22 null  <||@
  Comment 267 236 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 267 238 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 271 240 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3  <||@
  Comment 278 242 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 281 244 rdx|QWORD[.] = LEA [r10|QWORD[.] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 286 246 rcx|QWORD = MOVSXD stack:36|DWORD size: QWORD  <||@
  Comment 291 248 r10|QWORD = LEA [rcx|QWORD - 16] size: QWORD  <||@
  Comment 295 250 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 298 256 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 305 252 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B22 -> B27 falseDestination: B22 -> B25  <||@
  Comment 311 block B27 null  <||@
  Comment 311 282 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 311 284 r10|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 315 286 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 318 288 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 324 block B29 null  <||@
  Comment 324 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 296 xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 330 298 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 336 300 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 340 302 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 343 304 JUMP ~[] destination: B29 -> B30  <||@
  Comment 343 block B30 null  <||@
  Comment 343 306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 343 308 r10|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 347 310 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 350 312 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32  <||@
  Comment 356 block B32 null  <||@
  Comment 356 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 356 320 xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 362 322 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 368 324 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 372 326 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 375 328 JUMP ~[] destination: B32 -> B33  <||@
  Comment 375 block B33 null  <||@
  Comment 375 330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 375 332 r10|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 379 334 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 382 336 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B36 falseDestination: B33 -> B35  <||@
  Comment 388 block B35 null  <||@
  Comment 388 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 344 xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 394 346 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 400 348 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 404 350 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 407 352 JUMP ~[] destination: B35 -> B36  <||@
  Comment 407 block B36 null  <||@
  Comment 407 354 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 407 356 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 410 358 CMP (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 413 360 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B39 falseDestination: B36 -> B38  <||@
  Comment 419 block B38 null  <||@
  Comment 419 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 419 368 rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 424 370 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 429 372 JUMP ~[] destination: B38 -> B39  <||@
  Comment 429 block B39 null  <||@
  Comment 429 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 376 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 433 378 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 437 380 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 441 382 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 447 block B41 null  <||@
  Comment 447 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 406 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 451 408 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 458 410 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 458 414 JUMP ~[] destination: B41 -> B42  <||@
  Comment 458 block B42 null  <||@
  Comment 458 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 458 412 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 458 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 468 418 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 471 420 rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 478 422 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 481 424 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 481 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 488 426 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@44688b39 encoding: base: 0 shift: 3  <||@
  Comment 492 428 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 495 430 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 499 432 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 502 434 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 511 12  <||@
  Comment 521 block B25 loop 0 depth 1 header:377|LoopBegin  <||@
  Comment 521 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 528 268 xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 534 270 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 540 272 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 544 274 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 547 276 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B27 falseDestination: B25 -> B25  <||@
  Comment 554 block B7 null  <||@
  Comment 554 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 64 CMP (x: r14|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 557 66 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 563 block B9 null  <||@
  Comment 563 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 78 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 567 80 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 571 82 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 575 84 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 581 block B11 null  <||@
  Comment 581 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 106 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 585 108 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 592 110 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 592 112 JUMP ~[] destination: B11 -> B12  <||@
  Comment 592 block B12 null  <||@
  Comment 592 114 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 592 116 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 595 118 rdx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 602 120 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 605 122 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 605 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 612 124 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 612 {NarrowOop[char[0]{}]}  <||@
  Comment 619 126 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 623 128 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 626 130 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 635 12  <||@
  Comment 645 block B21 null  <||@
  Comment 645 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 645 216 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 650 222 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 650 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 660 224 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 663 226 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 668 228 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 673 230 r13|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 676 232 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 676 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 681 [r13:0, stack:16]at java.lang.String.substring(String.java:1926) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 682 234 JUMP ~[] destination: B21 -> B22  <||@
  Comment 687 block B40 null  <||@
  Comment 687 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 687 386 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 690 388 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 690 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 700 390 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 705 392 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 710 394 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 710 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 715 [r13:0, stack:16]at java.lang.String.substring(String.java:1926) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 716 396 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 719 398 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 722 402 JUMP ~[] destination: B40 -> B42  <||@
  Comment 727 block B10 null  <||@
  Comment 727 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 727 88 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 732 90 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 732 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 742 92 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 747 94 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 752 96 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 752 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 757 [stack:16]at java.lang.String.substring(String.java:1926) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 758 98 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 758 100 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 758 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 768 102 JUMP ~[] destination: B10 -> B12  <||@
  Comment 773 block B14 null  <||@
  Comment 773 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 773 140 r10|DWORD = MOVE input: int[-36449|0xffffffffffff719f]  <||@
  Comment 779 144 JUMP ~[] destination: B14 -> B15  <||@
  Comment 779 block B15 null  <||@
  Comment 779 146 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 779 18 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 784 148 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 791 150 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 798 152 DEOPT info [bci:0]  <||@
  Comment 798 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 803 [stack:16]at java.lang.String.substring(String.java:1926) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1          |2 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 804 block B8 null  <||@
  Comment 804 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 804 70 r10|DWORD = MOVE input: int[-21779|0xffffffffffffaaed]  <||@
  Comment 810 74 JUMP ~[] destination: B8 -> B15  <||@
  Comment 812 block B1 null  <||@
  Comment 812 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 812 16 r10|DWORD = MOVE input: int[-18963|0xffffffffffffb5ed]  <||@
  Comment 818 20 JUMP ~[] destination: B1 -> B15  <||@
  Comment 820 block B3 null  <||@
  Comment 820 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 820 36 r10|DWORD = MOVE input: int[-21523|0xffffffffffffabed]  <||@
  Comment 826 40 JUMP ~[] destination: B3 -> B15  <||@
  Comment 828 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 828 4  <||@
  Comment 834 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 834 5  <||@
  HexCodeFile>>> <|@
end_nmethod
