begin_compilation
  name " HotSpotCompilation-5098[java.util.HashMap$HashIterator.<init>(HashMap)]"
  method "HotSpotCompilation-5098[java.util.HashMap$HashIterator.<init>(HashMap)]"
  date 1526687556461
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i179  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap$HashIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v185 ?17 v187 ?40 v189 ?29 v191 v190 j162 j172 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 ?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1424
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a154 - 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a154 -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 a70 ?17 v192 v186 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1425) [bci: 11]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v186 
=== Succesors ===
next: a180 
=== Usages ===
v82 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v186 #next: a180  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
=== Succesors ===
next: v73 
=== Usages ===
a86 v100 v193 
=== Predecessor ===
i179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v188 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
op: Compress
stamp: n Ljava/util/HashMap;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.this$0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
value: a70 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j162 
=== Usages ===
=== Predecessor ===
a180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 value: a70 stateAfter: - lastLocationAccess: - #next: j162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v168 
=== Usages ===
j164 
=== Predecessor ===
v73 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j164 j173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j164 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j162 
y: i163 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j162 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid j167 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 v196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j164 
index: j167 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j164 index: j167  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 v176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v195 
value: i169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
j162 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v195 value: i169 stateAfter: - lastLocationAccess: - #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.expectedModCount
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1425) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
value: i179 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v187 value: i179 stateAfter: - lastLocationAccess: - #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v90 v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1427) [bci: 26]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 v92 ?40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1427) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
value: a121 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v189 value: a121 stateAfter: - lastLocationAccess: - #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.current
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1427) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
value: a121 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v190 value: a121 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v95 v106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1428) [bci: 33]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v95 i54 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1428) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v191 value: i15 stateAfter: - lastLocationAccess: - #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 53]
stamp: void
=== Inputs ===
value: a180 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a180  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
stamp: void
trueSuccessorProbability: 0.011966364812419146
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v19 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4578051761443157796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i181 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v192 
=== Succesors ===
next: v140 
=== Usages ===
v24 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v192 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 i35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i23 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i181 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid a86 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a180 
=== Succesors ===
=== Usages ===
v194 ?29 ?17 ?40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a180  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
i181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v139 #falseSuccessor: v137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v138  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1428) [bci: 34]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1429
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a86 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a86  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 99
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: i182 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i182  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a180 
=== Succesors ===
=== Usages ===
i182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 53]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
=== Succesors ===
next: v27 
=== Usages ===
v32 v108 
=== Predecessor ===
v137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v193 #next: v27  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 72]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1430
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - a86 a121 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a86 a121  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
i182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B6" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v28 
values: i15 i35 
=== Succesors ===
=== Usages ===
v32 i35 v108 v194 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v28 values: i15 i35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 6.204476785174742
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v27 
=== Succesors ===
next: v145 
=== Usages ===
v42 v46 i54 v149 v144 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v27 #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i182 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i54 y: i182  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v144 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v141 #falseSuccessor: v144  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i182 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i54 y: i182  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v146 #falseSuccessor: v149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
a183 
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 66]
stamp: i32
=== Inputs ===
x: i54 
y: i23 
=== Succesors ===
=== Usages ===
v106 i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
value: i35 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a183 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v191 value: i35 stateAfter: - lastLocationAccess: - #next: a183  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a86 
index: i54 
=== Succesors ===
=== Usages ===
a183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a86 index: i54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v146 
address: v194 
=== Succesors ===
next: v119 
=== Usages ===
v119 v123 
=== Predecessor ===
v106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v146 address: v194 #next: v119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
value: a183 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j172 
=== Usages ===
=== Predecessor ===
a183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v189 value: a183 stateAfter: - lastLocationAccess: - #next: j172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v176 
=== Usages ===
j173 
=== Predecessor ===
v119 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 72]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j172 
y: i163 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j172 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: j167 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: j167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v196 
value: i169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
j172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v196 value: i169 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
stamp: void
=== Inputs ===
value: a183 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a183  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
stamp: void
trueSuccessorProbability: 0.8388260550205546
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v48 #falseSuccessor: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617475618808628567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?40 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?40 #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -27931
stableDimension: 0
stamp: i32 [-27931] ⇊00000000ffff92e5 ⇈00000000ffff92e5
stampKind: i32
value: int[-27931|0xffffffffffff92e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26899
stableDimension: 0
stamp: i32 [-26899] ⇊00000000ffff96ed ⇈00000000ffff96ed
stampKind: i32
value: int[-26899|0xffffffffffff96ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-27931 - -26899] ⇊00000000ffff92e5 ⇈00000000ffff96ed
valueDescription: i32
=== Inputs ===
merge: v151 
values: i153 i159 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: i153 i159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v152 v158 
=== Succesors ===
next: v157 
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v152 v158 #next: v157  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1430
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a86 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a86  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i155 
speculation: a154 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i155 speculation: a154  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i179  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap$HashIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v185 ?17 v187 ?40 v189 ?29 v191 v190 j162 j172 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a154 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 ?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1424
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a154 - 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a154 -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 a70 ?17 v192 v186 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1425) [bci: 11]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v186 
=== Succesors ===
next: a180 
=== Usages ===
v82 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v186 #next: a180  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result [v1|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a180 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
=== Succesors ===
next: v73 
=== Usages ===
a86 v100 v193 
=== Predecessor ===
i179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v188 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a70 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
op: Compress
stamp: n Ljava/util/HashMap;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.this$0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
value: a70 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j162 
=== Usages ===
=== Predecessor ===
a180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 value: a70 stateAfter: - lastLocationAccess: - #next: j162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j162 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v168 
=== Usages ===
j164 
=== Predecessor ===
v73 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j164 j173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j164 <|@
result v5|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j162 
y: i163 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j162 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid j167 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 v196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
result [v5|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j164 
index: j167 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j164 index: j167  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 v176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v195 
value: i169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
j162 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v195 value: i169 stateAfter: - lastLocationAccess: - #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.expectedModCount
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1425) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
value: i179 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v187 value: i179 stateAfter: - lastLocationAccess: - #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v90 v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a121 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1427) [bci: 26]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v90 v92 ?40 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1427) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
value: a121 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v189 value: a121 stateAfter: - lastLocationAccess: - #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.current
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1427) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
value: a121 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v190 value: a121 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v95 v106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1428) [bci: 33]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v95 i54 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1428) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v191 value: i15 stateAfter: - lastLocationAccess: - #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 53]
stamp: void
=== Inputs ===
value: a180 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a180  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 38]
stamp: void
trueSuccessorProbability: 0.011966364812419146
=== Inputs ===
condition: v100 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v100 #trueSuccessor: v19 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4f1e96d9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011966364812419146 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4578051761443157796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i181 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i181  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i181 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v192 
=== Succesors ===
next: v140 
=== Usages ===
v24 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v192 #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 i35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i23 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i181 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid a86 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1426) [bci: 18]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a180 
=== Succesors ===
=== Usages ===
v194 ?29 ?17 ?40 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a180  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v139 
falseSuccessor: v137 
=== Usages ===
=== Predecessor ===
i181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v139 #falseSuccessor: v137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v138  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1428) [bci: 34]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1429
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a86 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a86  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 99
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -25363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: i182 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i182  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a180 
=== Succesors ===
=== Usages ===
i182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i182 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 53]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
=== Succesors ===
next: v27 
=== Usages ===
v32 v108 
=== Predecessor ===
v137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v193 #next: v27  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 72]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1430
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - a86 a121 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a86 a121  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
i182 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B6" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i54 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v28 
values: i15 i35 
=== Succesors ===
=== Usages ===
v32 i35 v108 v194 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v28 values: i15 i35  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 6.204476785174742
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v27 
=== Succesors ===
next: v145 
=== Usages ===
v42 v46 i54 v149 v144 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v27 #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i182 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i54 y: i182  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v144 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v141 #falseSuccessor: v144  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i182 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i54 y: i182  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v146 #falseSuccessor: v149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
a183 
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 66]
stamp: i32
=== Inputs ===
x: i54 
y: i23 
=== Succesors ===
=== Usages ===
v106 i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
value: i35 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a183 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v191 value: i35 stateAfter: - lastLocationAccess: - #next: a183  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
result [v7|QWORD[.] + v9|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a86 
index: i54 
=== Succesors ===
=== Usages ===
a183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a86 index: i54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a183 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v146 
address: v194 
=== Succesors ===
next: v119 
=== Usages ===
v119 v123 
=== Predecessor ===
v106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v146 address: v194 #next: v119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
value: a183 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j172 
=== Usages ===
=== Predecessor ===
a183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v189 value: a183 stateAfter: - lastLocationAccess: - #next: j172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j172 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v176 
=== Usages ===
j173 
=== Predecessor ===
v119 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
result v12|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 72]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j172 
y: i163 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j172 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
result [v12|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j173 
index: j167 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j173 index: j167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 72]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v196 
value: i169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
j172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v196 value: i169 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
stamp: void
=== Inputs ===
value: a183 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a183  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
stamp: void
trueSuccessorProbability: 0.8388260550205546
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v48 #falseSuccessor: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v7|QWORD[.] + v9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD[.], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8388260550205546 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617475618808628567
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?40 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?40 #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
stack: Object[null] 
locals: v0|QWORD[.] - v7|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1432) [bci: 78]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 70]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result int[-27931|0xffffffffffff92e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -27931
stableDimension: 0
stamp: i32 [-27931] ⇊00000000ffff92e5 ⇈00000000ffff92e5
stampKind: i32
value: int[-27931|0xffffffffffff92e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27931|0xffffffffffff92e5]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result int[-26899|0xffffffffffff96ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -26899
stableDimension: 0
stamp: i32 [-26899] ⇊00000000ffff96ed ⇈00000000ffff96ed
stampKind: i32
value: int[-26899|0xffffffffffff96ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26899|0xffffffffffff96ed]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i155 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-27931 - -26899] ⇊00000000ffff92e5 ⇈00000000ffff96ed
valueDescription: i32
=== Inputs ===
merge: v151 
values: i153 i159 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v151 values: i153 i159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v152 v158 
=== Succesors ===
next: v157 
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v152 v158 #next: v157  <|@  <|@
tid ?29 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1430
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a86 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a86  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?29 
actionAndReason: i155 
speculation: a154 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?29 actionAndReason: i155 speculation: a154  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: v0|QWORD[.] - v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4f1e96d9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011966364812419146 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v7|QWORD[.] + v9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v12|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD[.], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8388260550205546 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617475618808628567
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
stack: Object[null] 
locals: v0|QWORD[.] - v7|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B6" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4578051761443157796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-26899|0xffffffffffff96ed]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: v0|QWORD[.] - v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-27931|0xffffffffffff92e5]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -25363 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4f1e96d9 slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   22  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   24  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.011966364812419146 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction CMP [rdx|QWORD[.] + 20] y: 1 size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   58  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   76  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.8388260550205546 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617475618808628567
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
stack: Object[null] 
locals: rsi|QWORD[.] - r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B6" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4578051761443157796
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-26899|0xffffffffffff96ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: rsi|QWORD[.] - r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-27931|0xffffffffffff92e5] // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction MOV [r15|QWORD + 668] y: -25363 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4f1e96d9 slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   18  <|@ instruction r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   20  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   22  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   24  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.011966364812419146 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction CMP [rdx|QWORD[.] + 20] y: 1 size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   58  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   76  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.8388260550205546 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617475618808628567
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75]
stack: Object[null] 
locals: rsi|QWORD[.] - r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors "B6" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618588045786443643
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607074635367797027
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4578051761443157796
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-26899|0xffffffffffff96ed] // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48]
locals: rsi|QWORD[.] - r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B12" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-27931|0xffffffffffff92e5] // MoveResolver resolve mapping <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction MOV [r15|QWORD + 668] y: -25363 size: DWORD <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 37]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b5218448b5a244c8bc249c1e8034489461c4c8bc649c1e80949b900c0240801000000478824084489560c4489661444896618448966104585db0f8483000000458bd349c1e203837a14010f8ca7000000468b1cdd0c00000041b800000000e9420000006666660f1f840000000000453bd80f8678000000418bc8ffc1894e10478b44821044894614488bde48c1eb094688240b4585c00f8513000000850500000000448bc1453bd87fc4e926000000488b6c24104883c418850500000000c5f877c3488b6c24104883c418850500000000c5f877c341bbed96ffff45899f9c0200004d89a7a8020000e8000000009041bbe592ffffebe441c7879c020000ed9cffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4f1e96d9 slotKind: QWORD  <||@
  Comment 48 10 r10|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |Object[null]  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 12 r11|DWORD[.] = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 56 14 r8|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3  <||@
  Comment 63 16 MOV (x: [rsi|QWORD[.] + 28], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 67 18 r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 74 20 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 84 22 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 88 24 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 92 26 MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 96 28 MOV (x: [rsi|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 100 30 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 104 32 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 107 34 BRANCH trueDestinationProbability: 0.011966364812419146 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 113 block B2 null  <||@
  Comment 113 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 38 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3  <||@
  Comment 120 40 CMP [rdx|QWORD[.] + 20] y: 1 size: DWORD  <||@
  Comment 124 42 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 130 block B4 null  <||@
  Comment 130 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 46 r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 138 -1 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 144 48 JUMP ~[] destination: B4 -> B5  <||@
  Comment 149 block B6 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 149 56 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 58 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 163 60 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10  <||@
  Comment 169 block B7 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 169 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 64 rcx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 174 66 MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 177 68 r8|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 182 70 MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 186 72 rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 193 74 MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 197 76 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 200 78 BRANCH trueDestinationProbability: 0.8388260550205546 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 206 block B8 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 206 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 82 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:75]  <||@
  Comment 206 [rsi:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r10|QWORD[.] 
     stack:   |Object[null]  |   |               <||@
  Comment 206 {infopoint: SAFEPOINT}  <||@
  Comment 206 11  <||@
  Comment 212 -1 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 215 84 JUMP ~[] destination: B8 -> B5  <||@
  Comment 215 block B5 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 215 50 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 215 52 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 218 54 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B11  <||@
  Comment 225 block B9 null  <||@
  Comment 225 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 88 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 234 12  <||@
  Comment 244 block B1 null  <||@
  Comment 244 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 92 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 253 12  <||@
  Comment 263 block B11 null  <||@
  Comment 263 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 263 -1 r11|DWORD = MOVE input: int[-26899|0xffffffffffff96ed]  <||@
  Comment 269 96 JUMP ~[] destination: B11 -> B12  <||@
  Comment 269 block B12 null  <||@
  Comment 269 102 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 269 104 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 276 106 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 283 108 DEOPT info [bci:48]  <||@
  Comment 283 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 288 [rsi:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r10|QWORD[.]   <||@
  Comment 289 block B10 null  <||@
  Comment 289 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 -1 r11|DWORD = MOVE input: int[-27931|0xffffffffffff92e5]  <||@
  Comment 295 100 JUMP ~[] destination: B10 -> B12  <||@
  Comment 297 block B3 null  <||@
  Comment 297 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 297 112 MOV [r15|QWORD + 668] y: -25363 size: DWORD  <||@
  Comment 308 114 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 315 116 DEOPT info [bci:37]  <||@
  Comment 315 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 320 [rdx:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|QWORD[.]   <||@
  Comment 321 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 321 4  <||@
  Comment 327 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 327 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5098[java.util.HashMap$HashIterator.<init>(HashMap)]"
  method "HotSpotCompilation-5098[java.util.HashMap$HashIterator.<init>(HashMap)]"
  date 1526687556583
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 119400860 448b560849c1e203493bc20f85ef4560ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b5218448b5a244c8bc249c1e8034489461c4c8bc649c1e80949b900c0240801000000478824084489560c4489661444896618448966104585db0f8483000000458bd349c1e203837a14010f8ca7000000468b1cdd0c00000041b800000000e9420000006666660f1f840000000000453bd80f8678000000418bc8ffc1894e10478b44821044894614488bde48c1eb094688240b4585c00f85130000008505d2b6adf0448bc1453bd87fc4e926000000488b6c24104883c4188505b6b6adf0c5f877c3488b6c24104883c4188505a3b6adf0c5f877c341bbed96ffff45899f9c0200004d89a7a8020000e87e5c60ff9041bbe592ffffebe441c7879c020000ed9cffff4d89a7a8020000e85e5c60ff90e8faed9fff90e8545b60ff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4f1e96d9 slotKind: QWORD  <||@
  Comment 48 10 r10|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1424) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |Object[null]  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 12 r11|DWORD[.] = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 56 14 r8|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3  <||@
  Comment 63 16 MOV (x: [rsi|QWORD[.] + 28], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 67 18 r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 74 20 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 84 22 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 88 24 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 92 26 MOV (x: [rsi|QWORD[.] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 96 28 MOV (x: [rsi|QWORD[.] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 100 30 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 104 32 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 107 34 BRANCH trueDestinationProbability: 0.011966364812419146 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 113 block B2 null  <||@
  Comment 113 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 38 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7ba721ec encoding: base: 0 shift: 3  <||@
  Comment 120 40 CMP [rdx|QWORD[.] + 20] y: 1 size: DWORD  <||@
  Comment 124 42 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 130 block B4 null  <||@
  Comment 130 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 46 r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 138 -1 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 144 48 JUMP ~[] destination: B4 -> B5  <||@
  Comment 149 block B6 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 149 56 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 58 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 163 60 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10  <||@
  Comment 169 block B7 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 169 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 64 rcx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 174 66 MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 177 68 r8|DWORD[.] = MOV [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 182 70 MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 186 72 rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 193 74 MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 197 76 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 200 78 BRANCH trueDestinationProbability: 0.8388260550205546 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 206 block B8 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 206 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 82 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:75]  <||@
  Comment 206 [rsi:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 75, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r10|QWORD[.] 
     stack:   |Object[null]  |   |               <||@
  Comment 206 {infopoint: SAFEPOINT}  <||@
  Comment 206 11  <||@
  Comment 212 -1 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 215 84 JUMP ~[] destination: B8 -> B5  <||@
  Comment 215 block B5 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 215 50 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 215 52 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 218 54 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B11  <||@
  Comment 225 block B9 null  <||@
  Comment 225 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 88 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 234 12  <||@
  Comment 244 block B1 null  <||@
  Comment 244 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 92 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 253 12  <||@
  Comment 263 block B11 null  <||@
  Comment 263 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 263 -1 r11|DWORD = MOVE input: int[-26899|0xffffffffffff96ed]  <||@
  Comment 269 96 JUMP ~[] destination: B11 -> B12  <||@
  Comment 269 block B12 null  <||@
  Comment 269 102 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 269 104 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 276 106 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 283 108 DEOPT info [bci:48]  <||@
  Comment 283 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 288 [rsi:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1430) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r10|QWORD[.]   <||@
  Comment 289 block B10 null  <||@
  Comment 289 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 -1 r11|DWORD = MOVE input: int[-27931|0xffffffffffff92e5]  <||@
  Comment 295 100 JUMP ~[] destination: B10 -> B12  <||@
  Comment 297 block B3 null  <||@
  Comment 297 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 297 112 MOV [r15|QWORD + 668] y: -25363 size: DWORD  <||@
  Comment 308 114 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 315 116 DEOPT info [bci:37]  <||@
  Comment 315 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 320 [rdx:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1429) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|QWORD[.]   <||@
  Comment 321 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 321 4  <||@
  Comment 327 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 327 5  <||@
  HexCodeFile>>> <|@
end_nmethod
