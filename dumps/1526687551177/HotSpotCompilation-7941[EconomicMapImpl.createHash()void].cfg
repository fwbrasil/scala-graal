begin_compilation
  name " HotSpotCompilation-7941[org.graalvm.collections.EconomicMapImpl.createHash()]"
  method "HotSpotCompilation-7941[org.graalvm.collections.EconomicMapImpl.createHash()]"
  date 1526687590581
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i2077 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i2077  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1590 v2115 v2116 ?309 ?370 ?13 ?670 v2118 ?295 ?647 v2120 ?200 ?52 ?316 ?210 ?160 v2117 j1753 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2077 i2082 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2077 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2115 
=== Succesors ===
next: i2078 
=== Usages ===
i5 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2115 #next: i2078  <|@  <|@
f <@~|@floating>@ <|@
tid v2116 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2078 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2078 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2116 
=== Succesors ===
next: a2079 
=== Usages ===
i5 
=== Predecessor ===
i2077 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2116 #next: a2079  <|@  <|@
f <@~|@floating>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2079 a2085 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2079 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2117 
=== Succesors ===
next: v10 
=== Usages ===
v1245 v1243 
=== Predecessor ===
i2078 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2117 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: void
=== Inputs ===
value: a2079 
=== Succesors ===
=== Usages ===
i2060 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2079  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:448) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i263 i2060 i235 i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: Equivalence$3@1032552445
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1032552445]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1245 v1251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2079 
y: a1244 
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2079 y: a1244  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1245 
trueValue: i88 
falseValue: i87 
=== Succesors ===
=== Usages ===
i2060 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1245 trueValue: i88 falseValue: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i2060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1243 
trueValue: i88 
falseValue: i2059 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1243 trueValue: i88 falseValue: i2059  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
stamp: i32
=== Inputs ===
x: i2077 
y: i2078 
=== Succesors ===
=== Usages ===
v14 ?13 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2077 y: i2078  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i75 i61 i529 i351 i276 i257 i262 i1587 a1793 a1843 v1977 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
a2079 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B130" 
    successors "B2" "B130" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612823192808066965
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffffc
valueDescription: i32
=== Inputs ===
merge: v11 
values: i2060 i22 
=== Succesors ===
=== Usages ===
?13 v14 i38 i22 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v11 values: i2060 i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.5050068721774985
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v10 
=== Succesors ===
next: v20 
=== Usages ===
i12 v16 v23 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v10 #next: v20  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 533
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i5 i12 - - 
=== Succesors ===
=== Usages ===
v1360 v1612 a1714 i2081 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i5 i12 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i12 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 12]
stamp: void
trueSuccessorProbability: 0.399200501646026
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v16 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B129" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:538) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: a2080 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: a2080  <|@  <|@
f <@~|@floating>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2080 a2102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2080 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2118 
=== Succesors ===
next: i2081 
=== Usages ===
a891 v2119 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2118 #next: i2081  <|@  <|@
f <@~|@floating>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2080 
=== Succesors ===
=== Usages ===
i2081 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2081 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?13 
guard: - 
address: v2119 
=== Succesors ===
next: v1376 
=== Usages ===
v28 
=== Predecessor ===
a2080 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?13 guard: - address: v2119 #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 31]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 v255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2081 
y: i27 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2081 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid a1609 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1612 v1654 v1636 v1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v1373 
falseSuccessor: v1375 
=== Usages ===
=== Predecessor ===
i2081 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v1373 #falseSuccessor: v1375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1693 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1693 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1737 
=== Usages ===
v2150 v2151 
=== Predecessor ===
v1373 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1737  <|@  <|@
f <@~|@floating>@ <|@
tid v2150 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1693 
index: - 
=== Succesors ===
=== Usages ===
j1737 v1739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1693 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1737 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2150 
=== Succesors ===
next: j1738 
=== Usages ===
j1697 v2152 v2153 a1713 v2158 v2154 v2155 v2156 v2157 
=== Predecessor ===
j1693 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2150 #next: j1738  <|@  <|@
f <@~|@floating>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1693 
index: - 
=== Succesors ===
=== Usages ===
j1738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1693 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1738 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2151 
=== Succesors ===
next: v1702 
=== Usages ===
v1703 
=== Predecessor ===
j1737 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2151 #next: v1702  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:545) [bci: 56]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 a1843 a1793 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:545) [bci: 56]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i12 
y: i37 
=== Succesors ===
=== Usages ===
j1901 v1740 v1699 a1714 v1977 i1722 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i1698 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1699 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i1698 
=== Succesors ===
=== Usages ===
v1702 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i1698  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 72]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 v104 ?210 i591 v375 i383 v449 i199 i1555 i1587 v1588 a1714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1690 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1741 j1986 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1699 
=== Succesors ===
trueSuccessor: v1701 
falseSuccessor: v1700 
=== Usages ===
=== Predecessor ===
j1738 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1699 #trueSuccessor: v1701 #falseSuccessor: v1700  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606281698874543308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1709 
=== Usages ===
=== Predecessor ===
v1702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1709  <|@  <|@
f <@~|@floating>@ <|@
tid i1721 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1722 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1722 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i32 [-2147483641 - 2147483639] ⇊0000000000000007 ⇈00000000fffffff7
=== Inputs ===
x: i38 
y: i1721 
=== Succesors ===
=== Usages ===
i1692 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i38 y: i1721  <|@  <|@
f <@~|@floating>@ <|@
tid i1691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1692 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i1722 
y: i1691 
=== Succesors ===
=== Usages ===
j1696 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1722 y: i1691  <|@  <|@
f <@~|@floating>@ <|@
tid j1696 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
resultBits: 64
stamp: i64 [-2147483648 - 2147483632] ⇈fffffffffffffff0
=== Inputs ===
value: i1692 
=== Succesors ===
=== Usages ===
j1697 v2154 v2155 v2156 v2157 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1692  <|@  <|@
f <@~|@floating>@ <|@
tid j1697 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i64
=== Inputs ===
x: j1696 
y: j1737 
=== Succesors ===
=== Usages ===
v1703 v1739 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1696 y: j1737  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1738 
y: j1697 
=== Succesors ===
=== Usages ===
v1709 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1738 y: j1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1703 
=== Succesors ===
trueSuccessor: v1708 
falseSuccessor: v1707 
=== Usages ===
=== Predecessor ===
v1701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1703 #trueSuccessor: v1708 #falseSuccessor: v1707  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1706 
=== Usages ===
=== Predecessor ===
v1709 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1706  <|@  <|@
f <@*|@fixed>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606200634081250639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1739 
=== Usages ===
=== Predecessor ===
v1709 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2150 
value: j1697 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2150 value: j1697 stateAfter: - lastLocationAccess: - #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid v2154 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1696 
index: j1737 
=== Succesors ===
=== Usages ===
v1726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1696 index: j1737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2154 
=== Succesors ===
next: v1729 
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2154 #next: v1729  <|@  <|@
f <@~|@floating>@ <|@
tid v2155 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1696 
index: j1737 
=== Succesors ===
=== Usages ===
v1729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1696 index: j1737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2155 
=== Succesors ===
next: v1732 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2155 #next: v1732  <|@  <|@
f <@~|@floating>@ <|@
tid v2156 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1696 
index: j1737 
=== Succesors ===
=== Usages ===
v1732 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1696 index: j1737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2156 
=== Succesors ===
next: v1735 
=== Usages ===
=== Predecessor ===
v1729 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2156 #next: v1735  <|@  <|@
f <@~|@floating>@ <|@
tid v2157 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1696 
index: j1737 
=== Succesors ===
=== Usages ===
v1735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1696 index: j1737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2157 
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
v1732 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2157 #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid v2152 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1737 
index: - 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1737 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2152 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1741 
=== Usages ===
=== Predecessor ===
v1735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2152 value: i38 stateAfter: - lastLocationAccess: - #next: v1741  <|@  <|@
f <@~|@floating>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1737 
index: - 
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1737 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2153 
value: j1690 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1745 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2153 value: j1690 stateAfter: - lastLocationAccess: - #next: v1745  <|@  <|@
f <@~|@floating>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1737 
index: - 
=== Succesors ===
=== Usages ===
v1745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1737 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2158 
value: v1884 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1712 
=== Usages ===
=== Predecessor ===
v1741 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2158 value: v1884 stateAfter: - lastLocationAccess: - #next: v1712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1713 
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1737 
=== Succesors ===
next: v1715 
=== Usages ===
a1718 
=== Predecessor ===
v1712 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1737 #next: v1715  <|@  <|@
f <@*|@fixed>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1716 
=== Predecessor ===
a1713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1704 
=== Usages ===
=== Predecessor ===
v1702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1704  <|@  <|@
f <@*|@fixed>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592518698413299071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1704 v1706 
=== Succesors ===
next: a1714 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1704 v1706 #next: a1714  <|@  <|@
f <@~|@floating>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1714 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?13 
arguments: v1689 i38 i47 
=== Succesors ===
next: v1717 
=== Usages ===
a1718 
=== Predecessor ===
v1705 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?13 arguments: v1689 i38 i47 #next: v1717  <|@  <|@
f <@*|@fixed>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1716 
=== Predecessor ===
a1714 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1716 
values: a1713 a1714 
=== Succesors ===
=== Usages ===
v2149 a1604 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1716 values: a1713 a1714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1715 v1717 
=== Succesors ===
next: v1979 
=== Usages ===
a1718 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1715 v1717 #next: v1979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1908 
=== Usages ===
j1981 
=== Predecessor ===
v1716 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1908  <|@  <|@
f <@~|@floating>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i21 
=== Succesors ===
=== Usages ===
v1908 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i38 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i1246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1878 v1759 v1775 v1829 v2045 v2046 v2047 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1977 
=== Succesors ===
trueSuccessor: v1906 
falseSuccessor: v1907 
=== Usages ===
=== Predecessor ===
v1979 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1977 #trueSuccessor: v1906 #falseSuccessor: v1907  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B32" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v1908 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1924  <|@  <|@
f <@*|@fixed>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
v1906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1911 
=== Usages ===
=== Predecessor ===
v1908 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1911  <|@  <|@
f <@~|@floating>@ <|@
tid v2149 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1718 
index: - 
=== Succesors ===
=== Usages ===
j1981 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1718 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1981 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1979 
address: v2149 
=== Succesors ===
=== Usages ===
v2182 v2183 v2184 v2185 v2186 v2187 v2188 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1979 address: v2149  <|@  <|@
f <@~|@floating>@ <|@
tid j1901 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483632] ⇈fffffffffffffff0
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
j2033 j2015 j2021 j2025 j2029 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j2014 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32
stableDimension: 0
stamp: i64 [-32] ⇊ffffffffffffffe0 ⇈ffffffffffffffe0
stampKind: i64
value: long[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2015 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2015 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483680 - 2147483600] ⇈fffffffffffffff0
=== Inputs ===
x: j1901 
y: j2014 
=== Succesors ===
=== Usages ===
v2016 v2018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1901 y: j2014  <|@  <|@
f <@~|@floating>@ <|@
tid j1560 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2016 j2004 j2009 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2015 
y: j1560 
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2015 y: j1560  <|@  <|@
f <@*|@fixed>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2016 
=== Succesors ===
trueSuccessor: v1909 
falseSuccessor: v1910 
=== Usages ===
=== Predecessor ===
v1907 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2016 #trueSuccessor: v1909 #falseSuccessor: v1910  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1920 
=== Usages ===
=== Predecessor ===
v1911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1920  <|@  <|@
f <@*|@fixed>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
v1909 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1912 
=== Usages ===
=== Predecessor ===
v1911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1912  <|@  <|@
f <@~|@floating>@ <|@
tid j884 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
v1910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B128" 
    successors "B15" "B128" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2009 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1913 
values: j1560 j2013 
=== Succesors ===
=== Usages ===
v2188 j2013 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1913 values: j1560 j2013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1912 
=== Succesors ===
next: v2054 
=== Usages ===
j2009 v1916 v1917 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1912 #next: v2054  <|@  <|@
f <@~|@floating>@ <|@
tid v2188 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j2009 
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j2009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2188 
value: v2055 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1913 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2188 value: v2055 stateAfter: - lastLocationAccess: - #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid j2013 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j2009 
y: j884 
=== Succesors ===
=== Usages ===
j2004 j2009 v2018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2009 y: j884  <|@  <|@
f <@~|@floating>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2015 
y: j2013 
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2015 y: j2013  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2018 
=== Succesors ===
trueSuccessor: v1916 
falseSuccessor: v1918 
=== Usages ===
=== Predecessor ===
v2054 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2018 #trueSuccessor: v1916 #falseSuccessor: v1918  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1913 
=== Succesors ===
next: v1922 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1913 #next: v1922  <|@  <|@
f <@*|@fixed>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
v1916 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2004 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1921 
values: j1560 j2013 
=== Succesors ===
=== Usages ===
v2187 j2008 j1999 v2022 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1921 values: j1560 j2013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1920 v1922 
=== Succesors ===
next: v1943 
=== Usages ===
j2004 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1920 v1922 #next: v1943  <|@  <|@
f <@~|@floating>@ <|@
tid j2020 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2021 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2021 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483616] ⇈fffffffffffffff0
=== Inputs ===
x: j1901 
y: j2020 
=== Succesors ===
=== Usages ===
v2022 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1901 y: j2020  <|@  <|@
f <@~|@floating>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2021 
y: j2004 
=== Succesors ===
=== Usages ===
v1943 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2021 y: j2004  <|@  <|@
f <@*|@fixed>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2022 
=== Succesors ===
trueSuccessor: v1942 
falseSuccessor: v1941 
=== Usages ===
=== Predecessor ===
v1921 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2022 #trueSuccessor: v1942 #falseSuccessor: v1941  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
v1943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1946  <|@  <|@
f <@*|@fixed>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1932 
=== Predecessor ===
v1942 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2053 
=== Usages ===
=== Predecessor ===
v1943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid v2187 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j2004 
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j2004  <|@  <|@
f <@~|@floating>@ <|@
tid v2058 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2187 
value: v2058 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1931 
=== Usages ===
=== Predecessor ===
v1941 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2187 value: v2058 stateAfter: - lastLocationAccess: - #next: v1931  <|@  <|@
f <@~|@floating>@ <|@
tid j881 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2008 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j2004 
y: j881 
=== Succesors ===
=== Usages ===
j1999 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2004 y: j881  <|@  <|@
f <@*|@fixed>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1932 
=== Predecessor ===
v2053 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1999 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1932 
values: j2008 j2004 
=== Succesors ===
=== Usages ===
v2186 j2003 j1993 v2026 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1932 values: j2008 j2004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1931 v1946 
=== Succesors ===
next: v1949 
=== Usages ===
j1999 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1931 v1946 #next: v1949  <|@  <|@
f <@~|@floating>@ <|@
tid j2024 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2025 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2025 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483624] ⇊0000000000000008 ⇈fffffffffffffff8
=== Inputs ===
x: j1901 
y: j2024 
=== Succesors ===
=== Usages ===
v2026 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1901 y: j2024  <|@  <|@
f <@~|@floating>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2025 
y: j1999 
=== Succesors ===
=== Usages ===
v1949 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2025 y: j1999  <|@  <|@
f <@*|@fixed>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2026 
=== Succesors ===
trueSuccessor: v1948 
falseSuccessor: v1947 
=== Usages ===
=== Predecessor ===
v1932 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2026 #trueSuccessor: v1948 #falseSuccessor: v1947  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1952 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1952  <|@  <|@
f <@*|@fixed>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2051 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2051  <|@  <|@
f <@~|@floating>@ <|@
tid v2186 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j1999 
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j1999  <|@  <|@
f <@~|@floating>@ <|@
tid v2057 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2186 
value: v2057 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1934 
=== Usages ===
=== Predecessor ===
v1947 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2186 value: v2057 stateAfter: - lastLocationAccess: - #next: v1934  <|@  <|@
f <@~|@floating>@ <|@
tid j1743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2003 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2003 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1999 
y: j1743 
=== Succesors ===
=== Usages ===
j1993 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1999 y: j1743  <|@  <|@
f <@*|@fixed>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v2051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1993 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1935 
values: j2003 j1999 
=== Succesors ===
=== Usages ===
v2185 j1998 j1982 v2030 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1935 values: j2003 j1999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1934 v1952 
=== Succesors ===
next: v1955 
=== Usages ===
j1993 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1934 v1952 #next: v1955  <|@  <|@
f <@~|@floating>@ <|@
tid j2028 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2029 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2029 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483628] ⇊000000000000000c ⇈fffffffffffffffc
=== Inputs ===
x: j1901 
y: j2028 
=== Succesors ===
=== Usages ===
v2030 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1901 y: j2028  <|@  <|@
f <@~|@floating>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2029 
y: j1993 
=== Succesors ===
=== Usages ===
v1955 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2029 y: j1993  <|@  <|@
f <@*|@fixed>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2030 
=== Succesors ===
trueSuccessor: v1954 
falseSuccessor: v1953 
=== Usages ===
=== Predecessor ===
v1935 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2030 #trueSuccessor: v1954 #falseSuccessor: v1953  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1958 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1958  <|@  <|@
f <@*|@fixed>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1938 
=== Predecessor ===
v1954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2049 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2049  <|@  <|@
f <@~|@floating>@ <|@
tid v2185 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j1993 
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j1993  <|@  <|@
f <@~|@floating>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2185 
value: v2056 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1937 
=== Usages ===
=== Predecessor ===
v1953 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2185 value: v2056 stateAfter: - lastLocationAccess: - #next: v1937  <|@  <|@
f <@~|@floating>@ <|@
tid j1997 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1998 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1998 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1993 
y: j1997 
=== Succesors ===
=== Usages ===
j1982 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1993 y: j1997  <|@  <|@
f <@*|@fixed>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1938 
=== Predecessor ===
v2049 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1982 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1938 
values: j1998 j1993 
=== Succesors ===
=== Usages ===
v2182 j1986 v2034 j2041 v2183 v2184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1938 values: j1998 j1993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1937 v1958 
=== Succesors ===
next: v1961 
=== Usages ===
j1982 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1937 v1958 #next: v1961  <|@  <|@
f <@~|@floating>@ <|@
tid j2032 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2033 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2033 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483631] ⇊000000000000000f
=== Inputs ===
x: j1901 
y: j2032 
=== Succesors ===
=== Usages ===
v2034 v2036 v2038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1901 y: j2032  <|@  <|@
f <@~|@floating>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2033 
y: j1982 
=== Succesors ===
=== Usages ===
v1961 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2033 y: j1982  <|@  <|@
f <@*|@fixed>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2034 
=== Succesors ===
trueSuccessor: v1960 
falseSuccessor: v1959 
=== Usages ===
=== Predecessor ===
v1938 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2034 #trueSuccessor: v1960 #falseSuccessor: v1959  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1964 
=== Usages ===
=== Predecessor ===
v1961 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1964  <|@  <|@
f <@*|@fixed>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
v1960 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2045 
=== Usages ===
=== Predecessor ===
v1961 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2045  <|@  <|@
f <@~|@floating>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j1982 
=== Succesors ===
=== Usages ===
v2045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2182 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1967 
=== Usages ===
=== Predecessor ===
v1959 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2182 value: i1246 stateAfter: - lastLocationAccess: - #next: v1967  <|@  <|@
f <@~|@floating>@ <|@
tid j1986 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1982 
y: j1690 
=== Succesors ===
=== Usages ===
v2036 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1982 y: j1690  <|@  <|@
f <@~|@floating>@ <|@
tid v2036 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2033 
y: j1986 
=== Succesors ===
=== Usages ===
v1967 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2033 y: j1986  <|@  <|@
f <@*|@fixed>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2036 
=== Succesors ===
trueSuccessor: v1966 
falseSuccessor: v1965 
=== Usages ===
=== Predecessor ===
v2045 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2036 #trueSuccessor: v1966 #falseSuccessor: v1965  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591419820104220671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1970 
=== Usages ===
=== Predecessor ===
v1967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1970  <|@  <|@
f <@*|@fixed>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
v1966 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738169498697727
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2046 
=== Usages ===
=== Predecessor ===
v1967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2046  <|@  <|@
f <@~|@floating>@ <|@
tid v2183 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j1982 
=== Succesors ===
=== Usages ===
v2046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2183 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1973 
=== Usages ===
=== Predecessor ===
v1965 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2183 value: i1246 stateAfter: - lastLocationAccess: - #next: v1973  <|@  <|@
f <@~|@floating>@ <|@
tid j2040 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2041 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2041 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1982 
y: j2040 
=== Succesors ===
=== Usages ===
v2038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1982 y: j2040  <|@  <|@
f <@~|@floating>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2033 
y: j2041 
=== Succesors ===
=== Usages ===
v1973 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2033 y: j2041  <|@  <|@
f <@*|@fixed>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2038 
=== Succesors ===
trueSuccessor: v1972 
falseSuccessor: v1971 
=== Usages ===
=== Predecessor ===
v2046 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2038 #trueSuccessor: v1972 #falseSuccessor: v1971  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4589730970243956735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1976 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1976  <|@  <|@
f <@*|@fixed>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
v1972 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4596767844661723134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2047 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2047  <|@  <|@
f <@~|@floating>@ <|@
tid v2184 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j1982 
=== Succesors ===
=== Usages ===
v2047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2184 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1940 
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2184 value: i1246 stateAfter: - lastLocationAccess: - #next: v1940  <|@  <|@
f <@*|@fixed>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
v2047 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B10" "B31" "B26" "B28" "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1924 v1940 v1964 v1970 v1976 
=== Succesors ===
next: a1604 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1924 v1940 v1964 v1970 v1976 #next: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1718 
=== Succesors ===
next: v903 
=== Usages ===
a900 
=== Predecessor ===
v1925 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1718 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v903 a2103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a900 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
op: Compress
stamp: n! -
=== Inputs ===
value: a1604 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2120 
value: a900 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1753 
=== Usages ===
=== Predecessor ===
a1604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2120 value: a900 stateAfter: - lastLocationAccess: - #next: j1753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1753 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1759 
=== Usages ===
j1755 
=== Predecessor ===
v903 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1759  <|@  <|@
f <@~|@floating>@ <|@
tid i1754 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1755 j1772 j1826 j1875 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1755 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1753 
y: i1754 
=== Succesors ===
=== Usages ===
v2159 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1753 y: i1754  <|@  <|@
f <@~|@floating>@ <|@
tid j1758 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2159 v2163 v2168 v2174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2159 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1755 
index: j1758 
=== Succesors ===
=== Usages ===
v1759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1755 index: j1758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2159 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
j1753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2159 value: i1246 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid a891 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2080 
=== Succesors ===
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2080  <|@  <|@
tid a555 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4f600041
hasIdentity: true
objectId: 1
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?295 ?806 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1859 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1541 
=== Succesors ===
=== Usages ===
v2171 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1541  <|@  <|@
f <@~|@floating>@ <|@
tid v2171 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1859 
index: - 
=== Succesors ===
=== Usages ===
j1863 j1814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1859 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1779 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1793 a1843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j888 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1895 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1888 v2071 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1818 v1867 v1899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 255
stableDimension: 0
stamp: i32 [255] ⇊00000000000000ff ⇈00000000000000ff
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i587 i586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 i207 i630 i746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:307) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Equivalence$1@1531265431
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1531265431]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
v1759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B116" "B104" "B102" "B112" 
    successors "B34" "B127" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4627022591482714271
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v50 
values: i47 i75 i75 i75 i75 i75 
=== Succesors ===
=== Usages ===
?52 v54 i61 ?160 ?295 i75 ?210 ?647 ?309 ?316 ?670 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v50 values: i47 i75 i75 i75 i75 i75  <|@  <|@
f <@~|@floating>@ <|@
tid a574 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v50 
values: a891 a574 a1029 a1029 a1029 a1029 
=== Succesors ===
=== Usages ===
v2122 a574 v2121 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v50 values: a891 a574 a1029 a1029 a1029 a1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 22.48645287958118
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v49 
=== Succesors ===
next: i2082 
=== Usages ===
i51 v57 v76 v78 v546 v547 v548 a574 v1498 v1493 v1488 v1483 v1478 v1385 v1390 v1395 v1400 v1473 v1468 v1453 v1447 v1429 v1441 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v49 #next: i2082  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2082 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2115 
=== Succesors ===
next: v59 
=== Usages ===
v54 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2115 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 79]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i2082 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i2082  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 79]
stamp: void
trueSuccessorProbability: 0.9555287796899239
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
i2082 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v55 #falseSuccessor: v57  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B125" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626741116506003615
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2083 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2083  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 74
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 552
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i51 - 
=== Succesors ===
=== Usages ===
v1361 v1620 i2083 i2090 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i51 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2121 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a574 
index: - 
=== Succesors ===
=== Usages ===
i2083 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2083 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?52 
guard: - 
address: v2121 
=== Succesors ===
next: v1386 
=== Usages ===
v910 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?52 guard: - address: v2121 #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i51 
y: i21 
=== Succesors ===
=== Usages ===
v2122 i276 v910 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i51 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i2083 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i2083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v910 
=== Succesors ===
trueSuccessor: v1382 
falseSuccessor: v1385 
=== Usages ===
=== Predecessor ===
i2083 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v910 #trueSuccessor: v1382 #falseSuccessor: v1385  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626741116506003615
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2084 
=== Usages ===
a2084 
=== Predecessor ===
v1386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2084  <|@  <|@
f <@~|@floating>@ <|@
tid v2122 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a574 
index: i61 
=== Succesors ===
=== Usages ===
a2084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2084 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1382 
address: v2122 
=== Succesors ===
next: v67 
=== Usages ===
a918 v924 v2123 v2133 v2135 v2137 v2161 a2196 
=== Predecessor ===
v1382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1382 address: v2122 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2084 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2084  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: i32
=== Inputs ===
x: i51 
y: i21 
=== Succesors ===
=== Usages ===
i51 i51 i51 i249 i51 i51 i263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:554) [bci: 91]
stamp: void
trueSuccessorProbability: 0.0015533767669660724
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v65 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
a2084 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v65 #falseSuccessor: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4584970889783042265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1361 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?52 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?52 #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2085 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2085  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2085 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2117 
=== Succesors ===
next: v170 
=== Usages ===
v2160 v1248 v1250 v1251 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2117 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2085 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2085  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 99
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 555
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i51 - 
=== Succesors ===
=== Usages ===
?210 ?311 ?297 ?670 ?647 ?318 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i51 -  <|@  <|@
tid ?210 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 561
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 i47 - - - - 
=== Succesors ===
=== Usages ===
?370 ?1590 ?200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 i47 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.6705794984965615
=== Inputs ===
condition: v1248 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
a2085 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1248 #trueSuccessor: v168 #falseSuccessor: v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4624288212235113577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4619642846700088551
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2085 
y: a1249 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2085 y: a1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8648398191938089
=== Inputs ===
condition: v1250 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1250 #trueSuccessor: v178 #falseSuccessor: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618567400352106519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v178 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626462860253486138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v174 v176 
=== Succesors ===
next: i194 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v174 v176 #next: i194  <|@  <|@
f <@~|@floating>@ <|@
tid a2196 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2084 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2084  <|@  <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@16388d66
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2196 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2196  <|@  <|@
tid ?1590 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - - 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1027 
stateDuring: ?1590 
=== Succesors ===
next: v198 
=== Usages ===
i589 i199 i586 
=== Predecessor ===
v175 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1027 stateDuring: ?1590 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i586 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i194 
y: i201 
=== Succesors ===
=== Usages ===
i589 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i194 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i194 
y: i586 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i194 y: i586  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
i194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2085 
y: a1244 
=== Succesors ===
=== Usages ===
v1391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2085 y: a1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1251 
=== Succesors ===
trueSuccessor: v1390 
falseSuccessor: v1387 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1251 #trueSuccessor: v1390 #falseSuccessor: v1387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1623 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1623  <|@  <|@
f <@~|@floating>@ <|@
tid i1624 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235795
stableDimension: 0
stamp: i32 [-235795] ⇊00000000fffc66ed ⇈00000000fffc66ed
stampKind: i32
value: int[-235795|0xfffffffffffc66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
v1390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B124" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2086 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2086  <|@  <|@
f <@~|@floating>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2085 
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2085  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2160 
=== Succesors ===
next: v1396 
=== Usages ===
v1886 
=== Predecessor ===
v1387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2160 #next: v1396  <|@  <|@
f <@~|@floating>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2086 
y: v1885 
=== Succesors ===
=== Usages ===
v1396 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2086 y: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1886 
=== Succesors ===
trueSuccessor: v1392 
falseSuccessor: v1395 
=== Usages ===
=== Predecessor ===
v2086 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1886 #trueSuccessor: v1392 #falseSuccessor: v1395  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B123" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2087 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2087  <|@  <|@
f <@~|@floating>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2084 
=== Succesors ===
=== Usages ===
v2087 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2087 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2161 
=== Succesors ===
next: v2088 
=== Usages ===
v2147 
=== Predecessor ===
v1392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2161 #next: v2088  <|@  <|@
f <@~|@floating>@ <|@
tid v2147 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2087 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2147 
=== Succesors ===
next: v2066 
=== Usages ===
v1526 
=== Predecessor ===
v2087 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2147 #next: v2066  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2088 
y: v1518 
=== Succesors ===
=== Usages ===
v2066 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2088 y: v1518  <|@  <|@
f <@*|@fixed>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1526 
=== Succesors ===
trueSuccessor: v2065 
falseSuccessor: v1400 
=== Usages ===
=== Predecessor ===
v2088 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1526 #trueSuccessor: v2065 #falseSuccessor: v1400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2089 
=== Usages ===
=== Predecessor ===
v2066 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2089  <|@  <|@
f <@~|@floating>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2084 
=== Succesors ===
=== Usages ===
a2089 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2089 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.nodeClass
nodeSourcePosition: at org.graalvm.compiler.graph.Node.getNodeClass(Node.java:717) [bci: 1]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeClass;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2123 
=== Succesors ===
next: i2090 
=== Usages ===
?1594 v2126 v2124 v2125 ?1597 ?526 ?1595 ?1591 ?384 ?1593 ?1592 ?1596 
=== Predecessor ===
v2065 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2123 #next: i2090  <|@  <|@
f <@~|@floating>@ <|@
tid v2124 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2089 
=== Succesors ===
=== Usages ===
i2090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2090 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeClass.canGVN
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 3]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: ?52 
guard: - 
address: v2124 
=== Succesors ===
next: v378 
=== Usages ===
i935 
=== Predecessor ===
a2089 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?52 guard: - address: v2124 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid i935 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 3]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2090 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2090  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i935 
y: i47 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i935 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v377 
=== Usages ===
=== Predecessor ===
i2090 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v376 #falseSuccessor: v377  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:610) [bci: 354]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:569) [bci: 9]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2091 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2091  <|@  <|@
f <@~|@floating>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2089 
=== Succesors ===
=== Usages ===
i2091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2091 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeClass.startGVNNumber
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:569) [bci: 10]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2125 
=== Succesors ===
next: v380 
=== Usages ===
i382 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2125 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2089 
=== Succesors ===
=== Usages ===
a2092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2089  <|@  <|@
f <@~|@floating>@ <|@
tid a918 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2084 
=== Succesors ===
=== Usages ===
?1592 ?1595 v1004 v1010 ?526 ?384 ?1591 ?1593 ?1594 v1007 v995 ?1597 v998 ?1596 v1001 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2084  <|@  <|@
tid ?370 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - - 
=== Succesors ===
=== Usages ===
?534 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - -  <|@  <|@
tid ?534 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Graph$1.hashCode(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Graph.java
sourceLine: 150
stackSize: 0
=== Inputs ===
outerFrameState: ?370 
values: - - 
=== Succesors ===
=== Usages ===
?384 ?1592 ?526 ?1591 ?1597 ?1596 ?1595 ?1594 ?1593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?370 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
i2091 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B79" 
    successors "B50" "B85" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4606778790329132676
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i382 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v381 
values: i2091 i528 
=== Succesors ===
=== Usages ===
?384 i590 i524 i420 ?1591 j430 i439 i439 ?1597 i454 ?1596 i466 ?1595 ?1594 i492 ?1593 i503 ?1592 i514 i587 i199 j2076 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v381 values: i2091 i528  <|@  <|@
f <@~|@floating>@ <|@
tid i383 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v381 
values: i47 i529 
=== Succesors ===
=== Usages ===
?384 v391 v2131 ?1591 v2132 ?526 v2134 v995 ?1597 v998 ?1596 v1001 ?1595 v1004 ?1594 v1007 ?1593 v1010 ?1592 i529 v2136 v959 v982 v2074 v2075 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v381 values: i47 i529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v380 
=== Succesors ===
next: a2092 
=== Usages ===
i382 i383 v393 v530 v1452 v1446 v1440 v1428 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v380 #next: a2092  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2092 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2126 
=== Succesors ===
next: a2093 
=== Usages ===
a941 v2129 v2127 
=== Predecessor ===
v381 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2126 #next: a2093  <|@  <|@
tid ?384 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 570
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
v1654 a2093 i2094 i2096 v2098 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2092 
=== Succesors ===
=== Usages ===
a2093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2092  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.offsets
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: n# [J
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2127 
=== Succesors ===
next: i2094 
=== Usages ===
a945 v2128 a2194 a2195 
=== Predecessor ===
a2092 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2127 #next: i2094  <|@  <|@
f <@~|@floating>@ <|@
tid v2128 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2093 
=== Succesors ===
=== Usages ===
i2094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2093  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2094 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 4]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2128 
=== Succesors ===
next: v396 
=== Usages ===
v391 v982 v2074 v2075 
=== Predecessor ===
a2093 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2128 #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 24]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2094 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i383 y: i2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 24]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v391 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
i2094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v391 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B82" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 27]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2095 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid v2129 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2092 
=== Succesors ===
=== Usages ===
a2095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2092  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.types
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2129 
=== Succesors ===
next: i2096 
=== Usages ===
a953 v2130 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2129 #next: i2096  <|@  <|@
f <@~|@floating>@ <|@
tid v2130 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2095 
=== Succesors ===
=== Usages ===
i2096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2095  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2096 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2130 
=== Succesors ===
next: v1430 
=== Usages ===
v959 
=== Predecessor ===
a2095 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2130 #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2096 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v959 
=== Succesors ===
trueSuccessor: v1425 
falseSuccessor: v1428 
=== Usages ===
=== Predecessor ===
i2096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v959 #trueSuccessor: v1425 #falseSuccessor: v1428  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B77" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2097 
=== Usages ===
a2097 
=== Predecessor ===
v1430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2097  <|@  <|@
f <@~|@floating>@ <|@
tid a953 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [Ljava/lang/Class;
=== Inputs ===
value: a2095 
=== Succesors ===
=== Usages ===
v2131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a953 
index: i383 
=== Succesors ===
=== Usages ===
a2097 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a953 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2097 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: v1425 
address: v2131 
=== Succesors ===
next: v2098 
=== Usages ===
v2148 v1270 v1256 v1258 v1260 v1262 v1264 v1266 v1268 
=== Predecessor ===
v1425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1425 address: v2131 #next: v2098  <|@  <|@
f <@~|@floating>@ <|@
tid v2148 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2097 
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class._klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:89) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 39]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: Klass*
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2148 
=== Succesors ===
next: v410 
=== Usages ===
v407 
=== Predecessor ===
a2097 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2148 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:90) [bci: 6]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 39]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: v2098 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: v2098  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 42]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v407 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v2098 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v407 #trueSuccessor: v408 #falseSuccessor: v409  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B57" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 45]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid a1255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:int
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:int]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1255 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1255  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1256 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1256 #trueSuccessor: v413 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 53]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1442 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1442  <|@  <|@
f <@~|@floating>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2094 
=== Succesors ===
=== Usages ===
v1442 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2074 
=== Succesors ===
trueSuccessor: v1437 
falseSuccessor: v1440 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2074 #trueSuccessor: v1437 #falseSuccessor: v1440  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2099 
=== Usages ===
j2099 
=== Predecessor ===
v1442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2099  <|@  <|@
f <@~|@floating>@ <|@
tid a2195 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2093 
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2093  <|@  <|@
f <@~|@floating>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2195 
index: i383 
=== Succesors ===
=== Usages ===
j2099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2195 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1437 
address: v2132 
=== Succesors ===
next: i980 
=== Usages ===
v2133 
=== Predecessor ===
v1437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1437 address: v2132 #next: i980  <|@  <|@
f <@~|@floating>@ <|@
tid v2133 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2099 
index: a2084 
=== Succesors ===
=== Usages ===
i980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2099 index: a2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i980 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2133 
=== Succesors ===
next: v436 
=== Usages ===
i420 
=== Predecessor ===
j2099 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2133 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:575) [bci: 67]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i980 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i980  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i980 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1441 
=== Usages ===
=== Predecessor ===
v1442 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1663 
=== Usages ===
=== Predecessor ===
v1440 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1663  <|@  <|@
f <@~|@floating>@ <|@
tid i1664 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248603
stableDimension: 0
stamp: i32 [-248603] ⇊00000000fffc34e5 ⇈00000000fffc34e5
stampKind: i32
value: int[-248603|0xfffffffffffc34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
v1441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 72]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid a1257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:long
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:long]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1257 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1257  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 97]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j432 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1258 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1258 #trueSuccessor: v423 #falseSuccessor: v424  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 80]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1448 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1448  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2094 
=== Succesors ===
=== Usages ===
v1448 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v982 
=== Succesors ===
trueSuccessor: v1443 
falseSuccessor: v1446 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v982 #trueSuccessor: v1443 #falseSuccessor: v1446  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2100 
=== Usages ===
j2100 
=== Predecessor ===
v1448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2100  <|@  <|@
f <@~|@floating>@ <|@
tid a2194 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2093 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2093  <|@  <|@
f <@~|@floating>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2194 
index: i383 
=== Succesors ===
=== Usages ===
j2100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2194 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1443 
address: v2134 
=== Succesors ===
next: j991 
=== Usages ===
v2135 
=== Predecessor ===
v1443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1443 address: v2134 #next: j991  <|@  <|@
f <@~|@floating>@ <|@
tid v2135 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2100 
index: a2084 
=== Succesors ===
=== Usages ===
j991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2100 index: a2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j991 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getLong(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2135 
=== Succesors ===
next: v438 
=== Usages ===
j433 j432 
=== Predecessor ===
j2100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2135 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 92]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i382 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i382  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 99]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j991 
y: i431 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j991 y: i431  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 100]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j432 
y: j991 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j432 y: j991  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 101]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j430 
y: j433 
=== Succesors ===
=== Usages ===
i435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j430 y: j433  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 102]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32
=== Inputs ===
value: j434 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j434  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
j991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v1448 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1447  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1665 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1665  <|@  <|@
f <@~|@floating>@ <|@
tid i1666 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251675
stableDimension: 0
stamp: i32 [-251675] ⇊00000000fffc28e5 ⇈00000000fffc28e5
stampKind: i32
value: int[-251675|0xfffffffffffc28e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
v1447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" "B66" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 107]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid a1259 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:boolean
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:boolean]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1259 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1259  <|@  <|@
f <@~|@floating>@ <|@
tid a941 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2092 
=== Succesors ===
=== Usages ===
v1010 v1007 v1004 v995 v998 v1001 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2092  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1260 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v443 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1260 #trueSuccessor: v442 #falseSuccessor: v443  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4584260792192280196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 115]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i447 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i447  <|@  <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@bf10f8e
stamp: void
targetMethod: HotSpotMethod<Fields.getBoolean(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i447 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1592 <|@
d <@d|@=== Debug Properties ===
bci: 121
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 580
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i447 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i447 <|@
d <@d|@=== Debug Properties ===
bci: 121
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Fields.getBoolean
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v995 
stateDuring: ?1592 
=== Succesors ===
next: v452 
=== Usages ===
v449 
=== Predecessor ===
v442 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v995 stateDuring: ?1592 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:581) [bci: 128]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i447 
y: i47 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i447 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:581) [bci: 128]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
i447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v450 #falseSuccessor: v451  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 134]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 7
stableDimension: 0
stamp: i32 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i453 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i453  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 134]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4584260792192280196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 137]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid a1261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:float
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:float]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1261 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1261  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v459 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v458 #falseSuccessor: v459  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 145]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: f463 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: f463  <|@  <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: f32
signature: [Ljdk.vm.ci.meta.JavaType;@af269de
stamp: void
targetMethod: HotSpotMethod<Fields.getFloat(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
f463 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1593 <|@
d <@d|@=== Debug Properties ===
bci: 151
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 585
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
f463 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f463 <|@
d <@d|@=== Debug Properties ===
bci: 151
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: f32
targetMethod: Direct#Fields.getFloat
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v998 
stateDuring: ?1593 
=== Succesors ===
next: v467 
=== Usages ===
i465 
=== Predecessor ===
v458 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v998 stateDuring: ?1593 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Float.floatToRawIntBits(float) [bci: -1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:586) [bci: 159]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
value: f463 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: f463  <|@  <|@
f <@~|@floating>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:586) [bci: 162]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i465 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i465  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
f463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 167]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid a1263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:double
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:double]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1263 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1264 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1264 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4575253592937539204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 175]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: d475 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: d475  <|@  <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@45df02c9
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
d475 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1594 <|@
d <@d|@=== Debug Properties ===
bci: 181
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 588
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
d475 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d475 <|@
d <@d|@=== Debug Properties ===
bci: 181
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1001 
stateDuring: ?1594 
=== Succesors ===
next: v482 
=== Usages ===
j477 
=== Predecessor ===
v470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1001 stateDuring: ?1594 #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid j477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:589) [bci: 188]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
value: d475 
=== Succesors ===
=== Usages ===
j478 j479 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d475  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 201]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j477 
y: i431 
=== Succesors ===
=== Usages ===
j479 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j477 y: i431  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 202]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j477 
y: j478 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j477 y: j478  <|@  <|@
f <@~|@floating>@ <|@
tid j2076 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 92]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i382 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i382  <|@  <|@
f <@~|@floating>@ <|@
tid j480 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 203]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j479 
y: j2076 
=== Succesors ===
=== Usages ===
i481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j479 y: j2076  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 204]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32
=== Inputs ===
value: j480 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j480  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
d475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4575253592937539204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 209]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid a1265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:short
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:short]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1265 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1265  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1266 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1266 #trueSuccessor: v485 #falseSuccessor: v486  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4570749993310168708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 217]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i490 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i490  <|@  <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@17dee4a9
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i490 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1595 <|@
d <@d|@=== Debug Properties ===
bci: 223
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 592
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i490 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i490 <|@
d <@d|@=== Debug Properties ===
bci: 223
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1004 
stateDuring: ?1595 
=== Succesors ===
next: v493 
=== Usages ===
i492 
=== Predecessor ===
v485 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1004 stateDuring: ?1595 #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:593) [bci: 231]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i490 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i490  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4570749993310168708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 236]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid a1267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:char
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:char]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1267 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v497 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v496 #falseSuccessor: v497  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4566246393682798212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 244]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i501 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i501  <|@  <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@145014a3
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1596 <|@
d <@d|@=== Debug Properties ===
bci: 250
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 595
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i501 <|@
d <@d|@=== Debug Properties ===
bci: 250
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1007 
stateDuring: ?1596 
=== Succesors ===
next: v504 
=== Usages ===
i503 
=== Predecessor ===
v496 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1007 stateDuring: ?1596 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:596) [bci: 258]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i501 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i501  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4566246393682798212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 263]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid a1269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:byte
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:byte]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1269 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1269  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v508 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v507 #falseSuccessor: v508  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4561742794055427716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 271]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i512 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i512  <|@  <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@d75336e
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i512 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1597 <|@
d <@d|@=== Debug Properties ===
bci: 277
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 598
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i512 <|@
d <@d|@=== Debug Properties ===
bci: 277
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1010 
stateDuring: ?1597 
=== Succesors ===
next: v515 
=== Usages ===
i514 
=== Predecessor ===
v507 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1010 stateDuring: ?1597 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid i514 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:599) [bci: 285]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i512 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i512  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4561742794055427716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:601) [bci: 290]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B78" "B80" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 324]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid v2075 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2094 
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2075 
=== Succesors ===
trueSuccessor: v1449 
falseSuccessor: v1452 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2075 #trueSuccessor: v1449 #falseSuccessor: v1452  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2101 
=== Usages ===
j2101 
=== Predecessor ===
v1454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2101  <|@  <|@
f <@~|@floating>@ <|@
tid a945 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2093 
=== Succesors ===
=== Usages ===
v2136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2093  <|@  <|@
f <@~|@floating>@ <|@
tid v2136 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a945 
index: i383 
=== Succesors ===
=== Usages ===
j2101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a945 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1449 
address: v2136 
=== Succesors ===
next: a1021 
=== Usages ===
v2137 
=== Predecessor ===
v1449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1449 address: v2136 #next: a1021  <|@  <|@
f <@~|@floating>@ <|@
tid v2137 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2101 
index: a2084 
=== Succesors ===
=== Usages ===
a1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2101 index: a2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2137 
=== Succesors ===
next: i522 
=== Usages ===
a1022 
=== Predecessor ===
j2101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2137 #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid a1022 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1021 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1021  <|@  <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3001a143
stamp: void
targetMethod: HotSpotMethod<NodeClass.deepHashCode0(Object)>
=== Inputs ===
arguments: a1022 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1022  <|@  <|@
tid ?1591 <|@
d <@d|@=== Debug Properties ===
bci: 338
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 605
stackSize: 1
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 - i383 - - - - - i382 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 - i383 - - - - - i382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
bci: 338
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32
targetMethod: Direct#NodeClass.deepHashCode0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1023 
stateDuring: ?1591 
=== Succesors ===
next: v525 
=== Usages ===
i524 
=== Predecessor ===
a1021 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1023 stateDuring: ?1591 #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 341]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i522 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i522  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B54" "B59" "B64" "B67" "B69" "B71" "B73" "B75" "B76" "B78" "B65" 
    successors "B49" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v437 
values: i420 i435 i382 i466 i481 i492 i503 i514 i382 i524 i454 
=== Succesors ===
=== Usages ===
?526 i528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v437 values: i420 i435 i382 i466 i481 i492 i503 i514 i382 i524 i454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v436 v438 v455 v467 v482 v493 v504 v515 v516 v525 v533 
=== Succesors ===
next: v1366 
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v436 v438 v455 v467 v482 v493 v504 v515 v516 v525 v533 #next: v1366  <|@  <|@
tid ?526 <|@
d <@d|@=== Debug Properties ===
bci: 343
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 607
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i439 i383 - - - - - 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i439 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?526 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?526 #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 344]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 13
stableDimension: 0
stamp: i32 [13] ⇊000000000000000d ⇈000000000000000d
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$146/798809698@44222a75
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 346]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i439 
y: i527 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i439 y: i527  <|@  <|@
f <@~|@floating>@ <|@
tid i529 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 348]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i383 
y: i21 
=== Succesors ===
=== Usages ===
i383 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i383 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
loopBegin: v381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1453 
=== Usages ===
=== Predecessor ===
v1454 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1667 
=== Usages ===
=== Predecessor ===
v1452 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid i1668 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -259355
stableDimension: 0
stamp: i32 [-259355] ⇊00000000fffc0ae5 ⇈00000000fffc0ae5
stampKind: i32
value: int[-259355|0xfffffffffffc0ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
v1453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1429 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid i1660 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245787
stableDimension: 0
stamp: i32 [-245787] ⇊00000000fffc3fe5 ⇈00000000fffc3fe5
stampKind: i32
value: int[-245787|0xfffffffffffc3fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
v1429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B56" "B61" "B81" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1652 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-259355 - -241163] ⇊00000000fffc00e5 ⇈00000000fffc7ff5
valueDescription: i32
=== Inputs ===
merge: v1649 
values: i1660 i1664 i1666 i1668 
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1649 values: i1660 i1664 i1666 i1668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1659 v1663 v1665 v1667 
=== Succesors ===
next: v1654 
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1659 v1663 v1665 v1667 #next: v1654  <|@  <|@
f <@*|@fixed>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?384 
actionAndReason: i1652 
speculation: a1609 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1649 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?384 actionAndReason: i1652 speculation: a1609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:610) [bci: 354]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i382 
y: i201 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i382 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i587 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i382 y: i587  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B47" "B41" "B85" 
    successors "B87" "B121" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v197 
values: i47 i194 i382 
=== Succesors ===
=== Usages ===
?200 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v197 values: i47 i194 i382  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v197 
values: i47 i589 i590 
=== Succesors ===
=== Usages ===
i629 i208 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v197 values: i47 i589 i590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v198 v549 
=== Succesors ===
next: a2102 
=== Usages ===
i199 i591 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v198 v549 #next: a2102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2118 
=== Succesors ===
next: v2189 
=== Usages ===
a1029 v2189 v2138 v2162 v2193 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2118 #next: v2189  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - i199 
=== Succesors ===
=== Usages ===
v1636 v2189 v2190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
object: a2102 
=== Succesors ===
next: a2103 
=== Usages ===
=== Predecessor ===
a2102 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?200 object: a2102 #next: a2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2103 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v2120 
=== Succesors ===
next: v2190 
=== Usages ===
v2190 v2142 v2139 v2140 v2141 
=== Predecessor ===
v2189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2120 #next: v2190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
object: a2103 
=== Succesors ===
next: i2104 
=== Usages ===
=== Predecessor ===
a2103 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?200 object: a2103 #next: i2104  <|@  <|@
f <@~|@floating>@ <|@
tid v2138 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2102 
=== Succesors ===
=== Usages ===
i2104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2138 
=== Succesors ===
next: v1469 
=== Usages ===
v338 v255 v1221 
=== Predecessor ===
v2190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2138 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i61 
y: i21 
=== Succesors ===
=== Usages ===
v2146 v1221 v2144 v2145 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i61 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i276 
y: i2104 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i276 y: i2104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1221 
=== Succesors ===
trueSuccessor: v1465 
falseSuccessor: v1468 
=== Usages ===
=== Predecessor ===
i2104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1221 #trueSuccessor: v1465 #falseSuccessor: v1468  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2105 
=== Usages ===
v1242 v1219 v1200 a2105 
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2105  <|@  <|@
f <@~|@floating>@ <|@
tid a1029 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2102 
=== Succesors ===
=== Usages ===
v2145 a574 a574 a574 a574 v2146 v2144 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2102  <|@  <|@
f <@~|@floating>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
a2105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2105 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2145 
=== Succesors ===
next: v1545 
=== Usages ===
v2175 v1586 v1824 v2143 v2192 
=== Predecessor ===
v1465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1465 address: v2145 #next: v1545  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2105 
=== Succesors ===
=== Usages ===
v1545 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2105  <|@  <|@
f <@*|@fixed>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1586 
=== Succesors ===
trueSuccessor: v1544 
falseSuccessor: v1543 
=== Usages ===
=== Predecessor ===
a2105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1586 #trueSuccessor: v1544 #falseSuccessor: v1543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612013222126699607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1553 
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1553  <|@  <|@
f <@*|@fixed>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
v1544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626127871424646371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2106  <|@  <|@
f <@~|@floating>@ <|@
tid v2175 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2105 
=== Succesors ===
=== Usages ===
v2106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2175 
=== Succesors ===
next: v1556 
=== Usages ===
v1899 
=== Predecessor ===
v1543 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2175 #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2106 
y: v1892 
=== Succesors ===
=== Usages ===
i1587 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2106 y: v1892  <|@  <|@
f <@~|@floating>@ <|@
tid i1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1899 
trueValue: i21 
falseValue: i47 
=== Succesors ===
=== Usages ===
i1555 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1899 trueValue: i21 falseValue: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
v2106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" "B89" 
    successors "B91" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1552 
values: i47 i1587 
=== Succesors ===
=== Usages ===
v1588 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1552 values: i47 i1587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1553 v1556 
=== Succesors ===
next: i2107 
=== Usages ===
i1555 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1553 v1556 #next: i2107  <|@  <|@
f <@~|@floating>@ <|@
tid v2140 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2103 
=== Succesors ===
=== Usages ===
i2107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2140 
=== Succesors ===
next: v341 
=== Usages ===
v1163 v1154 i351 v1053 i630 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2140 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1555 
y: i47 
=== Succesors ===
=== Usages ===
v149 v125 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1555 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2104 
y: i213 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2104 y: i213  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 8
stamp: i8
=== Inputs ===
value: i75 
=== Succesors ===
=== Usages ===
v1161 v1061 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.816586191655617
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v340 
=== Usages ===
=== Predecessor ===
i2107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v339 #falseSuccessor: v340  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625624176796094775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i2107 
y: i102 
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2107 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i591 
y: i630 
=== Succesors ===
=== Usages ===
v2139 v1053 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i591 y: i630  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i629 
y: i2107 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i629 y: i2107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1053 
=== Succesors ===
trueSuccessor: v1470 
falseSuccessor: v1473 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1053 #trueSuccessor: v1470 #falseSuccessor: v1473  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625624176796094775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2108 
=== Usages ===
i2108 v1061 
=== Predecessor ===
v1474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2108  <|@  <|@
f <@~|@floating>@ <|@
tid v2139 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i629 
index: a2103 
=== Succesors ===
=== Usages ===
v1061 i2108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i629 index: a2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1470 
address: v2139 
=== Succesors ===
next: v1061 
=== Usages ===
i1051 i1275 
=== Predecessor ===
v1470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1470 address: v2139 #next: v1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1470 
address: v2139 
value: i249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
i2108 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1470 address: v2139 value: i249 stateAfter: - lastLocationAccess: - #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid i1275 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2108 
=== Succesors ===
=== Usages ===
i746 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2108  <|@  <|@
f <@~|@floating>@ <|@
tid i746 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 254]
=== Inputs ===
x: i1275 
y: i102 
=== Succesors ===
=== Usages ===
i674 i675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1275 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i1051 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i2108 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2108  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
x: i1051 
y: i220 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1051 y: i220  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8688054406151153
=== Inputs ===
condition: v837 
=== Succesors ===
trueSuccessor: v831 
falseSuccessor: v832 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v837 #trueSuccessor: v831 #falseSuccessor: v832  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4624757706266086888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
v831 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612357738866430486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@*|@fixed>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1641 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid i1642 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269851
stableDimension: 0
stamp: i32 [-269851] ⇊00000000fffbe1e5 ⇈00000000fffbe1e5
stampKind: i32
value: int[-269851|0xfffffffffffbe1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
v1473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2104 
y: i27 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2104 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v1475 
falseSuccessor: v1478 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v1475 #falseSuccessor: v1478  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B119" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i2107 
y: i21 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2107 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i351 
y: i102 
=== Succesors ===
=== Usages ===
i208 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i351 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i207 
y: i591 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i207 y: i591  <|@  <|@
f <@~|@floating>@ <|@
tid i257 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i208 
y: i21 
=== Succesors ===
=== Usages ===
v1154 i262 v2142 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i208 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i257 
y: i2107 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i257 y: i2107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1154 
=== Succesors ===
trueSuccessor: v1480 
falseSuccessor: v1483 
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1154 #trueSuccessor: v1480 #falseSuccessor: v1483  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1489 
=== Usages ===
v1161 i2109 
=== Predecessor ===
v1484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i257 
y: i21 
=== Succesors ===
=== Usages ===
v1163 v2141 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i257 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i262 
y: i2107 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i262 y: i2107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1163 
=== Succesors ===
trueSuccessor: v1485 
falseSuccessor: v1488 
=== Usages ===
=== Predecessor ===
v1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1163 #trueSuccessor: v1485 #falseSuccessor: v1488  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2109 
=== Usages ===
v1171 i2110 
=== Predecessor ===
v1489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2109  <|@  <|@
f <@~|@floating>@ <|@
tid v2142 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i257 
index: a2103 
=== Succesors ===
=== Usages ===
v1161 i2109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i257 index: a2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1480 
address: v2142 
=== Succesors ===
next: i2110 
=== Usages ===
i1283 
=== Predecessor ===
v1485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1480 address: v2142 #next: i2110  <|@  <|@
f <@~|@floating>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i262 
index: a2103 
=== Succesors ===
=== Usages ===
i2110 v1171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i262 index: a2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1485 
address: v2141 
=== Succesors ===
next: v1161 
=== Usages ===
i1285 
=== Predecessor ===
i2109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1485 address: v2141 #next: v1161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1480 
address: v2142 
value: i249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
i2110 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1480 address: v2142 value: i249 stateAfter: - lastLocationAccess: - #next: v1171  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i75 
y: i88 
=== Succesors ===
=== Usages ===
i264 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i75 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 8
stamp: i8
=== Inputs ===
value: i263 
=== Succesors ===
=== Usages ===
v1171 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1485 
address: v2141 
value: i264 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v1161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1485 address: v2141 value: i264 stateAfter: - lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i1285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2110 
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2110  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65280] ⇈000000000000ff00
=== Inputs ===
x: i1285 
y: i88 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1285 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i1283 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2109 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2109  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i235 
y: i1283 
=== Succesors ===
=== Usages ===
v104 i103 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i235 y: i1283  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i236 
y: i102 
=== Succesors ===
=== Usages ===
i675 i674 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i236 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i47 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i236 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8688054406151153
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v1171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614880348082334393
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B93" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625939502948082763
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v665 
values: i103 i746 
=== Succesors ===
=== Usages ===
?647 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v665 values: i103 i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v666 v835 
=== Succesors ===
next: v149 
=== Usages ===
i675 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v666 v835 #next: v149  <|@  <|@
tid ?647 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 568
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 - - i675 - - 
=== Succesors ===
=== Usages ===
v1364 v1491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 - - i675 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.9646655098717876
=== Inputs ===
condition: v1588 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1588 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4625754128133143130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?647 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?647 #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604107213623344681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:579) [bci: 143]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2111  <|@  <|@
f <@~|@floating>@ <|@
tid v2162 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2102 
=== Succesors ===
=== Usages ===
v2111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2162 
=== Succesors ===
next: v1494 
=== Usages ===
v1888 
=== Predecessor ===
v147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2162 #next: v1494  <|@  <|@
f <@~|@floating>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2111 
y: v1887 
=== Succesors ===
=== Usages ===
v1494 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2111 y: v1887  <|@  <|@
f <@*|@fixed>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1888 
=== Succesors ===
trueSuccessor: v1490 
falseSuccessor: v1493 
=== Usages ===
=== Predecessor ===
v2111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1888 #trueSuccessor: v1490 #falseSuccessor: v1493  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4604107213623344681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2112 
=== Usages ===
=== Predecessor ===
v1494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2143 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2105 
=== Succesors ===
=== Usages ===
a2112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2143 
=== Succesors ===
next: v1200 
=== Usages ===
?316 v1200 
=== Predecessor ===
v1490 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2143 #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid v2144 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
v1200 j1771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2144 
value: a2112 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1771 
=== Usages ===
=== Predecessor ===
a2112 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2144 value: a2112 stateAfter: - lastLocationAccess: - #next: j1771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2144 
=== Succesors ===
next: v1775 
=== Usages ===
j1772 
=== Predecessor ===
v1200 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2144 #next: v1775  <|@  <|@
f <@~|@floating>@ <|@
tid j1772 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1771 
y: i1754 
=== Succesors ===
=== Usages ===
v2163 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1771 y: i1754  <|@  <|@
f <@~|@floating>@ <|@
tid v2163 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1772 
index: j1758 
=== Succesors ===
=== Usages ===
v1775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1772 index: j1758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2163 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1363 
=== Usages ===
=== Predecessor ===
j1771 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2163 value: i1246 stateAfter: - lastLocationAccess: - #next: v1363  <|@  <|@
tid ?318 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 580
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?318 
values: a1 i51 a2112 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?318 values: a1 i51 a2112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1494 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1491  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1189
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@573535694]
stamp: void
=== Inputs ===
stateBefore: ?647 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602824943836388355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v669  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B94" 
    successors "B108" "B117" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4613520169939208471
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v668 
values: i103 i746 
=== Succesors ===
=== Usages ===
v1871 v1822 ?670 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v668 values: i103 i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v669 v836 
=== Succesors ===
next: v2113 
=== Usages ===
i674 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v669 v836 #next: v2113  <|@  <|@
f <@~|@floating>@ <|@
tid v2193 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2102 
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2193 
=== Succesors ===
next: v1499 
=== Usages ===
v2071 
=== Predecessor ===
v668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2193 #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2113 
y: v1887 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2113 y: v1887  <|@  <|@
tid ?670 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 568
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 - - i674 - - 
=== Succesors ===
=== Usages ===
a1793 a1843 v1496 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 - - i674 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2071 
=== Succesors ===
trueSuccessor: v1495 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
v2113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2071 #trueSuccessor: v1495 #falseSuccessor: v1498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4613520169939208471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j1781 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1781 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1797 
=== Usages ===
v2170 v2169 
=== Predecessor ===
v1495 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1797  <|@  <|@
f <@~|@floating>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1781 
index: - 
=== Succesors ===
=== Usages ===
v1799 v1849 j1797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1781 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1797 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2169 
=== Succesors ===
next: j1798 
=== Usages ===
v2179 j1803 j1853 j1895 v2191 
=== Predecessor ===
j1781 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2169 #next: j1798  <|@  <|@
f <@~|@floating>@ <|@
tid v2170 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1781 
index: - 
=== Succesors ===
=== Usages ===
j1798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1781 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2170 
=== Succesors ===
next: v125 
=== Usages ===
v1837 
=== Predecessor ===
j1797 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2170 #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid j1895 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1797 
y: j888 
=== Succesors ===
=== Usages ===
v1837 v1849 v1799 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1797 y: j888  <|@  <|@
f <@~|@floating>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1798 
y: j1895 
=== Succesors ===
=== Usages ===
v1840 v1789 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1798 y: j1895  <|@  <|@
f <@~|@floating>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
v1242 v1219 j1874 j1825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.7011387517716632
=== Inputs ===
condition: v1588 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
j1798 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1588 #trueSuccessor: v124 #falseSuccessor: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4611566105018190629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 113]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1789 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1789  <|@  <|@
f <@*|@fixed>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1837 
=== Succesors ===
trueSuccessor: v1787 
falseSuccessor: v1788 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1837 #trueSuccessor: v1787 #falseSuccessor: v1788  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581345084349571920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1793 
=== Usages ===
=== Predecessor ===
v1789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1793 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?670 
arguments: v1779 i37 i21 
=== Succesors ===
next: j1794 
=== Usages ===
j1794 
=== Predecessor ===
v1787 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?670 arguments: v1779 i37 i21 #next: j1794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1794 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1793 
=== Succesors ===
next: v1804 
=== Usages ===
j1803 
=== Predecessor ===
a1793 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1793 #next: v1804  <|@  <|@
f <@*|@fixed>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1801 
=== Predecessor ===
j1794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4611477232159735192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1799 
=== Usages ===
=== Predecessor ===
v1789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2169 
value: j1895 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1796 
=== Usages ===
=== Predecessor ===
v1788 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2169 value: j1895 stateAfter: - lastLocationAccess: - #next: v1796  <|@  <|@
f <@~|@floating>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: - 
=== Succesors ===
=== Usages ===
v1796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2191 
=== Succesors ===
next: v1802 
=== Usages ===
=== Predecessor ===
v1799 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2191 #next: v1802  <|@  <|@
f <@*|@fixed>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1801 
=== Predecessor ===
v1796 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B110" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4611566105018190629
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1803 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1801 
values: j1797 j1794 
=== Succesors ===
=== Usages ===
v2167 v2166 a1572 v2177 v2178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1801 values: j1797 j1794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1802 v1804 
=== Succesors ===
next: a1572 
=== Usages ===
j1803 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1802 v1804 #next: a1572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1572 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1803 
=== Succesors ===
next: j1814 
=== Usages ===
a1578 
=== Predecessor ===
v1801 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1803 #next: j1814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1814 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2171 
=== Succesors ===
next: v1815 
=== Usages ===
v1815 
=== Predecessor ===
a1572 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2171 #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid v2166 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1803 
index: - 
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1803 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2166 
value: j1814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1818 
=== Usages ===
=== Predecessor ===
j1814 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2166 value: j1814 stateAfter: - lastLocationAccess: - #next: v1818  <|@  <|@
f <@~|@floating>@ <|@
tid v2167 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1803 
index: - 
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1803 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2167 
value: v1892 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1822 
=== Usages ===
=== Predecessor ===
v1815 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2167 value: v1892 stateAfter: - lastLocationAccess: - #next: v1822  <|@  <|@
f <@~|@floating>@ <|@
tid v2177 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1803 
index: - 
=== Succesors ===
=== Usages ===
v1822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1803 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2177 
value: i674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1824 
=== Usages ===
=== Predecessor ===
v1818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2177 value: i674 stateAfter: - lastLocationAccess: - #next: v1824  <|@  <|@
f <@~|@floating>@ <|@
tid v2178 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1803 
index: - 
=== Succesors ===
=== Usages ===
v1824 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1803 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2178 
value: a2105 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1578 
=== Usages ===
=== Predecessor ===
v1822 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2178 value: a2105 stateAfter: - lastLocationAccess: - #next: a1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1578 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1572 
=== Succesors ===
next: v1579 
=== Usages ===
a1241 ?806 
=== Predecessor ===
v1824 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1572 #next: v1579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
a1578 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1242  <|@  <|@
f <@~|@floating>@ <|@
tid a1241 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Compress
stamp: n -
=== Inputs ===
value: a1578 
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2146 
value: a1241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1825 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2146 value: a1241 stateAfter: - lastLocationAccess: - #next: j1825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2146 
=== Succesors ===
next: v1829 
=== Usages ===
j1826 
=== Predecessor ===
v1242 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2146 #next: v1829  <|@  <|@
f <@~|@floating>@ <|@
tid j1826 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1825 
y: i1754 
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1825 y: i1754  <|@  <|@
f <@~|@floating>@ <|@
tid v2168 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1826 
index: j1758 
=== Succesors ===
=== Usages ===
v1829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1826 index: j1758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2168 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
j1825 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2168 value: i1246 stateAfter: - lastLocationAccess: - #next: v1365  <|@  <|@
tid ?297 <|@
d <@d|@=== Debug Properties ===
bci: 129
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 575
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?295 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid ?806 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a555 
materializedValue: a1578 
=== Succesors ===
=== Usages ===
?295 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a555 materializedValue: a1578  <|@  <|@
tid ?295 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?297 
values: a1 i51 a555 
virtualObjectMappings: ?806 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?297 values: a1 i51 a555 virtualObjectMappings: ?806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?295 
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?295 #next: v548  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605751652410953235
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:572) [bci: 84]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1840 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1837 
=== Succesors ===
trueSuccessor: v1838 
falseSuccessor: v1839 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1837 #trueSuccessor: v1838 #falseSuccessor: v1839  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576002538815086608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1843 
=== Usages ===
=== Predecessor ===
v1840 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1843 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?670 
arguments: v1779 i37 i21 
=== Succesors ===
next: j1844 
=== Usages ===
j1844 
=== Predecessor ===
v1838 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?670 arguments: v1779 i37 i21 #next: j1844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1844 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1843 
=== Succesors ===
next: v1854 
=== Usages ===
j1853 
=== Predecessor ===
a1843 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1843 #next: v1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
j1844 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605675888082296467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1849 
=== Usages ===
=== Predecessor ===
v1840 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2169 
value: j1895 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1846 
=== Usages ===
=== Predecessor ===
v1839 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2169 value: j1895 stateAfter: - lastLocationAccess: - #next: v1846  <|@  <|@
f <@~|@floating>@ <|@
tid v2179 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: - 
=== Succesors ===
=== Usages ===
v1846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2179 
=== Succesors ===
next: v1852 
=== Usages ===
=== Predecessor ===
v1849 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2179 #next: v1852  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1846 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" "B114" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605751652410953235
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1853 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1851 
values: j1797 j1844 
=== Succesors ===
=== Usages ===
v2173 v2172 a1562 v2180 v2181 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1851 values: j1797 j1844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1852 v1854 
=== Succesors ===
next: a1562 
=== Usages ===
j1853 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1852 v1854 #next: a1562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1562 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1853 
=== Succesors ===
next: j1863 
=== Usages ===
a1568 
=== Predecessor ===
v1851 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1853 #next: j1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2171 
=== Succesors ===
next: v1864 
=== Usages ===
v1864 
=== Predecessor ===
a1562 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2171 #next: v1864  <|@  <|@
f <@~|@floating>@ <|@
tid v2172 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1853 
index: - 
=== Succesors ===
=== Usages ===
v1864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2172 
value: j1863 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1867 
=== Usages ===
=== Predecessor ===
j1863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2172 value: j1863 stateAfter: - lastLocationAccess: - #next: v1867  <|@  <|@
f <@~|@floating>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1853 
index: - 
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2173 
value: v1892 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1871 
=== Usages ===
=== Predecessor ===
v1864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2173 value: v1892 stateAfter: - lastLocationAccess: - #next: v1871  <|@  <|@
f <@~|@floating>@ <|@
tid v2180 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1853 
index: - 
=== Succesors ===
=== Usages ===
v1871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2180 
value: i674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2114 
=== Usages ===
=== Predecessor ===
v1867 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2180 value: i674 stateAfter: - lastLocationAccess: - #next: a2114  <|@  <|@
f <@~|@floating>@ <|@
tid v2192 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2105 
=== Succesors ===
=== Usages ===
a2114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 99]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2192 
=== Succesors ===
next: v1873 
=== Usages ===
v1873 
=== Predecessor ===
v1871 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2192 #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1853 
index: - 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2181 
value: a2114 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1568 
=== Usages ===
=== Predecessor ===
a2114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2181 value: a2114 stateAfter: - lastLocationAccess: - #next: a1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1568 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1562 
=== Succesors ===
next: v1569 
=== Usages ===
a1218 ?803 
=== Predecessor ===
v1873 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1562 #next: v1569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
a1568 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid a1218 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Compress
stamp: n -
=== Inputs ===
value: a1568 
=== Succesors ===
=== Usages ===
v1219 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2146 
value: a1218 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1874 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2146 value: a1218 stateAfter: - lastLocationAccess: - #next: j1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2146 
=== Succesors ===
next: v1878 
=== Usages ===
j1875 
=== Predecessor ===
v1219 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2146 #next: v1878  <|@  <|@
f <@~|@floating>@ <|@
tid j1875 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1874 
y: i1754 
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1874 y: i1754  <|@  <|@
f <@~|@floating>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1875 
index: j1758 
=== Succesors ===
=== Usages ===
v1878 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1875 index: j1758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2174 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
j1874 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2174 value: i1246 stateAfter: - lastLocationAccess: - #next: v1362  <|@  <|@
tid ?311 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 573
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?309 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid a551 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4f600041
hasIdentity: true
objectId: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?309 ?803 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?803 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a551 
materializedValue: a1568 
=== Succesors ===
=== Usages ===
?309 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a551 materializedValue: a1568  <|@  <|@
tid ?309 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?311 
values: a1 i51 a551 
virtualObjectMappings: ?803 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?311 values: a1 i51 a551 virtualObjectMappings: ?803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?309 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v1878 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?309 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1496  <|@  <|@
f <@*|@fixed>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1359
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@573535694]
stamp: void
=== Inputs ===
stateBefore: ?670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1489 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid i1648 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288283
stableDimension: 0
stamp: i32 [-288283] ⇊00000000fffb99e5 ⇈00000000fffb99e5
stampKind: i32
value: int[-288283|0xfffffffffffb99e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
v1488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1645 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1645  <|@  <|@
f <@~|@floating>@ <|@
tid i1646 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -285723
stableDimension: 0
stamp: i32 [-285723] ⇊00000000fffba3e5 ⇈00000000fffba3e5
stampKind: i32
value: int[-285723|0xfffffffffffba3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
v1483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid i1644 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274451
stableDimension: 0
stamp: i32 [-274451] ⇊00000000fffbcfed ⇈00000000fffbcfed
stampKind: i32
value: int[-274451|0xfffffffffffbcfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
v1478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1639 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid i1640 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -347419
stableDimension: 0
stamp: i32 [-347419] ⇊00000000fffab2e5 ⇈00000000fffab2e5
stampKind: i32
value: int[-347419|0xfffffffffffab2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
v1468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B95" "B120" "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1634 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-347419 - -263947] ⇊00000000fffa80e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1631 
values: i1640 i1642 i1644 i1646 i1648 
=== Succesors ===
=== Usages ===
v1636 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1631 values: i1640 i1642 i1644 i1646 i1648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1639 v1641 v1643 v1645 v1647 
=== Succesors ===
next: v1636 
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1639 v1641 v1643 v1645 v1647 #next: v1636  <|@  <|@
f <@*|@fixed>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
actionAndReason: i1634 
speculation: a1609 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?200 actionAndReason: i1634 speculation: a1609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1627 
=== Usages ===
=== Predecessor ===
v2066 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1627  <|@  <|@
f <@~|@floating>@ <|@
tid i1628 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -237091
stableDimension: 0
stamp: i32 [-237091] ⇊00000000fffc61dd ⇈00000000fffc61dd
stampKind: i32
value: int[-237091|0xfffffffffffc61dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
v1400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1625 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1625  <|@  <|@
f <@~|@floating>@ <|@
tid i1626 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -236083
stableDimension: 0
stamp: i32 [-236083] ⇊00000000fffc65cd ⇈00000000fffc65cd
stampKind: i32
value: int[-236083|0xfffffffffffc65cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
v1395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1621 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1621  <|@  <|@
f <@~|@floating>@ <|@
tid i1622 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -233243
stableDimension: 0
stamp: i32 [-233243] ⇊00000000fffc70e5 ⇈00000000fffc70e5
stampKind: i32
value: int[-233243|0xfffffffffffc70e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
v1385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B43" "B124" "B123" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1618 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-238347 - -231947] ⇊00000000fffc40c5 ⇈00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1615 
values: i1622 i1624 i1626 i1628 
=== Succesors ===
=== Usages ===
v1620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1615 values: i1622 i1624 i1626 i1628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1621 v1623 v1625 v1627 
=== Succesors ===
next: v1620 
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1621 v1623 v1625 v1627 #next: v1620  <|@  <|@
f <@*|@fixed>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?52 
actionAndReason: i1618 
speculation: a1609 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?52 actionAndReason: i1618 speculation: a1609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:558) [bci: 108]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:558) [bci: 108]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1917 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1917  <|@  <|@
f <@*|@fixed>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1913 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1918 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1913  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1612 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1612  <|@  <|@
f <@~|@floating>@ <|@
tid i1614 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229651
stableDimension: 0
stamp: i32 [-229651] ⇊00000000fffc7eed ⇈00000000fffc7eed
stampKind: i32
value: int[-229651|0xfffffffffffc7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?13 
actionAndReason: i1614 
speculation: a1609 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?13 actionAndReason: i1614 speculation: a1609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609456767561375530
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?13 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?13 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 17]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i12 
y: i21 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i2077 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i2077  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?1590 v2115 v2116 ?309 ?370 ?13 ?670 v2118 ?295 ?647 v2120 ?200 ?52 ?316 ?210 ?160 v2117 j1753 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2115 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2077 i2082 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2077 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2115 
=== Succesors ===
next: i2078 
=== Usages ===
i5 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2115 #next: i2078  <|@  <|@
f <@~|@floating>@ <|@
tid v2116 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2078 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2078 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2116 
=== Succesors ===
next: a2079 
=== Usages ===
i5 
=== Predecessor ===
i2077 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2116 #next: a2079  <|@  <|@
f <@~|@floating>@ <|@
tid v2117 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2079 a2085 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2079 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2117 
=== Succesors ===
next: v10 
=== Usages ===
v1245 v1243 
=== Predecessor ===
i2078 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2117 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: void
=== Inputs ===
value: a2079 
=== Succesors ===
=== Usages ===
i2060 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2079  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:448) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i263 i2060 i235 i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1244 <|@
result NarrowOop[Equivalence$3@1032552445] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: Equivalence$3@1032552445
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1032552445]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1245 v1251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2079 
y: a1244 
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2079 y: a1244  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2059 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1245 
trueValue: i88 
falseValue: i87 
=== Succesors ===
=== Usages ===
i2060 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1245 trueValue: i88 falseValue: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i2060 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1243 
trueValue: i88 
falseValue: i2059 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1243 trueValue: i88 falseValue: i2059  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
stamp: i32
=== Inputs ===
x: i2077 
y: i2078 
=== Succesors ===
=== Usages ===
v14 ?13 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2077 y: i2078  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i75 i61 i529 i351 i276 i257 i262 i1587 a1793 a1843 v1977 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
a2079 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5d8708a4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v5|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v7|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v1|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B130" 
    successors "B2" "B130" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612823192808066965
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i12 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffffc
valueDescription: i32
=== Inputs ===
merge: v11 
values: i2060 i22 
=== Succesors ===
=== Usages ===
?13 v14 i38 i22 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v11 values: i2060 i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.5050068721774985
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v10 
=== Succesors ===
next: v20 
=== Usages ===
i12 v16 v23 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v10 #next: v20  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 533
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i5 i12 - - 
=== Succesors ===
=== Usages ===
v1360 v1612 a1714 i2081 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i5 i12 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i12 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 12]
stamp: void
trueSuccessorProbability: 0.399200501646026
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v16 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.399200501646026 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B129" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:538) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: a2080 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: a2080  <|@  <|@
f <@~|@floating>@ <|@
tid v2118 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2080 a2102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2080 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2118 
=== Succesors ===
next: i2081 
=== Usages ===
a891 v2119 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2118 #next: i2081  <|@  <|@
f <@~|@floating>@ <|@
tid v2119 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2080 
=== Succesors ===
=== Usages ===
i2081 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2081 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?13 
guard: - 
address: v2119 
=== Succesors ===
next: v1376 
=== Usages ===
v28 
=== Predecessor ===
a2080 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?13 guard: - address: v2119 #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 31]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 v255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2081 
y: i27 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2081 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid a1609 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1612 v1654 v1636 v1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1376 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v1373 
falseSuccessor: v1375 
=== Usages ===
=== Predecessor ===
i2081 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v1373 #falseSuccessor: v1375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v8|DWORD v9|DWORD - - 
>@ <|@ instruction CMP [v10|DWORD[.] * 8 + 12] y: 131072 size: DWORD state [bci:10] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1693 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1693 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1737 
=== Usages ===
v2150 v2151 
=== Predecessor ===
v1373 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1737  <|@  <|@
f <@~|@floating>@ <|@
tid v2150 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1693 
index: - 
=== Succesors ===
=== Usages ===
j1737 v1739 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1693 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1737 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2150 
=== Succesors ===
next: j1738 
=== Usages ===
j1697 v2152 v2153 a1713 v2158 v2154 v2155 v2156 v2157 
=== Predecessor ===
j1693 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2150 #next: j1738  <|@  <|@
f <@~|@floating>@ <|@
tid v2151 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1693 
index: - 
=== Succesors ===
=== Usages ===
j1738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1693 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1738 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2151 
=== Succesors ===
next: v1702 
=== Usages ===
v1703 
=== Predecessor ===
j1737 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2151 #next: v1702  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:545) [bci: 56]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 a1843 a1793 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:545) [bci: 56]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i12 
y: i37 
=== Succesors ===
=== Usages ===
j1901 v1740 v1699 a1714 v1977 i1722 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i1698 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1699 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i1698 
=== Succesors ===
=== Usages ===
v1702 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i1698  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 72]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 v104 ?210 i591 v375 i383 v449 i199 i1555 i1587 v1588 a1714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1690 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1741 j1986 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1699 
=== Succesors ===
trueSuccessor: v1701 
falseSuccessor: v1700 
=== Usages ===
=== Predecessor ===
j1738 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1699 #trueSuccessor: v1701 #falseSuccessor: v1700  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL v9|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606281698874543308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1709 
=== Usages ===
=== Predecessor ===
v1702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1709  <|@  <|@
f <@~|@floating>@ <|@
tid i1721 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1722 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1722 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i32 [-2147483641 - 2147483639] ⇊0000000000000007 ⇈00000000fffffff7
=== Inputs ===
x: i38 
y: i1721 
=== Succesors ===
=== Usages ===
i1692 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i38 y: i1721  <|@  <|@
f <@~|@floating>@ <|@
tid i1691 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1692 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i1722 
y: i1691 
=== Succesors ===
=== Usages ===
j1696 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1722 y: i1691  <|@  <|@
f <@~|@floating>@ <|@
tid j1696 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
resultBits: 64
stamp: i64 [-2147483648 - 2147483632] ⇈fffffffffffffff0
=== Inputs ===
value: i1692 
=== Succesors ===
=== Usages ===
j1697 v2154 v2155 v2156 v2157 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1692  <|@  <|@
f <@~|@floating>@ <|@
tid j1697 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i64
=== Inputs ===
x: j1696 
y: j1737 
=== Succesors ===
=== Usages ===
v1703 v1739 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1696 y: j1737  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1738 
y: j1697 
=== Succesors ===
=== Usages ===
v1709 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1738 y: j1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1703 
=== Succesors ===
trueSuccessor: v1708 
falseSuccessor: v1707 
=== Usages ===
=== Predecessor ===
v1701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1703 #trueSuccessor: v1708 #falseSuccessor: v1707  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA [v13|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND v14|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784255
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1706 
=== Usages ===
=== Predecessor ===
v1709 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1706  <|@  <|@
f <@*|@fixed>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606200634081250639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1739 
=== Usages ===
=== Predecessor ===
v1709 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2150 
value: j1697 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2150 value: j1697 stateAfter: - lastLocationAccess: - #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid v2154 <|@
result [v16|QWORD + v11|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1696 
index: j1737 
=== Succesors ===
=== Usages ===
v1726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1696 index: j1737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2154 
=== Succesors ===
next: v1729 
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2154 #next: v1729  <|@  <|@
f <@~|@floating>@ <|@
tid v2155 <|@
result [v16|QWORD + v11|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1696 
index: j1737 
=== Succesors ===
=== Usages ===
v1729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1696 index: j1737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2155 
=== Succesors ===
next: v1732 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2155 #next: v1732  <|@  <|@
f <@~|@floating>@ <|@
tid v2156 <|@
result [v16|QWORD + v11|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1696 
index: j1737 
=== Succesors ===
=== Usages ===
v1732 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1696 index: j1737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2156 
=== Succesors ===
next: v1735 
=== Usages ===
=== Predecessor ===
v1729 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2156 #next: v1735  <|@  <|@
f <@~|@floating>@ <|@
tid v2157 <|@
result [v16|QWORD + v11|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1696 
index: j1737 
=== Succesors ===
=== Usages ===
v1735 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1696 index: j1737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2157 
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
v1732 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2157 #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid v2152 <|@
result [v11|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1737 
index: - 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1737 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2152 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1741 
=== Usages ===
=== Predecessor ===
v1735 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2152 value: i38 stateAfter: - lastLocationAccess: - #next: v1741  <|@  <|@
f <@~|@floating>@ <|@
tid v2153 <|@
result [v11|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1737 
index: - 
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1737 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2153 
value: j1690 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1745 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2153 value: j1690 stateAfter: - lastLocationAccess: - #next: v1745  <|@  <|@
f <@~|@floating>@ <|@
tid v2158 <|@
result [v11|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1737 
index: - 
=== Succesors ===
=== Usages ===
v1745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1737 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1884 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2158 
value: v1884 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1712 
=== Usages ===
=== Predecessor ===
v1741 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2158 value: v1884 stateAfter: - lastLocationAccess: - #next: v1712  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1713 
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1713 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1737 
=== Succesors ===
next: v1715 
=== Usages ===
a1718 
=== Predecessor ===
v1712 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1737 #next: v1715  <|@  <|@
f <@*|@fixed>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1716 
=== Predecessor ===
a1713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v16|QWORD + v11|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v16|QWORD + v11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v16|QWORD + v11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v16|QWORD + v11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1704 
=== Usages ===
=== Predecessor ===
v1702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1704  <|@  <|@
f <@*|@fixed>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1705 
=== Predecessor ===
v1700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592518698413299071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1704 v1706 
=== Succesors ===
next: a1714 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1704 v1706 #next: a1714  <|@  <|@
f <@~|@floating>@ <|@
tid v1689 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1714 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?13 
arguments: v1689 i38 i47 
=== Succesors ===
next: v1717 
=== Usages ===
a1718 
=== Predecessor ===
v1705 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?13 arguments: v1689 i38 i47 #next: v1717  <|@  <|@
f <@*|@fixed>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1716 
=== Predecessor ===
a1714 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v8|DWORD v9|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1718 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1716 
values: a1713 a1714 
=== Succesors ===
=== Usages ===
v2149 a1604 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1716 values: a1713 a1714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1715 v1717 
=== Succesors ===
next: v1979 
=== Usages ===
a1718 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1715 v1717 #next: v1979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1908 
=== Usages ===
j1981 
=== Predecessor ===
v1716 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1908  <|@  <|@
f <@~|@floating>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i21 
=== Succesors ===
=== Usages ===
v1908 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i38 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i1246 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1878 v1759 v1775 v1829 v2045 v2046 v2047 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1977 
=== Succesors ===
trueSuccessor: v1906 
falseSuccessor: v1907 
=== Usages ===
=== Predecessor ===
v1979 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1977 #trueSuccessor: v1906 #falseSuccessor: v1907  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B32" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v1908 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1924  <|@  <|@
f <@*|@fixed>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
v1906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1911 
=== Usages ===
=== Predecessor ===
v1908 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1911  <|@  <|@
f <@~|@floating>@ <|@
tid v2149 <|@
result [v21|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1718 
index: - 
=== Succesors ===
=== Usages ===
j1981 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1718 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1981 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1979 
address: v2149 
=== Succesors ===
=== Usages ===
v2182 v2183 v2184 v2185 v2186 v2187 v2188 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1979 address: v2149  <|@  <|@
f <@~|@floating>@ <|@
tid j1901 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483632] ⇈fffffffffffffff0
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
j2033 j2015 j2021 j2025 j2029 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j2014 <|@
result long[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32
stableDimension: 0
stamp: i64 [-32] ⇊ffffffffffffffe0 ⇈ffffffffffffffe0
stampKind: i64
value: long[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2015 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2015 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483680 - 2147483600] ⇈fffffffffffffff0
=== Inputs ===
x: j1901 
y: j2014 
=== Succesors ===
=== Usages ===
v2016 v2018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1901 y: j2014  <|@  <|@
f <@~|@floating>@ <|@
tid j1560 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2016 j2004 j2009 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2015 
y: j1560 
=== Succesors ===
=== Usages ===
v1911 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2015 y: j1560  <|@  <|@
f <@*|@fixed>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2016 
=== Succesors ===
trueSuccessor: v1909 
falseSuccessor: v1910 
=== Usages ===
=== Predecessor ===
v1907 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2016 #trueSuccessor: v1909 #falseSuccessor: v1910  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = LEA [v21|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1920 
=== Usages ===
=== Predecessor ===
v1911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1920  <|@  <|@
f <@*|@fixed>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
v1909 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1912 
=== Usages ===
=== Predecessor ===
v1911 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1912  <|@  <|@
f <@~|@floating>@ <|@
tid j884 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2055 <|@
result v25|V256_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
v1910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B128" 
    successors "B15" "B128" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2009 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1913 
values: j1560 j2013 
=== Succesors ===
=== Usages ===
v2188 j2013 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1913 values: j1560 j2013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1912 
=== Succesors ===
next: v2054 
=== Usages ===
j2009 v1916 v1917 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1912 #next: v2054  <|@  <|@
f <@~|@floating>@ <|@
tid v2188 <|@
result [v22|QWORD[.] + v26|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j2009 
=== Succesors ===
=== Usages ===
v2054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j2009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2188 
value: v2055 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1913 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2188 value: v2055 stateAfter: - lastLocationAccess: - #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid j2013 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j2009 
y: j884 
=== Succesors ===
=== Usages ===
j2004 j2009 v2018 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2009 y: j884  <|@  <|@
f <@~|@floating>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2015 
y: j2013 
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2015 y: j2013  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2018 
=== Succesors ===
trueSuccessor: v1916 
falseSuccessor: v1918 
=== Usages ===
=== Predecessor ===
v2054 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2018 #trueSuccessor: v1916 #falseSuccessor: v1918  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v26|QWORD * 1], input: v25|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v26|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1913 
=== Succesors ===
next: v1922 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1913 #next: v1922  <|@  <|@
f <@*|@fixed>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
v1916 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2004 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1921 
values: j1560 j2013 
=== Succesors ===
=== Usages ===
v2187 j2008 j1999 v2022 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1921 values: j1560 j2013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1920 v1922 
=== Succesors ===
next: v1943 
=== Usages ===
j2004 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1920 v1922 #next: v1943  <|@  <|@
f <@~|@floating>@ <|@
tid j2020 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2021 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2021 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483664 - 2147483616] ⇈fffffffffffffff0
=== Inputs ===
x: j1901 
y: j2020 
=== Succesors ===
=== Usages ===
v2022 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1901 y: j2020  <|@  <|@
f <@~|@floating>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2021 
y: j2004 
=== Succesors ===
=== Usages ===
v1943 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2021 y: j2004  <|@  <|@
f <@*|@fixed>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2022 
=== Succesors ===
trueSuccessor: v1942 
falseSuccessor: v1941 
=== Usages ===
=== Predecessor ===
v1921 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2022 #trueSuccessor: v1942 #falseSuccessor: v1941  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v23|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
v1943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1946  <|@  <|@
f <@*|@fixed>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1932 
=== Predecessor ===
v1942 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2053 
=== Usages ===
=== Predecessor ===
v1943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid v2187 <|@
result [v22|QWORD[.] + v28|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j2004 
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j2004  <|@  <|@
f <@~|@floating>@ <|@
tid v2058 <|@
result v30|V128_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2187 
value: v2058 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1931 
=== Usages ===
=== Predecessor ===
v1941 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2187 value: v2058 stateAfter: - lastLocationAccess: - #next: v1931  <|@  <|@
f <@~|@floating>@ <|@
tid j881 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2008 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2008 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j2004 
y: j881 
=== Succesors ===
=== Usages ===
j1999 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2004 y: j881  <|@  <|@
f <@*|@fixed>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1932 
=== Predecessor ===
v2053 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v28|QWORD * 1], input: v30|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1999 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1932 
values: j2008 j2004 
=== Succesors ===
=== Usages ===
v2186 j2003 j1993 v2026 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1932 values: j2008 j2004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1931 v1946 
=== Succesors ===
next: v1949 
=== Usages ===
j1999 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1931 v1946 #next: v1949  <|@  <|@
f <@~|@floating>@ <|@
tid j2024 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2025 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2025 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483624] ⇊0000000000000008 ⇈fffffffffffffff8
=== Inputs ===
x: j1901 
y: j2024 
=== Succesors ===
=== Usages ===
v2026 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1901 y: j2024  <|@  <|@
f <@~|@floating>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2025 
y: j1999 
=== Succesors ===
=== Usages ===
v1949 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2025 y: j1999  <|@  <|@
f <@*|@fixed>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2026 
=== Succesors ===
trueSuccessor: v1948 
falseSuccessor: v1947 
=== Usages ===
=== Predecessor ===
v1932 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2026 #trueSuccessor: v1948 #falseSuccessor: v1947  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1952 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1952  <|@  <|@
f <@*|@fixed>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v1948 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2051 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2051  <|@  <|@
f <@~|@floating>@ <|@
tid v2186 <|@
result [v22|QWORD[.] + v32|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j1999 
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j1999  <|@  <|@
f <@~|@floating>@ <|@
tid v2057 <|@
result v34|V64_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2186 
value: v2057 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1934 
=== Usages ===
=== Predecessor ===
v1947 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2186 value: v2057 stateAfter: - lastLocationAccess: - #next: v1934  <|@  <|@
f <@~|@floating>@ <|@
tid j1743 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2003 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2003 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1999 
y: j1743 
=== Succesors ===
=== Usages ===
j1993 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1999 y: j1743  <|@  <|@
f <@*|@fixed>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1935 
=== Predecessor ===
v2051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v32|QWORD * 1], input: v34|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1993 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1935 
values: j2003 j1999 
=== Succesors ===
=== Usages ===
v2185 j1998 j1982 v2030 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1935 values: j2003 j1999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1934 v1952 
=== Succesors ===
next: v1955 
=== Usages ===
j1993 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1934 v1952 #next: v1955  <|@  <|@
f <@~|@floating>@ <|@
tid j2028 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2029 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2029 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483628] ⇊000000000000000c ⇈fffffffffffffffc
=== Inputs ===
x: j1901 
y: j2028 
=== Succesors ===
=== Usages ===
v2030 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1901 y: j2028  <|@  <|@
f <@~|@floating>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2029 
y: j1993 
=== Succesors ===
=== Usages ===
v1955 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2029 y: j1993  <|@  <|@
f <@*|@fixed>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2030 
=== Succesors ===
trueSuccessor: v1954 
falseSuccessor: v1953 
=== Usages ===
=== Predecessor ===
v1935 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2030 #trueSuccessor: v1954 #falseSuccessor: v1953  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v23|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1958 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1958  <|@  <|@
f <@*|@fixed>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1938 
=== Predecessor ===
v1954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2049 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2049  <|@  <|@
f <@~|@floating>@ <|@
tid v2185 <|@
result [v22|QWORD[.] + v36|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j1993 
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j1993  <|@  <|@
f <@~|@floating>@ <|@
tid v2056 <|@
result v38|V32_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2185 
value: v2056 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1937 
=== Usages ===
=== Predecessor ===
v1953 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2185 value: v2056 stateAfter: - lastLocationAccess: - #next: v1937  <|@  <|@
f <@~|@floating>@ <|@
tid j1997 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1998 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1998 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1993 
y: j1997 
=== Succesors ===
=== Usages ===
j1982 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1993 y: j1997  <|@  <|@
f <@*|@fixed>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1938 
=== Predecessor ===
v2049 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v36|QWORD * 1], input: v38|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v36|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1982 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1938 
values: j1998 j1993 
=== Succesors ===
=== Usages ===
v2182 j1986 v2034 j2041 v2183 v2184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1938 values: j1998 j1993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1937 v1958 
=== Succesors ===
next: v1961 
=== Usages ===
j1982 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1937 v1958 #next: v1961  <|@  <|@
f <@~|@floating>@ <|@
tid j2032 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2033 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2033 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483631] ⇊000000000000000f
=== Inputs ===
x: j1901 
y: j2032 
=== Succesors ===
=== Usages ===
v2034 v2036 v2038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1901 y: j2032  <|@  <|@
f <@~|@floating>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2033 
y: j1982 
=== Succesors ===
=== Usages ===
v1961 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2033 y: j1982  <|@  <|@
f <@*|@fixed>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2034 
=== Succesors ===
trueSuccessor: v1960 
falseSuccessor: v1959 
=== Usages ===
=== Predecessor ===
v1938 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2034 #trueSuccessor: v1960 #falseSuccessor: v1959  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = DEC v23|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1964 
=== Usages ===
=== Predecessor ===
v1961 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1964  <|@  <|@
f <@*|@fixed>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
v1960 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2045 
=== Usages ===
=== Predecessor ===
v1961 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2045  <|@  <|@
f <@~|@floating>@ <|@
tid v2182 <|@
result [v22|QWORD[.] + v40|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j1982 
=== Succesors ===
=== Usages ===
v2045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2182 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1967 
=== Usages ===
=== Predecessor ===
v1959 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2182 value: i1246 stateAfter: - lastLocationAccess: - #next: v1967  <|@  <|@
f <@~|@floating>@ <|@
tid j1986 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1982 
y: j1690 
=== Succesors ===
=== Usages ===
v2036 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1982 y: j1690  <|@  <|@
f <@~|@floating>@ <|@
tid v2036 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2033 
y: j1986 
=== Succesors ===
=== Usages ===
v1967 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2033 y: j1986  <|@  <|@
f <@*|@fixed>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2036 
=== Succesors ===
trueSuccessor: v1966 
falseSuccessor: v1965 
=== Usages ===
=== Predecessor ===
v2045 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2036 #trueSuccessor: v1966 #falseSuccessor: v1965  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v22|QWORD[.] + v40|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = INC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591419820104220671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1970 
=== Usages ===
=== Predecessor ===
v1967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1970  <|@  <|@
f <@*|@fixed>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
v1966 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738169498697727
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2046 
=== Usages ===
=== Predecessor ===
v1967 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2046  <|@  <|@
f <@~|@floating>@ <|@
tid v2183 <|@
result [v22|QWORD[.] + v40|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j1982 
=== Succesors ===
=== Usages ===
v2046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2183 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1973 
=== Usages ===
=== Predecessor ===
v1965 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2183 value: i1246 stateAfter: - lastLocationAccess: - #next: v1973  <|@  <|@
f <@~|@floating>@ <|@
tid j2040 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2041 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2041 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1982 
y: j2040 
=== Succesors ===
=== Usages ===
v2038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1982 y: j2040  <|@  <|@
f <@~|@floating>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2033 
y: j2041 
=== Succesors ===
=== Usages ===
v1973 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2033 y: j2041  <|@  <|@
f <@*|@fixed>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2038 
=== Succesors ===
trueSuccessor: v1972 
falseSuccessor: v1971 
=== Usages ===
=== Predecessor ===
v2046 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2038 #trueSuccessor: v1972 #falseSuccessor: v1971  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v22|QWORD[.] + v40|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v40|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4589730970243956735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1976 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1976  <|@  <|@
f <@*|@fixed>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
v1972 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4596767844661723134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2047 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2047  <|@  <|@
f <@~|@floating>@ <|@
tid v2184 <|@
result [v22|QWORD[.] + v40|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1981 
index: j1982 
=== Succesors ===
=== Usages ===
v2047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1981 index: j1982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2184 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1940 
=== Usages ===
=== Predecessor ===
v1971 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2184 value: i1246 stateAfter: - lastLocationAccess: - #next: v1940  <|@  <|@
f <@*|@fixed>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
v2047 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v22|QWORD[.] + v40|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B10" "B31" "B26" "B28" "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1924 v1940 v1964 v1970 v1976 
=== Succesors ===
next: a1604 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1924 v1940 v1964 v1970 v1976 #next: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1604 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1718 
=== Succesors ===
next: v903 
=== Usages ===
a900 
=== Predecessor ===
v1925 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1718 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v2120 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v903 a2103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a900 <|@
result v44|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
op: Compress
stamp: n! -
=== Inputs ===
value: a1604 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2120 
value: a900 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1753 
=== Usages ===
=== Predecessor ===
a1604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2120 value: a900 stateAfter: - lastLocationAccess: - #next: j1753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1753 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1759 
=== Usages ===
j1755 
=== Predecessor ===
v903 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1759  <|@  <|@
f <@~|@floating>@ <|@
tid i1754 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1755 j1772 j1826 j1875 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1755 <|@
result v45|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1753 
y: i1754 
=== Succesors ===
=== Usages ===
v2159 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1753 y: i1754  <|@  <|@
f <@~|@floating>@ <|@
tid j1758 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2159 v2163 v2168 v2174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2159 <|@
result [v45|QWORD[*] + v46|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1755 
index: j1758 
=== Succesors ===
=== Usages ===
v1759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1755 index: j1758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2159 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
j1753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2159 value: i1246 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid a891 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2080 
=== Succesors ===
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2080  <|@  <|@
tid a555 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4f600041
hasIdentity: true
objectId: 1
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?295 ?806 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1859 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1541 
=== Succesors ===
=== Usages ===
v2171 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1541  <|@  <|@
f <@~|@floating>@ <|@
tid v2171 <|@
result [v48|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1859 
index: - 
=== Succesors ===
=== Usages ===
j1863 j1814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1859 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1779 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1793 a1843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j888 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1895 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1887 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1888 v2071 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1892 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1818 v1867 v1899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result int[255|0xff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 255
stableDimension: 0
stamp: i32 [255] ⇊00000000000000ff ⇈00000000000000ff
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i587 i586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 i207 i630 i746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:307) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1249 <|@
result NarrowOop[Equivalence$1@1531265431] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Equivalence$1@1531265431
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1531265431]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
v1759 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|QWORD[*] + v46|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v47|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B116" "B104" "B102" "B112" 
    successors "B34" "B127" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4627022591482714271
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i51 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v50 
values: i47 i75 i75 i75 i75 i75 
=== Succesors ===
=== Usages ===
?52 v54 i61 ?160 ?295 i75 ?210 ?647 ?309 ?316 ?670 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v50 values: i47 i75 i75 i75 i75 i75  <|@  <|@
f <@~|@floating>@ <|@
tid a574 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v50 
values: a891 a574 a1029 a1029 a1029 a1029 
=== Succesors ===
=== Usages ===
v2122 a574 v2121 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v50 values: a891 a574 a1029 a1029 a1029 a1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 22.48645287958118
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v49 
=== Succesors ===
next: i2082 
=== Usages ===
i51 v57 v76 v78 v546 v547 v548 a574 v1498 v1493 v1488 v1483 v1478 v1385 v1390 v1395 v1400 v1473 v1468 v1453 v1447 v1429 v1441 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v49 #next: i2082  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2082 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2115 
=== Succesors ===
next: v59 
=== Usages ===
v54 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2115 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 79]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i2082 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i2082  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 79]
stamp: void
trueSuccessorProbability: 0.9555287796899239
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
i2082 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v55 #falseSuccessor: v57  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|QWORD[.]] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9555287796899239 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B125" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626741116506003615
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2083 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2083  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 74
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 552
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i51 - 
=== Succesors ===
=== Usages ===
v1361 v1620 i2083 i2090 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i51 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2121 <|@
result [v51|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a574 
index: - 
=== Succesors ===
=== Usages ===
i2083 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2083 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?52 
guard: - 
address: v2121 
=== Succesors ===
next: v1386 
=== Usages ===
v910 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?52 guard: - address: v2121 #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i51 
y: i21 
=== Succesors ===
=== Usages ===
v2122 i276 v910 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i51 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i2083 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i2083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v910 
=== Succesors ===
trueSuccessor: v1382 
falseSuccessor: v1385 
=== Usages ===
=== Predecessor ===
i2083 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v910 #trueSuccessor: v1382 #falseSuccessor: v1385  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction CMP (x: v52|DWORD, y: [v51|QWORD[.] + 12]) size: DWORD state [bci:74] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626741116506003615
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2084 
=== Usages ===
a2084 
=== Predecessor ===
v1386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2084  <|@  <|@
f <@~|@floating>@ <|@
tid v2122 <|@
result [v51|QWORD[.] + v52|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a574 
index: i61 
=== Succesors ===
=== Usages ===
a2084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2084 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1382 
address: v2122 
=== Succesors ===
next: v67 
=== Usages ===
a918 v924 v2123 v2133 v2135 v2137 v2161 a2196 
=== Predecessor ===
v1382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1382 address: v2122 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2084 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2084  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: i32
=== Inputs ===
x: i51 
y: i21 
=== Succesors ===
=== Usages ===
i51 i51 i51 i249 i51 i51 i263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:554) [bci: 91]
stamp: void
trueSuccessorProbability: 0.0015533767669660724
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v65 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
a2084 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v65 #falseSuccessor: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v51|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|DWORD[.], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0015533767669660724 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4584970889783042265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1361 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?52 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?52 #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:74] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v51|QWORD[.]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2085 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2085  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2085 <|@
result v55|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2117 
=== Succesors ===
next: v170 
=== Usages ===
v2160 v1248 v1250 v1251 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2117 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2085 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2085  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 99
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 555
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i51 - 
=== Succesors ===
=== Usages ===
?210 ?311 ?297 ?670 ?647 ?318 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i51 -  <|@  <|@
tid ?210 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 561
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 i47 - - - - 
=== Succesors ===
=== Usages ===
?370 ?1590 ?200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 i47 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.6705794984965615
=== Inputs ===
condition: v1248 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
a2085 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1248 #trueSuccessor: v168 #falseSuccessor: v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|DWORD[.], y: v55|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6705794984965615 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4624288212235113577
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4619642846700088551
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2085 
y: a1249 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2085 y: a1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8648398191938089
=== Inputs ===
condition: v1250 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1250 #trueSuccessor: v178 #falseSuccessor: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v55|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8648398191938089 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618567400352106519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v178 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626462860253486138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v174 v176 
=== Succesors ===
next: i194 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v174 v176 #next: i194  <|@  <|@
f <@~|@floating>@ <|@
tid a2196 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2084 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2084  <|@  <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@16388d66
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2196 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2196  <|@  <|@
tid ?1590 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - - 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i194 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1027 
stateDuring: ?1590 
=== Succesors ===
next: v198 
=== Usages ===
i589 i199 i586 
=== Predecessor ===
v175 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1027 stateDuring: ?1590 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i586 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i194 
y: i201 
=== Succesors ===
=== Usages ===
i589 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i194 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i194 
y: i586 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i194 y: i586  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
i194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHR v57|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = XOR (x: v57|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD, v59|DWORD] destination: B41 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2085 
y: a1244 
=== Succesors ===
=== Usages ===
v1391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2085 y: a1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1251 
=== Succesors ===
trueSuccessor: v1390 
falseSuccessor: v1387 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1251 #trueSuccessor: v1390 #falseSuccessor: v1387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v55|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1623 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1623  <|@  <|@
f <@~|@floating>@ <|@
tid i1624 <|@
result int[-235795|0xfffffffffffc66ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235795
stableDimension: 0
stamp: i32 [-235795] ⇊00000000fffc66ed ⇈00000000fffc66ed
stampKind: i32
value: int[-235795|0xfffffffffffc66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
v1390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235795|0xfffffffffffc66ed]] destination: B43 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B124" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2086 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2086  <|@  <|@
f <@~|@floating>@ <|@
tid v2160 <|@
result [v55|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2085 
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2085  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2086 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2160 
=== Succesors ===
next: v1396 
=== Usages ===
v1886 
=== Predecessor ===
v1387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2160 #next: v1396  <|@  <|@
f <@~|@floating>@ <|@
tid v1885 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1886 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1886 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2086 
y: v1885 
=== Succesors ===
=== Usages ===
v1396 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2086 y: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1396 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1886 
=== Succesors ===
trueSuccessor: v1392 
falseSuccessor: v1395 
=== Usages ===
=== Predecessor ===
v2086 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1886 #trueSuccessor: v1392 #falseSuccessor: v1395  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v55|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B123" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2087 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2087  <|@  <|@
f <@~|@floating>@ <|@
tid v2161 <|@
result [v53|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2084 
=== Succesors ===
=== Usages ===
v2087 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2087 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2161 
=== Succesors ===
next: v2088 
=== Usages ===
v2147 
=== Predecessor ===
v1392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2161 #next: v2088  <|@  <|@
f <@~|@floating>@ <|@
tid v2147 <|@
result [v60|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2087 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2088 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2147 
=== Succesors ===
next: v2066 
=== Usages ===
v1526 
=== Predecessor ===
v2087 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2147 #next: v2066  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2088 
y: v1518 
=== Succesors ===
=== Usages ===
v2066 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2088 y: v1518  <|@  <|@
f <@*|@fixed>@ <|@
tid v2066 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1526 
=== Succesors ===
trueSuccessor: v2065 
falseSuccessor: v1400 
=== Usages ===
=== Predecessor ===
v2088 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1526 #trueSuccessor: v2065 #falseSuccessor: v1400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOV [v53|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: [v60|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2089 
=== Usages ===
=== Predecessor ===
v2066 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2089  <|@  <|@
f <@~|@floating>@ <|@
tid v2123 <|@
result [v53|DWORD[.] * 8 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2084 
=== Succesors ===
=== Usages ===
a2089 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2089 <|@
result v62|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.nodeClass
nodeSourcePosition: at org.graalvm.compiler.graph.Node.getNodeClass(Node.java:717) [bci: 1]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeClass;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2123 
=== Succesors ===
next: i2090 
=== Usages ===
?1594 v2126 v2124 v2125 ?1597 ?526 ?1595 ?1591 ?384 ?1593 ?1592 ?1596 
=== Predecessor ===
v2065 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2123 #next: i2090  <|@  <|@
f <@~|@floating>@ <|@
tid v2124 <|@
result [v62|DWORD[.] * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2089 
=== Succesors ===
=== Usages ===
i2090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2090 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeClass.canGVN
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 3]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: ?52 
guard: - 
address: v2124 
=== Succesors ===
next: v378 
=== Usages ===
i935 
=== Predecessor ===
a2089 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?52 guard: - address: v2124 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid i935 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 3]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2090 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2090  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i935 
y: i47 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i935 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v377 
=== Usages ===
=== Predecessor ===
i2090 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v376 #falseSuccessor: v377  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = MOV [v53|DWORD[.] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction v63|DWORD = MOVZXB [v62|DWORD[.] * 8 + 48] size: DWORD state [bci:74] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:610) [bci: 354]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B47 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:569) [bci: 9]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2091 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2091  <|@  <|@
f <@~|@floating>@ <|@
tid v2125 <|@
result [v62|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2089 
=== Succesors ===
=== Usages ===
i2091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2091 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeClass.startGVNNumber
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:569) [bci: 10]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2125 
=== Succesors ===
next: v380 
=== Usages ===
i382 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2125 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v2126 <|@
result [v62|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2089 
=== Succesors ===
=== Usages ===
a2092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2089  <|@  <|@
f <@~|@floating>@ <|@
tid a918 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2084 
=== Succesors ===
=== Usages ===
?1592 ?1595 v1004 v1010 ?526 ?384 ?1591 ?1593 ?1594 v1007 v995 ?1597 v998 ?1596 v1001 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2084  <|@  <|@
tid ?370 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - - 
=== Succesors ===
=== Usages ===
?534 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - -  <|@  <|@
tid ?534 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Graph$1.hashCode(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Graph.java
sourceLine: 150
stackSize: 0
=== Inputs ===
outerFrameState: ?370 
values: - - 
=== Succesors ===
=== Usages ===
?384 ?1592 ?526 ?1591 ?1597 ?1596 ?1595 ?1594 ?1593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?370 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
i2091 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v62|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|DWORD, int[0|0x0]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B79" 
    successors "B50" "B85" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4606778790329132676
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i382 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v381 
values: i2091 i528 
=== Succesors ===
=== Usages ===
?384 i590 i524 i420 ?1591 j430 i439 i439 ?1597 i454 ?1596 i466 ?1595 ?1594 i492 ?1593 i503 ?1592 i514 i587 i199 j2076 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v381 values: i2091 i528  <|@  <|@
f <@~|@floating>@ <|@
tid i383 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v381 
values: i47 i529 
=== Succesors ===
=== Usages ===
?384 v391 v2131 ?1591 v2132 ?526 v2134 v995 ?1597 v998 ?1596 v1001 ?1595 v1004 ?1594 v1007 ?1593 v1010 ?1592 i529 v2136 v959 v982 v2074 v2075 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v381 values: i47 i529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v380 
=== Succesors ===
next: a2092 
=== Usages ===
i382 i383 v393 v530 v1452 v1446 v1440 v1428 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v380 #next: a2092  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2092 <|@
result v68|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2126 
=== Succesors ===
next: a2093 
=== Usages ===
a941 v2129 v2127 
=== Predecessor ===
v381 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2126 #next: a2093  <|@  <|@
tid ?384 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 570
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
v1654 a2093 i2094 i2096 v2098 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2127 <|@
result [v68|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2092 
=== Succesors ===
=== Usages ===
a2093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2092  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2093 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.offsets
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: n# [J
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2127 
=== Succesors ===
next: i2094 
=== Usages ===
a945 v2128 a2194 a2195 
=== Predecessor ===
a2092 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2127 #next: i2094  <|@  <|@
f <@~|@floating>@ <|@
tid v2128 <|@
result [v69|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2093 
=== Succesors ===
=== Usages ===
i2094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2093  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2094 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 4]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2128 
=== Succesors ===
next: v396 
=== Usages ===
v391 v982 v2074 v2075 
=== Predecessor ===
a2093 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2128 #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 24]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2094 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i383 y: i2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 24]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v391 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
i2094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v391 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOV [v62|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction v69|DWORD[.] = MOV [v68|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction v70|DWORD = MOV [v69|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B82" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 27]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2095 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid v2129 <|@
result [v68|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2092 
=== Succesors ===
=== Usages ===
a2095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2092  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2095 <|@
result v71|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.types
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2129 
=== Succesors ===
next: i2096 
=== Usages ===
a953 v2130 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2129 #next: i2096  <|@  <|@
f <@~|@floating>@ <|@
tid v2130 <|@
result [v71|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2095 
=== Succesors ===
=== Usages ===
i2096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2095  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2096 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2130 
=== Succesors ===
next: v1430 
=== Usages ===
v959 
=== Predecessor ===
a2095 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2130 #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2096 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1430 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v959 
=== Succesors ===
trueSuccessor: v1425 
falseSuccessor: v1428 
=== Usages ===
=== Predecessor ===
i2096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v959 #trueSuccessor: v1425 #falseSuccessor: v1428  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = MOV [v68|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction CMP (x: v67|DWORD, y: [v71|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B77" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2097 
=== Usages ===
a2097 
=== Predecessor ===
v1430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2097  <|@  <|@
f <@~|@floating>@ <|@
tid a953 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [Ljava/lang/Class;
=== Inputs ===
value: a2095 
=== Succesors ===
=== Usages ===
v2131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid v2131 <|@
result [v72|QWORD[.] + v67|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a953 
index: i383 
=== Succesors ===
=== Usages ===
a2097 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a953 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2097 <|@
result v73|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: v1425 
address: v2131 
=== Succesors ===
next: v2098 
=== Usages ===
v2148 v1270 v1256 v1258 v1260 v1262 v1264 v1266 v1268 
=== Predecessor ===
v1425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1425 address: v2131 #next: v2098  <|@  <|@
f <@~|@floating>@ <|@
tid v2148 <|@
result [v73|DWORD[.] * 8 + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2097 
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2098 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class._klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:89) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 39]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: Klass*
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2148 
=== Succesors ===
next: v410 
=== Usages ===
v407 
=== Predecessor ===
a2097 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2148 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:90) [bci: 6]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 39]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: v2098 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: v2098  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 42]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v407 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v2098 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v407 #trueSuccessor: v408 #falseSuccessor: v409  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = MOV [v72|QWORD[.] + v67|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction v74|QWORD = MOV [v73|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|QWORD, y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B57" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 45]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid a1255 <|@
result NarrowOop[Class:int] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:int
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:int]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1255 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1255  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1256 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1256 #trueSuccessor: v413 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 53]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1442 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1442  <|@  <|@
f <@~|@floating>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2094 
=== Succesors ===
=== Usages ===
v1442 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2074 
=== Succesors ===
trueSuccessor: v1437 
falseSuccessor: v1440 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2074 #trueSuccessor: v1437 #falseSuccessor: v1440  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2099 
=== Usages ===
j2099 
=== Predecessor ===
v1442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2099  <|@  <|@
f <@~|@floating>@ <|@
tid a2195 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2093 
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2093  <|@  <|@
f <@~|@floating>@ <|@
tid v2132 <|@
result [v75|QWORD[.] + v67|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2195 
index: i383 
=== Succesors ===
=== Usages ===
j2099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2195 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2099 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1437 
address: v2132 
=== Succesors ===
next: i980 
=== Usages ===
v2133 
=== Predecessor ===
v1437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1437 address: v2132 #next: i980  <|@  <|@
f <@~|@floating>@ <|@
tid v2133 <|@
result [v76|QWORD + v53|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2099 
index: a2084 
=== Succesors ===
=== Usages ===
i980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2099 index: a2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i980 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2133 
=== Succesors ===
next: v436 
=== Usages ===
i420 
=== Predecessor ===
j2099 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2133 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:575) [bci: 67]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i980 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i980  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i980 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v75|QWORD[.] + v67|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v66|DWORD, ~y: [v76|QWORD + v53|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B54 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1441 
=== Usages ===
=== Predecessor ===
v1442 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1663 
=== Usages ===
=== Predecessor ===
v1440 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1663  <|@  <|@
f <@~|@floating>@ <|@
tid i1664 <|@
result int[-248603|0xfffffffffffc34e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248603
stableDimension: 0
stamp: i32 [-248603] ⇊00000000fffc34e5 ⇈00000000fffc34e5
stampKind: i32
value: int[-248603|0xfffffffffffc34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
v1441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248603|0xfffffffffffc34e5]] destination: B56 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 72]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid a1257 <|@
result NarrowOop[Class:long] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:long
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:long]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1257 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1257  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 97]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j432 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1258 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1258 #trueSuccessor: v423 #falseSuccessor: v424  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 80]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1448 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1448  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2094 
=== Succesors ===
=== Usages ===
v1448 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v982 
=== Succesors ===
trueSuccessor: v1443 
falseSuccessor: v1446 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v982 #trueSuccessor: v1443 #falseSuccessor: v1446  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2100 
=== Usages ===
j2100 
=== Predecessor ===
v1448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2100  <|@  <|@
f <@~|@floating>@ <|@
tid a2194 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2093 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2093  <|@  <|@
f <@~|@floating>@ <|@
tid v2134 <|@
result [v78|QWORD[.] + v67|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2194 
index: i383 
=== Succesors ===
=== Usages ===
j2100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2194 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2100 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1443 
address: v2134 
=== Succesors ===
next: j991 
=== Usages ===
v2135 
=== Predecessor ===
v1443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1443 address: v2134 #next: j991  <|@  <|@
f <@~|@floating>@ <|@
tid v2135 <|@
result [v79|QWORD + v53|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2100 
index: a2084 
=== Succesors ===
=== Usages ===
j991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2100 index: a2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j991 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getLong(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2135 
=== Succesors ===
next: v438 
=== Usages ===
j433 j432 
=== Predecessor ===
j2100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2135 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 92]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i382 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i382  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 99]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j991 
y: i431 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j991 y: i431  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 100]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j432 
y: j991 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j432 y: j991  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 101]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j430 
y: j433 
=== Succesors ===
=== Usages ===
i435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j430 y: j433  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 102]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32
=== Inputs ===
value: j434 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j434  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
j991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [v78|QWORD[.] + v67|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [v79|QWORD + v53|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHR v80|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = XOR (x: v82|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = ADD (x: v81|QWORD, y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV v84|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|DWORD] destination: B59 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v1448 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1447  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1665 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1665  <|@  <|@
f <@~|@floating>@ <|@
tid i1666 <|@
result int[-251675|0xfffffffffffc28e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251675
stableDimension: 0
stamp: i32 [-251675] ⇊00000000fffc28e5 ⇈00000000fffc28e5
stampKind: i32
value: int[-251675|0xfffffffffffc28e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
v1447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251675|0xfffffffffffc28e5]] destination: B61 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" "B66" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 107]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid a1259 <|@
result NarrowOop[Class:boolean] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:boolean
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:boolean]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1259 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1259  <|@  <|@
f <@~|@floating>@ <|@
tid a941 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2092 
=== Succesors ===
=== Usages ===
v1010 v1007 v1004 v995 v998 v1001 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2092  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1260 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v443 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1260 #trueSuccessor: v442 #falseSuccessor: v443  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4584260792192280196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 115]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i447 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i447  <|@  <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@bf10f8e
stamp: void
targetMethod: HotSpotMethod<Fields.getBoolean(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i447 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1592 <|@
d <@d|@=== Debug Properties ===
bci: 121
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 580
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i447 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i447 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 121
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Fields.getBoolean
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v995 
stateDuring: ?1592 
=== Succesors ===
next: v452 
=== Usages ===
v449 
=== Predecessor ===
v442 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v995 stateDuring: ?1592 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:581) [bci: 128]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i447 
y: i47 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i447 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:581) [bci: 128]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
i447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v450 #falseSuccessor: v451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:121, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v87|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 134]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD] destination: B64 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid i453 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 7
stableDimension: 0
stamp: i32 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i453 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i453  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 134]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA [v66|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD] destination: B65 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4584260792192280196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 137]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid a1261 <|@
result NarrowOop[Class:float] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:float
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:float]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1261 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1261  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v459 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v458 #falseSuccessor: v459  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 145]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: f463 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: f463  <|@  <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: f32
signature: [Ljdk.vm.ci.meta.JavaType;@af269de
stamp: void
targetMethod: HotSpotMethod<Fields.getFloat(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
f463 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1593 <|@
d <@d|@=== Debug Properties ===
bci: 151
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 585
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
f463 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f463 <|@
result v89|SINGLE <|@
d <@d|@=== Debug Properties ===
bci: 151
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: f32
targetMethod: Direct#Fields.getFloat
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v998 
stateDuring: ?1593 
=== Succesors ===
next: v467 
=== Usages ===
i465 
=== Predecessor ===
v458 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v998 stateDuring: ?1593 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Float.floatToRawIntBits(float) [bci: -1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:586) [bci: 159]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
value: f463 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: f463  <|@  <|@
f <@~|@floating>@ <|@
tid i466 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:586) [bci: 162]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i465 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i465  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
f463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:151, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v89|SINGLE = VMOVE xmm0|SINGLE <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = VMOVD v89|SINGLE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = ADD (x: v90|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|DWORD] destination: B67 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 167]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid a1263 <|@
result NarrowOop[Class:double] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:double
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:double]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1263 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1264 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1264 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4575253592937539204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 175]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: d475 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: d475  <|@  <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@45df02c9
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
d475 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1594 <|@
d <@d|@=== Debug Properties ===
bci: 181
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 588
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
d475 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d475 <|@
result v92|DOUBLE <|@
d <@d|@=== Debug Properties ===
bci: 181
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1001 
stateDuring: ?1594 
=== Succesors ===
next: v482 
=== Usages ===
j477 
=== Predecessor ===
v470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1001 stateDuring: ?1594 #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid j477 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:589) [bci: 188]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
value: d475 
=== Succesors ===
=== Usages ===
j478 j479 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d475  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 201]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j477 
y: i431 
=== Succesors ===
=== Usages ===
j479 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j477 y: i431  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 202]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j477 
y: j478 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j477 y: j478  <|@  <|@
f <@~|@floating>@ <|@
tid j2076 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 92]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i382 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i382  <|@  <|@
f <@~|@floating>@ <|@
tid j480 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 203]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j479 
y: j2076 
=== Succesors ===
=== Usages ===
i481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j479 y: j2076  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 204]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32
=== Inputs ===
value: j480 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j480  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
d475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:181, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v92|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = VMOVQ v92|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = SHR v93|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = XOR (x: v93|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = ADD (x: v95|QWORD, y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOV v97|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|DWORD] destination: B69 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4575253592937539204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 209]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid a1265 <|@
result NarrowOop[Class:short] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:short
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:short]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1265 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1265  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1266 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1266 #trueSuccessor: v485 #falseSuccessor: v486  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4570749993310168708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 217]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i490 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i490  <|@  <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@17dee4a9
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i490 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1595 <|@
d <@d|@=== Debug Properties ===
bci: 223
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 592
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i490 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i490 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 223
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1004 
stateDuring: ?1595 
=== Succesors ===
next: v493 
=== Usages ===
i492 
=== Predecessor ===
v485 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1004 stateDuring: ?1595 #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:593) [bci: 231]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i490 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i490  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:223, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = ADD (x: v99|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|DWORD] destination: B71 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4570749993310168708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 236]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid a1267 <|@
result NarrowOop[Class:char] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:char
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:char]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1267 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v497 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v496 #falseSuccessor: v497  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4566246393682798212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 244]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i501 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i501  <|@  <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@145014a3
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1596 <|@
d <@d|@=== Debug Properties ===
bci: 250
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 595
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i501 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 250
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1007 
stateDuring: ?1596 
=== Succesors ===
next: v504 
=== Usages ===
i503 
=== Predecessor ===
v496 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1007 stateDuring: ?1596 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:596) [bci: 258]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i501 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i501  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:250, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v101|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|DWORD] destination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4566246393682798212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 263]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid a1269 <|@
result NarrowOop[Class:byte] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:byte
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:byte]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2097 
y: a1269 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2097 y: a1269  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v508 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v507 #falseSuccessor: v508  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4561742794055427716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 271]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i512 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i512  <|@  <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@d75336e
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i512 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1597 <|@
d <@d|@=== Debug Properties ===
bci: 277
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 598
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i512 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 277
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1010 
stateDuring: ?1597 
=== Succesors ===
next: v515 
=== Usages ===
i514 
=== Predecessor ===
v507 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1010 stateDuring: ?1597 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid i514 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:599) [bci: 285]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i512 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i512  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:277, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4561742794055427716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:601) [bci: 290]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B78" "B80" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 324]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid v2075 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2094 
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2075 
=== Succesors ===
trueSuccessor: v1449 
falseSuccessor: v1452 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2075 #trueSuccessor: v1449 #falseSuccessor: v1452  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2101 
=== Usages ===
j2101 
=== Predecessor ===
v1454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2101  <|@  <|@
f <@~|@floating>@ <|@
tid a945 <|@
result v105|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2093 
=== Succesors ===
=== Usages ===
v2136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2093  <|@  <|@
f <@~|@floating>@ <|@
tid v2136 <|@
result [v105|QWORD[.] + v67|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a945 
index: i383 
=== Succesors ===
=== Usages ===
j2101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a945 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2101 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1449 
address: v2136 
=== Succesors ===
next: a1021 
=== Usages ===
v2137 
=== Predecessor ===
v1449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1449 address: v2136 #next: a1021  <|@  <|@
f <@~|@floating>@ <|@
tid v2137 <|@
result [v106|QWORD + v53|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2101 
index: a2084 
=== Succesors ===
=== Usages ===
a1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2101 index: a2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1021 <|@
result v107|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2137 
=== Succesors ===
next: i522 
=== Usages ===
a1022 
=== Predecessor ===
j2101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2137 #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid a1022 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1021 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1021  <|@  <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3001a143
stamp: void
targetMethod: HotSpotMethod<NodeClass.deepHashCode0(Object)>
=== Inputs ===
arguments: a1022 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1022  <|@  <|@
tid ?1591 <|@
d <@d|@=== Debug Properties ===
bci: 338
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 605
stackSize: 1
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 - i383 - - - - - i382 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 - i383 - - - - - i382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 338
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32
targetMethod: Direct#NodeClass.deepHashCode0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1023 
stateDuring: ?1591 
=== Succesors ===
next: v525 
=== Usages ===
i524 
=== Predecessor ===
a1021 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1023 stateDuring: ?1591 #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 341]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i522 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i522  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [v105|QWORD[.] + v67|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[.] = MOV [v106|QWORD + v53|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v107|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
stack: v66|DWORD 
locals: v62|DWORD[.] v65|QWORD[.] - v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:338, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B54" "B59" "B64" "B67" "B69" "B71" "B73" "B75" "B76" "B78" "B65" 
    successors "B49" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i439 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v437 
values: i420 i435 i382 i466 i481 i492 i503 i514 i382 i524 i454 
=== Succesors ===
=== Usages ===
?526 i528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v437 values: i420 i435 i382 i466 i481 i492 i503 i514 i382 i524 i454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v436 v438 v455 v467 v482 v493 v504 v515 v516 v525 v533 
=== Succesors ===
next: v1366 
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v436 v438 v455 v467 v482 v493 v504 v515 v516 v525 v533 #next: v1366  <|@  <|@
tid ?526 <|@
d <@d|@=== Debug Properties ===
bci: 343
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 607
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2089 a918 i439 i383 - - - - - 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2089 a918 i439 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?526 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?526 #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
result int[13|0xd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 344]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 13
stableDimension: 0
stamp: i32 [13] ⇊000000000000000d ⇈000000000000000d
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$146/798809698@44222a75
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 346]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i439 
y: i527 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i439 y: i527  <|@  <|@
f <@~|@floating>@ <|@
tid i529 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 348]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i383 
y: i21 
=== Succesors ===
=== Usages ===
i383 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i383 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
loopBegin: v381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
locals: v62|DWORD[.] v65|QWORD[.] v111|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:343, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = IMUL v111|DWORD y: 13 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD, v113|DWORD] destination: B79 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1453 
=== Usages ===
=== Predecessor ===
v1454 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1667 
=== Usages ===
=== Predecessor ===
v1452 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid i1668 <|@
result int[-259355|0xfffffffffffc0ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -259355
stableDimension: 0
stamp: i32 [-259355] ⇊00000000fffc0ae5 ⇈00000000fffc0ae5
stampKind: i32
value: int[-259355|0xfffffffffffc0ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
v1453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-259355|0xfffffffffffc0ae5]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1429 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid i1660 <|@
result int[-245787|0xfffffffffffc3fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245787
stableDimension: 0
stamp: i32 [-245787] ⇊00000000fffc3fe5 ⇈00000000fffc3fe5
stampKind: i32
value: int[-245787|0xfffffffffffc3fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1649 
=== Predecessor ===
v1429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245787|0xfffffffffffc3fe5]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B56" "B61" "B81" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1652 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-259355 - -241163] ⇊00000000fffc00e5 ⇈00000000fffc7ff5
valueDescription: i32
=== Inputs ===
merge: v1649 
values: i1660 i1664 i1666 i1668 
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1649 values: i1660 i1664 i1666 i1668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1659 v1663 v1665 v1667 
=== Succesors ===
next: v1654 
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1659 v1663 v1665 v1667 #next: v1654  <|@  <|@
f <@*|@fixed>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?384 
actionAndReason: i1652 
speculation: a1609 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1649 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?384 actionAndReason: i1652 speculation: a1609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:16, 11, 40, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:610) [bci: 354]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i382 
y: i201 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i382 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i587 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i382 y: i587  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = SHR v66|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = XOR (x: v66|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD, v116|DWORD] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B47" "B41" "B85" 
    successors "B87" "B121" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i199 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v197 
values: i47 i194 i382 
=== Succesors ===
=== Usages ===
?200 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v197 values: i47 i194 i382  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v197 
values: i47 i589 i590 
=== Succesors ===
=== Usages ===
i629 i208 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v197 values: i47 i589 i590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v198 v549 
=== Succesors ===
next: a2102 
=== Usages ===
i199 i591 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v198 v549 #next: a2102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2102 <|@
result v119|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2118 
=== Succesors ===
next: v2189 
=== Usages ===
a1029 v2189 v2138 v2162 v2193 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2118 #next: v2189  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - i199 
=== Succesors ===
=== Usages ===
v1636 v2189 v2190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
object: a2102 
=== Succesors ===
next: a2103 
=== Usages ===
=== Predecessor ===
a2102 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?200 object: a2102 #next: a2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2103 <|@
result v120|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v2120 
=== Succesors ===
next: v2190 
=== Usages ===
v2190 v2142 v2139 v2140 v2141 
=== Predecessor ===
v2189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2120 #next: v2190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
object: a2103 
=== Succesors ===
next: i2104 
=== Usages ===
=== Predecessor ===
a2103 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?200 object: a2103 #next: i2104  <|@  <|@
f <@~|@floating>@ <|@
tid v2138 <|@
result [v119|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2102 
=== Succesors ===
=== Usages ===
i2104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2104 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2138 
=== Succesors ===
next: v1469 
=== Usages ===
v338 v255 v1221 
=== Predecessor ===
v2190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2138 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i61 
y: i21 
=== Succesors ===
=== Usages ===
v2146 v1221 v2144 v2145 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i61 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i276 
y: i2104 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i276 y: i2104  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1221 
=== Succesors ===
trueSuccessor: v1465 
falseSuccessor: v1468 
=== Usages ===
=== Predecessor ===
i2104 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1221 #trueSuccessor: v1465 #falseSuccessor: v1468  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v117|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v119|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v117|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v120|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOV [v119|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v121|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2105 
=== Usages ===
v1242 v1219 v1200 a2105 
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2105  <|@  <|@
f <@~|@floating>@ <|@
tid a1029 <|@
result v123|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2102 
=== Succesors ===
=== Usages ===
v2145 a574 a574 a574 a574 v2146 v2144 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2102  <|@  <|@
f <@~|@floating>@ <|@
tid v2145 <|@
result [v123|QWORD[.] + v122|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
a2105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2105 <|@
result v124|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2145 
=== Succesors ===
next: v1545 
=== Usages ===
v2175 v1586 v1824 v2143 v2192 
=== Predecessor ===
v1465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1465 address: v2145 #next: v1545  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2105 
=== Succesors ===
=== Usages ===
v1545 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2105  <|@  <|@
f <@*|@fixed>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1586 
=== Succesors ===
trueSuccessor: v1544 
falseSuccessor: v1543 
=== Usages ===
=== Predecessor ===
a2105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1586 #trueSuccessor: v1544 #falseSuccessor: v1543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = UNCOMPRESSPOINTER (input: v119|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[.] = MOV [v123|QWORD[.] + v122|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v124|DWORD[.], y: v124|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612013222126699607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1553 
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1553  <|@  <|@
f <@*|@fixed>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
v1544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626127871424646371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2106  <|@  <|@
f <@~|@floating>@ <|@
tid v2175 <|@
result [v124|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2105 
=== Succesors ===
=== Usages ===
v2106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2106 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2175 
=== Succesors ===
next: v1556 
=== Usages ===
v1899 
=== Predecessor ===
v1543 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2175 #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2106 
y: v1892 
=== Succesors ===
=== Usages ===
i1587 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2106 y: v1892  <|@  <|@
f <@~|@floating>@ <|@
tid i1587 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1899 
trueValue: i21 
falseValue: i47 
=== Succesors ===
=== Usages ===
i1555 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1899 trueValue: i21 falseValue: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
v2106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOV [v124|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v125|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v126|DWORD] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" "B89" 
    successors "B91" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1555 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1552 
values: i47 i1587 
=== Succesors ===
=== Usages ===
v1588 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1552 values: i47 i1587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1553 v1556 
=== Succesors ===
next: i2107 
=== Usages ===
i1555 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1553 v1556 #next: i2107  <|@  <|@
f <@~|@floating>@ <|@
tid v2140 <|@
result [v120|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2103 
=== Succesors ===
=== Usages ===
i2107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2107 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2140 
=== Succesors ===
next: v341 
=== Usages ===
v1163 v1154 i351 v1053 i630 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2140 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1555 
y: i47 
=== Succesors ===
=== Usages ===
v149 v125 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1555 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2104 
y: i213 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2104 y: i213  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 8
stamp: i8
=== Inputs ===
value: i75 
=== Succesors ===
=== Usages ===
v1161 v1061 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.816586191655617
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v340 
=== Usages ===
=== Predecessor ===
i2107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v339 #falseSuccessor: v340  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v127|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = MOV [v120|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v121|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625624176796094775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i2107 
y: i102 
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2107 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i591 
y: i630 
=== Succesors ===
=== Usages ===
v2139 v1053 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i591 y: i630  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i629 
y: i2107 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i629 y: i2107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1053 
=== Succesors ===
trueSuccessor: v1470 
falseSuccessor: v1473 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1053 #trueSuccessor: v1470 #falseSuccessor: v1473  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = DEC v128|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = AND (x: v118|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625624176796094775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2108 
=== Usages ===
i2108 v1061 
=== Predecessor ===
v1474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2108  <|@  <|@
f <@~|@floating>@ <|@
tid v2139 <|@
result [v130|DWORD + v120|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i629 
index: a2103 
=== Succesors ===
=== Usages ===
v1061 i2108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i629 index: a2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2108 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1470 
address: v2139 
=== Succesors ===
next: v1061 
=== Usages ===
i1051 i1275 
=== Predecessor ===
v1470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1470 address: v2139 #next: v1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1470 
address: v2139 
value: i249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
i2108 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1470 address: v2139 value: i249 stateAfter: - lastLocationAccess: - #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid i1275 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2108 
=== Succesors ===
=== Usages ===
i746 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2108  <|@  <|@
f <@~|@floating>@ <|@
tid i746 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 254]
=== Inputs ===
x: i1275 
y: i102 
=== Succesors ===
=== Usages ===
i674 i675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1275 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i1051 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i2108 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2108  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
x: i1051 
y: i220 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1051 y: i220  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8688054406151153
=== Inputs ===
condition: v837 
=== Succesors ===
trueSuccessor: v831 
falseSuccessor: v832 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v837 #trueSuccessor: v831 #falseSuccessor: v832  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVSXB [v130|DWORD + v120|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v130|DWORD + v120|DWORD[.] * 8 + 16], y: v54|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVZXB v131|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = DEC v132|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVSXB v131|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v134|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4624757706266086888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
v831 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|DWORD] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612357738866430486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@*|@fixed>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|DWORD] destination: B94 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1641 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid i1642 <|@
result int[-269851|0xfffffffffffbe1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269851
stableDimension: 0
stamp: i32 [-269851] ⇊00000000fffbe1e5 ⇈00000000fffbe1e5
stampKind: i32
value: int[-269851|0xfffffffffffbe1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
v1473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269851|0xfffffffffffbe1e5]] destination: B95 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2104 
y: i27 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2104 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v1475 
falseSuccessor: v1478 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v1475 #falseSuccessor: v1478  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v121|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B119" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i2107 
y: i21 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2107 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i351 
y: i102 
=== Succesors ===
=== Usages ===
i208 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i351 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i207 
y: i591 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i207 y: i591  <|@  <|@
f <@~|@floating>@ <|@
tid i257 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i208 
y: i21 
=== Succesors ===
=== Usages ===
v1154 i262 v2142 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i208 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i257 
y: i2107 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i257 y: i2107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1154 
=== Succesors ===
trueSuccessor: v1480 
falseSuccessor: v1483 
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1154 #trueSuccessor: v1480 #falseSuccessor: v1483  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = SHR v128|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = DEC v135|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = AND (x: v136|DWORD, y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = SHL v137|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1489 
=== Usages ===
v1161 i2109 
=== Predecessor ===
v1484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i257 
y: i21 
=== Succesors ===
=== Usages ===
v1163 v2141 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i257 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i262 
y: i2107 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i262 y: i2107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1163 
=== Succesors ===
trueSuccessor: v1485 
falseSuccessor: v1488 
=== Usages ===
=== Predecessor ===
v1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1163 #trueSuccessor: v1485 #falseSuccessor: v1488  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = INC v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2109 
=== Usages ===
v1171 i2110 
=== Predecessor ===
v1489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2109  <|@  <|@
f <@~|@floating>@ <|@
tid v2142 <|@
result [v138|DWORD + v120|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i257 
index: a2103 
=== Succesors ===
=== Usages ===
v1161 i2109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i257 index: a2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2109 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1480 
address: v2142 
=== Succesors ===
next: i2110 
=== Usages ===
i1283 
=== Predecessor ===
v1485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1480 address: v2142 #next: i2110  <|@  <|@
f <@~|@floating>@ <|@
tid v2141 <|@
result [v139|DWORD + v120|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i262 
index: a2103 
=== Succesors ===
=== Usages ===
i2110 v1171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i262 index: a2103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2110 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1485 
address: v2141 
=== Succesors ===
next: v1161 
=== Usages ===
i1285 
=== Predecessor ===
i2109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1485 address: v2141 #next: v1161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1480 
address: v2142 
value: i249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
i2110 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1480 address: v2142 value: i249 stateAfter: - lastLocationAccess: - #next: v1171  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i75 
y: i88 
=== Succesors ===
=== Usages ===
i264 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i75 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 8
stamp: i8
=== Inputs ===
value: i263 
=== Succesors ===
=== Usages ===
v1171 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1171 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1485 
address: v2141 
value: i264 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v1161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1485 address: v2141 value: i264 stateAfter: - lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i1285 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2110 
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2110  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65280] ⇈000000000000ff00
=== Inputs ===
x: i1285 
y: i88 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1285 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i1283 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2109 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2109  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i235 
y: i1283 
=== Succesors ===
=== Usages ===
v104 i103 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i235 y: i1283  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i236 
y: i102 
=== Succesors ===
=== Usages ===
i675 i674 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i236 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i47 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i236 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8688054406151153
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v1171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVSXB [v138|DWORD + v120|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVSXB [v139|DWORD + v120|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v138|DWORD + v120|DWORD[.] * 8 + 16], y: v54|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = SAR v54|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v139|DWORD + v120|DWORD[.] * 8 + 16], y: v142|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVZXB v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = SHL v143|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVZXB v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = OR (x: v144|DWORD, y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = DEC v146|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v146|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614880348082334393
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v147|DWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B93" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625939502948082763
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i675 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v665 
values: i103 i746 
=== Succesors ===
=== Usages ===
?647 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v665 values: i103 i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v666 v835 
=== Succesors ===
next: v149 
=== Usages ===
i675 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v666 v835 #next: v149  <|@  <|@
tid ?647 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 568
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 - - i675 - - 
=== Succesors ===
=== Usages ===
v1364 v1491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 - - i675 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.9646655098717876
=== Inputs ===
condition: v1588 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1588 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v148|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v127|DWORD, y: v127|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9646655098717876 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4625754128133143130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?647 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?647 #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v50|DWORD - - v148|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v123|QWORD[.]] destination: B102 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604107213623344681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:579) [bci: 143]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2111  <|@  <|@
f <@~|@floating>@ <|@
tid v2162 <|@
result [v119|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2102 
=== Succesors ===
=== Usages ===
v2111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2111 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2162 
=== Succesors ===
next: v1494 
=== Usages ===
v1888 
=== Predecessor ===
v147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2162 #next: v1494  <|@  <|@
f <@~|@floating>@ <|@
tid v1888 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2111 
y: v1887 
=== Succesors ===
=== Usages ===
v1494 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2111 y: v1887  <|@  <|@
f <@*|@fixed>@ <|@
tid v1494 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1888 
=== Succesors ===
trueSuccessor: v1490 
falseSuccessor: v1493 
=== Usages ===
=== Predecessor ===
v2111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1888 #trueSuccessor: v1490 #falseSuccessor: v1493  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v119|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4604107213623344681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2112 
=== Usages ===
=== Predecessor ===
v1494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2143 <|@
result [v124|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2105 
=== Succesors ===
=== Usages ===
a2112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2112 <|@
result v149|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2143 
=== Succesors ===
next: v1200 
=== Usages ===
?316 v1200 
=== Predecessor ===
v1490 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2143 #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid v2144 <|@
result [v123|QWORD[.] + v122|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
v1200 j1771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2144 
value: a2112 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1771 
=== Usages ===
=== Predecessor ===
a2112 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2144 value: a2112 stateAfter: - lastLocationAccess: - #next: j1771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1771 <|@
result [v123|QWORD[.] + v122|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2144 
=== Succesors ===
next: v1775 
=== Usages ===
j1772 
=== Predecessor ===
v1200 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2144 #next: v1775  <|@  <|@
f <@~|@floating>@ <|@
tid j1772 <|@
result v150|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1771 
y: i1754 
=== Succesors ===
=== Usages ===
v2163 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1771 y: i1754  <|@  <|@
f <@~|@floating>@ <|@
tid v2163 <|@
result [v150|QWORD[*] + v46|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1772 
index: j1758 
=== Succesors ===
=== Usages ===
v1775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1772 index: j1758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2163 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1363 
=== Usages ===
=== Predecessor ===
j1771 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2163 value: i1246 stateAfter: - lastLocationAccess: - #next: v1363  <|@  <|@
tid ?318 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 580
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?318 
values: a1 i51 a2112 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?318 values: a1 i51 a2112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v1775 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|DWORD[.] = MOV [v124|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v123|QWORD[.] + v122|DWORD * 4 + 16], y: v149|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = LEA [v123|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[*] = SHR v151|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v150|QWORD[*] + v46|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v50|DWORD v149|DWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 157, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v123|QWORD[.]] destination: B104 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1494 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1491  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1189
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@573535694]
stamp: void
=== Inputs ===
stateBefore: ?647 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -304444 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v152|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v50|DWORD - - v148|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602824943836388355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v669  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v147|DWORD] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B94" 
    successors "B108" "B117" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4613520169939208471
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i674 <|@
result v153|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v668 
values: i103 i746 
=== Succesors ===
=== Usages ===
v1871 v1822 ?670 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v668 values: i103 i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v669 v836 
=== Succesors ===
next: v2113 
=== Usages ===
i674 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v669 v836 #next: v2113  <|@  <|@
f <@~|@floating>@ <|@
tid v2193 <|@
result [v119|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2102 
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2102  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2113 <|@
result v154|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2193 
=== Succesors ===
next: v1499 
=== Usages ===
v2071 
=== Predecessor ===
v668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2193 #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2113 
y: v1887 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2113 y: v1887  <|@  <|@
tid ?670 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 568
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 - - i674 - - 
=== Succesors ===
=== Usages ===
a1793 a1843 v1496 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 - - i674 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2071 
=== Succesors ===
trueSuccessor: v1495 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
v2113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2071 #trueSuccessor: v1495 #falseSuccessor: v1498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOV [v119|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v154|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4613520169939208471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j1781 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1781 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1797 
=== Usages ===
v2170 v2169 
=== Predecessor ===
v1495 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1797  <|@  <|@
f <@~|@floating>@ <|@
tid v2169 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1781 
index: - 
=== Succesors ===
=== Usages ===
v1799 v1849 j1797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1781 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1797 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2169 
=== Succesors ===
next: j1798 
=== Usages ===
v2179 j1803 j1853 j1895 v2191 
=== Predecessor ===
j1781 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2169 #next: j1798  <|@  <|@
f <@~|@floating>@ <|@
tid v2170 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1781 
index: - 
=== Succesors ===
=== Usages ===
j1798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1781 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1798 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2170 
=== Succesors ===
next: v125 
=== Usages ===
v1837 
=== Predecessor ===
j1797 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2170 #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid j1895 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1797 
y: j888 
=== Succesors ===
=== Usages ===
v1837 v1849 v1799 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1797 y: j888  <|@  <|@
f <@~|@floating>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1798 
y: j1895 
=== Succesors ===
=== Usages ===
v1840 v1789 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1798 y: j1895  <|@  <|@
f <@~|@floating>@ <|@
tid v2146 <|@
result [v123|QWORD[.] + v122|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
v1242 v1219 j1874 j1825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.7011387517716632
=== Inputs ===
condition: v1588 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
j1798 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1588 #trueSuccessor: v124 #falseSuccessor: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v155|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v127|DWORD, y: v127|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7011387517716632 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4611566105018190629
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 113]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1789 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1789  <|@  <|@
f <@*|@fixed>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1837 
=== Succesors ===
trueSuccessor: v1787 
falseSuccessor: v1788 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1837 #trueSuccessor: v1787 #falseSuccessor: v1788  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581345084349571920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1793 
=== Usages ===
=== Predecessor ===
v1789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1793 <|@
result v158|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?670 
arguments: v1779 i37 i21 
=== Succesors ===
next: j1794 
=== Usages ===
j1794 
=== Predecessor ===
v1787 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?670 arguments: v1779 i37 i21 #next: j1794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1794 <|@
result v158|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1793 
=== Succesors ===
next: v1804 
=== Usages ===
j1803 
=== Predecessor ===
a1793 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1793 #next: v1804  <|@  <|@
f <@*|@fixed>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1801 
=== Predecessor ===
j1794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v50|DWORD - - v153|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD[.]] destination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4611477232159735192
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1799 
=== Usages ===
=== Predecessor ===
v1789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2169 
value: j1895 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1796 
=== Usages ===
=== Predecessor ===
v1788 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2169 value: j1895 stateAfter: - lastLocationAccess: - #next: v1796  <|@  <|@
f <@~|@floating>@ <|@
tid v2191 <|@
result [v155|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: - 
=== Succesors ===
=== Usages ===
v1796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2191 
=== Succesors ===
next: v1802 
=== Usages ===
=== Predecessor ===
v1799 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2191 #next: v1802  <|@  <|@
f <@*|@fixed>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1801 
=== Predecessor ===
v1796 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v155|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v155|QWORD] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B110" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4611566105018190629
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1803 <|@
result v159|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1801 
values: j1797 j1794 
=== Succesors ===
=== Usages ===
v2167 v2166 a1572 v2177 v2178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1801 values: j1797 j1794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1802 v1804 
=== Succesors ===
next: a1572 
=== Usages ===
j1803 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1802 v1804 #next: a1572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1572 <|@
result v160|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1803 
=== Succesors ===
next: j1814 
=== Usages ===
a1578 
=== Predecessor ===
v1801 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1803 #next: j1814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1814 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2171 
=== Succesors ===
next: v1815 
=== Usages ===
v1815 
=== Predecessor ===
a1572 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2171 #next: v1815  <|@  <|@
f <@~|@floating>@ <|@
tid v2166 <|@
result [v159|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1803 
index: - 
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1803 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2166 
value: j1814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1818 
=== Usages ===
=== Predecessor ===
j1814 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2166 value: j1814 stateAfter: - lastLocationAccess: - #next: v1818  <|@  <|@
f <@~|@floating>@ <|@
tid v2167 <|@
result [v159|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1803 
index: - 
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1803 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2167 
value: v1892 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1822 
=== Usages ===
=== Predecessor ===
v1815 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2167 value: v1892 stateAfter: - lastLocationAccess: - #next: v1822  <|@  <|@
f <@~|@floating>@ <|@
tid v2177 <|@
result [v159|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1803 
index: - 
=== Succesors ===
=== Usages ===
v1822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1803 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2177 
value: i674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1824 
=== Usages ===
=== Predecessor ===
v1818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2177 value: i674 stateAfter: - lastLocationAccess: - #next: v1824  <|@  <|@
f <@~|@floating>@ <|@
tid v2178 <|@
result [v159|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1803 
index: - 
=== Succesors ===
=== Usages ===
v1824 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1803 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2178 
value: a2105 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1578 
=== Usages ===
=== Predecessor ===
v1822 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2178 value: a2105 stateAfter: - lastLocationAccess: - #next: a1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1578 <|@
result v160|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1572 
=== Succesors ===
next: v1579 
=== Usages ===
a1241 ?806 
=== Predecessor ===
v1824 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1572 #next: v1579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
a1578 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1242  <|@  <|@
f <@~|@floating>@ <|@
tid a1241 <|@
result v162|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Compress
stamp: n -
=== Inputs ===
value: a1578 
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2146 
value: a1241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1825 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2146 value: a1241 stateAfter: - lastLocationAccess: - #next: j1825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1825 <|@
result [v123|QWORD[.] + v122|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2146 
=== Succesors ===
next: v1829 
=== Usages ===
j1826 
=== Predecessor ===
v1242 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2146 #next: v1829  <|@  <|@
f <@~|@floating>@ <|@
tid j1826 <|@
result v163|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1825 
y: i1754 
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1825 y: i1754  <|@  <|@
f <@~|@floating>@ <|@
tid v2168 <|@
result [v163|QWORD[*] + v46|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1826 
index: j1758 
=== Succesors ===
=== Usages ===
v1829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1826 index: j1758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2168 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
j1825 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2168 value: i1246 stateAfter: - lastLocationAccess: - #next: v1365  <|@  <|@
tid ?297 <|@
d <@d|@=== Debug Properties ===
bci: 129
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 575
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?295 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid ?806 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a555 
materializedValue: a1578 
=== Succesors ===
=== Usages ===
?295 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a555 materializedValue: a1578  <|@  <|@
tid ?295 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?297 
values: a1 i51 a555 
virtualObjectMappings: ?806 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?297 values: a1 i51 a555 virtualObjectMappings: ?806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?295 
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?295 #next: v548  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE v159|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = MOV [v48|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v159|QWORD[*]], y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v159|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v159|QWORD[*] + 12], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v159|QWORD[*] + 16], y: v124|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|DWORD[.] = COMPRESSPOINTER (input: v160|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v123|QWORD[.] + v122|DWORD * 4 + 16], y: v162|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = LEA [v123|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[*] = SHR v164|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v163|QWORD[*] + v46|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v50|DWORD v160|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 129, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v123|QWORD[.]] destination: B112 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605751652410953235
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:572) [bci: 84]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1840 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1837 
=== Succesors ===
trueSuccessor: v1838 
falseSuccessor: v1839 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1837 #trueSuccessor: v1838 #falseSuccessor: v1839  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576002538815086608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1843 
=== Usages ===
=== Predecessor ===
v1840 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1843 <|@
result v165|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?670 
arguments: v1779 i37 i21 
=== Succesors ===
next: j1844 
=== Usages ===
j1844 
=== Predecessor ===
v1838 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?670 arguments: v1779 i37 i21 #next: j1844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1844 <|@
result v165|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1843 
=== Succesors ===
next: v1854 
=== Usages ===
j1853 
=== Predecessor ===
a1843 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1843 #next: v1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
j1844 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v50|DWORD - - v153|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD[.]] destination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605675888082296467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1849 
=== Usages ===
=== Predecessor ===
v1840 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2169 
value: j1895 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1846 
=== Usages ===
=== Predecessor ===
v1839 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2169 value: j1895 stateAfter: - lastLocationAccess: - #next: v1846  <|@  <|@
f <@~|@floating>@ <|@
tid v2179 <|@
result [v155|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1797 
index: - 
=== Succesors ===
=== Usages ===
v1846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2179 
=== Succesors ===
next: v1852 
=== Usages ===
=== Predecessor ===
v1849 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2179 #next: v1852  <|@  <|@
f <@*|@fixed>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1851 
=== Predecessor ===
v1846 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v155|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v155|QWORD] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" "B114" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605751652410953235
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1853 <|@
result v166|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1851 
values: j1797 j1844 
=== Succesors ===
=== Usages ===
v2173 v2172 a1562 v2180 v2181 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1851 values: j1797 j1844  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1852 v1854 
=== Succesors ===
next: a1562 
=== Usages ===
j1853 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1852 v1854 #next: a1562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1562 <|@
result v167|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1853 
=== Succesors ===
next: j1863 
=== Usages ===
a1568 
=== Predecessor ===
v1851 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1853 #next: j1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1863 <|@
result v168|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2171 
=== Succesors ===
next: v1864 
=== Usages ===
v1864 
=== Predecessor ===
a1562 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2171 #next: v1864  <|@  <|@
f <@~|@floating>@ <|@
tid v2172 <|@
result [v166|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1853 
index: - 
=== Succesors ===
=== Usages ===
v1864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2172 
value: j1863 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1867 
=== Usages ===
=== Predecessor ===
j1863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2172 value: j1863 stateAfter: - lastLocationAccess: - #next: v1867  <|@  <|@
f <@~|@floating>@ <|@
tid v2173 <|@
result [v166|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1853 
index: - 
=== Succesors ===
=== Usages ===
v1867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2173 
value: v1892 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1871 
=== Usages ===
=== Predecessor ===
v1864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2173 value: v1892 stateAfter: - lastLocationAccess: - #next: v1871  <|@  <|@
f <@~|@floating>@ <|@
tid v2180 <|@
result [v166|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1853 
index: - 
=== Succesors ===
=== Usages ===
v1871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2180 
value: i674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2114 
=== Usages ===
=== Predecessor ===
v1867 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2180 value: i674 stateAfter: - lastLocationAccess: - #next: a2114  <|@  <|@
f <@~|@floating>@ <|@
tid v2192 <|@
result [v124|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2105 
=== Succesors ===
=== Usages ===
a2114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2114 <|@
result v169|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 99]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2192 
=== Succesors ===
next: v1873 
=== Usages ===
v1873 
=== Predecessor ===
v1871 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2192 #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid v2181 <|@
result [v166|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1853 
index: - 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2181 
value: a2114 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1568 
=== Usages ===
=== Predecessor ===
a2114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2181 value: a2114 stateAfter: - lastLocationAccess: - #next: a1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1568 <|@
result v167|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1562 
=== Succesors ===
next: v1569 
=== Usages ===
a1218 ?803 
=== Predecessor ===
v1873 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1562 #next: v1569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
a1568 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid a1218 <|@
result v170|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Compress
stamp: n -
=== Inputs ===
value: a1568 
=== Succesors ===
=== Usages ===
v1219 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2146 
value: a1218 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1874 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2146 value: a1218 stateAfter: - lastLocationAccess: - #next: j1874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1874 <|@
result [v123|QWORD[.] + v122|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2146 
=== Succesors ===
next: v1878 
=== Usages ===
j1875 
=== Predecessor ===
v1219 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2146 #next: v1878  <|@  <|@
f <@~|@floating>@ <|@
tid j1875 <|@
result v171|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1874 
y: i1754 
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1874 y: i1754  <|@  <|@
f <@~|@floating>@ <|@
tid v2174 <|@
result [v171|QWORD[*] + v46|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1875 
index: j1758 
=== Succesors ===
=== Usages ===
v1878 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1875 index: j1758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2174 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
j1874 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2174 value: i1246 stateAfter: - lastLocationAccess: - #next: v1362  <|@  <|@
tid ?311 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 573
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?309 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid a551 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@4f600041
hasIdentity: true
objectId: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?309 ?803 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?803 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a551 
materializedValue: a1568 
=== Succesors ===
=== Usages ===
?309 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a551 materializedValue: a1568  <|@  <|@
tid ?309 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?311 
values: a1 i51 a551 
virtualObjectMappings: ?803 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?311 values: a1 i51 a551 virtualObjectMappings: ?803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?309 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v1878 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?309 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = MOV [v48|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v166|QWORD[*]], y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v166|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v166|QWORD[*] + 12], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD[.] = MOV [v124|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v166|QWORD[*] + 16], y: v169|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v170|DWORD[.] = COMPRESSPOINTER (input: v167|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v123|QWORD[.] + v122|DWORD * 4 + 16], y: v170|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = LEA [v123|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[*] = SHR v172|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v171|QWORD[*] + v46|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v50|DWORD v167|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 107, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v123|QWORD[.]] destination: B116 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1496  <|@  <|@
f <@*|@fixed>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1359
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@573535694]
stamp: void
=== Inputs ===
stateBefore: ?670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -347964 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v173|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v50|DWORD - - v153|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1489 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid i1648 <|@
result int[-288283|0xfffffffffffb99e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288283
stableDimension: 0
stamp: i32 [-288283] ⇊00000000fffb99e5 ⇈00000000fffb99e5
stampKind: i32
value: int[-288283|0xfffffffffffb99e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
v1488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288283|0xfffffffffffb99e5]] destination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1645 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1645  <|@  <|@
f <@~|@floating>@ <|@
tid i1646 <|@
result int[-285723|0xfffffffffffba3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -285723
stableDimension: 0
stamp: i32 [-285723] ⇊00000000fffba3e5 ⇈00000000fffba3e5
stampKind: i32
value: int[-285723|0xfffffffffffba3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
v1483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-285723|0xfffffffffffba3e5]] destination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid i1644 <|@
result int[-274451|0xfffffffffffbcfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274451
stableDimension: 0
stamp: i32 [-274451] ⇊00000000fffbcfed ⇈00000000fffbcfed
stampKind: i32
value: int[-274451|0xfffffffffffbcfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
v1478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274451|0xfffffffffffbcfed]] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1639 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1639  <|@  <|@
f <@~|@floating>@ <|@
tid i1640 <|@
result int[-347419|0xfffffffffffab2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -347419
stableDimension: 0
stamp: i32 [-347419] ⇊00000000fffab2e5 ⇈00000000fffab2e5
stampKind: i32
value: int[-347419|0xfffffffffffab2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
v1468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-347419|0xfffffffffffab2e5]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B95" "B120" "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1634 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-347419 - -263947] ⇊00000000fffa80e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1631 
values: i1640 i1642 i1644 i1646 i1648 
=== Succesors ===
=== Usages ===
v1636 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1631 values: i1640 i1642 i1644 i1646 i1648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1639 v1641 v1643 v1645 v1647 
=== Succesors ===
next: v1636 
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1639 v1641 v1643 v1645 v1647 #next: v1636  <|@  <|@
f <@*|@fixed>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
actionAndReason: i1634 
speculation: a1609 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?200 actionAndReason: i1634 speculation: a1609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v174|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v174|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v117|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:52, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1627 
=== Usages ===
=== Predecessor ===
v2066 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1627  <|@  <|@
f <@~|@floating>@ <|@
tid i1628 <|@
result int[-237091|0xfffffffffffc61dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -237091
stableDimension: 0
stamp: i32 [-237091] ⇊00000000fffc61dd ⇈00000000fffc61dd
stampKind: i32
value: int[-237091|0xfffffffffffc61dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
v1400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-237091|0xfffffffffffc61dd]] destination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1625 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1625  <|@  <|@
f <@~|@floating>@ <|@
tid i1626 <|@
result int[-236083|0xfffffffffffc65cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -236083
stableDimension: 0
stamp: i32 [-236083] ⇊00000000fffc65cd ⇈00000000fffc65cd
stampKind: i32
value: int[-236083|0xfffffffffffc65cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
v1395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-236083|0xfffffffffffc65cd]] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1621 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1621  <|@  <|@
f <@~|@floating>@ <|@
tid i1622 <|@
result int[-233243|0xfffffffffffc70e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -233243
stableDimension: 0
stamp: i32 [-233243] ⇊00000000fffc70e5 ⇈00000000fffc70e5
stampKind: i32
value: int[-233243|0xfffffffffffc70e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
v1385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-233243|0xfffffffffffc70e5]] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B43" "B124" "B123" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1618 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-238347 - -231947] ⇊00000000fffc40c5 ⇈00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1615 
values: i1622 i1624 i1626 i1628 
=== Succesors ===
=== Usages ===
v1620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1615 values: i1622 i1624 i1626 i1628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1621 v1623 v1625 v1627 
=== Succesors ===
next: v1620 
=== Usages ===
i1618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1621 v1623 v1625 v1627 #next: v1620  <|@  <|@
f <@*|@fixed>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?52 
actionAndReason: i1618 
speculation: a1609 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1615 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?52 actionAndReason: i1618 speculation: a1609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v175|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v175|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:558) [bci: 108]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:558) [bci: 108]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1917 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1917  <|@  <|@
f <@*|@fixed>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1913 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1918 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1913  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B128 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1612 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1612  <|@  <|@
f <@~|@floating>@ <|@
tid i1614 <|@
result int[-229651|0xfffffffffffc7eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229651
stableDimension: 0
stamp: i32 [-229651] ⇊00000000fffc7eed ⇈00000000fffc7eed
stampKind: i32
value: int[-229651|0xfffffffffffc7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?13 
actionAndReason: i1614 
speculation: a1609 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?13 actionAndReason: i1614 speculation: a1609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -229651 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v8|DWORD v9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609456767561375530
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?13 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?13 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 17]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i12 
y: i21 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v8|DWORD v9|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = SHL v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v176|DWORD] destination: B130 -> B1 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5d8708a4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v5|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v7|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v1|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609456767561375530
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v8|DWORD v9|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = SHL v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v176|DWORD] destination: B130 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B130" 
    successors "B2" "B130" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612823192808066965
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.399200501646026 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B129" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v8|DWORD v9|DWORD - - 
>@ <|@ instruction CMP [v10|DWORD[.] * 8 + 12] y: 131072 size: DWORD state [bci:10] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL v9|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606281698874543308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA [v13|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND v14|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVSXD v15|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606200634081250639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v16|QWORD + v11|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v16|QWORD + v11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v16|QWORD + v11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v16|QWORD + v11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 12], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = LEA [v21|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v23|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v23|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v28|QWORD * 1], input: v30|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v28|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v23|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v32|QWORD * 1], input: v34|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v32|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v23|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v36|QWORD * 1], input: v38|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v36|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = DEC v23|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v22|QWORD[.] + v40|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = INC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738169498697727
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v22|QWORD[.] + v40|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v40|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4596767844661723134
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v22|QWORD[.] + v40|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B10" "B31" "B26" "B28" "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|QWORD[*] + v46|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v47|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B116" "B104" "B102" "B112" 
    successors "B34" "B127" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4627022591482714271
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|QWORD[.]] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9555287796899239 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B125" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626741116506003615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHL v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction CMP (x: v52|DWORD, y: [v51|QWORD[.] + 12]) size: DWORD state [bci:74] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626741116506003615
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v51|QWORD[.] + v52|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = INC v50|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|DWORD[.], y: v53|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0015533767669660724 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v55|DWORD[.], y: v55|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6705794984965615 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4624288212235113577
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626462860253486138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHR v57|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = XOR (x: v57|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD, v59|DWORD] destination: B41 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B47" "B41" "B85" 
    successors "B87" "B121" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v117|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v119|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v117|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v120|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOV [v119|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = INC v52|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v121|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = UNCOMPRESSPOINTER (input: v119|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v124|DWORD[.] = MOV [v123|QWORD[.] + v122|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v124|DWORD[.], y: v124|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626127871424646371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOV [v124|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v125|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v126|DWORD] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" "B89" 
    successors "B91" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr   -1  <|@ instruction [v127|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = MOV [v120|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v121|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625624176796094775
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = DEC v128|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = AND (x: v118|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625624176796094775
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVSXB [v130|DWORD + v120|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v130|DWORD + v120|DWORD[.] * 8 + 16], y: v54|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVZXB v131|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = DEC v132|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVSXB v131|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v134|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4624757706266086888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|DWORD] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B93" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625939502948082763
    begin_IR
      LIR
      nr   -1  <|@ instruction [v148|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v127|DWORD, y: v127|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9646655098717876 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4625754128133143130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v50|DWORD - - v148|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v123|QWORD[.]] destination: B102 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4619642846700088551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v55|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8648398191938089 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618567400352106519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v121|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B119" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = SHR v128|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = DEC v135|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = AND (x: v136|DWORD, y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = SHL v137|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|DWORD, y: v138|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = INC v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v128|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVSXB [v138|DWORD + v120|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVSXB [v139|DWORD + v120|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v138|DWORD + v120|DWORD[.] * 8 + 16], y: v54|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = SAR v54|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v139|DWORD + v120|DWORD[.] * 8 + 16], y: v142|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = MOVZXB v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = SHL v143|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVZXB v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = OR (x: v144|DWORD, y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = DEC v146|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v146|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614880348082334393
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v147|DWORD] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612357738866430486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|DWORD] destination: B94 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B94" 
    successors "B108" "B117" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4613520169939208471
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|DWORD = MOV [v119|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v154|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4613520169939208471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v155|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v127|DWORD, y: v127|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7011387517716632 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4611566105018190629
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4611477232159735192
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v155|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v155|QWORD] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B110" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4611566105018190629
    begin_IR
      LIR
      nr   -1  <|@ instruction [v159|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE v159|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = MOV [v48|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v159|QWORD[*]], y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v159|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v159|QWORD[*] + 12], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v159|QWORD[*] + 16], y: v124|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|DWORD[.] = COMPRESSPOINTER (input: v160|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v123|QWORD[.] + v122|DWORD * 4 + 16], y: v162|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = LEA [v123|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[*] = SHR v164|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v163|QWORD[*] + v46|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v50|DWORD v160|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 129, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v123|QWORD[.]] destination: B112 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612013222126699607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v55|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B124" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v55|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B123" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOV [v53|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: [v60|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = MOV [v53|DWORD[.] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction v63|DWORD = MOVZXB [v62|DWORD[.] * 8 + 48] size: DWORD state [bci:74] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v62|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|DWORD, int[0|0x0]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B82" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = MOV [v68|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction CMP (x: v67|DWORD, y: [v71|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B77" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = MOV [v72|QWORD[.] + v67|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction v74|QWORD = MOV [v73|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|QWORD, y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B78" "B80" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [v105|QWORD[.] + v67|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD[.] = MOV [v106|QWORD + v53|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v107|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
stack: v66|DWORD 
locals: v62|DWORD[.] v65|QWORD[.] - v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:338, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = ADD (x: v109|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v110|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B54" "B59" "B64" "B67" "B69" "B71" "B73" "B75" "B76" "B78" "B65" 
    successors "B49" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
locals: v62|DWORD[.] v65|QWORD[.] v111|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:343, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = IMUL v111|DWORD y: 13 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|DWORD, v113|DWORD] destination: B79 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B79" 
    successors "B50" "B85" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4606778790329132676
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOV [v62|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction v69|DWORD[.] = MOV [v68|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction v70|DWORD = MOV [v69|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B57" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" "B66" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4584260792192280196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4575253592937539204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4570749993310168708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4566246393682798212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4561742794055427716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v75|QWORD[.] + v67|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = ADD (x: v66|DWORD, ~y: [v76|QWORD + v53|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|DWORD] destination: B54 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [v78|QWORD[.] + v67|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [v79|QWORD + v53|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = SHR v80|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = XOR (x: v82|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = ADD (x: v81|QWORD, y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV v84|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|DWORD] destination: B59 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4584260792192280196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:121, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v87|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA [v66|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD] destination: B65 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:151, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v89|SINGLE = VMOVE xmm0|SINGLE <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = VMOVD v89|SINGLE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = ADD (x: v90|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|DWORD] destination: B67 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD] destination: B64 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4575253592937539204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:181, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v92|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = VMOVQ v92|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = SHR v93|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = XOR (x: v93|QWORD, y: v94|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVSXD v66|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = ADD (x: v95|QWORD, y: v96|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOV v97|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|DWORD] destination: B69 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4570749993310168708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:223, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = ADD (x: v99|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v100|DWORD] destination: B71 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4566246393682798212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:250, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v101|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v102|DWORD] destination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4561742794055427716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v86|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:277, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = ADD (x: v103|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605751652410953235
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v156|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605675888082296467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v155|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v155|QWORD] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" "B114" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605751652410953235
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = MOVE v166|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = MOV [v48|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v166|QWORD[*]], y: v168|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v166|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v166|QWORD[*] + 12], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD[.] = MOV [v124|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v166|QWORD[*] + 16], y: v169|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v170|DWORD[.] = COMPRESSPOINTER (input: v167|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v123|QWORD[.] + v122|DWORD * 4 + 16], y: v170|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = LEA [v123|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v171|QWORD[*] = SHR v172|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v171|QWORD[*] + v46|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v50|DWORD v167|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 107, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v123|QWORD[.]] destination: B116 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604107213623344681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v119|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4604107213623344681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|DWORD[.] = MOV [v124|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v123|QWORD[.] + v122|DWORD * 4 + 16], y: v149|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = LEA [v123|QWORD[.] + v122|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[*] = SHR v151|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v150|QWORD[*] + v46|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v50|DWORD v149|DWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 157, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v123|QWORD[.]] destination: B104 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602824943836388355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v147|DWORD] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B47 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = SHR v66|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = XOR (x: v66|DWORD, y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|DWORD, v116|DWORD] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4584970889783042265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:74] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD, v51|QWORD[.]] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581345084349571920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v178|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v50|DWORD - - v153|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v158|QWORD[.]] destination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576002538815086608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v177|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v177|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v50|DWORD - - v153|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD[.]] destination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B32" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B128 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B128" 
    successors "B15" "B128" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v26|QWORD * 1], input: v25|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v26|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592518698413299071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v8|DWORD v9|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591419820104220671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4589730970243956735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784255
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245787|0xfffffffffffc3fe5]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B56" "B61" "B81" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v62|DWORD[.] v65|QWORD[.] v66|DWORD v67|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:16, 11, 40, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269851|0xfffffffffffbe1e5]] destination: B95 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B95" "B120" "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v174|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v174|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v117|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v50|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:52, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-259355|0xfffffffffffc0ae5]] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -347964 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v173|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v50|DWORD - - v153|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -304444 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v152|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v50|DWORD - - v148|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-347419|0xfffffffffffab2e5]] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-236083|0xfffffffffffc65cd]] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B43" "B124" "B123" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v175|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v175|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v50|DWORD - 
>@ <|@ instruction DEOPT info [bci:74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235795|0xfffffffffffc66ed]] destination: B43 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -229651 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v8|DWORD v9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-233243|0xfffffffffffc70e5]] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288283|0xfffffffffffb99e5]] destination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-237091|0xfffffffffffc61dd]] destination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248603|0xfffffffffffc34e5]] destination: B56 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-285723|0xfffffffffffba3e5]] destination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274451|0xfffffffffffbcfed]] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251675|0xfffffffffffc28e5]] destination: B61 -> B84 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #55         // size:()int
     4: istore_1      
     5: aload_0       
     6: invokespecial #57         // getHashThreshold:()int
     9: istore_2      
    10: iload_2       
    11: iload_1       
    12: if_icmpgt     22
    15: iload_2       
    16: iconst_1      
    17: ishl          
    18: istore_2      
    19: goto          10
    22: iload_2       
    23: iconst_1      
    24: ishl          
    25: istore_2      
    26: aload_0       
    27: getfield      #22         // entries:java.lang.Object[]
    30: arraylength   
    31: ldc           #48         // 131072
    33: if_icmplt     43
    36: iload_2       
    37: iconst_2      
    38: ishl          
    39: istore_2      
    40: goto          65
    43: aload_0       
    44: getfield      #22         // entries:java.lang.Object[]
    47: arraylength   
    48: sipush        512
    51: if_icmplt     61
    54: iload_2       
    55: iconst_1      
    56: ishl          
    57: istore_2      
    58: goto          65
    61: iload_2       
    62: iconst_1      
    63: ishl          
    64: istore_2      
    65: aload_0       
    66: iload_2       
    67: newarray      byte
    69: putfield      #24         // hashArray:byte[]
    72: iconst_0      
    73: istore_3      
    74: iload_3       
    75: aload_0       
    76: getfield      #5          // totalEntries:int
    79: if_icmpge     108
    82: aload_0       
    83: iload_3       
    84: invokespecial #3          // getKey:(int)java.lang.Object
    87: astore        4
    89: aload         4
    91: ifnull        102
    94: aload_0       
    95: aload         4
    97: iload_3       
    98: iconst_0      
    99: invokespecial #56         // putHashEntry:(java.lang.Object, int, boolean)void
   102: iinc          
   105: goto          74
   108: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5d8708a4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   16  <|@ instruction r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: r11|DWORD) condition: = <|@ <|@
      nr   18  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   22  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: = <|@ <|@
      nr   24  <|@ instruction r13|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609456767561375530
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1406  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: rsi|QWORD[.] r13|DWORD r14|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:10] <|@ <|@
      nr 1408  <|@ instruction r14|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction JUMP ~[] destination: B130 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B130" 
    successors "B2" "B130" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612823192808066965
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.399200501646026 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B129" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: rsi|QWORD[.] r13|DWORD r14|DWORD - - 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 12] y: 131072 size: DWORD state [bci:10] <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   50  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   52  <|@ instruction r11|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606281698874543308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r8|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606200634081250639
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   88  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   92  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   94  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  144  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD = LEA [r10|QWORD - 32] size: QWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction r11|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  198  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  210  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  212  <|@ instruction r11|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r11|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  234  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr  236  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r11|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  258  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr  260  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  268  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  284  <|@ instruction r11|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738169498697727
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  300  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  302  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4596767844661723134
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  316  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B10" "B31" "B26" "B28" "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction MOV (x: [r14|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  330  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B116" "B104" "B102" "B112" 
    successors "B34" "B127" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4627022591482714271
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  344  <|@ instruction CMP (x: r10|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.9555287796899239 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B125" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626741116506003615
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  352  <|@ st <@st|@reference-map: [r11:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: r14|QWORD[.] - - r10|DWORD - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD state [bci:74] <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626741116506003615
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  362  <|@ instruction stack:44|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.0015533767669660724 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction r11|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  386  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  388  <|@ instruction BRANCH trueDestinationProbability: 0.6705794984965615 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4624288212235113577
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626462860253486138
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48, 2, 99] <|@ <|@
      nr  420  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B41 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B47" "B41" "B85" 
    successors "B87" "B121" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  908  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  910  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr  912  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  914  <|@ st <@st|@reference-map: [rsi:0, r8:0, r9:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr  916  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  918  <|@ instruction r13|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  920  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction rbx|DWORD[.] = MOV [r14|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  930  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  932  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626127871424646371
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  944  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  946  <|@ instruction rdi|DWORD = SETCC condition: = <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" "B89" 
    successors "B91" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rdx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  954  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  956  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625624176796094775
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction rcx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  966  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625624176796094775
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  970  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction r10|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  974  <|@ instruction MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  976  <|@ instruction r11|DWORD = MOVZXB r10|DWORD size: DWORD <|@ <|@
      nr  978  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  980  <|@ instruction r10|DWORD = MOVSXB r10|DWORD size: DWORD <|@ <|@
      nr  982  <|@ instruction TEST r10|DWORD y: 255 size: DWORD <|@ <|@
      nr  984  <|@ instruction BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4624757706266086888
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B93 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B93" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625939502948082763
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.9646655098717876 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4625754128133143130
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: rsi|QWORD[.] - stack:40|DWORD - - r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:41, 99] <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B102 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4619642846700088551
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.8648398191938089 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618567400352106519
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction CMP rcx|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1012  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B119" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction rcx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr 1024  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1026  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1032  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r10|DWORD = MOVSXB [rcx|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1042  <|@ instruction MOVB (x: [rcx|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1044  <|@ instruction rcx|DWORD = SAR rax|DWORD y: 8 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1048  <|@ instruction r11|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = SHL r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVZXB r10|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = OR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction r10|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614880348082334393
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612357738866430486
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B94 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B94" 
    successors "B108" "B117" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4613520169939208471
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction rsi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1136  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4613520169939208471
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1142  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1144  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1146  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1148  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1150  <|@ instruction BRANCH trueDestinationProbability: 0.7011387517716632 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4611566105018190629
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1154  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1156  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4611477232159735192
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1194  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B110" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4611566105018190629
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1200  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr 1202  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1204  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1206  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr 1212  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1214  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1216  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1220  <|@ st <@st|@reference-map: [rdx:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: stack:32|QWORD[.] stack:40|DWORD rdx|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 129, 99] <|@ <|@
      nr 1222  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1226  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B112 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612013222126699607
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rax|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B124" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr  456  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B123" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  464  <|@ instruction CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 44] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: rsi|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction r11|DWORD = MOVZXB [r10|DWORD[.] * 8 + 48] size: DWORD state [bci:74] <|@ <|@
      nr  474  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  496  <|@ instruction stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B82" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  518  <|@ instruction stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rbp|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  522  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B77" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction rbp|DWORD[.] = MOV [rbp|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction r13|QWORD = MOV [rbp|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  534  <|@ instruction TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B78" "B80" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD + rbx|DWORD[.] * 8] size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
stack: stack:68|DWORD 
locals: stack:56|DWORD[.] stack:64|QWORD[.] - stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:338, 11, 40, 2, 99] <|@ <|@
      nr  822  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  824  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B54" "B59" "B64" "B67" "B69" "B71" "B73" "B75" "B76" "B78" "B65" 
    successors "B49" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
locals: stack:56|DWORD[.] stack:64|QWORD[.] rsi|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:343, 11, 40, 2, 99] <|@ <|@
      nr  832  <|@ instruction r10|DWORD = IMUL rsi|DWORD y: 13 size: DWORD <|@ <|@
      nr  834  <|@ instruction r8|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B79 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B79" 
    successors "B50" "B85" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4606778790329132676
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rdx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  512  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B57" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" "B66" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr  646  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4584260792192280196
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4575253592937539204
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4570749993310168708
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4566246393682798212
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4561742794055427716
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction CMP (x: rax|DWORD, y: stack:72|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  562  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr  564  <|@ instruction rsi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B54 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + rbx|DWORD[.] * 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = SHR rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  616  <|@ instruction rcx|QWORD = XOR (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|DWORD = MOV rdx|QWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B59 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4584260792192280196
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:121, 11, 40, 2, 99] <|@ <|@
      nr  660  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction rsi|DWORD = LEA [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B65 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:151, 11, 40, 2, 99] <|@ <|@
      nr  694  <|@ instruction rsi|DWORD = VMOVD xmm0|SINGLE <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B67 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  666  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B64 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4575253592937539204
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:181, 11, 40, 2, 99] <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  718  <|@ instruction rdx|QWORD = SHR rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  720  <|@ instruction rsi|QWORD = XOR (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = MOVSXD stack:68|DWORD size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B69 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4570749993310168708
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:223, 11, 40, 2, 99] <|@ <|@
      nr  746  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B71 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4566246393682798212
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:250, 11, 40, 2, 99] <|@ <|@
      nr  768  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4561742794055427716
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:277, 11, 40, 2, 99] <|@ <|@
      nr  790  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605751652410953235
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1234  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605675888082296467
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1266  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1268  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1270  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" "B114" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605751652410953235
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr 1280  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1282  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1284  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction rcx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1288  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1290  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1294  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1298  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1300  <|@ st <@st|@reference-map: [rdx:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: stack:32|QWORD[.] stack:40|DWORD rdx|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 107, 99] <|@ <|@
      nr 1302  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction JUMP ~[] destination: B116 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604107213623344681
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1090  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4604107213623344681
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr 1096  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1104  <|@ instruction MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1106  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: stack:32|QWORD[.] stack:40|DWORD rsi|DWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 157, 99] <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction JUMP ~[] destination: B104 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602824943836388355
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr 1130  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  482  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B47 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  894  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  896  <|@ instruction rsi|DWORD = SHR r10|DWORD y: 16 size: DWORD <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = XOR (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  900  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4584970889783042265
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  374  <|@ st <@st|@reference-map: [r11:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:74] <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581345084349571920
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1166  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1168  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1170  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:40|DWORD - - stack:48|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1176  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1180  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr 1182  <|@ instruction JUMP ~[] destination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576002538815086608
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1240  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1246  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1248  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1250  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:40|DWORD - - stack:48|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr 1252  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1256  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1260  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr 1262  <|@ instruction JUMP ~[] destination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1390  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B32" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B10 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  176  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961663
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1394  <|@ instruction JUMP ~[] destination: B128 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B128" 
    successors "B15" "B128" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646911
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  184  <|@ instruction r8|QWORD = LEA [r8|QWORD + 32] size: QWORD <|@ <|@
      nr  186  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4591870180066957719
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592518698413299071
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  134  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [r14:0, stack:44, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: r14|QWORD[.] stack:44|DWORD stack:40|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591419820104220671
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4589730970243956735
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576341768551784255
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: int[-245787|0xfffffffffffc3fe5] <|@ <|@
      nr  872  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B56" "B61" "B81" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  882  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rcx:0, r9:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r9|DWORD[.] rcx|QWORD[.] r10|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:16, 11, 40, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = MOVE input: int[-269851|0xfffffffffffbe1e5] <|@ <|@
      nr 1002  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B95 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B95" "B120" "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1358  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - r8|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:52, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r11|DWORD = MOVE input: int[-259355|0xfffffffffffc0ae5] <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694] <|@ <|@
      nr 1314  <|@ instruction MOV [r15|QWORD + 668] y: -347964 size: DWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1318  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:40|DWORD - - r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694] <|@ <|@
      nr 1120  <|@ instruction MOV [r15|QWORD + 668] y: -304444 size: DWORD <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:40|DWORD - - r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1346  <|@ instruction r11|DWORD = MOVE input: int[-347419|0xfffffffffffab2e5] <|@ <|@
      nr 1348  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1350  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1368  <|@ instruction r10|DWORD = MOVE input: int[-236083|0xfffffffffffc65cd] <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B43" "B124" "B123" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1382  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1384  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1386  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed] <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B43 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1398  <|@ instruction MOV [r15|QWORD + 668] y: -229651 size: DWORD <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1402  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: stack:32|QWORD[.] r13|DWORD r14|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction r10|DWORD = MOVE input: int[-233243|0xfffffffffffc70e5] <|@ <|@
      nr 1378  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1322  <|@ instruction r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5] <|@ <|@
      nr 1324  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction JUMP ~[] destination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction r10|DWORD = MOVE input: int[-237091|0xfffffffffffc61dd] <|@ <|@
      nr 1364  <|@ instruction JUMP ~[] destination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction r11|DWORD = MOVE input: int[-248603|0xfffffffffffc34e5] <|@ <|@
      nr  578  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B56 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-285723|0xfffffffffffba3e5] <|@ <|@
      nr 1332  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction JUMP ~[] destination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1338  <|@ instruction r11|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed] <|@ <|@
      nr 1340  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ instruction JUMP ~[] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction r11|DWORD = MOVE input: int[-251675|0xfffffffffffc28e5] <|@ <|@
      nr  632  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B61 -> B84 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #55         // size:()int
     4: istore_1      
     5: aload_0       
     6: invokespecial #57         // getHashThreshold:()int
     9: istore_2      
    10: iload_2       
    11: iload_1       
    12: if_icmpgt     22
    15: iload_2       
    16: iconst_1      
    17: ishl          
    18: istore_2      
    19: goto          10
    22: iload_2       
    23: iconst_1      
    24: ishl          
    25: istore_2      
    26: aload_0       
    27: getfield      #22         // entries:java.lang.Object[]
    30: arraylength   
    31: ldc           #48         // 131072
    33: if_icmplt     43
    36: iload_2       
    37: iconst_2      
    38: ishl          
    39: istore_2      
    40: goto          65
    43: aload_0       
    44: getfield      #22         // entries:java.lang.Object[]
    47: arraylength   
    48: sipush        512
    51: if_icmplt     61
    54: iload_2       
    55: iconst_1      
    56: ishl          
    57: istore_2      
    58: goto          65
    61: iload_2       
    62: iconst_1      
    63: ishl          
    64: istore_2      
    65: aload_0       
    66: iload_2       
    67: newarray      byte
    69: putfield      #24         // hashArray:byte[]
    72: iconst_0      
    73: istore_3      
    74: iload_3       
    75: aload_0       
    76: getfield      #5          // totalEntries:int
    79: if_icmpge     108
    82: aload_0       
    83: iload_3       
    84: invokespecial #3          // getKey:(int)java.lang.Object
    87: astore        4
    89: aload         4
    91: ifnull        102
    94: aload_0       
    95: aload         4
    97: iload_3       
    98: iconst_0      
    99: invokespecial #56         // putHashEntry:(java.lang.Object, int, boolean)void
   102: iinc          
   105: goto          74
   108: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5d8708a4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   16  <|@ instruction r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: r11|DWORD) condition: = <|@ <|@
      nr   18  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   22  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: = <|@ <|@
      nr   24  <|@ instruction r13|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609456767561375530
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1406  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: rsi|QWORD[.] r13|DWORD r14|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:10] <|@ <|@
      nr 1408  <|@ instruction r14|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction JUMP ~[] destination: B130 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B130" 
    successors "B2" "B130" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612823192808066965
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.399200501646026 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B129" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: rsi|QWORD[.] r13|DWORD r14|DWORD - - 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 12] y: 131072 size: DWORD state [bci:10] <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   50  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   52  <|@ instruction r11|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4606281698874543308
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r8|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr   62  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr   64  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606200634081250639
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   88  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   92  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   94  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  100  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B32" "B11" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  144  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B32 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  158  <|@ instruction r10|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  160  <|@ instruction r11|QWORD = LEA [r10|QWORD - 32] size: QWORD <|@ <|@
      nr  162  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B19" "B18" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  196  <|@ instruction r11|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  198  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  210  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  212  <|@ instruction r11|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B16" 
    successors "B22" "B21" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r11|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  234  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr  236  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B25" "B24" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r11|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  258  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr  260  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B22" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  268  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B32 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4600427019358961663
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  284  <|@ instruction r11|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B32 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" "B31" 
    xhandlers
    flags 
    probability 4598738169498697727
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  300  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  302  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4596767844661723134
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B9" "B31" "B25" "B27" "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  324  <|@ instruction MOV (x: [r14|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  328  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  330  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  336  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B116" "B104" "B102" "B112" 
    successors "B34" "B127" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4627022591482714271
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  344  <|@ instruction CMP (x: r10|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.9555287796899239 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B125" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626741116506003615
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  352  <|@ st <@st|@reference-map: [r11:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: r14|QWORD[.] - - r10|DWORD - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD state [bci:74] <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626741116506003615
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  362  <|@ instruction stack:44|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.0015533767669660724 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B41" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction r11|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  386  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  388  <|@ instruction BRANCH trueDestinationProbability: 0.6705794984965615 condition: = trueDestination: B37 -> B41 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626462860253486138
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48, 2, 99] <|@ <|@
      nr  420  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  422  <|@ instruction rsi|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B41 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B47" "B41" "B85" 
    successors "B87" "B121" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  908  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  910  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr  912  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  914  <|@ st <@st|@reference-map: [rsi:0, r8:0, r9:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr  916  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  918  <|@ instruction r13|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  920  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  928  <|@ instruction rbx|DWORD[.] = MOV [r14|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  930  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  932  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626127871424646371
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  944  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  946  <|@ instruction rdi|DWORD = SETCC condition: = <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" "B89" 
    successors "B91" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626731721840481646
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  952  <|@ instruction rdx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  954  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  956  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625624176796094775
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction rcx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  962  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  966  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B101" "B94" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625624176796094775
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  970  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction r10|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  974  <|@ instruction MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  976  <|@ instruction r11|DWORD = MOVZXB r10|DWORD size: DWORD <|@ <|@
      nr  978  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  980  <|@ instruction r10|DWORD = MOVSXB r10|DWORD size: DWORD <|@ <|@
      nr  982  <|@ instruction TEST r10|DWORD y: 255 size: DWORD <|@ <|@
      nr  984  <|@ instruction BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B92 -> B101 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B92" 
    successors "B102" "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625939502948082763
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.9646655098717876 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4625754128133143130
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: rsi|QWORD[.] - stack:40|DWORD - - r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:41, 99] <|@ <|@
      nr 1078  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B102 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" "B42" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4619642846700088551
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.8648398191938089 condition: = trueDestination: B39 -> B41 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B97" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction CMP rcx|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1012  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B98" "B119" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction rcx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr 1020  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr 1024  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1026  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1032  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1034  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4616042779155112378
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r10|DWORD = MOVSXB [rcx|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1040  <|@ instruction rdx|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1042  <|@ instruction MOVB (x: [rcx|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1044  <|@ instruction rcx|DWORD = SAR rax|DWORD y: 8 size: DWORD <|@ <|@
      nr 1046  <|@ instruction MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1048  <|@ instruction r11|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr 1050  <|@ instruction r11|DWORD = SHL r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVZXB r10|DWORD size: DWORD <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = OR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1056  <|@ instruction r10|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1058  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614880348082334393
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612357738866430486
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B94 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B99" "B94" 
    successors "B108" "B117" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4613520169939208471
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1128  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr 1134  <|@ instruction rsi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1136  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors "B109" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4613520169939208471
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1142  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1144  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1146  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1148  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1150  <|@ instruction BRANCH trueDestinationProbability: 0.7011387517716632 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4611566105018190629
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1154  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1156  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4611477232159735192
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1192  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1194  <|@ instruction JUMP ~[] destination: B111 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" "B110" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4611566105018190629
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1200  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr 1202  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1204  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1206  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1208  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1210  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr 1212  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1214  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1216  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1220  <|@ st <@st|@reference-map: [rdx:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: stack:32|QWORD[.] stack:40|DWORD rdx|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 129, 99] <|@ <|@
      nr 1222  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1226  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction JUMP ~[] destination: B112 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612013222126699607
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rax|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B124" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr  456  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B123" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  464  <|@ instruction CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606778790329132676
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 44] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: rsi|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction r11|DWORD = MOVZXB [r10|DWORD[.] * 8 + 48] size: DWORD state [bci:74] <|@ <|@
      nr  474  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  496  <|@ instruction stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B82" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  518  <|@ instruction stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rbp|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  522  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  524  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B77" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction rbp|DWORD[.] = MOV [rbp|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction r13|QWORD = MOV [rbp|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  534  <|@ instruction TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B78" "B80" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  806  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  812  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  814  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD + rbx|DWORD[.] * 8] size: DWORD <|@ <|@
      nr  816  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
stack: stack:68|DWORD 
locals: stack:56|DWORD[.] stack:64|QWORD[.] - stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:338, 11, 40, 2, 99] <|@ <|@
      nr  822  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  824  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B54" "B59" "B64" "B67" "B69" "B71" "B73" "B75" "B76" "B78" "B65" 
    successors "B49" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4602275190701762180
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
locals: stack:56|DWORD[.] stack:64|QWORD[.] rsi|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:343, 11, 40, 2, 99] <|@ <|@
      nr  832  <|@ instruction r10|DWORD = IMUL rsi|DWORD y: 13 size: DWORD <|@ <|@
      nr  834  <|@ instruction r8|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  836  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B79 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B79" 
    successors "B50" "B85" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4606778790329132676
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rdx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  512  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B57" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4597771591074391684
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" "B66" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  644  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr  646  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4584260792192280196
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4575253592937539204
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr  734  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4570749993310168708
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4566246393682798212
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4561742794055427716
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction CMP (x: rax|DWORD, y: stack:72|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4593267991447021188
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction rsi|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  562  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr  564  <|@ instruction rsi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B54 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B61" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4588764391819650692
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  610  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + rbx|DWORD[.] * 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  614  <|@ instruction rcx|QWORD = SHR rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  616  <|@ instruction rcx|QWORD = XOR (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  618  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  620  <|@ instruction rsi|DWORD = MOV rdx|QWORD size: DWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B59 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4584260792192280196
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:121, 11, 40, 2, 99] <|@ <|@
      nr  660  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction rsi|DWORD = LEA [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B65 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:151, 11, 40, 2, 99] <|@ <|@
      nr  694  <|@ instruction rsi|DWORD = VMOVD xmm0|SINGLE <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B67 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4579757192564909700
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  666  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B64 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4575253592937539204
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:181, 11, 40, 2, 99] <|@ <|@
      nr  716  <|@ instruction rsi|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  718  <|@ instruction rdx|QWORD = SHR rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  720  <|@ instruction rsi|QWORD = XOR (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD = MOVSXD stack:68|DWORD size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  726  <|@ instruction rsi|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B69 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4570749993310168708
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:223, 11, 40, 2, 99] <|@ <|@
      nr  746  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B71 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4566246393682798212
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:250, 11, 40, 2, 99] <|@ <|@
      nr  768  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B73 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4561742794055427716
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:277, 11, 40, 2, 99] <|@ <|@
      nr  790  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605751652410953235
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1232  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1234  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1236  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605675888082296467
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1266  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1268  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1270  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1272  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" "B114" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605751652410953235
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr 1280  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1282  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1284  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction rcx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1288  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1290  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3 <|@ <|@
      nr 1292  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1294  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1298  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1300  <|@ st <@st|@reference-map: [rdx:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: stack:32|QWORD[.] stack:40|DWORD rdx|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 107, 99] <|@ <|@
      nr 1302  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1304  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction JUMP ~[] destination: B116 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604107213623344681
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1090  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4604107213623344681
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr 1096  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1102  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1104  <|@ instruction MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1106  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: stack:32|QWORD[.] stack:40|DWORD rsi|DWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 157, 99] <|@ <|@
      nr 1108  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction JUMP ~[] destination: B104 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  482  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  484  <|@ instruction JUMP ~[] destination: B47 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4602275190701762180
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  894  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  896  <|@ instruction rsi|DWORD = SHR r10|DWORD y: 16 size: DWORD <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = XOR (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  900  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4584970889783042265
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  374  <|@ st <@st|@reference-map: [r11:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:74] <|@ <|@
      nr  376  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4581345084349571920
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1162  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1164  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1166  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1168  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1170  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:40|DWORD - - stack:48|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1176  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1180  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr 1182  <|@ instruction JUMP ~[] destination: B110 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4576002538815086608
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1240  <|@ instruction stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1242  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1244  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1246  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1248  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1250  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:40|DWORD - - stack:48|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr 1252  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1256  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1260  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr 1262  <|@ instruction JUMP ~[] destination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1390  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4593671619917905919
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  176  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors "B16" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  182  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  184  <|@ instruction r8|QWORD = LEA [r8|QWORD + 32] size: QWORD <|@ <|@
      nr  186  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592518698413299071
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  134  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ st <@st|@reference-map: [r14:0, stack:44, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: r14|QWORD[.] stack:44|DWORD stack:40|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: int[-245787|0xfffffffffffc3fe5] <|@ <|@
      nr  878  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B56" "B61" "B81" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  872  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  886  <|@ st <@st|@reference-map: [rcx:0, r9:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r9|DWORD[.] rcx|QWORD[.] r10|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:40|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:16, 11, 40, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = MOVE input: int[-269851|0xfffffffffffbe1e5] <|@ <|@
      nr 1004  <|@ instruction JUMP ~[] destination: B95 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B95" "B120" "B119" "B118" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1354  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1358  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - r8|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:52, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction r11|DWORD = MOVE input: int[-259355|0xfffffffffffc0ae5] <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B81 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694] <|@ <|@
      nr 1314  <|@ instruction MOV [r15|QWORD + 668] y: -347964 size: DWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1318  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:40|DWORD - - r10|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694] <|@ <|@
      nr 1120  <|@ instruction MOV [r15|QWORD + 668] y: -304444 size: DWORD <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:40|DWORD - - r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1346  <|@ instruction r11|DWORD = MOVE input: int[-347419|0xfffffffffffab2e5] <|@ <|@
      nr 1350  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1368  <|@ instruction r10|DWORD = MOVE input: int[-236083|0xfffffffffffc65cd] <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B43" "B124" "B123" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1382  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1384  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1386  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: stack:32|QWORD[.] - - stack:40|DWORD - 
>@ <|@ instruction DEOPT info [bci:74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed] <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B43 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1398  <|@ instruction MOV [r15|QWORD + 668] y: -229651 size: DWORD <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1402  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: stack:32|QWORD[.] r13|DWORD r14|DWORD - - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction r10|DWORD = MOVE input: int[-233243|0xfffffffffffc70e5] <|@ <|@
      nr 1378  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1322  <|@ instruction r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5] <|@ <|@
      nr 1326  <|@ instruction JUMP ~[] destination: B118 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1362  <|@ instruction r10|DWORD = MOVE input: int[-237091|0xfffffffffffc61dd] <|@ <|@
      nr 1364  <|@ instruction JUMP ~[] destination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction r11|DWORD = MOVE input: int[-248603|0xfffffffffffc34e5] <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B56 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1330  <|@ instruction r11|DWORD = MOVE input: int[-285723|0xfffffffffffba3e5] <|@ <|@
      nr 1334  <|@ instruction JUMP ~[] destination: B119 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1338  <|@ instruction r11|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed] <|@ <|@
      nr 1342  <|@ instruction JUMP ~[] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B84" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction r11|DWORD = MOVE input: int[-251675|0xfffffffffffc28e5] <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B61 -> B84 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #55         // size:()int
     4: istore_1      
     5: aload_0       
     6: invokespecial #57         // getHashThreshold:()int
     9: istore_2      
    10: iload_2       
    11: iload_1       
    12: if_icmpgt     22
    15: iload_2       
    16: iconst_1      
    17: ishl          
    18: istore_2      
    19: goto          10
    22: iload_2       
    23: iconst_1      
    24: ishl          
    25: istore_2      
    26: aload_0       
    27: getfield      #22         // entries:java.lang.Object[]
    30: arraylength   
    31: ldc           #48         // 131072
    33: if_icmplt     43
    36: iload_2       
    37: iconst_2      
    38: ishl          
    39: istore_2      
    40: goto          65
    43: aload_0       
    44: getfield      #22         // entries:java.lang.Object[]
    47: arraylength   
    48: sipush        512
    51: if_icmplt     61
    54: iload_2       
    55: iconst_1      
    56: ishl          
    57: istore_2      
    58: goto          65
    61: iload_2       
    62: iconst_1      
    63: ishl          
    64: istore_2      
    65: aload_0       
    66: iload_2       
    67: newarray      byte
    69: putfield      #24         // hashArray:byte[]
    72: iconst_0      
    73: istore_3      
    74: iload_3       
    75: aload_0       
    76: getfield      #5          // totalEntries:int
    79: if_icmpge     108
    82: aload_0       
    83: iload_3       
    84: invokespecial #3          // getKey:(int)java.lang.Object
    87: astore        4
    89: aload         4
    91: ifnull        102
    94: aload_0       
    95: aload         4
    97: iload_3       
    98: iconst_0      
    99: invokespecial #56         // putHashEntry:(java.lang.Object, int, boolean)void
   102: iinc          
   105: goto          74
   108: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24408b560c8b4e10448b56204181faaddeadde41bb0800000041b804000000450f44c34585d241ba08000000450f44c2448bea442be9458bf0e90d0000000f1f400085050000000041d1e6453bf57ef24889742430448b561842813cd50c000000000002000f83ab090000498b5760498b4f70458bde41c1e3024181fbffffff000f838f080000458d43174183e0f84d63c04d8bc84c03ca4c3bc90f87750800004d894f60410f188410c0000000410f18841000010000410f18841040010000410f1884108001000044895a0c48c70201000000c74208addeadde488bc2458beb448954242c4c8bf64183fd010f8cab000000488d70104d63d54d8d5ae04d85db0f8df007000049c7c0000000004d8d5af04d3bc30f8f11000000c5f9efc0c4a17a7f04064d8d58104d8bc34d8d5af84d3bc30f8f11000000c5f9efc0c4a1f97e04064d8d58084d8bc34d8d5afc4d3bc30f8f11000000c5f9efc0c4a1797e04064d8d58044d8bc349ffca4d3bc20f8f2a000000468824064d8bd849ffc34d3bda0f8f1700000046886406014d8d58024d3bda0f8f050000004688640602448b54242c48c1e8034189461c498bf648c1ee0949bb00c02408010000004688241e49c1e20349b8addeaddeaddeadde4d8bda41ba000000006666660f1f840000000000453b560c0f8df8060000418bcad1e1413b4b0c0f8333080000418b5c8b10418bfaffc7897c242485db0f841f060000458b5e204585db0f85ec000000894c2420448954242848c1e303488bf348b8ffffffffffffffff90e800000000908bf0c1ee1033f0448bde448bd0488b742430448b4618438504c4448b4e1c438504cc428b0cc50c000000448b6c242041ffc5413bcd0f8672070000458bf049c1e603438b5cae1085db0f84a00100008b3cdd0800000081ffaddeadde400f94c7400fb6ff428b14cd0c00000081f9000200000f83650000008bcaffc94423d9413bd30f86b50600008b442424470fbe54cb10438844cb10450fb6da41ffcb450fbed241f7c2ff0000000f85a100000085ff0f85ad0400008505000000004d8bde448bd04c8bf6e9d8feffff4181fbaddeadde0f8407ffffffe91c0100008b44242481f9000002000f833d0700008bcad1e9ffc94123cbd1e13bd10f861f070000448bd941ffc3413bd30f86ed060000460fbe54c910430fbe54cb10428844c9108bc8c1f90843884ccb10440fb6da41c1e308450fb6d2450bda458bd341ffca4585db0f850b000000458bdae95fffffff458bd349bb00c0240801000000428b34c50800000081feaddeadde0f85f8050000498b7760498b5770488d4e1885ff0f856e030000483bca0f878704000049894f600f1886d800000049b8addeaddeaddeadde488bd6498b88a800000048890ec74608addeadde4489560c895e10488bf248c1ee03438974ae104b8d74ae1048c1ee094688241e8505000000004d8bde448b5424244c8b742430e9b4fdffffbf00000000e96bfeffff8bc7894c24204489542428498bf64181fbaddeadde0f84bb05000042813cdd08000000addeadde0f858f050000448b14dd0800000049bbaddeaddeaddeadde4e3b1cd5300000000f85c1050000448b14dd2c000000460fb61cd5300000004585db0f8451030000895c241c4489542418468b1cd514000000448bc349c1e0034c8944241044895c240c41b800000000e989000000660f1f44000044894424088b2ccd14000000443b04ed0c0000000f836204000048c1e503428b6c85104c8b2ced480000004d85ed0f8473000000413bc00f868c04000048c1e2034a8b4cc2108b0cd948c1e103488bf10f1f8000000000e800000000900344240c8bf0850500000000446bd60d448b44240841ffc0448954240c448b5424188b5c241c428b0cd5100000008b14cd0c0000008b04d50c000000413bc00f8f5effffffe98802000081fdaddeadde0f846100000081fdaddeadde0f848200000048c1e10381fdaddeadde0f84ad00000081fdaddeadde0f84d000000081fdaddeadde0f84ec00000081fdaddeadde0f841001000081fdaddeadde0f842101000081fdaddeadde0f84350100008b74240ce94fffffff3b4424080f865e040000448b442408448b54240c8b5c241c48c1e2034a8b74c210440314de418bf2e922ffffff448b442408448b54240c8b5c241c413bc00f864a04000048c1e2034a8b74c210488b34de4963d2488bce48c1e9204833ce4803d18bf2e9e7feffff448b442408488bf1488b542410418bc8666690e8000000009085c00f842d000000448b54240c418d7207e9b8feffff488bf1488b5424108b4c2408e80000000090c5f97ec60374240ce999feffff8b74240ce990feffff488bf1488b5424108b4c2408e80000000090c4e1f97ec6488bd648c1ea204833f2486354240c4803f28bf6e960feffff488bf1488b5424108b4c2408e800000000900344240c8bf0e943feffff488bf1488b5424108b4c2408666690e800000000900344240c8bf0e923feffff488bf1488b5424108b4c2408666690e800000000900344240c8bf0e903feffff49b8addeaddeaddeadde483bca0f875701000049894f600f1886d8000000488bd6498b88a800000048890ec74608addeadde4489560c8b0cdd10000000894e10488bf248c1ee03438974ae104b8d74ae1048c1ee094688241e8505000000004d8bde448b5424244c8b742430e93ffaffff42813cc508000000addeadde0f851502000049bb00c02408010000008b34dd10000000438974ae104b8d54ae1048c1ea094688241a8505000000004d8bde448b5424244c8b742430e9f2f9ffff41bb0000000041ba00000000e950faffff448b54240c49b8addeaddeaddeadde49bb00c0240801000000418bf2c1ee104133f2448bde488b742430e921faffff448954242849b8addeaddeaddeadde850500000000448b5424244c8b742430e98ef9ffff4489542420895c240c48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0448b5424208b5c240c49b8addeaddeaddeadde49bb00c0240801000000e946fbffff4489542420895c240c48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0448b5424208b5c240c49b8addeaddeaddeadde49bb00c0240801000000e96cfeffff488b6c24404883c448850500000000c5f877c3c5f9efc049c7c000000000c4a17e7f04064d8d40204d3bc37ef1e9f8f7ffff448954242c448974242844896c242448baaddeaddeaddeadde4c8bc6488bf2418bd3b9000000004d8bf0458bebe80000000090e99bf7ffff448b54240c41bbe53ffcff448b442408488b4c2410448b4c241845899f9c0200004d89a7a8020000e8000000009041bbe5e1fbff448b44242845899f9c0200004d89a7a8020000e80000000090448b54240c41bbe50afcffebb149bbaddeaddeaddeadde41c7879c020000c4b0faff4d899fa8020000e8000000009049baaddeaddeaddeadde41c7879c020000c45afbff4d8997a8020000e8000000009041bbe5b2faffeb8e41bacd65fcff4589979c0200004d89a7a8020000e8000000009041baed66fcffebe441c7879c020000ed7efcff4d89a7a8020000e80000000090448954242841bae570fcffebbf41bbe599fbffe93cffffff41badd61fcffebac448b54240c41bbe534fcffe9fbfeffff41bbe5a3fbffe919ffffff41bbedcffbffe90effffff41bbe528fcffe9dafeffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5d8708a4 slotKind: QWORD  <||@
  Comment 48 6 rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 51 8 rcx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 54 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 58 12 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445]  <||@
  Comment 58 {NarrowOop[Equivalence$3@1032552445]}  <||@
  Comment 65 14 r11|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 71 16 r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: r11|DWORD) condition: =  <||@
  Comment 81 18 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 84 20 r10|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 90 22 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: =  <||@
  Comment 94 24 r13|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 100 26 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 103 28 JUMP ~[] destination: B0 -> B1  <||@
  Comment 108 block B130 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 108 1404 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 1406 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:10]  <||@
  Comment 112 [rsi:0]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4 
     locals:  |rsi|QWORD[.]  |r13|DWORD  |r14|DWORD  |-  |-   <||@
  Comment 112 {infopoint: SAFEPOINT}  <||@
  Comment 112 11  <||@
  Comment 118 1408 r14|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 121 1410 JUMP ~[] destination: B130 -> B1  <||@
  Comment 121 block B1 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 121 30 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 121 32 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 124 34 BRANCH trueDestinationProbability: 0.399200501646026 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B130  <||@
  Comment 126 block B2 null  <||@
  Comment 126 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 38 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 131 40 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 135 42 CMP [r10|DWORD[.] * 8 + 12] y: 131072 size: DWORD state [bci:10]  <||@
  Comment 135 [rsi:0, r10:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4 
     locals:  |rsi|QWORD[.]  |r13|DWORD  |r14|DWORD  |-  |-   <||@
  Comment 135 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 147 44 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B129  <||@
  Comment 153 block B3 null  <||@
  Comment 153 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 48 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 157 50 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 161 52 r11|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 168 54 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 175 56 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 181 block B4 null  <||@
  Comment 181 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 60 r8|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 185 62 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 189 64 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 192 66 r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 198 68 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 201 70 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 207 block B6 null  <||@
  Comment 207 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 84 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 211 86 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 220 88 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 229 90 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 238 92 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 247 94 MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 251 96 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 258 98 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 258 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 265 100 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 265 102 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 268 104 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 271 106 stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 276 108 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 279 110 JUMP ~[] destination: B6 -> B9  <||@
  Comment 279 block B9 null  <||@
  Comment 279 142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 279 144 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 283 146 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B32 falseDestination: B9 -> B11  <||@
  Comment 289 block B11 null  <||@
  Comment 289 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 156 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 293 158 r10|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 296 160 r11|QWORD = LEA [r10|QWORD - 32] size: QWORD  <||@
  Comment 300 162 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 303 164 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 309 block B12 null  <||@
  Comment 309 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 309 168 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 316 170 JUMP ~[] destination: B12 -> B16  <||@
  Comment 316 block B16 null  <||@
  Comment 316 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 316 196 r11|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 320 198 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 323 200 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18  <||@
  Comment 329 block B18 null  <||@
  Comment 329 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 208 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 333 210 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 339 212 r11|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 343 214 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 346 216 JUMP ~[] destination: B18 -> B19  <||@
  Comment 346 block B19 null  <||@
  Comment 346 218 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 346 220 r11|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 350 222 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 353 224 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 359 block B21 null  <||@
  Comment 359 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 359 232 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 363 234 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 369 236 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 373 238 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 376 240 JUMP ~[] destination: B21 -> B22  <||@
  Comment 376 block B22 null  <||@
  Comment 376 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 376 244 r11|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 380 246 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 383 248 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 389 block B24 null  <||@
  Comment 389 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 389 256 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 393 258 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 399 260 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 403 262 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 406 264 JUMP ~[] destination: B24 -> B25  <||@
  Comment 406 block B25 null  <||@
  Comment 406 266 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 406 268 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 409 270 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 412 272 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B32 falseDestination: B25 -> B27  <||@
  Comment 418 block B27 null  <||@
  Comment 418 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 282 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 422 284 r11|QWORD = INC r8|QWORD size: QWORD  <||@
  Comment 428 286 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 431 288 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B32 falseDestination: B27 -> B29  <||@
  Comment 437 block B29 null  <||@
  Comment 437 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 437 298 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 442 300 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 446 302 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 449 304 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 455 block B31 null  <||@
  Comment 455 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 314 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 460 318 JUMP ~[] destination: B31 -> B32  <||@
  Comment 460 block B32 null  <||@
  Comment 460 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 150 r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 465 322 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 469 324 MOV (x: [r14|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 473 326 rsi|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 480 328 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 490 330 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 494 332 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 498 334 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 498 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 508 336 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 511 338 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 517 340 JUMP ~[] destination: B32 -> B33  <||@
  Comment 517 block B33 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 517 342 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 528 344 CMP (x: r10|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 532 346 BRANCH trueDestinationProbability: 0.9555287796899239 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B127  <||@
  Comment 538 block B34 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 538 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 350 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 543 352 CMP (x: rcx|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD state [bci:74]  <||@
  Comment 543 [r11:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4 
     locals:  |r14|QWORD[.]  |-  |-  |r10|DWORD  |-   <||@
  Comment 543 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 547 354 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B125  <||@
  Comment 553 block B35 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 553 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 358 rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 558 360 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 563 362 stack:44|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 567 364 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 569 366 BRANCH trueDestinationProbability: 0.0015533767669660724 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 575 block B37 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 575 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 384 r11|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 579 386 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 582 388 BRANCH trueDestinationProbability: 0.6705794984965615 condition: = trueDestination: B37 -> B41 falseDestination: B37 -> B39  <||@
  Comment 588 block B41 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 588 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 392 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 592 394 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 597 414 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 601 416 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 604 418 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48, 2, 99]  <||@
  Comment 604 7  <||@
  Comment 615 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 620 [stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 621 420 rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 626 422 rsi|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 628 424 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 631 426 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 634 428 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 639 430 JUMP ~[] destination: B41 -> B86  <||@
  Comment 639 block B86 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 639 906 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 639 908 r8|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 643 910 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:52, 2, 99]  <||@
  Comment 643 [rsi:0, r8:0, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 643 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 647 912 r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 651 914 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:52, 2, 99]  <||@
  Comment 651 [rsi:0, r8:0, r9:0, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 651 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 655 916 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 663 918 r13|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 671 920 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 674 922 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B121  <||@
  Comment 680 block B87 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 680 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 926 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 687 928 rbx|DWORD[.] = MOV [r14|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 692 930 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 694 932 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 700 block B89 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 700 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 942 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 707 944 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 707 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 713 946 rdi|DWORD = SETCC condition: =  <||@
  Comment 721 948 JUMP ~[] destination: B89 -> B90  <||@
  Comment 721 block B90 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 721 950 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 721 952 rdx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 729 954 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 735 956 BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B96  <||@
  Comment 741 block B91 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 741 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 741 960 rcx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 745 962 r11|DWORD = AND (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 748 964 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 751 966 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95  <||@
  Comment 757 block B92 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 757 968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 970 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 761 972 r10|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 767 974 MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 772 976 r11|DWORD = MOVZXB r10|DWORD size: DWORD  <||@
  Comment 776 978 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 779 980 r10|DWORD = MOVSXB r10|DWORD size: DWORD  <||@
  Comment 783 982 TEST r10|DWORD y: 255 size: DWORD  <||@
  Comment 790 984 BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B92 -> B101 falseDestination: B92 -> B94  <||@
  Comment 796 block B101 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 796 1068 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 796 1070 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 798 1072 BRANCH trueDestinationProbability: 0.9646655098717876 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 804 block B102 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 804 1074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 804 1076 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:41, 99]  <||@
  Comment 804 [rsi:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4  |5          |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |r11|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 804 {infopoint: SAFEPOINT}  <||@
  Comment 804 11  <||@
  Comment 810 1078 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 813 1080 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 816 1082 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 819 1084 JUMP ~[] destination: B102 -> B33  <||@
  Comment 824 block B39 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 824 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 824 400 CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431]  <||@
  Comment 824 {NarrowOop[Equivalence$1@1531265431]}  <||@
  Comment 831 402 BRANCH trueDestinationProbability: 0.8648398191938089 condition: = trueDestination: B39 -> B41 falseDestination: B39 -> B42  <||@
  Comment 842 block B96 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 842 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 842 1008 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 846 1010 CMP rcx|DWORD y: 131072 size: DWORD  <||@
  Comment 852 1012 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B120  <||@
  Comment 858 block B97 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 858 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 858 1016 rcx|DWORD = SHR rdx|DWORD size: DWORD  <||@
  Comment 862 1018 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 864 1020 rcx|DWORD = AND (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 867 1022 rcx|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 869 1024 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 871 1026 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B119  <||@
  Comment 877 block B98 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 877 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 1030 r11|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 883 1032 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 886 1034 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B118  <||@
  Comment 892 block B99 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 892 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 1038 r10|DWORD = MOVSXB [rcx|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 898 1040 rdx|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 904 1042 MOVB (x: [rcx|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 909 1044 rcx|DWORD = SAR rax|DWORD y: 8 size: DWORD  <||@
  Comment 914 1046 MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 919 1048 r11|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 923 1050 r11|DWORD = SHL r11|DWORD y: 8 size: DWORD  <||@
  Comment 927 1052 r10|DWORD = MOVZXB r10|DWORD size: DWORD  <||@
  Comment 931 1054 r11|DWORD = OR (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 934 1056 r10|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 940 1058 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 943 1060 BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B107  <||@
  Comment 949 block B100 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 949 1062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 949 1064 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 952 1066 JUMP ~[] destination: B100 -> B101  <||@
  Comment 957 block B94 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 957 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 992 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 960 996 JUMP ~[] destination: B94 -> B107  <||@
  Comment 960 block B107 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 960 1132 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 960 1128 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 970 1134 rsi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 978 1136 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 978 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 984 1138 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B117  <||@
  Comment 990 block B108 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 990 1140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 990 1142 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 994 1144 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 998 1146 rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1002 1148 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1004 1150 BRANCH trueDestinationProbability: 0.7011387517716632 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B113  <||@
  Comment 1010 block B109 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1010 1152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 1154 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1013 1156 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 1019 block B111 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1019 1184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1019 1186 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1023 1188 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1030 1190 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1030 1192 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1030 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1040 1194 JUMP ~[] destination: B111 -> B112  <||@
  Comment 1040 block B112 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1040 1196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1040 1198 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1043 1200 rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1050 1202 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1053 1204 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1053 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1060 1206 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1064 1208 MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1067 1210 rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1074 1212 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1079 1214 rsi|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1084 1216 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1088 1218 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1092 1220 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 129, 99]  <||@
  Comment 1092 [rdx:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:40|DWORD  |rdx|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1092 {infopoint: SAFEPOINT}  <||@
  Comment 1092 11  <||@
  Comment 1098 1222 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1101 1224 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1106 1226 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1111 1228 JUMP ~[] destination: B112 -> B33  <||@
  Comment 1116 block B88 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1116 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1116 936 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1121 938 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1126 block B42 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1126 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1126 434 rax|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1128 436 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1132 438 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1137 440 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1140 442 CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445]  <||@
  Comment 1140 {NarrowOop[Equivalence$3@1032552445]}  <||@
  Comment 1147 444 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 1153 block B44 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1153 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1153 454 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}  <||@
  Comment 1153 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}}  <||@
  Comment 1165 456 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B124  <||@
  Comment 1171 block B45 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1171 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1171 460 r10|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1179 462 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 1179 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 1189 464 CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1197 466 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B123  <||@
  Comment 1203 block B46 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1203 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 470 r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 44] size: DWORD  <||@
  Comment 1211 472 r11|DWORD = MOVZXB [r10|DWORD[.] * 8 + 48] size: DWORD state [bci:74]  <||@
  Comment 1211 [rbx:0, rsi:0, r10:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1211 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1220 474 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1223 476 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 1229 block B48 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1229 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1229 488 stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1233 490 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1238 492 r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1246 494 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1253 496 stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1258 498 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1263 500 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1269 502 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1274 block B50 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1274 516 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1280 518 stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1285 520 rbp|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1292 522 CMP (x: r8|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1292 [rcx:0, rdx:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1292 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1300 524 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B82  <||@
  Comment 1306 block B51 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1306 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1306 528 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1310 530 rbp|DWORD[.] = MOV [rbp|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1315 532 r13|QWORD = MOV [rbp|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1315 [rcx:0, rdx:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1315 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1323 534 TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1326 536 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B77  <||@
  Comment 1332 block B77 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1332 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 804 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1335 806 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B80  <||@
  Comment 1341 block B78 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1341 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1341 810 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1345 812 rcx|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1350 814 rcx|DWORD[.] = MOV [rcx|QWORD + rbx|DWORD[.] * 8] size: DWORD  <||@
  Comment 1353 816 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1357 818 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1360 820 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:338, 11, 40, 2, 99]  <||@
  Comment 1360 8  <||@
  Comment 1367 {HotSpotMethod<NodeClass.deepHashCode0(Object)>}  <||@
  Comment 1372 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |-  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |stack:68|DWORD     |                   |   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1373 822 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1377 824 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1379 826 JUMP ~[] destination: B78 -> B79  <||@
  Comment 1379 block B79 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1379 828 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1379 830 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:343, 11, 40, 2, 99]  <||@
  Comment 1379 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |rsi|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1379 {infopoint: SAFEPOINT}  <||@
  Comment 1379 11  <||@
  Comment 1385 832 r10|DWORD = IMUL rsi|DWORD y: 13 size: DWORD  <||@
  Comment 1389 834 r8|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 1397 836 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1402 838 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1407 840 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1411 842 JUMP ~[] destination: B79 -> B49  <||@
  Comment 1411 block B49 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1411 504 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1411 506 rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1419 508 rdx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1419 [rcx:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1419 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1426 510 rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1426 [rcx:0, rdx:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1426 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1433 512 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1436 514 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B85  <||@
  Comment 1447 block B52 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1447 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1447 540 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int]  <||@
  Comment 1447 {NarrowOop[Class:int]}  <||@
  Comment 1453 542 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B57  <||@
  Comment 1459 block B57 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1459 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1459 588 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long]  <||@
  Comment 1459 {NarrowOop[Class:long]}  <||@
  Comment 1465 590 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B62  <||@
  Comment 1471 block B62 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1471 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1471 642 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1475 644 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean]  <||@
  Comment 1475 {NarrowOop[Class:boolean]}  <||@
  Comment 1481 646 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B66  <||@
  Comment 1487 block B66 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1487 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1487 680 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float]  <||@
  Comment 1487 {NarrowOop[Class:float]}  <||@
  Comment 1493 682 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 1499 block B68 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1499 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1499 702 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double]  <||@
  Comment 1499 {NarrowOop[Class:double]}  <||@
  Comment 1505 704 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 1511 block B70 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1511 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 732 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short]  <||@
  Comment 1511 {NarrowOop[Class:short]}  <||@
  Comment 1517 734 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 1523 block B72 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1523 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 754 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char]  <||@
  Comment 1523 {NarrowOop[Class:char]}  <||@
  Comment 1529 756 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 1535 block B74 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1535 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1535 776 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte]  <||@
  Comment 1535 {NarrowOop[Class:byte]}  <||@
  Comment 1541 778 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 1547 block B76 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1547 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 798 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1551 800 JUMP ~[] destination: B76 -> B79  <||@
  Comment 1556 block B53 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1556 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1556 546 CMP (x: rax|DWORD, y: stack:72|DWORD) size: DWORD  <||@
  Comment 1560 548 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 1566 block B54 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1566 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1566 552 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1571 554 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1576 556 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1580 558 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1584 560 rsi|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1589 562 r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD  <||@
  Comment 1593 564 rsi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1596 566 JUMP ~[] destination: B54 -> B79  <||@
  Comment 1601 block B58 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1601 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1601 594 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1606 596 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1611 598 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1615 600 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1618 602 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B61  <||@
  Comment 1624 block B59 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1624 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1624 606 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1628 608 rsi|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1633 610 rsi|QWORD = MOV [rsi|QWORD + rbx|DWORD[.] * 8] size: QWORD  <||@
  Comment 1637 612 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1640 614 rcx|QWORD = SHR rsi|QWORD y: 32 size: QWORD  <||@
  Comment 1647 616 rcx|QWORD = XOR (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1650 618 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1653 620 rsi|DWORD = MOV rdx|QWORD size: DWORD  <||@
  Comment 1655 622 JUMP ~[] destination: B59 -> B79  <||@
  Comment 1660 block B63 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1660 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 650 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1665 652 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1668 654 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1673 656 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1676 658 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:121, 11, 40, 2, 99]  <||@
  Comment 1676 9  <||@
  Comment 1679 {HotSpotMethod<Fields.getBoolean(Object, int)>}  <||@
  Comment 1684 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1685 660 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1687 662 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 1693 block B65 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1693 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1693 672 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1698 674 rsi|DWORD = LEA [r10|DWORD + 7] size: DWORD  <||@
  Comment 1702 676 JUMP ~[] destination: B65 -> B79  <||@
  Comment 1707 block B67 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1707 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1707 686 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1710 688 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1715 690 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1719 692 xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:151, 11, 40, 2, 99]  <||@
  Comment 1719 {HotSpotMethod<Fields.getFloat(Object, int)>}  <||@
  Comment 1719 9  <||@
  Comment 1724 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1725 694 rsi|DWORD = VMOVD xmm0|SINGLE  <||@
  Comment 1729 696 rsi|DWORD = ADD (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1733 698 JUMP ~[] destination: B67 -> B79  <||@
  Comment 1738 block B64 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1738 664 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1738 666 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1742 668 JUMP ~[] destination: B64 -> B79  <||@
  Comment 1747 block B69 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1747 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1747 708 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1750 710 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1755 712 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1759 714 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:181, 11, 40, 2, 99]  <||@
  Comment 1759 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1759 9  <||@
  Comment 1764 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1765 716 rsi|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 1770 718 rdx|QWORD = SHR rsi|QWORD y: 32 size: QWORD  <||@
  Comment 1777 720 rsi|QWORD = XOR (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1780 722 rdx|QWORD = MOVSXD stack:68|DWORD size: QWORD  <||@
  Comment 1785 724 rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1788 726 rsi|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 1790 728 JUMP ~[] destination: B69 -> B79  <||@
  Comment 1795 block B71 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1795 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1795 738 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1798 740 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1803 742 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1807 744 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:223, 11, 40, 2, 99]  <||@
  Comment 1807 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 1807 9  <||@
  Comment 1812 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1813 746 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1817 748 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1819 750 JUMP ~[] destination: B71 -> B79  <||@
  Comment 1824 block B73 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1824 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1824 760 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1827 762 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1832 764 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1836 766 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:250, 11, 40, 2, 99]  <||@
  Comment 1836 9  <||@
  Comment 1839 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 1844 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1845 768 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1849 770 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1851 772 JUMP ~[] destination: B73 -> B79  <||@
  Comment 1856 block B75 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1856 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1856 782 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1859 784 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1864 786 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1868 788 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:277, 11, 40, 2, 99]  <||@
  Comment 1868 9  <||@
  Comment 1871 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 1876 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1877 790 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1881 792 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1883 794 JUMP ~[] destination: B75 -> B79  <||@
  Comment 1888 block B113 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1888 1230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1888 1232 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1888 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1898 1234 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1901 1236 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B115  <||@
  Comment 1907 block B115 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1907 1264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1907 1266 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1911 1268 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1918 1270 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1918 1272 JUMP ~[] destination: B115 -> B116  <||@
  Comment 1918 block B116 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1918 1274 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1918 1276 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1921 1278 rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1928 1280 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1931 1282 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1931 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1938 1284 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1942 1286 rcx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1949 1288 MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1952 1290 rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1959 1292 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1964 1294 rsi|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1969 1296 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1973 1298 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1977 1300 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 107, 99]  <||@
  Comment 1977 [rdx:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:40|DWORD  |rdx|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1977 {infopoint: SAFEPOINT}  <||@
  Comment 1977 11  <||@
  Comment 1983 1302 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1986 1304 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1991 1306 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1996 1308 JUMP ~[] destination: B116 -> B33  <||@
  Comment 2001 block B103 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2001 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2001 1088 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 2001 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 2013 1090 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 2019 block B104 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2019 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2019 1094 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 2029 1096 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2036 1098 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2041 1100 rdx|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 2046 1102 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2050 1104 MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2054 1106 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 157, 99]  <||@
  Comment 2054 [rsi:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:40|DWORD  |rsi|DWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2054 {infopoint: SAFEPOINT}  <||@
  Comment 2054 11  <||@
  Comment 2060 1108 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2063 1110 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2068 1112 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2073 1114 JUMP ~[] destination: B104 -> B33  <||@
  Comment 2078 block B47 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2078 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 480 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2084 482 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2090 484 JUMP ~[] destination: B47 -> B86  <||@
  Comment 2095 block B85 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2095 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2095 890 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2100 892 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2100 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2110 894 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 2120 896 rsi|DWORD = SHR r10|DWORD y: 16 size: DWORD  <||@
  Comment 2126 898 rsi|DWORD = XOR (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2129 900 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2132 902 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2137 904 JUMP ~[] destination: B85 -> B86  <||@
  Comment 2142 block B36 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2142 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 370 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2147 372 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2147 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2157 374 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:74]  <||@
  Comment 2157 [r11:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2157 {infopoint: SAFEPOINT}  <||@
  Comment 2157 11  <||@
  Comment 2163 376 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2168 378 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2173 380 JUMP ~[] destination: B36 -> B33  <||@
  Comment 2178 block B110 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2178 1158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2178 1160 stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2183 1162 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 2187 1164 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2187 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2197 1166 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2202 1168 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2207 1170 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99]  <||@
  Comment 2207 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2212 [r14:0, stack:12, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |stack:48|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2213 1172 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2216 1174 r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2221 1176 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2225 1178 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2225 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2235 1180 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 2245 1182 JUMP ~[] destination: B110 -> B112  <||@
  Comment 2250 block B114 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2250 1238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2250 1240 stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2255 1242 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 2259 1244 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2259 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2269 1246 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2274 1248 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2279 1250 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99]  <||@
  Comment 2279 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2284 [r14:0, stack:12, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |stack:48|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2285 1252 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2288 1254 r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2293 1256 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2297 1258 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2297 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2307 1260 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 2317 1262 JUMP ~[] destination: B114 -> B116  <||@
  Comment 2322 block B127 null  <||@
  Comment 2322 1388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2322 1390 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 2331 12  <||@
  Comment 2341 block B13 null  <||@
  Comment 2341 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2341 174 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2345 176 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2352 178 JUMP ~[] destination: B13 -> B14  <||@
  Comment 2352 block B14 loop 1 depth 1 header:1913|LoopBegin  <||@
  Comment 2352 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2352 182 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2358 184 r8|QWORD = LEA [r8|QWORD + 32] size: QWORD  <||@
  Comment 2362 186 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2365 188 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B14  <||@
  Comment 2372 block B8 null  <||@
  Comment 2372 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2372 114 stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 2377 116 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2382 118 stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2387 124 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2387 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2397 126 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2400 128 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2403 130 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2406 132 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2411 134 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2414 136 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2417 138 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10]  <||@
  Comment 2417 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2422 [r14:0, stack:44, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0             |1               |2               |3  |4 
     locals:  |r14|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD  |-  |-   <||@
  Comment 2423 140 JUMP ~[] destination: B8 -> B9  <||@
  Comment 2428 block B82 null  <||@
  Comment 2428 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2428 864 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2433 866 JUMP ~[] destination: B82 -> B83  <||@
  Comment 2433 block B83 null  <||@
  Comment 2433 868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2433 870 r11|DWORD = MOVE input: int[-245787|0xfffffffffffc3fe5]  <||@
  Comment 2439 878 JUMP ~[] destination: B83 -> B84  <||@
  Comment 2439 block B84 null  <||@
  Comment 2439 880 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2439 872 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2444 874 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2449 876 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 2454 882 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2461 884 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2468 886 DEOPT info [bci:16, 11, 40, 2, 99]  <||@
  Comment 2468 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2473 [rcx:0, r9:0, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0            |1             |2          |3         |4  |5  |6  |7  |8 
     locals:  |r9|DWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2474 block B95 null  <||@
  Comment 2474 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2474 1000 r11|DWORD = MOVE input: int[-269851|0xfffffffffffbe1e5]  <||@
  Comment 2480 1004 JUMP ~[] destination: B95 -> B122  <||@
  Comment 2480 block B122 null  <||@
  Comment 2480 1352 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2480 1348 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2485 1354 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2492 1356 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2499 1358 DEOPT info [bci:52, 2, 99]  <||@
  Comment 2499 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2504 [rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2         |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3         |4 
     locals:  |rsi|QWORD[.]  |-  |-  |r8|DWORD  |-   <||@
  Comment 2505 block B80 null  <||@
  Comment 2505 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2505 846 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2510 848 JUMP ~[] destination: B80 -> B81  <||@
  Comment 2510 block B81 null  <||@
  Comment 2510 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2510 852 r11|DWORD = MOVE input: int[-259355|0xfffffffffffc0ae5]  <||@
  Comment 2516 860 JUMP ~[] destination: B81 -> B84  <||@
  Comment 2518 block B117 null  <||@
  Comment 2518 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2518 1312 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694]  <||@
  Comment 2518 {Object[d.a@573535694]}  <||@
  Comment 2528 1314 MOV [r15|QWORD + 668] y: -347964 size: DWORD  <||@
  Comment 2539 1316 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2546 1318 DEOPT info [bci:41, 99]  <||@
  Comment 2546 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2551 [stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |r10|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2552 block B105 null  <||@
  Comment 2552 1116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2552 1118 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694]  <||@
  Comment 2552 {Object[d.a@573535694]}  <||@
  Comment 2562 1120 MOV [r15|QWORD + 668] y: -304444 size: DWORD  <||@
  Comment 2573 1122 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2580 1124 DEOPT info [bci:41, 99]  <||@
  Comment 2580 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2585 [stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |r11|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2586 block B121 null  <||@
  Comment 2586 1344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2586 1346 r11|DWORD = MOVE input: int[-347419|0xfffffffffffab2e5]  <||@
  Comment 2592 1350 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2594 block B124 null  <||@
  Comment 2594 1366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2594 1368 r10|DWORD = MOVE input: int[-236083|0xfffffffffffc65cd]  <||@
  Comment 2600 1370 JUMP ~[] destination: B124 -> B126  <||@
  Comment 2600 block B126 null  <||@
  Comment 2600 1380 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2600 1382 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2607 1384 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2614 1386 DEOPT info [bci:74]  <||@
  Comment 2614 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2619 [stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2620 block B43 null  <||@
  Comment 2620 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2620 448 r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed]  <||@
  Comment 2626 450 JUMP ~[] destination: B43 -> B126  <||@
  Comment 2628 block B129 null  <||@
  Comment 2628 1396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2628 1398 MOV [r15|QWORD + 668] y: -229651 size: DWORD  <||@
  Comment 2639 1400 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2646 1402 DEOPT info [bci:10]  <||@
  Comment 2646 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2651 [stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1          |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |r13|DWORD  |r14|DWORD  |-  |-   <||@
  Comment 2652 block B125 null  <||@
  Comment 2652 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2652 1374 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2657 1376 r10|DWORD = MOVE input: int[-233243|0xfffffffffffc70e5]  <||@
  Comment 2663 1378 JUMP ~[] destination: B125 -> B126  <||@
  Comment 2665 block B118 null  <||@
  Comment 2665 1320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2665 1322 r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5]  <||@
  Comment 2671 1326 JUMP ~[] destination: B118 -> B122  <||@
  Comment 2676 block B123 null  <||@
  Comment 2676 1360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2676 1362 r10|DWORD = MOVE input: int[-237091|0xfffffffffffc61dd]  <||@
  Comment 2682 1364 JUMP ~[] destination: B123 -> B126  <||@
  Comment 2684 block B55 null  <||@
  Comment 2684 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2684 570 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2689 572 JUMP ~[] destination: B55 -> B56  <||@
  Comment 2689 block B56 null  <||@
  Comment 2689 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2689 576 r11|DWORD = MOVE input: int[-248603|0xfffffffffffc34e5]  <||@
  Comment 2695 584 JUMP ~[] destination: B56 -> B84  <||@
  Comment 2700 block B119 null  <||@
  Comment 2700 1328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2700 1330 r11|DWORD = MOVE input: int[-285723|0xfffffffffffba3e5]  <||@
  Comment 2706 1334 JUMP ~[] destination: B119 -> B122  <||@
  Comment 2711 block B120 null  <||@
  Comment 2711 1336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2711 1338 r11|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed]  <||@
  Comment 2717 1342 JUMP ~[] destination: B120 -> B122  <||@
  Comment 2722 block B61 null  <||@
  Comment 2722 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2722 630 r11|DWORD = MOVE input: int[-251675|0xfffffffffffc28e5]  <||@
  Comment 2728 638 JUMP ~[] destination: B61 -> B84  <||@
  Comment 2733 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2733 4  <||@
  Comment 2739 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2739 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7941[org.graalvm.collections.EconomicMapImpl.createHash()]"
  method "HotSpotCompilation-7941[org.graalvm.collections.EconomicMapImpl.createHash()]"
  date 1526687591263
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 119960560 448b560849c1e203493bc20f85ef480aff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24408b560c8b4e10448b56204181fadfbd03d841bb0800000041b804000000450f44c34585d241ba08000000450f44c2448bea442be9458bf0e90d0000000f1f4000850530ba57f041d1e6453bf57ef24889742430448b561842813cd50c000000000002000f83ab090000498b5760498b4f70458bde41c1e3024181fbffffff000f838f080000458d43174183e0f84d63c04d8bc84c03ca4c3bc90f87750800004d894f60410f188410c0000000410f18841000010000410f18841040010000410f1884108001000044895a0c48c70201000000c74208f50000f8488bc2458beb448954242c4c8bf64183fd010f8cab000000488d70104d63d54d8d5ae04d85db0f8df007000049c7c0000000004d8d5af04d3bc30f8f11000000c5f9efc0c4a17a7f04064d8d58104d8bc34d8d5af84d3bc30f8f11000000c5f9efc0c4a1f97e04064d8d58084d8bc34d8d5afc4d3bc30f8f11000000c5f9efc0c4a1797e04064d8d58044d8bc349ffca4d3bc20f8f2a000000468824064d8bd849ffc34d3bda0f8f1700000046886406014d8d58024d3bda0f8f050000004688640602448b54242c48c1e8034189461c498bf648c1ee0949bb00c02408010000004688241e49c1e20349b8801d08c0070000004d8bda41ba000000006666660f1f840000000000453b560c0f8df8060000418bcad1e1413b4b0c0f8333080000418b5c8b10418bfaffc7897c242485db0f841f060000458b5e204585db0f85ec000000894c2420448954242848c1e303488bf348b8ffffffffffffffff90e8144b0aff908bf0c1ee1033f0448bde448bd0488b742430448b4618438504c4448b4e1c438504cc428b0cc50c000000448b6c242041ffc5413bcd0f8672070000458bf049c1e603438b5cae1085db0f84a00100008b3cdd0800000081ffb00301f8400f94c7400fb6ff428b14cd0c00000081f9000200000f83650000008bcaffc94423d9413bd30f86b50600008b442424470fbe54cb10438844cb10450fb6da41ffcb450fbed241f7c2ff0000000f85a100000085ff0f85ad04000085057cb757f04d8bde448bd04c8bf6e9d8feffff4181fbde8902d80f8407ffffffe91c0100008b44242481f9000002000f833d0700008bcad1e9ffc94123cbd1e13bd10f861f070000448bd941ffc3413bd30f86ed060000460fbe54c910430fbe54cb10428844c9108bc8c1f90843884ccb10440fb6da41c1e308450fb6d2450bda458bd341ffca4585db0f850b000000458bdae95fffffff458bd349bb00c0240801000000428b34c50800000081fef52200f80f85f8050000498b7760498b5770488d4e1885ff0f856e030000483bca0f878704000049894f600f1886d800000049b8801d08c007000000488bd6498b88a800000048890ec74608b00301f84489560c895e10488bf248c1ee03438974ae104b8d74ae1048c1ee094688241e85055cb657f04d8bde448b5424244c8b742430e9b4fdffffbf00000000e96bfeffff8bc7894c24204489542428498bf64181fbdfbd03d80f84bb05000042813cdd080000005f3e03f80f858f050000448b14dd0800000049bbc0170ac0070000004e3b1cd5300000000f85c1050000448b14dd2c000000460fb61cd5300000004585db0f8451030000895c241c4489542418468b1cd514000000448bc349c1e0034c8944241044895c240c41b800000000e989000000660f1f44000044894424088b2ccd14000000443b04ed0c0000000f836204000048c1e503428b6c85104c8b2ced480000004d85ed0f8473000000413bc00f868c04000048c1e2034a8b4cc2108b0cd948c1e103488bf10f1f8000000000e8644a0aff900344240c8bf085053db557f0446bd60d448b44240841ffc0448954240c448b5424188b5c241c428b0cd5100000008b14cd0c0000008b04d50c000000413bc00f8f5effffffe98802000081fde90a00d80f846100000081fd370b00d80f848200000048c1e10381fd1d0b00d80f84ad00000081fdf60a00d80f84d000000081fd030b00d80f84ec00000081fd440b00d80f841001000081fd2a0b00d80f842101000081fd100b00d80f84350100008b74240ce94fffffff3b4424080f865e040000448b442408448b54240c8b5c241c48c1e2034a8b74c210440314de418bf2e922ffffff448b442408448b54240c8b5c241c413bc00f864a04000048c1e2034a8b74c210488b34de4963d2488bce48c1e9204833ce4803d18bf2e9e7feffff448b442408488bf1488b542410418bc8666690e8ac440aff9085c00f842d000000448b54240c418d7207e9b8feffff488bf1488b5424108b4c2408e884440aff90c5f97ec60374240ce999feffff8b74240ce990feffff488bf1488b5424108b4c2408e85c440aff90c4e1f97ec6488bd648c1ea204833f2486354240c4803f28bf6e960feffff488bf1488b5424108b4c2408e82c440aff900344240c8bf0e943feffff488bf1488b5424108b4c2408666690e80c440aff900344240c8bf0e923feffff488bf1488b5424108b4c2408666690e8ec430aff900344240c8bf0e903feffff49b8801d08c007000000483bca0f875701000049894f600f1886d8000000488bd6498b88a800000048890ec74608b00301f84489560c8b0cdd10000000894e10488bf248c1ee03438974ae104b8d74ae1048c1ee094688241e8505e7b257f04d8bde448b5424244c8b742430e93ffaffff42813cc508000000f52200f80f851502000049bb00c02408010000008b34dd10000000438974ae104b8d54ae1048c1ea094688241a85059ab257f04d8bde448b5424244c8b742430e9f2f9ffff41bb0000000041ba00000000e950faffff448b54240c49b8801d08c00700000049bb00c0240801000000418bf2c1ee104133f2448bde488b742430e921faffff448954242849b8801d08c007000000850533b257f0448b5424244c8b742430e98ef9ffff4489542420895c240c48be680b00c007000000ba02000000b901000000e89c3480ff90488bf0448b5424208b5c240c49b8801d08c00700000049bb00c0240801000000e946fbffff4489542420895c240c48be680b00c007000000ba02000000b901000000e8543480ff90488bf0448b5424208b5c240c49b8801d08c00700000049bb00c0240801000000e96cfeffff488b6c24404883c448850585b157f0c5f877c3c5f9efc049c7c000000000c4a17e7f04064d8d40204d3bc37ef1e9f8f7ffff448954242c448974242844896c242448baa80700c0070000004c8bc6488bf2418bd3b9000000004d8bf0458bebe8ca3380ff90e99bf7ffff448b54240c41bbe53ffcff448b442408488b4c2410448b4c241845899f9c0200004d89a7a8020000e8f5560aff9041bbe5e1fbff448b44242845899f9c0200004d89a7a8020000e8d6560aff90448b54240c41bbe50afcffebb149bbe89ab6770700000041c7879c020000c4b0faff4d899fa8020000e8a7560aff9049bae89ab6770700000041c7879c020000c45afbff4d8997a8020000e885560aff9041bbe5b2faffeb8e41bacd65fcff4589979c0200004d89a7a8020000e863560aff9041baed66fcffebe441c7879c020000ed7efcff4d89a7a8020000e843560aff90448954242841bae570fcffebbf41bbe599fbffe93cffffff41badd61fcffebac448b54240c41bbe534fcffe9fbfeffff41bbe5a3fbffe919ffffff41bbedcffbffe90effffff41bbe528fcffe9dafeffffe88ee749ff90e8e8540aff90f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5d8708a4 slotKind: QWORD  <||@
  Comment 48 6 rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 51 8 rcx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 54 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 58 12 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445]  <||@
  Comment 58 {NarrowOop[Equivalence$3@1032552445]}  <||@
  Comment 65 14 r11|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 71 16 r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: r11|DWORD) condition: =  <||@
  Comment 81 18 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 84 20 r10|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 90 22 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: =  <||@
  Comment 94 24 r13|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 100 26 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 103 28 JUMP ~[] destination: B0 -> B1  <||@
  Comment 108 block B130 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 108 1404 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 1406 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:10]  <||@
  Comment 112 [rsi:0]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4 
     locals:  |rsi|QWORD[.]  |r13|DWORD  |r14|DWORD  |-  |-   <||@
  Comment 112 {infopoint: SAFEPOINT}  <||@
  Comment 112 11  <||@
  Comment 118 1408 r14|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 121 1410 JUMP ~[] destination: B130 -> B1  <||@
  Comment 121 block B1 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 121 30 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 121 32 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 124 34 BRANCH trueDestinationProbability: 0.399200501646026 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B130  <||@
  Comment 126 block B2 null  <||@
  Comment 126 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 38 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 131 40 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 135 42 CMP [r10|DWORD[.] * 8 + 12] y: 131072 size: DWORD state [bci:10]  <||@
  Comment 135 [rsi:0, r10:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4 
     locals:  |rsi|QWORD[.]  |r13|DWORD  |r14|DWORD  |-  |-   <||@
  Comment 135 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 147 44 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B129  <||@
  Comment 153 block B3 null  <||@
  Comment 153 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 153 48 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 157 50 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 161 52 r11|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 168 54 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 175 56 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 181 block B4 null  <||@
  Comment 181 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 60 r8|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 185 62 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 189 64 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 192 66 r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 198 68 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 201 70 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 207 block B6 null  <||@
  Comment 207 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 84 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 211 86 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 220 88 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 229 90 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 238 92 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 247 94 MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 251 96 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 258 98 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 258 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 265 100 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 265 102 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 268 104 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 271 106 stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 276 108 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 279 110 JUMP ~[] destination: B6 -> B9  <||@
  Comment 279 block B9 null  <||@
  Comment 279 142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 279 144 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 283 146 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B9 -> B32 falseDestination: B9 -> B11  <||@
  Comment 289 block B11 null  <||@
  Comment 289 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 156 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 293 158 r10|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 296 160 r11|QWORD = LEA [r10|QWORD - 32] size: QWORD  <||@
  Comment 300 162 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 303 164 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 309 block B12 null  <||@
  Comment 309 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 309 168 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 316 170 JUMP ~[] destination: B12 -> B16  <||@
  Comment 316 block B16 null  <||@
  Comment 316 194 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 316 196 r11|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 320 198 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 323 200 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18  <||@
  Comment 329 block B18 null  <||@
  Comment 329 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 208 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 333 210 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 339 212 r11|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 343 214 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 346 216 JUMP ~[] destination: B18 -> B19  <||@
  Comment 346 block B19 null  <||@
  Comment 346 218 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 346 220 r11|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 350 222 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 353 224 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 359 block B21 null  <||@
  Comment 359 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 359 232 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 363 234 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 369 236 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 373 238 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 376 240 JUMP ~[] destination: B21 -> B22  <||@
  Comment 376 block B22 null  <||@
  Comment 376 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 376 244 r11|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 380 246 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 383 248 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 389 block B24 null  <||@
  Comment 389 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 389 256 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 393 258 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 399 260 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 403 262 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 406 264 JUMP ~[] destination: B24 -> B25  <||@
  Comment 406 block B25 null  <||@
  Comment 406 266 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 406 268 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 409 270 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 412 272 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B32 falseDestination: B25 -> B27  <||@
  Comment 418 block B27 null  <||@
  Comment 418 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 282 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 422 284 r11|QWORD = INC r8|QWORD size: QWORD  <||@
  Comment 428 286 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 431 288 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B32 falseDestination: B27 -> B29  <||@
  Comment 437 block B29 null  <||@
  Comment 437 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 437 298 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 442 300 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 446 302 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 449 304 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 455 block B31 null  <||@
  Comment 455 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 314 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 460 318 JUMP ~[] destination: B31 -> B32  <||@
  Comment 460 block B32 null  <||@
  Comment 460 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 150 r10|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 465 322 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 469 324 MOV (x: [r14|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 473 326 rsi|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 480 328 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 490 330 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 494 332 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 498 334 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 498 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 508 336 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 511 338 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 517 340 JUMP ~[] destination: B32 -> B33  <||@
  Comment 517 block B33 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 517 342 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 528 344 CMP (x: r10|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 532 346 BRANCH trueDestinationProbability: 0.9555287796899239 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B127  <||@
  Comment 538 block B34 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 538 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 350 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 543 352 CMP (x: rcx|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD state [bci:74]  <||@
  Comment 543 [r11:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4 
     locals:  |r14|QWORD[.]  |-  |-  |r10|DWORD  |-   <||@
  Comment 543 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 547 354 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B34 -> B35 falseDestination: B34 -> B125  <||@
  Comment 553 block B35 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 553 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 358 rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 558 360 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 563 362 stack:44|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 567 364 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 569 366 BRANCH trueDestinationProbability: 0.0015533767669660724 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 575 block B37 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 575 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 384 r11|DWORD[.] = MOV [r14|QWORD[.] + 32] size: DWORD  <||@
  Comment 579 386 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 582 388 BRANCH trueDestinationProbability: 0.6705794984965615 condition: = trueDestination: B37 -> B41 falseDestination: B37 -> B39  <||@
  Comment 588 block B41 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 588 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 392 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 592 394 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 597 414 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 601 416 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 604 418 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48, 2, 99]  <||@
  Comment 604 7  <||@
  Comment 615 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 620 [stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 621 420 rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 626 422 rsi|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 628 424 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 631 426 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 634 428 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 639 430 JUMP ~[] destination: B41 -> B86  <||@
  Comment 639 block B86 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 639 906 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 639 908 r8|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 643 910 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:52, 2, 99]  <||@
  Comment 643 [rsi:0, r8:0, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 643 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 647 912 r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 651 914 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:52, 2, 99]  <||@
  Comment 651 [rsi:0, r8:0, r9:0, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 651 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 655 916 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 663 918 r13|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 671 920 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 674 922 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B86 -> B87 falseDestination: B86 -> B121  <||@
  Comment 680 block B87 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 680 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 926 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 687 928 rbx|DWORD[.] = MOV [r14|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 692 930 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 694 932 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 700 block B89 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 700 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 942 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 707 944 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 707 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 713 946 rdi|DWORD = SETCC condition: =  <||@
  Comment 721 948 JUMP ~[] destination: B89 -> B90  <||@
  Comment 721 block B90 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 721 950 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 721 952 rdx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 729 954 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 735 956 BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B90 -> B91 falseDestination: B90 -> B96  <||@
  Comment 741 block B91 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 741 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 741 960 rcx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 745 962 r11|DWORD = AND (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 748 964 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 751 966 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B91 -> B92 falseDestination: B91 -> B95  <||@
  Comment 757 block B92 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 757 968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 970 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 761 972 r10|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 767 974 MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 772 976 r11|DWORD = MOVZXB r10|DWORD size: DWORD  <||@
  Comment 776 978 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 779 980 r10|DWORD = MOVSXB r10|DWORD size: DWORD  <||@
  Comment 783 982 TEST r10|DWORD y: 255 size: DWORD  <||@
  Comment 790 984 BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B92 -> B101 falseDestination: B92 -> B94  <||@
  Comment 796 block B101 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 796 1068 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 796 1070 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 798 1072 BRANCH trueDestinationProbability: 0.9646655098717876 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 804 block B102 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 804 1074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 804 1076 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:41, 99]  <||@
  Comment 804 [rsi:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4  |5          |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |r11|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 804 {infopoint: SAFEPOINT}  <||@
  Comment 804 11  <||@
  Comment 810 1078 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 813 1080 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 816 1082 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 819 1084 JUMP ~[] destination: B102 -> B33  <||@
  Comment 824 block B39 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 824 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 824 400 CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431]  <||@
  Comment 824 {NarrowOop[Equivalence$1@1531265431]}  <||@
  Comment 831 402 BRANCH trueDestinationProbability: 0.8648398191938089 condition: = trueDestination: B39 -> B41 falseDestination: B39 -> B42  <||@
  Comment 842 block B96 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 842 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 842 1008 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 846 1010 CMP rcx|DWORD y: 131072 size: DWORD  <||@
  Comment 852 1012 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B96 -> B97 falseDestination: B96 -> B120  <||@
  Comment 858 block B97 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 858 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 858 1016 rcx|DWORD = SHR rdx|DWORD size: DWORD  <||@
  Comment 862 1018 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 864 1020 rcx|DWORD = AND (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 867 1022 rcx|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 869 1024 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 871 1026 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B119  <||@
  Comment 877 block B98 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 877 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 1030 r11|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 883 1032 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 886 1034 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B98 -> B99 falseDestination: B98 -> B118  <||@
  Comment 892 block B99 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 892 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 1038 r10|DWORD = MOVSXB [rcx|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 898 1040 rdx|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 904 1042 MOVB (x: [rcx|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 909 1044 rcx|DWORD = SAR rax|DWORD y: 8 size: DWORD  <||@
  Comment 914 1046 MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 919 1048 r11|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 923 1050 r11|DWORD = SHL r11|DWORD y: 8 size: DWORD  <||@
  Comment 927 1052 r10|DWORD = MOVZXB r10|DWORD size: DWORD  <||@
  Comment 931 1054 r11|DWORD = OR (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 934 1056 r10|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 940 1058 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 943 1060 BRANCH trueDestinationProbability: 0.8688054406151153 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B107  <||@
  Comment 949 block B100 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 949 1062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 949 1064 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 952 1066 JUMP ~[] destination: B100 -> B101  <||@
  Comment 957 block B94 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 957 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 992 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 960 996 JUMP ~[] destination: B94 -> B107  <||@
  Comment 960 block B107 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 960 1132 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 960 1128 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 970 1134 rsi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 978 1136 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 978 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 984 1138 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B107 -> B108 falseDestination: B107 -> B117  <||@
  Comment 990 block B108 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 990 1140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 990 1142 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 994 1144 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 998 1146 rcx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1002 1148 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1004 1150 BRANCH trueDestinationProbability: 0.7011387517716632 condition: = trueDestination: B108 -> B109 falseDestination: B108 -> B113  <||@
  Comment 1010 block B109 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1010 1152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 1154 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1013 1156 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 1019 block B111 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1019 1184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1019 1186 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1023 1188 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1030 1190 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1030 1192 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1030 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1040 1194 JUMP ~[] destination: B111 -> B112  <||@
  Comment 1040 block B112 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1040 1196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1040 1198 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1043 1200 rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1050 1202 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1053 1204 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1053 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1060 1206 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1064 1208 MOV (x: [rsi|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1067 1210 rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1074 1212 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1079 1214 rsi|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1084 1216 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1088 1218 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1092 1220 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 129, 99]  <||@
  Comment 1092 [rdx:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:40|DWORD  |rdx|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1092 {infopoint: SAFEPOINT}  <||@
  Comment 1092 11  <||@
  Comment 1098 1222 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1101 1224 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1106 1226 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1111 1228 JUMP ~[] destination: B112 -> B33  <||@
  Comment 1116 block B88 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1116 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1116 936 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1121 938 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1126 block B42 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1126 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1126 434 rax|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1128 436 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1132 438 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1137 440 rsi|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1140 442 CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445]  <||@
  Comment 1140 {NarrowOop[Equivalence$3@1032552445]}  <||@
  Comment 1147 444 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 1153 block B44 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1153 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1153 454 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}  <||@
  Comment 1153 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}}  <||@
  Comment 1165 456 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B124  <||@
  Comment 1171 block B45 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1171 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1171 460 r10|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1179 462 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 1179 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 1189 464 CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1197 466 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B123  <||@
  Comment 1203 block B46 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1203 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1203 470 r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 44] size: DWORD  <||@
  Comment 1211 472 r11|DWORD = MOVZXB [r10|DWORD[.] * 8 + 48] size: DWORD state [bci:74]  <||@
  Comment 1211 [rbx:0, rsi:0, r10:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1211 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1220 474 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1223 476 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 1229 block B48 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1229 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1229 488 stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1233 490 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1238 492 r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1246 494 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1253 496 stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1258 498 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1263 500 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1269 502 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1274 block B50 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1274 516 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1280 518 stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1285 520 rbp|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1292 522 CMP (x: r8|DWORD, y: [rbp|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1292 [rcx:0, rdx:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1292 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1300 524 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B50 -> B51 falseDestination: B50 -> B82  <||@
  Comment 1306 block B51 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1306 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1306 528 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1310 530 rbp|DWORD[.] = MOV [rbp|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1315 532 r13|QWORD = MOV [rbp|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1315 [rcx:0, rdx:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1315 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1323 534 TEST (x: r13|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1326 536 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B77  <||@
  Comment 1332 block B77 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1332 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1332 804 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1335 806 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B77 -> B78 falseDestination: B77 -> B80  <||@
  Comment 1341 block B78 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1341 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1341 810 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1345 812 rcx|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1350 814 rcx|DWORD[.] = MOV [rcx|QWORD + rbx|DWORD[.] * 8] size: DWORD  <||@
  Comment 1353 816 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1357 818 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1360 820 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:338, 11, 40, 2, 99]  <||@
  Comment 1360 8  <||@
  Comment 1367 {HotSpotMethod<NodeClass.deepHashCode0(Object)>}  <||@
  Comment 1372 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |-  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |stack:68|DWORD     |                   |   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1373 822 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1377 824 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1379 826 JUMP ~[] destination: B78 -> B79  <||@
  Comment 1379 block B79 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1379 828 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1379 830 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:343, 11, 40, 2, 99]  <||@
  Comment 1379 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |rsi|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1379 {infopoint: SAFEPOINT}  <||@
  Comment 1379 11  <||@
  Comment 1385 832 r10|DWORD = IMUL rsi|DWORD y: 13 size: DWORD  <||@
  Comment 1389 834 r8|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 1397 836 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1402 838 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1407 840 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1411 842 JUMP ~[] destination: B79 -> B49  <||@
  Comment 1411 block B49 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1411 504 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1411 506 rcx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1419 508 rdx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1419 [rcx:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1419 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1426 510 rax|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1426 [rcx:0, rdx:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1426 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1433 512 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1436 514 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B85  <||@
  Comment 1447 block B52 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1447 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1447 540 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int]  <||@
  Comment 1447 {NarrowOop[Class:int]}  <||@
  Comment 1453 542 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B57  <||@
  Comment 1459 block B57 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1459 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1459 588 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long]  <||@
  Comment 1459 {NarrowOop[Class:long]}  <||@
  Comment 1465 590 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B62  <||@
  Comment 1471 block B62 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1471 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1471 642 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1475 644 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean]  <||@
  Comment 1475 {NarrowOop[Class:boolean]}  <||@
  Comment 1481 646 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B66  <||@
  Comment 1487 block B66 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1487 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1487 680 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float]  <||@
  Comment 1487 {NarrowOop[Class:float]}  <||@
  Comment 1493 682 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 1499 block B68 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1499 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1499 702 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double]  <||@
  Comment 1499 {NarrowOop[Class:double]}  <||@
  Comment 1505 704 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 1511 block B70 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1511 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 732 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short]  <||@
  Comment 1511 {NarrowOop[Class:short]}  <||@
  Comment 1517 734 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 1523 block B72 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1523 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 754 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char]  <||@
  Comment 1523 {NarrowOop[Class:char]}  <||@
  Comment 1529 756 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 1535 block B74 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1535 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1535 776 CMP rbp|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte]  <||@
  Comment 1535 {NarrowOop[Class:byte]}  <||@
  Comment 1541 778 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 1547 block B76 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1547 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 798 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1551 800 JUMP ~[] destination: B76 -> B79  <||@
  Comment 1556 block B53 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1556 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1556 546 CMP (x: rax|DWORD, y: stack:72|DWORD) size: DWORD  <||@
  Comment 1560 548 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 1566 block B54 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1566 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1566 552 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1571 554 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1576 556 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1580 558 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1584 560 rsi|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1589 562 r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD  <||@
  Comment 1593 564 rsi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1596 566 JUMP ~[] destination: B54 -> B79  <||@
  Comment 1601 block B58 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1601 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1601 594 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1606 596 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1611 598 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1615 600 CMP (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1618 602 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B61  <||@
  Comment 1624 block B59 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1624 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1624 606 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1628 608 rsi|QWORD = MOV [rdx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1633 610 rsi|QWORD = MOV [rsi|QWORD + rbx|DWORD[.] * 8] size: QWORD  <||@
  Comment 1637 612 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1640 614 rcx|QWORD = SHR rsi|QWORD y: 32 size: QWORD  <||@
  Comment 1647 616 rcx|QWORD = XOR (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1650 618 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1653 620 rsi|DWORD = MOV rdx|QWORD size: DWORD  <||@
  Comment 1655 622 JUMP ~[] destination: B59 -> B79  <||@
  Comment 1660 block B63 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1660 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1660 650 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1665 652 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1668 654 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1673 656 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1676 658 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:121, 11, 40, 2, 99]  <||@
  Comment 1676 9  <||@
  Comment 1679 {HotSpotMethod<Fields.getBoolean(Object, int)>}  <||@
  Comment 1684 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1685 660 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1687 662 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 1693 block B65 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1693 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1693 672 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1698 674 rsi|DWORD = LEA [r10|DWORD + 7] size: DWORD  <||@
  Comment 1702 676 JUMP ~[] destination: B65 -> B79  <||@
  Comment 1707 block B67 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1707 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1707 686 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1710 688 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1715 690 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1719 692 xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:151, 11, 40, 2, 99]  <||@
  Comment 1719 {HotSpotMethod<Fields.getFloat(Object, int)>}  <||@
  Comment 1719 9  <||@
  Comment 1724 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1725 694 rsi|DWORD = VMOVD xmm0|SINGLE  <||@
  Comment 1729 696 rsi|DWORD = ADD (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1733 698 JUMP ~[] destination: B67 -> B79  <||@
  Comment 1738 block B64 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1738 664 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1738 666 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1742 668 JUMP ~[] destination: B64 -> B79  <||@
  Comment 1747 block B69 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1747 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1747 708 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1750 710 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1755 712 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1759 714 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:181, 11, 40, 2, 99]  <||@
  Comment 1759 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1759 9  <||@
  Comment 1764 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1765 716 rsi|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 1770 718 rdx|QWORD = SHR rsi|QWORD y: 32 size: QWORD  <||@
  Comment 1777 720 rsi|QWORD = XOR (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1780 722 rdx|QWORD = MOVSXD stack:68|DWORD size: QWORD  <||@
  Comment 1785 724 rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1788 726 rsi|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 1790 728 JUMP ~[] destination: B69 -> B79  <||@
  Comment 1795 block B71 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1795 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1795 738 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1798 740 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1803 742 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1807 744 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:223, 11, 40, 2, 99]  <||@
  Comment 1807 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 1807 9  <||@
  Comment 1812 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1813 746 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1817 748 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1819 750 JUMP ~[] destination: B71 -> B79  <||@
  Comment 1824 block B73 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1824 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1824 760 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1827 762 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1832 764 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1836 766 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:250, 11, 40, 2, 99]  <||@
  Comment 1836 9  <||@
  Comment 1839 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 1844 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1845 768 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1849 770 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1851 772 JUMP ~[] destination: B73 -> B79  <||@
  Comment 1856 block B75 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1856 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1856 782 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1859 784 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1864 786 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1868 788 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:277, 11, 40, 2, 99]  <||@
  Comment 1868 9  <||@
  Comment 1871 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 1876 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1877 790 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1881 792 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1883 794 JUMP ~[] destination: B75 -> B79  <||@
  Comment 1888 block B113 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1888 1230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1888 1232 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1888 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1898 1234 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1901 1236 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B113 -> B114 falseDestination: B113 -> B115  <||@
  Comment 1907 block B115 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1907 1264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1907 1266 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1911 1268 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1918 1270 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1918 1272 JUMP ~[] destination: B115 -> B116  <||@
  Comment 1918 block B116 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1918 1274 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1918 1276 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1921 1278 rcx|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1928 1280 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1931 1282 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1931 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1938 1284 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1942 1286 rcx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1949 1288 MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1952 1290 rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5a185b92 encoding: base: 0 shift: 3  <||@
  Comment 1959 1292 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1964 1294 rsi|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1969 1296 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1973 1298 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1977 1300 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 107, 99]  <||@
  Comment 1977 [rdx:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:40|DWORD  |rdx|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 1977 {infopoint: SAFEPOINT}  <||@
  Comment 1977 11  <||@
  Comment 1983 1302 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1986 1304 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1991 1306 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1996 1308 JUMP ~[] destination: B116 -> B33  <||@
  Comment 2001 block B103 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2001 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2001 1088 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 2001 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 2013 1090 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 2019 block B104 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2019 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2019 1094 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 2029 1096 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2036 1098 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2041 1100 rdx|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 2046 1102 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2050 1104 MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2054 1106 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:11, 157, 99]  <||@
  Comment 2054 [rsi:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:32|QWORD[.]  |stack:40|DWORD  |rsi|DWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2054 {infopoint: SAFEPOINT}  <||@
  Comment 2054 11  <||@
  Comment 2060 1108 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2063 1110 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2068 1112 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2073 1114 JUMP ~[] destination: B104 -> B33  <||@
  Comment 2078 block B47 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2078 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2078 480 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2084 482 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2090 484 JUMP ~[] destination: B47 -> B86  <||@
  Comment 2095 block B85 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2095 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2095 890 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2100 892 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2100 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2110 894 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 2120 896 rsi|DWORD = SHR r10|DWORD y: 16 size: DWORD  <||@
  Comment 2126 898 rsi|DWORD = XOR (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2129 900 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2132 902 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2137 904 JUMP ~[] destination: B85 -> B86  <||@
  Comment 2142 block B36 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2142 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 370 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2147 372 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2147 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2157 374 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:74]  <||@
  Comment 2157 [r11:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2157 {infopoint: SAFEPOINT}  <||@
  Comment 2157 11  <||@
  Comment 2163 376 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2168 378 r14|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2173 380 JUMP ~[] destination: B36 -> B33  <||@
  Comment 2178 block B110 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2178 1158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2178 1160 stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2183 1162 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 2187 1164 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2187 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2197 1166 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2202 1168 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2207 1170 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99]  <||@
  Comment 2207 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2212 [r14:0, stack:12, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |stack:48|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2213 1172 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2216 1174 r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2221 1176 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2225 1178 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2225 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2235 1180 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 2245 1182 JUMP ~[] destination: B110 -> B112  <||@
  Comment 2250 block B114 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2250 1238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2250 1240 stack:48|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2255 1242 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 2259 1244 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2259 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2269 1246 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2274 1248 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2279 1250 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99]  <||@
  Comment 2279 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2284 [r14:0, stack:12, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |stack:48|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2285 1252 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2288 1254 r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2293 1256 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2297 1258 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2297 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2307 1260 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 2317 1262 JUMP ~[] destination: B114 -> B116  <||@
  Comment 2322 block B127 null  <||@
  Comment 2322 1388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2322 1390 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 2331 12  <||@
  Comment 2341 block B13 null  <||@
  Comment 2341 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2341 174 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2345 176 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2352 178 JUMP ~[] destination: B13 -> B14  <||@
  Comment 2352 block B14 loop 1 depth 1 header:1913|LoopBegin  <||@
  Comment 2352 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2352 182 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2358 184 r8|QWORD = LEA [r8|QWORD + 32] size: QWORD  <||@
  Comment 2362 186 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2365 188 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B14  <||@
  Comment 2372 block B8 null  <||@
  Comment 2372 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2372 114 stack:36|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 2377 116 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2382 118 stack:44|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2387 124 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2387 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2397 126 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2400 128 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2403 130 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2406 132 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2411 134 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2414 136 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2417 138 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10]  <||@
  Comment 2417 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2422 [r14:0, stack:44, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0             |1               |2               |3  |4 
     locals:  |r14|QWORD[.]  |stack:44|DWORD  |stack:40|DWORD  |-  |-   <||@
  Comment 2423 140 JUMP ~[] destination: B8 -> B9  <||@
  Comment 2428 block B82 null  <||@
  Comment 2428 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2428 864 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2433 866 JUMP ~[] destination: B82 -> B83  <||@
  Comment 2433 block B83 null  <||@
  Comment 2433 868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2433 870 r11|DWORD = MOVE input: int[-245787|0xfffffffffffc3fe5]  <||@
  Comment 2439 878 JUMP ~[] destination: B83 -> B84  <||@
  Comment 2439 block B84 null  <||@
  Comment 2439 880 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2439 872 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2444 874 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2449 876 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 2454 882 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2461 884 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2468 886 DEOPT info [bci:16, 11, 40, 2, 99]  <||@
  Comment 2468 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2473 [rcx:0, r9:0, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0            |1             |2          |3         |4  |5  |6  |7  |8 
     locals:  |r9|DWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2474 block B95 null  <||@
  Comment 2474 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2474 1000 r11|DWORD = MOVE input: int[-269851|0xfffffffffffbe1e5]  <||@
  Comment 2480 1004 JUMP ~[] destination: B95 -> B122  <||@
  Comment 2480 block B122 null  <||@
  Comment 2480 1352 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2480 1348 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2485 1354 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2492 1356 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2499 1358 DEOPT info [bci:52, 2, 99]  <||@
  Comment 2499 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2504 [rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2         |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3         |4 
     locals:  |rsi|QWORD[.]  |-  |-  |r8|DWORD  |-   <||@
  Comment 2505 block B80 null  <||@
  Comment 2505 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2505 846 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2510 848 JUMP ~[] destination: B80 -> B81  <||@
  Comment 2510 block B81 null  <||@
  Comment 2510 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2510 852 r11|DWORD = MOVE input: int[-259355|0xfffffffffffc0ae5]  <||@
  Comment 2516 860 JUMP ~[] destination: B81 -> B84  <||@
  Comment 2518 block B117 null  <||@
  Comment 2518 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2518 1312 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694]  <||@
  Comment 2518 {Object[d.a@573535694]}  <||@
  Comment 2528 1314 MOV [r15|QWORD + 668] y: -347964 size: DWORD  <||@
  Comment 2539 1316 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2546 1318 DEOPT info [bci:41, 99]  <||@
  Comment 2546 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2551 [stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |r10|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2552 block B105 null  <||@
  Comment 2552 1116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2552 1118 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@573535694]  <||@
  Comment 2552 {Object[d.a@573535694]}  <||@
  Comment 2562 1120 MOV [r15|QWORD + 668] y: -304444 size: DWORD  <||@
  Comment 2573 1122 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2580 1124 DEOPT info [bci:41, 99]  <||@
  Comment 2580 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2585 [stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|DWORD  |-  |-  |r11|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2586 block B121 null  <||@
  Comment 2586 1344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2586 1346 r11|DWORD = MOVE input: int[-347419|0xfffffffffffab2e5]  <||@
  Comment 2592 1350 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2594 block B124 null  <||@
  Comment 2594 1366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2594 1368 r10|DWORD = MOVE input: int[-236083|0xfffffffffffc65cd]  <||@
  Comment 2600 1370 JUMP ~[] destination: B124 -> B126  <||@
  Comment 2600 block B126 null  <||@
  Comment 2600 1380 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2600 1382 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2607 1384 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2614 1386 DEOPT info [bci:74]  <||@
  Comment 2614 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2619 [stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:40|DWORD  |-   <||@
  Comment 2620 block B43 null  <||@
  Comment 2620 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2620 448 r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed]  <||@
  Comment 2626 450 JUMP ~[] destination: B43 -> B126  <||@
  Comment 2628 block B129 null  <||@
  Comment 2628 1396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2628 1398 MOV [r15|QWORD + 668] y: -229651 size: DWORD  <||@
  Comment 2639 1400 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2646 1402 DEOPT info [bci:10]  <||@
  Comment 2646 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2651 [stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1          |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |r13|DWORD  |r14|DWORD  |-  |-   <||@
  Comment 2652 block B125 null  <||@
  Comment 2652 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2652 1374 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2657 1376 r10|DWORD = MOVE input: int[-233243|0xfffffffffffc70e5]  <||@
  Comment 2663 1378 JUMP ~[] destination: B125 -> B126  <||@
  Comment 2665 block B118 null  <||@
  Comment 2665 1320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2665 1322 r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5]  <||@
  Comment 2671 1326 JUMP ~[] destination: B118 -> B122  <||@
  Comment 2676 block B123 null  <||@
  Comment 2676 1360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2676 1362 r10|DWORD = MOVE input: int[-237091|0xfffffffffffc61dd]  <||@
  Comment 2682 1364 JUMP ~[] destination: B123 -> B126  <||@
  Comment 2684 block B55 null  <||@
  Comment 2684 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2684 570 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2689 572 JUMP ~[] destination: B55 -> B56  <||@
  Comment 2689 block B56 null  <||@
  Comment 2689 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2689 576 r11|DWORD = MOVE input: int[-248603|0xfffffffffffc34e5]  <||@
  Comment 2695 584 JUMP ~[] destination: B56 -> B84  <||@
  Comment 2700 block B119 null  <||@
  Comment 2700 1328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2700 1330 r11|DWORD = MOVE input: int[-285723|0xfffffffffffba3e5]  <||@
  Comment 2706 1334 JUMP ~[] destination: B119 -> B122  <||@
  Comment 2711 block B120 null  <||@
  Comment 2711 1336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2711 1338 r11|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed]  <||@
  Comment 2717 1342 JUMP ~[] destination: B120 -> B122  <||@
  Comment 2722 block B61 null  <||@
  Comment 2722 628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2722 630 r11|DWORD = MOVE input: int[-251675|0xfffffffffffc28e5]  <||@
  Comment 2728 638 JUMP ~[] destination: B61 -> B84  <||@
  Comment 2733 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2733 4  <||@
  Comment 2739 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2739 5  <||@
  HexCodeFile>>> <|@
end_nmethod
