begin_compilation
  name " HotSpotCompilation-3869[java.util.regex.Pattern$Curly.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-3869[java.util.regex.Pattern$Curly.match(Matcher, int, CharSequence)]"
  date 1526687554281
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v212 ?12 v404 ?83 v204 v397 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 ?12 v398 ?83 v204 v212 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 v79 v36 v38 v114 ?78 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$Curly;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 ?12 v395 v212 v396 ?83 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
v0 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B14" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608078766457280763
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i3 i393 
=== Succesors ===
=== Usages ===
?12 v212 i75 v62 v118 v400 v114 v180 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i3 i393  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i6 i34 
=== Succesors ===
=== Usages ===
?12 v14 v212 ?83 i34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i6 i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.199029161432519
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v8 
=== Succesors ===
next: i382 
=== Usages ===
i10 i11 v17 v28 v35 v293 v273 v238 v283 v248 v278 v258 v263 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v8 #next: i382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmin
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v395 
=== Succesors ===
next: v21 
=== Usages ===
v14 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v395 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i382 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i382  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4228
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i10 a4 i11 
=== Succesors ===
=== Usages ===
v346 v384 i385 v386 i388 v408 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i10 a4 i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
stamp: void
trueSuccessorProbability: 0.5560456233515345
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
i382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v15 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a383 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a383  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 13]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v396 
=== Succesors ===
next: v384 
=== Usages ===
v406 v403 v401 
=== Predecessor ===
v15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v396 #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a383 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v406 
=== Succesors ===
next: v239 
=== Usages ===
v379 
=== Predecessor ===
a383 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v406 #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v384 
y: v378 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v384 y: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v238 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v235 #falseSuccessor: v238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i385 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i385  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v397 
=== Succesors ===
next: v249 
=== Usages ===
v62 
=== Predecessor ===
v235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v397 #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i385 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i385  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v248 
=== Usages ===
=== Predecessor ===
i385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v245 #falseSuccessor: v248  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v407 
=== Succesors ===
next: v259 
=== Usages ===
v381 
=== Predecessor ===
v245 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v407 #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v386 
y: v380 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v386 y: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v258 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v255 #falseSuccessor: v258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i6 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v263 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v263 #falseSuccessor: v260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43027
stableDimension: 0
stamp: i32 [-43027] â‡Š00000000ffff57ed â‡ˆ00000000ffff57ed
stampKind: i32
value: int[-43027|0xffffffffffff57ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a387 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a387  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v398 
=== Succesors ===
next: i388 
=== Usages ===
a172 v399 
=== Predecessor ===
v260 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v398 #next: i388  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
i388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v399 
=== Succesors ===
next: v274 
=== Usages ===
v118 v180 
=== Predecessor ===
a387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v399 #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i388 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i388  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v273 
=== Usages ===
=== Predecessor ===
i388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v270 #falseSuccessor: v273  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i388 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i388  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v278 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v275 #falseSuccessor: v278  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i389 
=== Usages ===
i389 
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i389  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a387 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a387  <|@  <|@
f <@~|@floating>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a172 
index: i10 
=== Succesors ===
=== Usages ===
i389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v275 
address: v400 
=== Succesors ===
next: v284 
=== Usages ===
v229 j215 
=== Predecessor ===
v275 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v275 address: v400 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i389 
y: i228 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i389 y: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
i389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v280 #falseSuccessor: v283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i390 
=== Usages ===
i391 
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i390  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a383 
=== Succesors ===
=== Usages ===
i390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v401 
=== Succesors ===
next: i391 
=== Usages ===
v126 
=== Predecessor ===
v280 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v401 #next: i391  <|@  <|@
f <@~|@floating>@ <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i389 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i389  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a133 
index: j215 
=== Succesors ===
=== Usages ===
i391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a133 index: j215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v280 
address: v402 
=== Succesors ===
next: v73 
=== Usages ===
v126 
=== Predecessor ===
i390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v280 address: v402 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
x: i390 
y: i391 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i390 y: i391  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 0.8078172096016135
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v72 
=== Usages ===
=== Predecessor ===
i391 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v28 #falseSuccessor: v72  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4603026351005324073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4233) [bci: 34]
stamp: void
=== Inputs ===
result: i6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i6 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593784430881942044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a392 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a392  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a383 
=== Succesors ===
=== Usages ===
a392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
=== Succesors ===
next: v408 
=== Usages ===
a200 v408 
=== Predecessor ===
v72 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 #next: v408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
object: a392 
=== Succesors ===
next: i77 
=== Usages ===
=== Predecessor ===
a392 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?12 object: a392 #next: i77  <|@  <|@
f <@~|@floating>@ <|@
tid a200 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a392 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a392  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i34 i75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: i32
=== Inputs ===
x: i10 
y: i33 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i33  <|@  <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@51d67061
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a200 a2 i75 a4 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a200 a2 i75 a4  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4229
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i11 
=== Succesors ===
=== Usages ===
?78 ?338 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i11  <|@  <|@
tid ?338 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?83 
values: - - - - 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?83 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v204 
stateDuring: ?338 
=== Succesors ===
next: v294 
=== Usages ===
v79 
=== Predecessor ===
v408 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v204 stateDuring: ?338 #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i77 
y: i6 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i77 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v290 
=== Usages ===
=== Predecessor ===
i77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v293 #falseSuccessor: v290  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v291  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?83 
values: - - - - i6 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?83 values: - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 205
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?78 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?78  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593784430881942044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i393 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i393  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4230) [bci: 26]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
=== Succesors ===
next: v35 
=== Usages ===
i10 
=== Predecessor ===
v290 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v404 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
stamp: i32
=== Inputs ===
x: i11 
y: i33 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i393 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -48403
stableDimension: 0
stamp: i32 [-48403] â‡Š00000000ffff42ed â‡ˆ00000000ffff42ed
stampKind: i32
value: int[-48403|0xffffffffffff42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46363
stableDimension: 0
stamp: i32 [-46363] â‡Š00000000ffff4ae5 â‡ˆ00000000ffff4ae5
stampKind: i32
value: int[-46363|0xffffffffffff4ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v278 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45587
stableDimension: 0
stamp: i32 [-45587] â‡Š00000000ffff4ded â‡ˆ00000000ffff4ded
stampKind: i32
value: int[-45587|0xffffffffffff4ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid i356 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42803
stableDimension: 0
stamp: i32 [-42803] â‡Š00000000ffff58cd â‡ˆ00000000ffff58cd
stampKind: i32
value: int[-42803|0xffffffffffff58cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42259
stableDimension: 0
stamp: i32 [-42259] â‡Š00000000ffff5aed â‡ˆ00000000ffff5aed
stampKind: i32
value: int[-42259|0xffffffffffff5aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v248 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40499
stableDimension: 0
stamp: i32 [-40499] â‡Š00000000ffff61cd â‡ˆ00000000ffff61cd
stampKind: i32
value: int[-40499|0xffffffffffff61cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v238 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602969880006644806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: i394 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: i394  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.type
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v405 
=== Succesors ===
next: v298 
=== Usages ===
v38 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v405 #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i394 
y: i6 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i394 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v297 
=== Usages ===
=== Predecessor ===
i394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v295 #falseSuccessor: v297  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4602969880006644806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: i41 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i41  <|@  <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@78ff8d9d
stamp: void
targetMethod: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
=== Inputs ===
arguments: a1 a2 i10 i11 a4 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i10 i11 a4  <|@  <|@
tid ?339 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
bci: 54
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Curly.match0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v212 
stateDuring: ?339 
=== Succesors ===
next: v43 
=== Usages ===
v43 
=== Predecessor ===
v295 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v212 stateDuring: ?339 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57]
stamp: void
=== Inputs ===
result: i41 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i41 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i41 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid i370 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54035
stableDimension: 0
stamp: i32 [-54035] â‡Š00000000ffff2ced â‡ˆ00000000ffff2ced
stampKind: i32
value: int[-54035|0xffffffffffff2ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" "B18" "B6" "B17" "B16" "B15" "B23" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-54035 - -40203] â‡Š00000000ffff00c5 â‡ˆ00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v340 
values: i348 i352 i356 i358 i362 i364 i366 i370 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v340 values: i348 i352 i356 i358 i362 i364 i366 i370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v351 v355 v357 v361 v363 v365 v369 
=== Succesors ===
next: v346 
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v351 v355 v357 v361 v363 v365 v369 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid a343 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i344 
speculation: a343 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i344 speculation: a343  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v212 ?12 v404 ?83 v204 v397 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
i10 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 ?12 v398 ?83 v204 v212 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 v79 v36 v38 v114 ?78 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$Curly;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v405 ?12 v395 v212 v396 ?83 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
v0 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@420e12f2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B14" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608078766457280763
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i10 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i3 i393 
=== Succesors ===
=== Usages ===
?12 v212 i75 v62 v118 v400 v114 v180 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i3 i393  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v9 
values: i6 i34 
=== Succesors ===
=== Usages ===
?12 v14 v212 ?83 i34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v9 values: i6 i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.199029161432519
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v8 
=== Succesors ===
next: i382 
=== Usages ===
i10 i11 v17 v28 v35 v293 v273 v238 v283 v248 v278 v258 v263 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v8 #next: i382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i382 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmin
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v395 
=== Succesors ===
next: v21 
=== Usages ===
v14 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v395 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i382 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i382  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4228
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i10 a4 i11 
=== Succesors ===
=== Usages ===
v346 v384 i385 v386 i388 v408 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i10 a4 i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
stamp: void
trueSuccessorProbability: 0.5560456233515345
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
i382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v15 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5560456233515345 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a383 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a383  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a383 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 13]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v396 
=== Succesors ===
next: v384 
=== Usages ===
v406 v403 v401 
=== Predecessor ===
v15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v396 #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
result [v7|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a383 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v384 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v406 
=== Succesors ===
next: v239 
=== Usages ===
v379 
=== Predecessor ===
a383 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v406 #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v384 
y: v378 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v384 y: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v238 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v235 #falseSuccessor: v238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMP [v7|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i385 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i385  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i385 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v397 
=== Succesors ===
next: v249 
=== Usages ===
v62 
=== Predecessor ===
v235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v397 #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i385 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i385  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v248 
=== Usages ===
=== Predecessor ===
i385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v245 #falseSuccessor: v248  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v407 
=== Succesors ===
next: v259 
=== Usages ===
v381 
=== Predecessor ===
v245 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v407 #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid v380 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v386 
y: v380 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v386 y: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v258 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v255 #falseSuccessor: v258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i6 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v263 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v263 #falseSuccessor: v260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
result int[-43027|0xffffffffffff57ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43027
stableDimension: 0
stamp: i32 [-43027] â‡Š00000000ffff57ed â‡ˆ00000000ffff57ed
stampKind: i32
value: int[-43027|0xffffffffffff57ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43027|0xffffffffffff57ed]] destination: B6 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a387 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a387  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v398 
=== Succesors ===
next: i388 
=== Usages ===
a172 v399 
=== Predecessor ===
v260 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v398 #next: i388  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
i388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i388 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?12 
guard: - 
address: v399 
=== Succesors ===
next: v274 
=== Usages ===
v118 v180 
=== Predecessor ===
a387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?12 guard: - address: v399 #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i388 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i10 y: i388  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v273 
=== Usages ===
=== Predecessor ===
i388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v270 #falseSuccessor: v273  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i10 
y: i388 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i10 y: i388  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v278 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v275 #falseSuccessor: v278  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i389 
=== Usages ===
i389 
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i389  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a387 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a387  <|@  <|@
f <@~|@floating>@ <|@
tid v400 <|@
result [v10|QWORD[.] + v4|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a172 
index: i10 
=== Succesors ===
=== Usages ===
i389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i389 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v275 
address: v400 
=== Succesors ===
next: v284 
=== Usages ===
v229 j215 
=== Predecessor ===
v275 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v275 address: v400 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i389 
y: i228 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i389 y: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v283 
=== Usages ===
=== Predecessor ===
i389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v280 #falseSuccessor: v283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSX [v10|QWORD[.] + v4|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i390 
=== Usages ===
i391 
=== Predecessor ===
v284 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i390  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
result [v7|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a383 
=== Succesors ===
=== Usages ===
i390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i390 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v401 
=== Succesors ===
next: i391 
=== Usages ===
v126 
=== Predecessor ===
v280 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v401 #next: i391  <|@  <|@
f <@~|@floating>@ <|@
tid a133 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i389 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i389  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
result [v13|QWORD[.] + v14|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a133 
index: j215 
=== Succesors ===
=== Usages ===
i391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a133 index: j215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i391 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v280 
address: v402 
=== Succesors ===
next: v73 
=== Usages ===
v126 
=== Predecessor ===
i390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v280 address: v402 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
x: i390 
y: i391 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i390 y: i391  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 0.8078172096016135
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v28 
falseSuccessor: v72 
=== Usages ===
=== Predecessor ===
i391 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v28 #falseSuccessor: v72  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVZX v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: [v13|QWORD[.] + v14|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8078172096016135 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4603026351005324073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4233) [bci: 34]
stamp: void
=== Inputs ===
result: i6 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i6 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593784430881942044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a392 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a392  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
result [v7|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a383 
=== Succesors ===
=== Usages ===
a392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a392 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
=== Succesors ===
next: v408 
=== Usages ===
a200 v408 
=== Predecessor ===
v72 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 #next: v408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
object: a392 
=== Succesors ===
next: i77 
=== Usages ===
=== Predecessor ===
a392 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?12 object: a392 #next: i77  <|@  <|@
f <@~|@floating>@ <|@
tid a200 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a392 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a392  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i34 i75 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: i32
=== Inputs ===
x: i10 
y: i33 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i10 y: i33  <|@  <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@51d67061
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a200 a2 i75 a4 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a200 a2 i75 a4  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4229
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a4 i11 
=== Succesors ===
=== Usages ===
?78 ?338 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a4 i11  <|@  <|@
tid ?338 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?83 
values: - - - - 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?83 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i77 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v204 
stateDuring: ?338 
=== Succesors ===
next: v294 
=== Usages ===
v79 
=== Predecessor ===
v408 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v204 stateDuring: ?338 #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i77 
y: i6 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i77 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v290 
=== Usages ===
=== Predecessor ===
i77 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v293 #falseSuccessor: v290  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v15|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v291  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?83 
values: - - - - i6 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?83 values: - - - - i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 205
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?78 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?78  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -52499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593784430881942044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i393 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i393  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i393 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4230) [bci: 26]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
=== Succesors ===
next: v35 
=== Usages ===
i10 
=== Predecessor ===
v290 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v404 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
stamp: i32
=== Inputs ===
x: i11 
y: i33 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i393 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v20|DWORD] destination: B14 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
result int[-48403|0xffffffffffff42ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -48403
stableDimension: 0
stamp: i32 [-48403] â‡Š00000000ffff42ed â‡ˆ00000000ffff42ed
stampKind: i32
value: int[-48403|0xffffffffffff42ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-48403|0xffffffffffff42ed]] destination: B15 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
result int[-46363|0xffffffffffff4ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46363
stableDimension: 0
stamp: i32 [-46363] â‡Š00000000ffff4ae5 â‡ˆ00000000ffff4ae5
stampKind: i32
value: int[-46363|0xffffffffffff4ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v278 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46363|0xffffffffffff4ae5]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result int[-45587|0xffffffffffff4ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45587
stableDimension: 0
stamp: i32 [-45587] â‡Š00000000ffff4ded â‡ˆ00000000ffff4ded
stampKind: i32
value: int[-45587|0xffffffffffff4ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45587|0xffffffffffff4ded]] destination: B17 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid i356 <|@
result int[-42803|0xffffffffffff58cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42803
stableDimension: 0
stamp: i32 [-42803] â‡Š00000000ffff58cd â‡ˆ00000000ffff58cd
stampKind: i32
value: int[-42803|0xffffffffffff58cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42803|0xffffffffffff58cd]] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
result int[-42259|0xffffffffffff5aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -42259
stableDimension: 0
stamp: i32 [-42259] â‡Š00000000ffff5aed â‡ˆ00000000ffff5aed
stampKind: i32
value: int[-42259|0xffffffffffff5aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v248 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42259|0xffffffffffff5aed]] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
result int[-40499|0xffffffffffff61cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40499
stableDimension: 0
stamp: i32 [-40499] â‡Š00000000ffff61cd â‡ˆ00000000ffff61cd
stampKind: i32
value: int[-40499|0xffffffffffff61cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v238 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40499|0xffffffffffff61cd]] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602969880006644806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v9 
=== Succesors ===
next: i394 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v9 #next: i394  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i394 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.type
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v405 
=== Succesors ===
next: v298 
=== Usages ===
v38 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v405 #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i394 
y: i6 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i394 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v297 
=== Usages ===
=== Predecessor ===
i394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v295 #falseSuccessor: v297  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4602969880006644806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: i41 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i41  <|@  <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@78ff8d9d
stamp: void
targetMethod: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
=== Inputs ===
arguments: a1 a2 i10 i11 a4 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i10 i11 a4  <|@  <|@
tid ?339 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i41 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 54
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Curly.match0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v212 
stateDuring: ?339 
=== Succesors ===
next: v43 
=== Usages ===
v43 
=== Predecessor ===
v295 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v212 stateDuring: ?339 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 57]
stamp: void
=== Inputs ===
result: i41 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i41 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i41 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid i370 <|@
result int[-54035|0xffffffffffff2ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54035
stableDimension: 0
stamp: i32 [-54035] â‡Š00000000ffff2ced â‡ˆ00000000ffff2ced
stampKind: i32
value: int[-54035|0xffffffffffff2ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
v297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54035|0xffffffffffff2ced]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" "B18" "B6" "B17" "B16" "B15" "B23" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i344 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-54035 - -40203] â‡Š00000000ffff00c5 â‡ˆ00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v340 
values: i348 i352 i356 i358 i362 i364 i366 i370 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v340 values: i348 i352 i356 i358 i362 i364 i366 i370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v351 v355 v357 v361 v363 v365 v369 
=== Succesors ===
next: v346 
=== Usages ===
i344 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v351 v355 v357 v361 v363 v365 v369 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid a343 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?12 
actionAndReason: i344 
speculation: a343 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?12 actionAndReason: i344 speculation: a343  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@420e12f2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMP [v7|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSX [v10|QWORD[.] + v4|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVZX v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v12|DWORD, y: [v13|QWORD[.] + v14|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8078172096016135 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593784430881942044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v15|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v5|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v18|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593784430881942044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v20|DWORD] destination: B14 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B14" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608078766457280763
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD, v5|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5560456233515345 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4603026351005324073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602969880006644806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4602969880006644806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42259|0xffffffffffff5aed]] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" "B18" "B6" "B17" "B16" "B15" "B23" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46363|0xffffffffffff4ae5]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-42803|0xffffffffffff58cd]] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54035|0xffffffffffff2ced]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45587|0xffffffffffff4ded]] destination: B17 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-48403|0xffffffffffff42ed]] destination: B15 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -52499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v0|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v5|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43027|0xffffffffffff57ed]] destination: B6 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40499|0xffffffffffff61cd]] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: iload         4
     5: aload_0       
     6: getfield      #3          // cmin:int
     9: if_icmpge     41
    12: aload_0       
    13: getfield      #1          // atom:java.util.regex.Pattern$Node
    16: aload_1       
    17: iload_2       
    18: aload_3       
    19: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    22: ifeq          33
    25: aload_1       
    26: getfield      #6          // java.util.regex.Matcher.last:int
    29: istore_2      
    30: goto          35
    33: iconst_0      
    34: ireturn       
    35: iinc          
    38: goto          3
    41: aload_0       
    42: getfield      #2          // type:int
    45: ifne          58
    48: aload_0       
    49: aload_1       
    50: iload_2       
    51: iload         4
    53: aload_3       
    54: invokevirtual #7          // match0:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
    57: ireturn       
    58: aload_0       
    59: getfield      #2          // type:int
    62: iconst_1      
    63: if_icmpne     76
    66: aload_0       
    67: aload_1       
    68: iload_2       
    69: iload         4
    71: aload_3       
    72: invokevirtual #8          // match1:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
    75: ireturn       
    76: aload_0       
    77: aload_1       
    78: iload_2       
    79: iload         4
    81: aload_3       
    82: invokevirtual #9          // match2:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
    85: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@420e12f2 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   14  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3] <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:3] <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3] <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r9|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] r11|DWORD 
>@ <|@ instruction rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   66  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP r9|DWORD y: 128 size: WORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   92  <|@ instruction r9|QWORD = MOVZX r9|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction TEST (x: rbx|DWORD, y: [rdi|QWORD[.] + r9|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.8078172096016135 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593784430881942044
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:32|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] stack:52|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr  112  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19] <|@ <|@
      nr  130  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593784430881942044
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  152  <|@ instruction r11|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B14" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608078766457280763
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.5560456233515345 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4603026351005324073
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602969880006644806
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction CMP [rsi|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4602969880006644806
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54] <|@ <|@
      nr  226  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = MOVE input: int[-42259|0xffffffffffff5aed] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" "B18" "B6" "B17" "B16" "B15" "B23" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  244  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r11|DWORD = MOVE input: int[-46363|0xffffffffffff4ae5] <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: int[-42803|0xffffffffffff58cd] <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: int[-54035|0xffffffffffff2ced] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-45587|0xffffffffffff4ded] <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B17 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-48403|0xffffffffffff42ed] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B15 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [r15|QWORD + 668] y: -52499 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: rsi|QWORD[.] rdx|QWORD[.] - stack:48|QWORD[.] stack:52|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = MOVE input: int[-43027|0xffffffffffff57ed] <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B6 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r11|DWORD = MOVE input: int[-40499|0xffffffffffff61cd] <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: iload         4
     5: aload_0       
     6: getfield      #3          // cmin:int
     9: if_icmpge     41
    12: aload_0       
    13: getfield      #1          // atom:java.util.regex.Pattern$Node
    16: aload_1       
    17: iload_2       
    18: aload_3       
    19: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    22: ifeq          33
    25: aload_1       
    26: getfield      #6          // java.util.regex.Matcher.last:int
    29: istore_2      
    30: goto          35
    33: iconst_0      
    34: ireturn       
    35: iinc          
    38: goto          3
    41: aload_0       
    42: getfield      #2          // type:int
    45: ifne          58
    48: aload_0       
    49: aload_1       
    50: iload_2       
    51: iload         4
    53: aload_3       
    54: invokevirtual #7          // match0:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
    57: ireturn       
    58: aload_0       
    59: getfield      #2          // type:int
    62: iconst_1      
    63: if_icmpne     76
    66: aload_0       
    67: aload_1       
    68: iload_2       
    69: iload         4
    71: aload_3       
    72: invokevirtual #8          // match1:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
    75: ireturn       
    76: aload_0       
    77: aload_1       
    78: iload_2       
    79: iload         4
    81: aload_3       
    82: invokevirtual #9          // match2:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
    85: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@420e12f2 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   14  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   28  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3] <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:3] <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3] <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r9|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] r11|DWORD 
>@ <|@ instruction rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3] <|@ <|@
      nr   66  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction r9|DWORD = MOVSX [r9|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP r9|DWORD y: 128 size: WORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604180453653175728
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   92  <|@ instruction r9|QWORD = MOVZX r9|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction TEST (x: rbx|DWORD, y: [rdi|QWORD[.] + r9|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.8078172096016135 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593784430881942044
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:32|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] stack:52|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:3] <|@ <|@
      nr  112  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:32|QWORD[.] stack:40|QWORD[.] - stack:48|QWORD[.] stack:52|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19] <|@ <|@
      nr  130  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593784430881942044
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  152  <|@ instruction r11|DWORD = INC stack:52|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B14" 
    successors "B2" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608078766457280763
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.5560456233515345 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4603026351005324073
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602969880006644806
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction CMP [rsi|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors 
    xhandlers
    flags 
    probability 4602969880006644806
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54] <|@ <|@
      nr  226  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = MOVE input: int[-42259|0xffffffffffff5aed] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" "B18" "B6" "B17" "B16" "B15" "B23" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  240  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  244  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r8|QWORD[.] r9|DWORD 
>@ <|@ instruction DEOPT info [bci:3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction r11|DWORD = MOVE input: int[-46363|0xffffffffffff4ae5] <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOVE input: int[-42803|0xffffffffffff58cd] <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r11|DWORD = MOVE input: int[-54035|0xffffffffffff2ced] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-45587|0xffffffffffff4ded] <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B17 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE input: int[-48403|0xffffffffffff42ed] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B15 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [r15|QWORD + 668] y: -52499 size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: rsi|QWORD[.] rdx|QWORD[.] - stack:48|QWORD[.] stack:52|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = MOVE input: int[-43027|0xffffffffffff57ed] <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B6 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction r11|DWORD = MOVE input: int[-40499|0xffffffffffff61cd] <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        4
     3: iload         4
     5: aload_0       
     6: getfield      #3          // cmin:int
     9: if_icmpge     41
    12: aload_0       
    13: getfield      #1          // atom:java.util.regex.Pattern$Node
    16: aload_1       
    17: iload_2       
    18: aload_3       
    19: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    22: ifeq          33
    25: aload_1       
    26: getfield      #6          // java.util.regex.Matcher.last:int
    29: istore_2      
    30: goto          35
    33: iconst_0      
    34: ireturn       
    35: iinc          
    38: goto          3
    41: aload_0       
    42: getfield      #2          // type:int
    45: ifne          58
    48: aload_0       
    49: aload_1       
    50: iload_2       
    51: iload         4
    53: aload_3       
    54: invokevirtual #7          // match0:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
    57: ireturn       
    58: aload_0       
    59: getfield      #2          // type:int
    62: iconst_1      
    63: if_icmpne     76
    66: aload_0       
    67: aload_1       
    68: iload_2       
    69: iload         4
    71: aload_3       
    72: invokevirtual #8          // match1:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
    75: ireturn       
    76: aload_0       
    77: aload_1       
    78: iload_2       
    79: iload         4
    81: aload_3       
    82: invokevirtual #9          // match2:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
    85: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488974242048895424184c8944241041bb00000000448bd1e9e30000006666908b4e1c813ccd08000000addeadde0f85af010000443b52100f8d2201000041817808addeadde0f853c0100004585d20f8c83010000458b480c428b1ccd0c000000413bda0f8e3b010000413bda0f860a01000049c1e103470fbf4c5110664181f980000f83270100008b1ccd1000000048bfaddeaddeaddeadde450fb7c942855c8f100f846800000044895c240c8b0ccd0c000000418504cc48c1e10341ffc2488bf1488bda418bca4d8bd048b8ffffffffffffffff90e8000000009085c0488b5424180f84d1000000448b5220448b5c240c41ffc34c8b442410488b7424208b4e14413bcb0f8f14ffffffe918000000b800000000488b6c24304883c438850500000000c5f877c344895c240c837e10000f855b000000418bca448b44240c4c8b4c24106690e80000000090488b6c24304883c438850500000000c5f877c3458bcb41bbed5affff45899f9c0200004d89a7a8020000e80000000090458bcb41bbe54affffebe1458bcb41bbcd58ffffebd641bbed2cffff448b4c240c4c8b442410ebc4458bcb41bbed4dffffebb9458bcb41bbed42ffffebae488b74242041c7879c020000ed32ffff4d89a7a8020000e80000000090458bcb41bbed57ffffeb86458bcb41bbcd61ffffe978ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@420e12f2 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 69 14 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 72 16 JUMP ~[] destination: B0 -> B1  <||@
  Comment 77 block B2 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 77 26 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 80 28 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 83 30 CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3]  <||@
  Comment 83 [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |r11|DWORD   <||@
  Comment 83 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 83 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 94 32 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B20  <||@
  Comment 100 block B3 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 100 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 36 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:3]  <||@
  Comment 100 [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |r11|DWORD   <||@
  Comment 100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 104 38 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B19  <||@
  Comment 110 block B4 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 110 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 42 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3]  <||@
  Comment 110 [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |r11|DWORD   <||@
  Comment 110 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 118 44 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B18  <||@
  Comment 124 block B5 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 124 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 48 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 127 50 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 133 block B7 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 133 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 62 r9|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 137 64 rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 137 [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |r11|DWORD   <||@
  Comment 137 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 145 66 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 148 68 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B17  <||@
  Comment 154 block B8 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 154 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 72 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 157 74 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B16  <||@
  Comment 163 block B9 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 163 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 163 78 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3  <||@
  Comment 167 80 r9|DWORD = MOVSX [r9|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 173 82 CMP r9|DWORD y: 128 size: WORD  <||@
  Comment 179 84 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B15  <||@
  Comment 185 block B10 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 185 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 185 88 rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 192 90 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 192 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 202 92 r9|QWORD = MOVZX r9|DWORD size: DWORD  <||@
  Comment 206 94 TEST (x: rbx|DWORD, y: [rdi|QWORD[.] + r9|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 211 96 BRANCH trueDestinationProbability: 0.8078172096016135 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 217 block B12 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 217 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 106 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 222 108 rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 229 110 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:3]  <||@
  Comment 229 [rcx:0, rdx:0, r8:0, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |stack:52|DWORD   <||@
  Comment 229 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 233 112 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3  <||@
  Comment 237 114 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 240 116 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 243 118 rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 246 122 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 249 124 r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 252 128 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19]  <||@
  Comment 252 7  <||@
  Comment 263 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 268 [stack:16, stack:24, stack:32]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:52|DWORD   <||@
  Comment 269 130 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 271 136 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 276 132 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 282 block B14 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 282 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 150 r10|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 286 152 r11|DWORD = INC stack:52|DWORD size: DWORD  <||@
  Comment 294 154 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 299 156 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 304 158 JUMP ~[] destination: B14 -> B1  <||@
  Comment 304 block B1 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 304 18 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 304 20 rcx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 307 22 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 310 24 BRANCH trueDestinationProbability: 0.5560456233515345 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21  <||@
  Comment 321 block B11 null  <||@
  Comment 321 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 321 100 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 326 102 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 335 12  <||@
  Comment 345 block B21 null  <||@
  Comment 345 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 210 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 350 212 CMP [rsi|QWORD[.] + 16] y: 0 size: DWORD  <||@
  Comment 354 214 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 360 block B22 null  <||@
  Comment 360 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 360 218 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 363 220 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 368 222 r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 373 224 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54]  <||@
  Comment 373 9  <||@
  Comment 375 {HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>}  <||@
  Comment 380 []at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 381 226 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 390 12  <||@
  Comment 400 block B19 null  <||@
  Comment 400 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 400 194 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 403 196 r11|DWORD = MOVE input: int[-42259|0xffffffffffff5aed]  <||@
  Comment 409 198 JUMP ~[] destination: B19 -> B24  <||@
  Comment 409 block B24 null  <||@
  Comment 409 238 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 409 240 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 416 242 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 423 244 DEOPT info [bci:3]  <||@
  Comment 423 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 428 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 429 block B16 null  <||@
  Comment 429 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 170 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 432 172 r11|DWORD = MOVE input: int[-46363|0xffffffffffff4ae5]  <||@
  Comment 438 174 JUMP ~[] destination: B16 -> B24  <||@
  Comment 440 block B18 null  <||@
  Comment 440 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 440 186 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 443 188 r11|DWORD = MOVE input: int[-42803|0xffffffffffff58cd]  <||@
  Comment 449 190 JUMP ~[] destination: B18 -> B24  <||@
  Comment 451 block B23 null  <||@
  Comment 451 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 230 r11|DWORD = MOVE input: int[-54035|0xffffffffffff2ced]  <||@
  Comment 457 232 r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 462 234 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 467 236 JUMP ~[] destination: B23 -> B24  <||@
  Comment 469 block B17 null  <||@
  Comment 469 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 178 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 472 180 r11|DWORD = MOVE input: int[-45587|0xffffffffffff4ded]  <||@
  Comment 478 182 JUMP ~[] destination: B17 -> B24  <||@
  Comment 480 block B15 null  <||@
  Comment 480 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 162 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 483 164 r11|DWORD = MOVE input: int[-48403|0xffffffffffff42ed]  <||@
  Comment 489 166 JUMP ~[] destination: B15 -> B24  <||@
  Comment 491 block B13 null  <||@
  Comment 491 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 138 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 496 140 MOV [r15|QWORD + 668] y: -52499 size: DWORD  <||@
  Comment 507 142 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 514 144 DEOPT info [bci:34, 19]  <||@
  Comment 514 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 519 [rdx:0, rsi:0, stack:16]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0             |1             |2  |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:52|DWORD   <||@
  Comment 520 block B6 null  <||@
  Comment 520 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 520 54 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 523 56 r11|DWORD = MOVE input: int[-43027|0xffffffffffff57ed]  <||@
  Comment 529 58 JUMP ~[] destination: B6 -> B24  <||@
  Comment 531 block B20 null  <||@
  Comment 531 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 202 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 534 204 r11|DWORD = MOVE input: int[-40499|0xffffffffffff61cd]  <||@
  Comment 540 206 JUMP ~[] destination: B20 -> B24  <||@
  Comment 545 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 545 4  <||@
  Comment 551 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 551 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3869[java.util.regex.Pattern$Curly.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-3869[java.util.regex.Pattern$Curly.match(Matcher, int, CharSequence)]"
  date 1526687554466
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11925a780 448b560849c1e203493bc20f85cfa67aff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488974242048895424184c8944241041bb00000000448bd1e9e30000006666908b4e1c813ccd080000009a3702f80f85af010000443b52100f8d2201000041817808da0200f80f853c0100004585d20f8c83010000458b480c428b1ccd0c000000413bda0f8e3b010000413bda0f860a01000049c1e103470fbf4c5110664181f980000f83270100008b1ccd1000000048bff01400c006000000450fb7c942855c8f100f846800000044895c240c8b0ccd0c000000418504cc48c1e10341ffc2488bf1488bda418bca4d8bd048b8ffffffffffffffff90e854aa7aff9085c0488b5424180f84d1000000448b5220448b5c240c41ffc34c8b442410488b7424208b4e14413bcb0f8f14ffffffe918000000b800000000488b6c24304883c43885053117c8f0c5f877c344895c240c837e10000f855b000000418bca448b44240c4c8b4c24106690e8a4a77aff90488b6c24304883c4388505fa16c8f0c5f877c3458bcb41bbed5affff45899f9c0200004d89a7a8020000e8d2bc7aff90458bcb41bbe54affffebe1458bcb41bbcd58ffffebd641bbed2cffff448b4c240c4c8b442410ebc4458bcb41bbed4dffffebb9458bcb41bbed42ffffebae488b74242041c7879c020000ed32ffff4d89a7a8020000e877bc7aff90458bcb41bbed57ffffeb86458bcb41bbcd61ffffe978ffffffe8fa4dbaff90e854bb7aff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@420e12f2 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 69 14 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 72 16 JUMP ~[] destination: B0 -> B1  <||@
  Comment 77 block B2 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 77 26 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 80 28 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 83 30 CMP [rcx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3]  <||@
  Comment 83 [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |r11|DWORD   <||@
  Comment 83 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 83 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 94 32 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B20  <||@
  Comment 100 block B3 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 100 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 36 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:3]  <||@
  Comment 100 [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |r11|DWORD   <||@
  Comment 100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 104 38 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B19  <||@
  Comment 110 block B4 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 110 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 42 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3]  <||@
  Comment 110 [rcx:0, rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |r11|DWORD   <||@
  Comment 110 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 110 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 118 44 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B18  <||@
  Comment 124 block B5 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 124 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 48 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 127 50 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 133 block B7 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 133 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 62 r9|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 137 64 rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:3]  <||@
  Comment 137 [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |r11|DWORD   <||@
  Comment 137 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 145 66 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 148 68 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B17  <||@
  Comment 154 block B8 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 154 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 72 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 157 74 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B16  <||@
  Comment 163 block B9 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 163 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 163 78 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3  <||@
  Comment 167 80 r9|DWORD = MOVSX [r9|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 173 82 CMP r9|DWORD y: 128 size: WORD  <||@
  Comment 179 84 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B15  <||@
  Comment 185 block B10 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 185 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 185 88 rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 192 90 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 192 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 202 92 r9|QWORD = MOVZX r9|DWORD size: DWORD  <||@
  Comment 206 94 TEST (x: rbx|DWORD, y: [rdi|QWORD[.] + r9|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 211 96 BRANCH trueDestinationProbability: 0.8078172096016135 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 217 block B12 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 217 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 106 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 222 108 rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 229 110 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:3]  <||@
  Comment 229 [rcx:0, rdx:0, r8:0, stack:16, stack:24, stack:32]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |stack:52|DWORD   <||@
  Comment 229 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 233 112 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@458a3870 encoding: base: 0 shift: 3  <||@
  Comment 237 114 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 240 116 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 243 118 rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 246 122 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 249 124 r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 252 128 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 19]  <||@
  Comment 252 7  <||@
  Comment 263 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 268 [stack:16, stack:24, stack:32]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:52|DWORD   <||@
  Comment 269 130 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 271 136 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 276 132 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 282 block B14 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 282 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 150 r10|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 286 152 r11|DWORD = INC stack:52|DWORD size: DWORD  <||@
  Comment 294 154 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 299 156 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 304 158 JUMP ~[] destination: B14 -> B1  <||@
  Comment 304 block B1 loop 0 depth 1 header:9|LoopBegin  <||@
  Comment 304 18 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 304 20 rcx|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 307 22 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 310 24 BRANCH trueDestinationProbability: 0.5560456233515345 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B21  <||@
  Comment 321 block B11 null  <||@
  Comment 321 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 321 100 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 326 102 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 335 12  <||@
  Comment 345 block B21 null  <||@
  Comment 345 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 210 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 350 212 CMP [rsi|QWORD[.] + 16] y: 0 size: DWORD  <||@
  Comment 354 214 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 360 block B22 null  <||@
  Comment 360 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 360 218 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 363 220 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 368 222 r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 373 224 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:54]  <||@
  Comment 373 9  <||@
  Comment 375 {HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>}  <||@
  Comment 380 []at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 381 226 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 390 12  <||@
  Comment 400 block B19 null  <||@
  Comment 400 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 400 194 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 403 196 r11|DWORD = MOVE input: int[-42259|0xffffffffffff5aed]  <||@
  Comment 409 198 JUMP ~[] destination: B19 -> B24  <||@
  Comment 409 block B24 null  <||@
  Comment 409 238 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 409 240 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 416 242 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 423 244 DEOPT info [bci:3]  <||@
  Comment 423 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 428 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]  |r9|DWORD   <||@
  Comment 429 block B16 null  <||@
  Comment 429 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 170 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 432 172 r11|DWORD = MOVE input: int[-46363|0xffffffffffff4ae5]  <||@
  Comment 438 174 JUMP ~[] destination: B16 -> B24  <||@
  Comment 440 block B18 null  <||@
  Comment 440 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 440 186 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 443 188 r11|DWORD = MOVE input: int[-42803|0xffffffffffff58cd]  <||@
  Comment 449 190 JUMP ~[] destination: B18 -> B24  <||@
  Comment 451 block B23 null  <||@
  Comment 451 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 230 r11|DWORD = MOVE input: int[-54035|0xffffffffffff2ced]  <||@
  Comment 457 232 r9|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 462 234 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 467 236 JUMP ~[] destination: B23 -> B24  <||@
  Comment 469 block B17 null  <||@
  Comment 469 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 178 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 472 180 r11|DWORD = MOVE input: int[-45587|0xffffffffffff4ded]  <||@
  Comment 478 182 JUMP ~[] destination: B17 -> B24  <||@
  Comment 480 block B15 null  <||@
  Comment 480 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 162 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 483 164 r11|DWORD = MOVE input: int[-48403|0xffffffffffff42ed]  <||@
  Comment 489 166 JUMP ~[] destination: B15 -> B24  <||@
  Comment 491 block B13 null  <||@
  Comment 491 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 138 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 496 140 MOV [r15|QWORD + 668] y: -52499 size: DWORD  <||@
  Comment 507 142 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 514 144 DEOPT info [bci:34, 19]  <||@
  Comment 514 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 519 [rdx:0, rsi:0, stack:16]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0             |1             |2  |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:52|DWORD   <||@
  Comment 520 block B6 null  <||@
  Comment 520 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 520 54 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 523 56 r11|DWORD = MOVE input: int[-43027|0xffffffffffff57ed]  <||@
  Comment 529 58 JUMP ~[] destination: B6 -> B24  <||@
  Comment 531 block B20 null  <||@
  Comment 531 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 202 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 534 204 r11|DWORD = MOVE input: int[-40499|0xffffffffffff61cd]  <||@
  Comment 540 206 JUMP ~[] destination: B20 -> B24  <||@
  Comment 545 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 545 4  <||@
  Comment 551 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 551 5  <||@
  HexCodeFile>>> <|@
end_nmethod
