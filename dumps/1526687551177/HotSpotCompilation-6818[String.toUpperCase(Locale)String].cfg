begin_compilation
  name " HotSpotCompilation-6818[java.lang.String.toUpperCase(Locale)]"
  method "HotSpotCompilation-6818[java.lang.String.toUpperCase(Locale)]"
  date 1526687570164
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1117 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1117  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1130 ?14 ?72 v111 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2727) [bci: 13]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1130 
=== Succesors ===
next: i1118 
=== Usages ===
a265 v1131 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1130 #next: i1118  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/Locale;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1186 ?14 v1134 ?72 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.toUpperCase(Locale)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2722
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v594 i1118 v1186 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1117 
=== Succesors ===
=== Usages ===
i1118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2727) [bci: 16]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1131 
=== Succesors ===
next: v1114 
=== Usages ===
?14 v15 j417 v714 i707 v441 ?72 v73 i322 v272 v748 v687 v1116 a729 a662 
=== Predecessor ===
a1117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1131 #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1118 
=== Succesors ===
=== Usages ===
j421 v423 v435 j1011 j1007 j997 j1003 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1118  <|@  <|@
f <@~|@floating>@ <|@
tid j420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j421 j432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j417 
y: j420 
=== Succesors ===
=== Usages ===
v423 v1014 v1058 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j420  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j421 
y: j417 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j421 y: j417  <|@  <|@
f <@~|@floating>@ <|@
tid a265 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2727) [bci: 13]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1117 
=== Succesors ===
=== Usages ===
j700 v1136 v1132 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1117  <|@  <|@
f <@~|@floating>@ <|@
tid a591 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 a604 a604 a604 a604 a604 a604 a604 a604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2739) [bci: 64]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i707 i42 i103 i1115 a775 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2779) [bci: 241]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v198 v126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 a662 v323 v441 v807 ?72 ?72 v311 a729 v1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v1110 
falseSuccessor: v1113 
=== Usages ===
=== Predecessor ===
i1118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v1110 #falseSuccessor: v1113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1108 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1108  <|@  <|@
f <@*|@fixed>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
v1110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B100" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1118 
y: i9 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1118 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v1111 #falseSuccessor: v455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1108 v1109 
=== Succesors ===
next: v1186 
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1108 v1109 #next: v1186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v1107 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 25]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i135 i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 27]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i137 i206 i736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 16]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: 133955584
stableDimension: 0
stamp: i32 [133955584] ⇊0000000007fc0000 ⇈0000000007fc0000
stampKind: i32
value: int[133955584|0x7fc0000]
=== Inputs ===
=== Succesors ===
=== Usages ===
i131 v132 i202 v203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 3]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1133 v1137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 22]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256] ⇊00000000ffffff00 ⇈00000000ffffff00
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 v227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
v1186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" "B12" 
    successors "B6" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4614897015143310135
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v12 
values: i9 i42 i1115 
=== Succesors ===
=== Usages ===
?14 v15 v1132 i42 i71 j430 i322 v272 v311 i1115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v12 values: i9 i42 i1115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.4259689944050495
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v11 
=== Succesors ===
next: v20 
=== Usages ===
i13 v18 v38 v43 v258 v464 v469 v474 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v11 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i1118 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i13 y: i1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 22]
stamp: void
trueSuccessorProbability: 0.8629773578177928
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v16 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613839940768982972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1119 
=== Usages ===
v429 
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1119  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1107 v16 
=== Succesors ===
=== Usages ===
i1119 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1107 v16  <|@  <|@
f <@~|@floating>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a265 
index: i13 
=== Succesors ===
=== Usages ===
i1119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v429 
address: v1132 
=== Succesors ===
next: v465 
=== Usages ===
i281 j388 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v429 address: v1132 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid i281 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1119 
=== Succesors ===
=== Usages ===
v254 v226 i138 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1119  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 22]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
x: i281 
y: i187 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i281 y: i187  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<String.toUpperCase(Locale)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2731
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i13 i1118 - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v605 a662 a1122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i13 i1118 - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2734) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v464 
=== Usages ===
=== Predecessor ===
i1119 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v461 #falseSuccessor: v464  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613839940768982972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2734) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1120 
=== Usages ===
i1120 
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1120  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1119 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1119  <|@  <|@
f <@~|@floating>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a148 
index: j388 
=== Succesors ===
=== Usages ===
i1120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a148 index: j388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v461 
address: v1133 
=== Succesors ===
next: v129 
=== Usages ===
i135 i131 v126 
=== Predecessor ===
v461 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v461 address: v1133 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:225) [bci: 12]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
x: i1120 
y: i94 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1120 y: i94  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:225) [bci: 12]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
trueSuccessorProbability: 0.45385625545370506
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
i1120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v127 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608721935155517889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:238) [bci: 69]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2746) [bci: 93]
stamp: i32
=== Inputs ===
x: i13 
y: i27 
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i13 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609950747127707062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 15]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 18]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: i32 [0 - 133955584] ⇈0000000007fc0000
=== Inputs ===
x: i1120 
y: i130 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1120 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i131 
y: i130 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i131 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v469 #falseSuccessor: v466  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -74771
stableDimension: 0
stamp: i32 [-74771] ⇊00000000fffedbed ⇈00000000fffedbed
stampKind: i32
value: int[-74771|0xfffffffffffedbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609950747127707062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 26]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i1120 
y: i134 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1120 y: i134  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 29]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: i32 [-256 - 255]
=== Inputs ===
x: i135 
y: i136 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i135 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:228) [bci: 35]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: i32 [-255 - 65791]
=== Inputs ===
x: i281 
y: i137 
=== Succesors ===
=== Usages ===
v254 v252 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i281 y: i137  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 84]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i281 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i138 y: i281  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 84]
stamp: void
trueSuccessorProbability: 0.8205450248715109
=== Inputs ===
condition: v254 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v254 #trueSuccessor: v255 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608645763477395578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2746) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid i1115 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2746) [bci: 93]
stamp: i32
=== Inputs ===
x: i13 
y: i27 
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i13 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 76]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 v231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i32 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i138 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 77]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v252 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v252 #trueSuccessor: v474 #falseSuccessor: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v610  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75027
stableDimension: 0
stamp: i32 [-75027] ⇊00000000fffedaed ⇈00000000fffedaed
stampKind: i32
value: int[-75027|0xfffffffffffedaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2744) [bci: 87]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: a1121 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: a1121  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Locale.baseLocale
nodeSourcePosition: at java.util.Locale.getLanguage(Locale.java:1076) [bci: 1]
at java.lang.String.toUpperCase(String.java:2758) [bci: 121]
nullCheck: false
stamp: n# Lsun/util/locale/BaseLocale;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1134 
=== Succesors ===
next: a1122 
=== Usages ===
v1135 
=== Predecessor ===
v38 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1134 #next: a1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1121 
=== Succesors ===
=== Usages ===
a1122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1122 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BaseLocale.language
nodeSourcePosition: at sun.util.locale.BaseLocale.getLanguage(BaseLocale.java:92) [bci: 1]
at java.util.Locale.getLanguage(Locale.java:1076) [bci: 4]
at java.lang.String.toUpperCase(String.java:2758) [bci: 121]
nullCheck: true
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: ?14 
guard: - 
address: v1135 
=== Succesors ===
next: v483 
=== Usages ===
v397 v393 v395 
=== Predecessor ===
a1121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?14 guard: - address: v1135 #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid a392 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 130]
rawvalue: "tr"
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: NarrowOop[String:"tr"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 130]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1122 
y: a392 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1122 y: a392  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 130]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v393 
=== Succesors ===
trueSuccessor: v482 
falseSuccessor: v480 
=== Usages ===
=== Predecessor ===
a1122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v393 #trueSuccessor: v482 #falseSuccessor: v480  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid i613 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88595
stableDimension: 0
stamp: i32 [-88595] ⇊00000000fffea5ed ⇈00000000fffea5ed
stampKind: i32
value: int[-88595|0xfffffffffffea5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid a394 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 137]
rawvalue: "az"
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: NarrowOop[String:"az"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 137]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1122 
y: a394 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1122 y: a394  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 137]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v486 #falseSuccessor: v484  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid i615 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88851
stableDimension: 0
stamp: i32 [-88851] ⇊00000000fffea4ed ⇈00000000fffea4ed
stampKind: i32
value: int[-88851|0xfffffffffffea4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v486 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid a396 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 144]
rawvalue: "lt"
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: NarrowOop[String:"lt"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 144]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1122 
y: a396 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1122 y: a396  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 144]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v397 
=== Succesors ===
trueSuccessor: v490 
falseSuccessor: v488 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v397 #trueSuccessor: v490 #falseSuccessor: v488  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89107
stableDimension: 0
stamp: i32 [-89107] ⇊00000000fffea3ed ⇈00000000fffea3ed
stampKind: i32
value: int[-89107|0xfffffffffffea3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i9 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i13 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i619 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84065
stableDimension: 0
stamp: i32 [-84065] ⇊00000000fffeb79f ⇈00000000fffeb79f
stampKind: i32
value: int[-84065|0xfffffffffffeb79f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v314 #falseSuccessor: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B98" 
    xhandlers
    flags 
    probability 4568827938815907249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4598839355173139395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: i32
=== Inputs ===
x: i1118 
y: i13 
=== Succesors ===
=== Usages ===
v323 j431 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1118 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i322 
y: i9 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i322 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v320 #falseSuccessor: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B98" 
    xhandlers
    flags 
    probability 4568761123653011302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B96" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1106 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1106  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
j433 v706 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i322 
=== Succesors ===
=== Usages ===
j432 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i322  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j431 
y: j420 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j431 y: j420  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j430 
y: j432 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j430 y: j432  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j433 
y: j417 
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j433 y: j417  <|@  <|@
f <@~|@floating>@ <|@
tid a622 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1594607150
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1594607150]
=== Inputs ===
=== Succesors ===
=== Usages ===
a604 a604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i621 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89883
stableDimension: 0
stamp: i32 [-89883] ⇊00000000fffea0e5 ⇈00000000fffea0e5
stampKind: i32
value: int[-89883|0xfffffffffffea0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v1105 
falseSuccessor: v1102 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v1105 #falseSuccessor: v1102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B95" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i1118 
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i13 y: i1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v1095 
falseSuccessor: v1103 
=== Usages ===
=== Predecessor ===
v1105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v1095 #falseSuccessor: v1103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
=== Inputs ===
=== Succesors ===
next: j641 
=== Usages ===
v439 
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j641 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j684 
=== Usages ===
v1142 v1143 
=== Predecessor ===
v1095 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j684  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j641 
index: - 
=== Succesors ===
=== Usages ===
j684 v686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j641 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1142 
=== Succesors ===
next: j685 
=== Usages ===
j645 v1144 v1145 a661 v1150 v1146 v1147 v1148 v1149 
=== Predecessor ===
j641 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1142 #next: j685  <|@  <|@
f <@~|@floating>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j641 
index: - 
=== Succesors ===
=== Usages ===
j685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j641 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j685 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1143 
=== Succesors ===
next: v650 
=== Usages ===
v651 
=== Predecessor ===
j684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1143 #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid i707 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1118 
y: i27 
=== Succesors ===
=== Usages ===
i736 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1118 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i736 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i707 
y: i136 
=== Succesors ===
=== Usages ===
i640 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i707 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid i639 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i640 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i640 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i736 
y: i639 
=== Succesors ===
=== Usages ===
j644 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i736 y: i639  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i640 
=== Succesors ===
=== Usages ===
j645 j713 v1146 v1147 v1148 v1149 v1157 v1158 v1159 v1160 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i640  <|@  <|@
f <@~|@floating>@ <|@
tid i646 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1118 
y: i646 
=== Succesors ===
=== Usages ===
v717 v650 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1118 y: i646  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a662 a729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 v752 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j637 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 v749 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v714 
=== Succesors ===
trueSuccessor: v649 
falseSuccessor: v648 
=== Usages ===
=== Predecessor ===
j685 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v714 #trueSuccessor: v649 #falseSuccessor: v648  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598276072030318946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: i64
=== Inputs ===
x: j644 
y: j684 
=== Succesors ===
=== Usages ===
v651 v686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j684  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j685 
y: j645 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j685 y: j645  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v656 
falseSuccessor: v655 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v656 #falseSuccessor: v655  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 4568040121230201127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v656 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598230027509194816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1142 
value: j645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1142 value: j645 stateAfter: - lastLocationAccess: - #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j684 
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
address: v1146 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1146 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j684 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
address: v1147 
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1147 #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid v1148 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j684 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
address: v1148 
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1148 #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j684 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
address: v1149 
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1149 #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j684 
index: - 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j684 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1144 
value: i1118 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v682 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1144 value: i1118 stateAfter: - lastLocationAccess: - #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j684 
index: - 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j684 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1145 
value: j637 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1145 value: j637 stateAfter: - lastLocationAccess: - #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j684 
index: - 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j684 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1150 
value: v808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1150 value: v808 stateAfter: - lastLocationAccess: - #next: v660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: a661 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j684 
=== Succesors ===
next: v663 
=== Usages ===
a666 
=== Predecessor ===
v660 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j684 #next: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
a661 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4583842914052713758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v648 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584579626390699843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v652 v654 
=== Succesors ===
next: a662 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v652 v654 #next: a662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a662 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?14 
arguments: v636 i1118 i9 
=== Succesors ===
next: v665 
=== Usages ===
a666 
=== Predecessor ===
v653 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?14 arguments: v636 i1118 i9 #next: v665  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
a662 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v664 
values: a661 a662 
=== Succesors ===
=== Usages ===
v1141 a582 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v664 values: a661 a662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v663 v665 
=== Succesors ===
next: v1017 
=== Usages ===
a666 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v663 v665 #next: v1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v890 
=== Usages ===
j1019 
=== Predecessor ===
v664 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v890  <|@  <|@
f <@~|@floating>@ <|@
tid j1010 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1011 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j417 
y: j1010 
=== Succesors ===
=== Usages ===
v1012 v1056 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j1010  <|@  <|@
f <@~|@floating>@ <|@
tid j1006 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1007 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1007 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j417 
y: j1006 
=== Succesors ===
=== Usages ===
v1008 v1054 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j1006  <|@  <|@
f <@~|@floating>@ <|@
tid j1002 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1003 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1003 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j417 
y: j1002 
=== Succesors ===
=== Usages ===
v1004 v1052 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j1002  <|@  <|@
f <@~|@floating>@ <|@
tid j996 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j997 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j997 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-16 - 2147483631]
=== Inputs ===
x: j417 
y: j996 
=== Succesors ===
=== Usages ===
v998 v1000 v1050 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j996  <|@  <|@
f <@~|@floating>@ <|@
tid j517 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 j1038 j988 j1044 j980 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j997 
y: j517 
=== Succesors ===
=== Usages ===
v893 v828 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j997 y: j517  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1118 
y: i9 
=== Succesors ===
=== Usages ===
v890 v825 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1118 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j956 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j970 j1031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j978 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j979 j1037 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1043 j987 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1049 j995 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v888 
falseSuccessor: v889 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v888 #falseSuccessor: v889  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v906  <|@  <|@
f <@*|@fixed>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
v888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v893  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a666 
index: - 
=== Succesors ===
=== Usages ===
j1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a666 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1019 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1017 
address: v1141 
=== Succesors ===
=== Usages ===
v1180 v1181 v1182 v1183 v1184 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1017 address: v1141  <|@  <|@
f <@*|@fixed>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v998 
=== Succesors ===
trueSuccessor: v891 
falseSuccessor: v892 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v998 #trueSuccessor: v891 #falseSuccessor: v892  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v902  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v894 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B94" 
    successors "B39" "B94" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1044 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v895 
values: j517 j1049 
=== Succesors ===
=== Usages ===
v1184 j1049 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v895 values: j517 j1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v894 
=== Succesors ===
next: v1085 
=== Usages ===
j1044 v898 v899 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v894 #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1019 
index: j1044 
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1019 index: j1044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
value: v1086 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1184 value: v1086 stateAfter: - lastLocationAccess: - #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid j1049 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1044 
y: j277 
=== Succesors ===
=== Usages ===
j1038 j1044 v1050 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1044 y: j277  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j997 
y: j1049 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j997 y: j1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1050 
=== Succesors ===
trueSuccessor: v898 
falseSuccessor: v900 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1050 #trueSuccessor: v898 #falseSuccessor: v900  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v895 
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v895 #next: v904  <|@  <|@
f <@*|@fixed>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1038 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v903 
values: j517 j1049 
=== Succesors ===
=== Usages ===
v1183 j1043 j1032 v1052 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: j517 j1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v902 v904 
=== Succesors ===
next: v925 
=== Usages ===
j1038 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v902 v904 #next: v925  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1003 
y: j1038 
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1003 y: j1038  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v923 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v924 #falseSuccessor: v923  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v928  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1084 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1084  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1019 
index: j1038 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1019 index: j1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1183 
value: v1090 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1183 value: v1090 stateAfter: - lastLocationAccess: - #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid j1043 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1038 
y: j690 
=== Succesors ===
=== Usages ===
j1032 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1038 y: j690  <|@  <|@
f <@*|@fixed>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v1084 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1032 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v914 
values: j1043 j1038 
=== Succesors ===
=== Usages ===
v1182 j1037 j1026 v1054 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v914 values: j1043 j1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v913 v928 
=== Succesors ===
next: v931 
=== Usages ===
j1032 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v913 v928 #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1007 
y: j1032 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1007 y: j1032  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1054 
=== Succesors ===
trueSuccessor: v930 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1054 #trueSuccessor: v930 #falseSuccessor: v929  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1019 
index: j1032 
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1019 index: j1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1182 
value: v1089 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1182 value: v1089 stateAfter: - lastLocationAccess: - #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid j1037 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1032 
y: j978 
=== Succesors ===
=== Usages ===
j1026 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1032 y: j978  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v1082 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1026 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v917 
values: j1037 j1032 
=== Succesors ===
=== Usages ===
v1181 j1031 j1020 v1056 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v917 values: j1037 j1032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v916 v934 
=== Succesors ===
next: v937 
=== Usages ===
j1026 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v916 v934 #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1011 
y: j1026 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1011 y: j1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1056 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1056 #trueSuccessor: v936 #falseSuccessor: v935  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v940  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1019 
index: j1026 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1019 index: j1026  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1181 
value: v1088 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1181 value: v1088 stateAfter: - lastLocationAccess: - #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid j1031 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1026 
y: j956 
=== Succesors ===
=== Usages ===
j1020 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1026 y: j956  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1020 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v920 
values: j1031 j1026 
=== Succesors ===
=== Usages ===
v1180 v1058 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v920 values: j1031 j1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v919 v940 
=== Succesors ===
next: v943 
=== Usages ===
j1020 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v919 v940 #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j421 
y: j1020 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j421 y: j1020  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1058 
=== Succesors ===
trueSuccessor: v942 
falseSuccessor: v941 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1058 #trueSuccessor: v942 #falseSuccessor: v941  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v946  <|@  <|@
f <@*|@fixed>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
v942 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1078  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1019 
index: j1020 
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1019 index: j1020  <|@  <|@
f <@~|@floating>@ <|@
tid i1087 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
value: i1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1180 value: i1087 stateAfter: - lastLocationAccess: - #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
v1078 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B34" "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v906 v922 v946 
=== Succesors ===
next: a582 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v906 v922 v946 #next: a582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a666 
=== Succesors ===
next: j700 
=== Usages ===
j704 v1138 v1139 ?72 
=== Predecessor ===
v907 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a666 #next: j700  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: i64
=== Inputs ===
object: a265 
=== Succesors ===
next: j704 
=== Usages ===
v1151 
=== Predecessor ===
a582 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a265 #next: j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: i64
=== Inputs ===
object: a582 
=== Succesors ===
next: v706 
=== Usages ===
v1152 
=== Predecessor ===
j700 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a582 #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid v1151 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j700 
index: - 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j700 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1152 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1151 v1152 j430 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
j704 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1151 v1152 j430 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B61" 
    successors "B54" "B64" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610292582376437329
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v68 
values: i13 i103 i103 
=== Succesors ===
=== Usages ===
?72 v73 v1138 i103 v1136 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v68 values: i13 i103 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 5.952835834637697
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 157]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v67 
=== Succesors ===
next: v80 
=== Usages ===
v104 v76 i71 v228 v509 v499 v504 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v67 #next: v80  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<String.toUpperCase(Locale)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2765
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i1118 i9 a582 - i9 - - - - i71 - - 
=== Succesors ===
=== Usages ===
a729 a775 v628 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i1118 i9 a582 - i9 - - - - i71 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 160]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i71 
y: i1118 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i71 y: i1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 160]
stamp: void
trueSuccessorProbability: 0.832012837615761
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v74 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609013567900767044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 163]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1123 
=== Usages ===
v439 
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1123  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1095 v74 
=== Succesors ===
=== Usages ===
v375 i1123 v386 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1095 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a265 
index: i71 
=== Succesors ===
=== Usages ===
i1123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: i71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v439 
address: v1136 
=== Succesors ===
next: v500 
=== Usages ===
i358 j399 v375 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v439 address: v1136 #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1123 
=== Succesors ===
=== Usages ===
v227 i207 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1123  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 22]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
x: i358 
y: i187 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i358 y: i187  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2767) [bci: 177]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v499 
=== Usages ===
=== Predecessor ===
i1123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v496 #falseSuccessor: v499  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609013567900767044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2767) [bci: 177]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1124 
=== Usages ===
i1124 
=== Predecessor ===
v500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1124  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1123 
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1123  <|@  <|@
f <@~|@floating>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a148 
index: j399 
=== Succesors ===
=== Usages ===
i1124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a148 index: j399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v496 
address: v1137 
=== Succesors ===
next: v201 
=== Usages ===
i205 i202 v198 
=== Predecessor ===
v496 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v496 address: v1137 #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:225) [bci: 12]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
x: i1124 
y: i94 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1124 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 418]
stamp: i32
=== Inputs ===
x: i71 
y: i27 
=== Succesors ===
=== Usages ===
i71 i71 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i71 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a582 
index: i71 
=== Succesors ===
=== Usages ===
v386 v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a582 index: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:225) [bci: 12]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
trueSuccessorProbability: 0.45385625545370506
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v200 
=== Usages ===
=== Predecessor ===
i1124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v199 #falseSuccessor: v200  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4603925350219245864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:238) [bci: 69]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2807) [bci: 413]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v439 
address: v1138 
value: i1123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v439 address: v1138 value: i1123 stateAfter: - lastLocationAccess: - #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 157]
stamp: void
=== Inputs ===
loopBegin: v68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 15]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 18]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: i32 [0 - 133955584] ⇈0000000007fc0000
=== Inputs ===
x: i1124 
y: i130 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1124 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i202 
y: i130 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i202 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v501 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v504 #falseSuccessor: v501  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v68 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v68 #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96275
stableDimension: 0
stamp: i32 [-96275] ⇊00000000fffe87ed ⇈00000000fffe87ed
stampKind: i32
value: int[-96275|0xfffffffffffe87ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 26]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i1124 
y: i134 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1124 y: i134  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 29]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: i32 [-256 - 255]
=== Inputs ===
x: i205 
y: i136 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i205 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:228) [bci: 35]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: i32 [-255 - 65791]
=== Inputs ===
x: i358 
y: i206 
=== Succesors ===
=== Usages ===
i235 v231 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i358 y: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2779) [bci: 236]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i207 
y: i32 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i207 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2779) [bci: 236]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v231 
=== Succesors ===
trueSuccessor: v509 
falseSuccessor: v506 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v231 #trueSuccessor: v509 #falseSuccessor: v506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2779) [bci: 236]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v68 
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v68 #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid i632 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96531
stableDimension: 0
stamp: i32 [-96531] ⇊00000000fffe86ed ⇈00000000fffe86ed
stampKind: i32
value: int[-96531|0xfffffffffffe86ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2779) [bci: 236]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2807) [bci: 412]
resultBits: 16
stamp: i16
=== Inputs ===
value: i207 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2807) [bci: 413]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v439 
address: v1138 
value: i235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v439 address: v1138 value: i235 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2767) [bci: 177]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v68 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v68 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid i625 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91923
stableDimension: 0
stamp: i32 [-91923] ⇊00000000fffe98ed ⇈00000000fffe98ed
stampKind: i32
value: int[-91923|0xfffffffffffe98ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i626 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-96531 - -91923] ⇊00000000fffe80ed ⇈00000000fffe9fed
valueDescription: i32
=== Inputs ===
merge: v623 
values: i625 i630 i632 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v623 values: i625 i630 i632  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v624 v629 v631 
=== Succesors ===
next: v628 
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v624 v629 v631 #next: v628  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?72 
actionAndReason: i626 
speculation: a591 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?72 actionAndReason: i626 speculation: a591  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B65" "B68" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2810) [bci: 424]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v68 
=== Succesors ===
next: j709 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v68 #next: j709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j709 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j745 
=== Usages ===
v1153 v1154 
=== Predecessor ===
v76 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j745  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j709 
index: - 
=== Succesors ===
=== Usages ===
j745 v747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j709 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1153 
=== Succesors ===
next: j746 
=== Usages ===
j713 v1155 v1156 a728 v1161 v1157 v1158 v1159 v1160 
=== Predecessor ===
j709 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1153 #next: j746  <|@  <|@
f <@~|@floating>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j709 
index: - 
=== Succesors ===
=== Usages ===
j746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j709 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j746 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1154 
=== Succesors ===
next: v717 
=== Usages ===
v718 
=== Predecessor ===
j745 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1154 #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v714 
=== Succesors ===
trueSuccessor: v716 
falseSuccessor: v715 
=== Usages ===
=== Predecessor ===
j746 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v714 #trueSuccessor: v716 #falseSuccessor: v715  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598276072030318946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid j713 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: i64
=== Inputs ===
x: j644 
y: j745 
=== Succesors ===
=== Usages ===
v718 v747 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j746 
y: j713 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j746 y: j713  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v718 
=== Succesors ===
trueSuccessor: v723 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v718 #trueSuccessor: v723 #falseSuccessor: v722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4568040121230201127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4598230027509194816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1153 
value: j713 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1153 value: j713 stateAfter: - lastLocationAccess: - #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j745 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
address: v1157 
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1157 #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j745 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
address: v1158 
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1158 #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j745 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
address: v1159 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1159 #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j745 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
address: v1160 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1160 #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j745 
index: - 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j745 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1155 
value: i1118 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1155 value: i1118 stateAfter: - lastLocationAccess: - #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j745 
index: - 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j745 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1156 
value: j637 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1156 value: j637 stateAfter: - lastLocationAccess: - #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j745 
index: - 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j745 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1161 
value: v808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1161 value: v808 stateAfter: - lastLocationAccess: - #next: v727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
next: a728 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j745 
=== Succesors ===
next: v730 
=== Usages ===
a733 
=== Predecessor ===
v727 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j745 #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
a728 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4583842914052713758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v715 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B66" 
    successors "B70" 
    xhandlers
    flags 
    probability 4584579626390699843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v719 v721 
=== Succesors ===
next: a729 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v719 v721 #next: a729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a729 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?72 
arguments: v636 i1118 i9 
=== Succesors ===
next: v732 
=== Usages ===
a733 
=== Predecessor ===
v720 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?72 arguments: v636 i1118 i9 #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
a729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v731 
values: a728 a729 
=== Succesors ===
=== Usages ===
v1140 a578 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v731 values: a728 a729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v730 v732 
=== Succesors ===
next: v950 
=== Usages ===
a733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v730 v732 #next: v950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v825 
=== Usages ===
j951 j953 
=== Predecessor ===
v731 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v825  <|@  <|@
f <@*|@fixed>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v823 
falseSuccessor: v824 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v823 #falseSuccessor: v824  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B89" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v842  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v823 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a733 
index: - 
=== Succesors ===
=== Usages ===
j953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a733 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j953 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v950 
address: v1140 
=== Succesors ===
=== Usages ===
v1170 v1172 v1174 v1176 v1178 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v950 address: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a582 
index: - 
=== Succesors ===
=== Usages ===
j951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a582 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j951 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v950 
address: v1139 
=== Succesors ===
=== Usages ===
v1171 v1173 v1175 v1177 v1179 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v950 address: v1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v998 
=== Succesors ===
trueSuccessor: v826 
falseSuccessor: v827 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v998 #trueSuccessor: v826 #falseSuccessor: v827  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v838  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
v826 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v829  <|@  <|@
f <@*|@fixed>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
v827 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B93" 
    successors "B76" "B93" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j988 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v830 
values: j517 j995 
=== Succesors ===
=== Usages ===
v1179 j995 v1178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v830 values: j517 j995  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v829 
=== Succesors ===
next: v1125 
=== Usages ===
v1125 v834 v835 j988 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v829 #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j951 
index: j988 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v830 
address: v1179 
=== Succesors ===
next: v1075 
=== Usages ===
v1075 
=== Predecessor ===
v830 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v830 address: v1179 #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j953 
index: j988 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j953 index: j988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
value: v1125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1178 value: v1125 stateAfter: - lastLocationAccess: - #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid j995 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j988 
y: j277 
=== Succesors ===
=== Usages ===
j980 j988 v1000 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j988 y: j277  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j997 
y: j995 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j997 y: j995  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1000 
=== Succesors ===
trueSuccessor: v834 
falseSuccessor: v836 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1000 #trueSuccessor: v834 #falseSuccessor: v836  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v830 
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v830 #next: v840  <|@  <|@
f <@*|@fixed>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
v834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B73" "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j980 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v839 
values: j517 j995 
=== Succesors ===
=== Usages ===
v1177 j987 j971 v1004 v1176 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v839 values: j517 j995  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v838 v840 
=== Succesors ===
next: v862 
=== Usages ===
j980 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v838 v840 #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1003 
y: j980 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1003 y: j980  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1004 
=== Succesors ===
trueSuccessor: v861 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1004 #trueSuccessor: v861 #falseSuccessor: v860  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
v861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1126 
=== Usages ===
v1126 
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j951 
index: j980 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v860 
address: v1177 
=== Succesors ===
next: v1073 
=== Usages ===
v1073 
=== Predecessor ===
v860 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v860 address: v1177 #next: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j953 
index: j980 
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j953 index: j980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
value: v1126 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1176 value: v1126 stateAfter: - lastLocationAccess: - #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid j987 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j980 
y: j690 
=== Succesors ===
=== Usages ===
j971 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j980 y: j690  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
v1073 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j971 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v850 
values: j987 j980 
=== Succesors ===
=== Usages ===
v1175 j979 j963 v1008 v1174 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v850 values: j987 j980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v849 v865 
=== Succesors ===
next: v868 
=== Usages ===
j971 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v849 v865 #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1007 
y: j971 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1007 y: j971  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1008 
=== Succesors ===
trueSuccessor: v867 
falseSuccessor: v866 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1008 #trueSuccessor: v867 #falseSuccessor: v866  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
v1127 
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j951 
index: j971 
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v866 
address: v1175 
=== Succesors ===
next: v1071 
=== Usages ===
v1071 
=== Predecessor ===
v866 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v866 address: v1175 #next: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j953 
index: j971 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j953 index: j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
value: v1127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v1127 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1174 value: v1127 stateAfter: - lastLocationAccess: - #next: v853  <|@  <|@
f <@~|@floating>@ <|@
tid j979 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j971 
y: j978 
=== Succesors ===
=== Usages ===
j963 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j971 y: j978  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v1071 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j963 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v854 
values: j979 j971 
=== Succesors ===
=== Usages ===
v1173 j970 j954 v1012 v1172 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v854 values: j979 j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v853 v871 
=== Succesors ===
next: v874 
=== Usages ===
j963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v853 v871 #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1011 
y: j963 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1011 y: j963  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1012 
=== Succesors ===
trueSuccessor: v873 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1012 #trueSuccessor: v873 #falseSuccessor: v872  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1128 
=== Usages ===
v1128 
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j951 
index: j963 
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v872 
address: v1173 
=== Succesors ===
next: v1069 
=== Usages ===
v1069 
=== Predecessor ===
v872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v872 address: v1173 #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j953 
index: j963 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j953 index: j963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1172 
value: v1128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1172 value: v1128 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid j970 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j963 
y: j956 
=== Succesors ===
=== Usages ===
j954 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j963 y: j956  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v1069 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j954 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v857 
values: j970 j963 
=== Succesors ===
=== Usages ===
v1171 v1014 v1170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v857 values: j970 j963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v856 v877 
=== Succesors ===
next: v880 
=== Usages ===
j954 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v856 v877 #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j421 
y: j954 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j421 y: j954  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1014 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1014 #trueSuccessor: v879 #falseSuccessor: v878  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v883  <|@  <|@
f <@*|@fixed>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1129 
=== Usages ===
i1129 
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j951 
index: j954 
=== Succesors ===
=== Usages ===
i1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1129 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v878 
address: v1171 
=== Succesors ===
next: v1067 
=== Usages ===
v1067 
=== Predecessor ===
v878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v878 address: v1171 #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j953 
index: j954 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j953 index: j954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
value: i1129 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
i1129 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1170 value: i1129 stateAfter: - lastLocationAccess: - #next: v859  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v1067 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B71" "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v842 v859 v883 
=== Succesors ===
next: a578 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v842 v859 v883 #next: a578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a733 
=== Succesors ===
next: j763 
=== Usages ===
a522 
=== Predecessor ===
v843 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a733 #next: j763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j763 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j779 
=== Usages ===
v1162 v1163 
=== Predecessor ===
a578 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j779  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j763 
index: - 
=== Succesors ===
=== Usages ===
j779 v781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
=== Succesors ===
next: j780 
=== Usages ===
j810 j785 v1167 
=== Predecessor ===
j763 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1162 #next: j780  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j763 
index: - 
=== Succesors ===
=== Usages ===
j780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j780 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1163 
=== Succesors ===
next: v771 
=== Usages ===
v768 
=== Predecessor ===
j779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1163 #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j810 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j779 
y: j809 
=== Succesors ===
=== Usages ===
v768 v781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j779 y: j809  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j780 
y: j810 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j780 y: j810  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v768 
=== Succesors ===
trueSuccessor: v769 
falseSuccessor: v770 
=== Usages ===
=== Predecessor ===
j780 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v768 #trueSuccessor: v769 #falseSuccessor: v770  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4568694976641744313
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a775 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a775  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a775 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a775 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a775 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?72 
arguments: v761 i287 i27 
=== Succesors ===
next: j776 
=== Usages ===
j776 
=== Predecessor ===
v769 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?72 arguments: v761 i287 i27 #next: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a775 
=== Succesors ===
next: v786 
=== Usages ===
j785 
=== Predecessor ===
a775 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a775 #next: v786  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
j776 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4598736517241560249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
value: j810 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1162 value: j810 stateAfter: - lastLocationAccess: - #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j779 
index: - 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j779 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1167 
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1167 #next: v784  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
v778 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B90" 
    successors 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j785 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v783 
values: j779 j776 
=== Succesors ===
=== Usages ===
v1166 v1165 a519 v1168 v1169 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v783 values: j779 j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v784 v786 
=== Succesors ===
next: a519 
=== Usages ===
j785 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v784 v786 #next: a519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a519 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j785 
=== Succesors ===
next: j797 
=== Usages ===
a525 
=== Predecessor ===
v783 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j785 #next: j797  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j792 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v791 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j792 
index: - 
=== Succesors ===
=== Usages ===
j797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j797 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1164 
=== Succesors ===
next: v798 
=== Usages ===
v798 
=== Predecessor ===
a519 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1164 #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j785 
index: - 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1165 
value: j797 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
j797 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1165 value: j797 stateAfter: - lastLocationAccess: - #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j785 
index: - 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
value: v814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v798 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 value: v814 stateAfter: - lastLocationAccess: - #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j785 
index: - 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a522 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a578 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1168 
value: a522 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1168 value: a522 stateAfter: - lastLocationAccess: - #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j785 
index: - 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a525 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1169 value: i9 stateAfter: - lastLocationAccess: - #next: a525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a525 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a519 
=== Succesors ===
next: v526 
=== Usages ===
v221 
=== Predecessor ===
v807 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a519 #next: v526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
a525 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a525 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a525 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B75" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v830 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v830  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@*|@fixed>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v895 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v895  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v1103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
=== Inputs ===
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v620  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v1102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2734) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v606  <|@  <|@
f <@~|@floating>@ <|@
tid i607 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72211
stableDimension: 0
stamp: i32 [-72211] ⇊00000000fffee5ed ⇈00000000fffee5ed
stampKind: i32
value: int[-72211|0xfffffffffffee5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v464 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B10" "B14" "B16" "B18" "B20" "B22" "B96" "B24" "B95" 
    successors 
    xhandlers
    flags 
    probability 4573298130861829772
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i603 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-89883 - -72211] ⇊00000000fffe8085 ⇈00000000fffeffff
valueDescription: i32
=== Inputs ===
merge: v600 
values: i607 i609 i611 i613 i615 i617 i619 i621 i619 i621 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v600 values: i607 i609 i611 i613 i615 i617 i619 i621 i619 i621  <|@  <|@
f <@~|@floating>@ <|@
tid a604 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v600 
values: a591 a591 a591 a591 a591 a591 a591 a622 a591 a622 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v600 values: a591 a591 a591 a591 a591 a591 a591 a622 a591 a622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v606 v608 v610 v612 v614 v616 v618 v620 v635 v1185 
=== Succesors ===
next: v605 
=== Usages ===
i603 a604 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v606 v608 v610 v612 v614 v616 v618 v620 v635 v1185 #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?14 
actionAndReason: i603 
speculation: a604 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?14 actionAndReason: i603 speculation: a604  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4602128214912523225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2748) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2748) [bci: 99]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid a599 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@125881805
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@125881805]
=== Inputs ===
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i598 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69915
stableDimension: 0
stamp: i32 [-69915] ⇊00000000fffeeee5 ⇈00000000fffeeee5
stampKind: i32
value: int[-69915|0xfffffffffffeeee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i598 
speculation: a599 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i598 speculation: a599  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1117 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a1117  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1130 ?14 ?72 v111 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1117 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2727) [bci: 13]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1130 
=== Succesors ===
next: i1118 
=== Usages ===
a265 v1131 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1130 #next: i1118  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/Locale;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v1186 ?14 v1134 ?72 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.toUpperCase(Locale)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2722
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v594 i1118 v1186 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1117 
=== Succesors ===
=== Usages ===
i1118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1118 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2727) [bci: 16]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v1131 
=== Succesors ===
next: v1114 
=== Usages ===
?14 v15 j417 v714 i707 v441 ?72 v73 i322 v272 v748 v687 v1116 a729 a662 
=== Predecessor ===
a1117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v1131 #next: v1114  <|@  <|@
f <@~|@floating>@ <|@
tid j417 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1118 
=== Succesors ===
=== Usages ===
j421 v423 v435 j1011 j1007 j997 j1003 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1118  <|@  <|@
f <@~|@floating>@ <|@
tid j420 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j421 j432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j417 
y: j420 
=== Succesors ===
=== Usages ===
v423 v1014 v1058 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j420  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j421 
y: j417 
=== Succesors ===
=== Usages ===
v1114 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j421 y: j417  <|@  <|@
f <@~|@floating>@ <|@
tid a265 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2727) [bci: 13]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1117 
=== Succesors ===
=== Usages ===
j700 v1136 v1132 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1117  <|@  <|@
f <@~|@floating>@ <|@
tid a591 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v628 a604 a604 a604 a604 a604 a604 a604 a604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2739) [bci: 64]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i707 i42 i103 i1115 a775 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result int[65536|0x10000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2779) [bci: 241]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v198 v126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 a662 v323 v441 v807 ?72 ?72 v311 a729 v1116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v1110 
falseSuccessor: v1113 
=== Usages ===
=== Predecessor ===
i1118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v1110 #falseSuccessor: v1113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23b41c32 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC v4|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1108 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1108  <|@  <|@
f <@*|@fixed>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
v1110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B100" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1118 
y: i9 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1118 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v1111 #falseSuccessor: v455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1108 v1109 
=== Succesors ===
next: v1186 
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1108 v1109 #next: v1186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v1107 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 25]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i135 i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 27]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i137 i206 i736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result int[133955584|0x7fc0000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 16]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: 133955584
stableDimension: 0
stamp: i32 [133955584] ⇊0000000007fc0000 ⇈0000000007fc0000
stampKind: i32
value: int[133955584|0x7fc0000]
=== Inputs ===
=== Succesors ===
=== Usages ===
i131 v132 i202 v203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a148 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 3]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1133 v1137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result int[-256|0xffffffffffffff00] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 22]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256] ⇊00000000ffffff00 ⇈00000000ffffff00
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 v227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
v1186 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" "B12" 
    successors "B6" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4614897015143310135
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i13 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v12 
values: i9 i42 i1115 
=== Succesors ===
=== Usages ===
?14 v15 v1132 i42 i71 j430 i322 v272 v311 i1115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v12 values: i9 i42 i1115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.4259689944050495
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v11 
=== Succesors ===
next: v20 
=== Usages ===
i13 v18 v38 v43 v258 v464 v469 v474 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v11 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i1118 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i13 y: i1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 22]
stamp: void
trueSuccessorProbability: 0.8629773578177928
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v16 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8629773578177928 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613839940768982972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1119 
=== Usages ===
v429 
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1119  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1107 v16 
=== Succesors ===
=== Usages ===
i1119 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1107 v16  <|@  <|@
f <@~|@floating>@ <|@
tid v1132 <|@
result [v6|QWORD[.] + v8|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a265 
index: i13 
=== Succesors ===
=== Usages ===
i1119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1119 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v429 
address: v1132 
=== Succesors ===
next: v465 
=== Usages ===
i281 j388 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v429 address: v1132 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid i281 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1119 
=== Succesors ===
=== Usages ===
v254 v226 i138 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1119  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 22]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
x: i281 
y: i187 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i281 y: i187  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<String.toUpperCase(Locale)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2731
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i13 i1118 - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v605 a662 a1122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i13 i1118 - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2734) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v464 
=== Usages ===
=== Predecessor ===
i1119 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v461 #falseSuccessor: v464  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSX [v6|QWORD[.] + v8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZX v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v10|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613839940768982972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2734) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1120 
=== Usages ===
i1120 
=== Predecessor ===
v465 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1120  <|@  <|@
f <@~|@floating>@ <|@
tid j388 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1119 
=== Succesors ===
=== Usages ===
v1133 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1119  <|@  <|@
f <@~|@floating>@ <|@
tid v1133 <|@
result [v7|QWORD[.] + v11|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a148 
index: j388 
=== Succesors ===
=== Usages ===
i1120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a148 index: j388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1120 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v461 
address: v1133 
=== Succesors ===
next: v129 
=== Usages ===
i135 i131 v126 
=== Predecessor ===
v461 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v461 address: v1133 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:225) [bci: 12]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
x: i1120 
y: i94 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1120 y: i94  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:225) [bci: 12]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
trueSuccessorProbability: 0.45385625545370506
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
i1120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v127 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVZX v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + v11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v12|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608721935155517889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:238) [bci: 69]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2746) [bci: 93]
stamp: i32
=== Inputs ===
x: i13 
y: i27 
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i13 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2731) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609950747127707062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 15]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 18]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: i32 [0 - 133955584] ⇈0000000007fc0000
=== Inputs ===
x: i1120 
y: i130 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1120 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i131 
y: i130 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i131 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v469 #falseSuccessor: v466  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v12|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
result int[-74771|0xfffffffffffedbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -74771
stableDimension: 0
stamp: i32 [-74771] ⇊00000000fffedbed ⇈00000000fffedbed
stampKind: i32
value: int[-74771|0xfffffffffffedbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-74771|0xfffffffffffedbed], Object[null]] destination: B10 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609950747127707062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 26]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i1120 
y: i134 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1120 y: i134  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 29]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: i32 [-256 - 255]
=== Inputs ===
x: i135 
y: i136 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i135 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:228) [bci: 35]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
stamp: i32 [-255 - 65791]
=== Inputs ===
x: i281 
y: i137 
=== Succesors ===
=== Usages ===
v254 v252 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i281 y: i137  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 84]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i281 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i138 y: i281  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 84]
stamp: void
trueSuccessorProbability: 0.8205450248715109
=== Inputs ===
condition: v254 
=== Succesors ===
trueSuccessor: v255 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v254 #trueSuccessor: v255 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SAR v15|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v10|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8205450248715109 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608645763477395578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2746) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@~|@floating>@ <|@
tid i1115 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2746) [bci: 93]
stamp: i32
=== Inputs ===
x: i13 
y: i27 
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i13 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v12 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B12 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 76]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 v231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i32 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i138 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 77]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v252 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v252 #trueSuccessor: v474 #falseSuccessor: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2742) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v610  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
result int[-75027|0xfffffffffffedaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75027
stableDimension: 0
stamp: i32 [-75027] ⇊00000000fffedaed ⇈00000000fffedaed
stampKind: i32
value: int[-75027|0xfffffffffffedaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75027|0xfffffffffffedaed], Object[null]] destination: B14 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2744) [bci: 87]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: a1121 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: a1121  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1121 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1121 <|@
result v19|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Locale.baseLocale
nodeSourcePosition: at java.util.Locale.getLanguage(Locale.java:1076) [bci: 1]
at java.lang.String.toUpperCase(String.java:2758) [bci: 121]
nullCheck: false
stamp: n# Lsun/util/locale/BaseLocale;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1134 
=== Succesors ===
next: a1122 
=== Usages ===
v1135 
=== Predecessor ===
v38 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1134 #next: a1122  <|@  <|@
f <@~|@floating>@ <|@
tid v1135 <|@
result [v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1121 
=== Succesors ===
=== Usages ===
a1122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1122 <|@
result v20|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BaseLocale.language
nodeSourcePosition: at sun.util.locale.BaseLocale.getLanguage(BaseLocale.java:92) [bci: 1]
at java.util.Locale.getLanguage(Locale.java:1076) [bci: 4]
at java.lang.String.toUpperCase(String.java:2758) [bci: 121]
nullCheck: true
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: ?14 
guard: - 
address: v1135 
=== Succesors ===
next: v483 
=== Usages ===
v397 v393 v395 
=== Predecessor ===
a1121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?14 guard: - address: v1135 #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid a392 <|@
result NarrowOop[String:"tr"] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 130]
rawvalue: "tr"
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: NarrowOop[String:"tr"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 130]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1122 
y: a392 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1122 y: a392  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 130]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v393 
=== Succesors ===
trueSuccessor: v482 
falseSuccessor: v480 
=== Usages ===
=== Predecessor ===
a1122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v393 #trueSuccessor: v482 #falseSuccessor: v480  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD v3|DWORD - - - - - - - - - - - 
>@ <|@ instruction v20|DWORD[.] = MOV [v19|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"tr"] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid i613 <|@
result int[-88595|0xfffffffffffea5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88595
stableDimension: 0
stamp: i32 [-88595] ⇊00000000fffea5ed ⇈00000000fffea5ed
stampKind: i32
value: int[-88595|0xfffffffffffea5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88595|0xfffffffffffea5ed], Object[null]] destination: B16 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid a394 <|@
result NarrowOop[String:"az"] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 137]
rawvalue: "az"
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: NarrowOop[String:"az"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 137]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1122 
y: a394 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1122 y: a394  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 137]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v486 #falseSuccessor: v484  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"az"] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid i615 <|@
result int[-88851|0xfffffffffffea4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88851
stableDimension: 0
stamp: i32 [-88851] ⇊00000000fffea4ed ⇈00000000fffea4ed
stampKind: i32
value: int[-88851|0xfffffffffffea4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v486 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88851|0xfffffffffffea4ed], Object[null]] destination: B18 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 137]
stamp: void
=== Inputs ===
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid a396 <|@
result NarrowOop[String:"lt"] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 144]
rawvalue: "lt"
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: NarrowOop[String:"lt"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 144]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1122 
y: a396 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1122 y: a396  <|@  <|@
f <@*|@fixed>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 144]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v397 
=== Succesors ===
trueSuccessor: v490 
falseSuccessor: v488 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v397 #trueSuccessor: v490 #falseSuccessor: v488  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"lt"] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
result int[-89107|0xfffffffffffea3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89107
stableDimension: 0
stamp: i32 [-89107] ⇊00000000fffea3ed ⇈00000000fffea3ed
stampKind: i32
value: int[-89107|0xfffffffffffea3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89107|0xfffffffffffea3ed], Object[null]] destination: B20 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2759) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i9 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i13 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i619 <|@
result int[-84065|0xfffffffffffeb79f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84065
stableDimension: 0
stamp: i32 [-84065] ⇊00000000fffeb79f ⇈00000000fffeb79f
stampKind: i32
value: int[-84065|0xfffffffffffeb79f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v314 #falseSuccessor: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B98" 
    xhandlers
    flags 
    probability 4568827938815907249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84065|0xfffffffffffeb79f], Object[null]] destination: B22 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4598839355173139395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: i32
=== Inputs ===
x: i1118 
y: i13 
=== Succesors ===
=== Usages ===
v323 j431 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1118 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i322 
y: i9 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i322 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v320 #falseSuccessor: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v3|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B98" 
    xhandlers
    flags 
    probability 4568761123653011302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84065|0xfffffffffffeb79f], Object[null]] destination: B24 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B96" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1106 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1106  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
j433 v706 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i322 
=== Succesors ===
=== Usages ===
j432 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i322  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j431 
y: j420 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j431 y: j420  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j430 
y: j432 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j430 y: j432  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j433 
y: j417 
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j433 y: j417  <|@  <|@
f <@~|@floating>@ <|@
tid a622 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1594607150
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1594607150]
=== Inputs ===
=== Succesors ===
=== Usages ===
a604 a604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i621 <|@
result int[-89883|0xfffffffffffea0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89883
stableDimension: 0
stamp: i32 [-89883] ⇊00000000fffea0e5 ⇈00000000fffea0e5
stampKind: i32
value: int[-89883|0xfffffffffffea0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v1105 
falseSuccessor: v1102 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v1105 #falseSuccessor: v1102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = DEC v23|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v22|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B95" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i1118 
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i13 y: i1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v1095 
falseSuccessor: v1103 
=== Usages ===
=== Predecessor ===
v1105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v1095 #falseSuccessor: v1103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
=== Inputs ===
=== Succesors ===
next: j641 
=== Usages ===
v439 
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j641 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j684 
=== Usages ===
v1142 v1143 
=== Predecessor ===
v1095 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j684  <|@  <|@
f <@~|@floating>@ <|@
tid v1142 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j641 
index: - 
=== Succesors ===
=== Usages ===
j684 v686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j641 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j684 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1142 
=== Succesors ===
next: j685 
=== Usages ===
j645 v1144 v1145 a661 v1150 v1146 v1147 v1148 v1149 
=== Predecessor ===
j641 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1142 #next: j685  <|@  <|@
f <@~|@floating>@ <|@
tid v1143 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j641 
index: - 
=== Succesors ===
=== Usages ===
j685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j641 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j685 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1143 
=== Succesors ===
next: v650 
=== Usages ===
v651 
=== Predecessor ===
j684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1143 #next: v650  <|@  <|@
f <@~|@floating>@ <|@
tid i707 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i1118 
y: i27 
=== Succesors ===
=== Usages ===
i736 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1118 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid i736 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i707 
y: i136 
=== Succesors ===
=== Usages ===
i640 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i707 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid i639 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i640 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i640 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i736 
y: i639 
=== Succesors ===
=== Usages ===
j644 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i736 y: i639  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i640 
=== Succesors ===
=== Usages ===
j645 j713 v1146 v1147 v1148 v1149 v1157 v1158 v1159 v1160 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i640  <|@  <|@
f <@~|@floating>@ <|@
tid i646 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1118 
y: i646 
=== Succesors ===
=== Usages ===
v717 v650 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1118 y: i646  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a662 a729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v692 v752 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j637 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v688 v749 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v714 
=== Succesors ===
trueSuccessor: v649 
falseSuccessor: v648 
=== Usages ===
=== Predecessor ===
j685 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v714 #trueSuccessor: v649 #falseSuccessor: v648  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA [v29|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND v30|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598276072030318946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: i64
=== Inputs ===
x: j644 
y: j684 
=== Succesors ===
=== Usages ===
v651 v686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j684  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j685 
y: j645 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j685 y: j645  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v656 
falseSuccessor: v655 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v656 #falseSuccessor: v655  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v32|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 4568040121230201127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v656 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598230027509194816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1142 
value: j645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1142 value: j645 stateAfter: - lastLocationAccess: - #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid v1146 <|@
result [v32|QWORD + v27|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j684 
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
address: v1146 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1146 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v1147 <|@
result [v32|QWORD + v27|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j684 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
address: v1147 
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1147 #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid v1148 <|@
result [v32|QWORD + v27|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j684 
=== Succesors ===
=== Usages ===
v679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
address: v1148 
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1148 #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid v1149 <|@
result [v32|QWORD + v27|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j684 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
address: v1149 
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v679 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1149 #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid v1144 <|@
result [v27|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j684 
index: - 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j684 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1144 
value: i1118 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v682 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1144 value: i1118 stateAfter: - lastLocationAccess: - #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid v1145 <|@
result [v27|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j684 
index: - 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j684 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1145 
value: j637 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1145 value: j637 stateAfter: - lastLocationAccess: - #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
result [v27|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j684 
index: - 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j684 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1150 
value: v808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v688 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1150 value: v808 stateAfter: - lastLocationAccess: - #next: v660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: a661 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a661 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j684 
=== Succesors ===
next: v663 
=== Usages ===
a666 
=== Predecessor ===
v660 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j684 #next: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
a661 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v27|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v27|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v27|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v27|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v27|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v27|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4583842914052713758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v648 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584579626390699843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v652 v654 
=== Succesors ===
next: a662 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v652 v654 #next: a662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a662 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?14 
arguments: v636 i1118 i9 
=== Succesors ===
next: v665 
=== Usages ===
a666 
=== Predecessor ===
v653 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?14 arguments: v636 i1118 i9 #next: v665  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
a662 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD v3|DWORD - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a666 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v664 
values: a661 a662 
=== Succesors ===
=== Usages ===
v1141 a582 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v664 values: a661 a662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v663 v665 
=== Succesors ===
next: v1017 
=== Usages ===
a666 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v663 v665 #next: v1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v890 
=== Usages ===
j1019 
=== Predecessor ===
v664 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v890  <|@  <|@
f <@~|@floating>@ <|@
tid j1010 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1011 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j417 
y: j1010 
=== Succesors ===
=== Usages ===
v1012 v1056 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j1010  <|@  <|@
f <@~|@floating>@ <|@
tid j1006 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1007 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1007 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j417 
y: j1006 
=== Succesors ===
=== Usages ===
v1008 v1054 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j1006  <|@  <|@
f <@~|@floating>@ <|@
tid j1002 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1003 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1003 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j417 
y: j1002 
=== Succesors ===
=== Usages ===
v1004 v1052 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j1002  <|@  <|@
f <@~|@floating>@ <|@
tid j996 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j997 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j997 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-16 - 2147483631]
=== Inputs ===
x: j417 
y: j996 
=== Succesors ===
=== Usages ===
v998 v1000 v1050 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j417 y: j996  <|@  <|@
f <@~|@floating>@ <|@
tid j517 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v998 j1038 j988 j1044 j980 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j997 
y: j517 
=== Succesors ===
=== Usages ===
v893 v828 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j997 y: j517  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1118 
y: i9 
=== Succesors ===
=== Usages ===
v890 v825 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1118 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j956 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j970 j1031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j978 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j979 j1037 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j690 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1043 j987 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j277 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1049 j995 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v888 
falseSuccessor: v889 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v888 #falseSuccessor: v889  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v4|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v4|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v4|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v4|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v906  <|@  <|@
f <@*|@fixed>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
v888 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v893  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
result [v37|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a666 
index: - 
=== Succesors ===
=== Usages ===
j1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a666 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1019 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1017 
address: v1141 
=== Succesors ===
=== Usages ===
v1180 v1181 v1182 v1183 v1184 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1017 address: v1141  <|@  <|@
f <@*|@fixed>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v998 
=== Succesors ===
trueSuccessor: v891 
falseSuccessor: v892 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v998 #trueSuccessor: v891 #falseSuccessor: v892  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = LEA [v37|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v902  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v894 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
result v43|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B94" 
    successors "B39" "B94" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1044 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v895 
values: j517 j1049 
=== Succesors ===
=== Usages ===
v1184 j1049 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v895 values: j517 j1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v894 
=== Succesors ===
next: v1085 
=== Usages ===
j1044 v898 v899 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v894 #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
result [v42|QWORD[.] + v44|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1019 
index: j1044 
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1019 index: j1044  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
value: v1086 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1184 value: v1086 stateAfter: - lastLocationAccess: - #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid j1049 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1044 
y: j277 
=== Succesors ===
=== Usages ===
j1038 j1044 v1050 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1044 y: j277  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j997 
y: j1049 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j997 y: j1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1050 
=== Succesors ===
trueSuccessor: v898 
falseSuccessor: v900 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1050 #trueSuccessor: v898 #falseSuccessor: v900  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v44|QWORD * 2], input: v43|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v895 
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v895 #next: v904  <|@  <|@
f <@*|@fixed>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
v898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1038 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v903 
values: j517 j1049 
=== Succesors ===
=== Usages ===
v1183 j1043 j1032 v1052 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v903 values: j517 j1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v902 v904 
=== Succesors ===
next: v925 
=== Usages ===
j1038 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v902 v904 #next: v925  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1003 
y: j1038 
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1003 y: j1038  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v923 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v924 #falseSuccessor: v923  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v928 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v928  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1084 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1084  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
result [v42|QWORD[.] + v46|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1019 
index: j1038 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1019 index: j1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
result v47|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1183 
value: v1090 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1183 value: v1090 stateAfter: - lastLocationAccess: - #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid j1043 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1038 
y: j690 
=== Succesors ===
=== Usages ===
j1032 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1038 y: j690  <|@  <|@
f <@*|@fixed>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v1084 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v46|QWORD * 2], input: v47|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1032 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v914 
values: j1043 j1038 
=== Succesors ===
=== Usages ===
v1182 j1037 j1026 v1054 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v914 values: j1043 j1038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v913 v928 
=== Succesors ===
next: v931 
=== Usages ===
j1032 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v913 v928 #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1007 
y: j1032 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1007 y: j1032  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1054 
=== Succesors ===
trueSuccessor: v930 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1054 #trueSuccessor: v930 #falseSuccessor: v929  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
result [v42|QWORD[.] + v49|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1019 
index: j1032 
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1019 index: j1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
result v50|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1082 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1182 
value: v1089 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1182 value: v1089 stateAfter: - lastLocationAccess: - #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid j1037 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1032 
y: j978 
=== Succesors ===
=== Usages ===
j1026 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1032 y: j978  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v1082 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v49|QWORD * 2], input: v50|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v49|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1026 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v917 
values: j1037 j1032 
=== Succesors ===
=== Usages ===
v1181 j1031 j1020 v1056 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v917 values: j1037 j1032  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v916 v934 
=== Succesors ===
next: v937 
=== Usages ===
j1026 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v916 v934 #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1011 
y: j1026 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1011 y: j1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1056 
=== Succesors ===
trueSuccessor: v936 
falseSuccessor: v935 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1056 #trueSuccessor: v936 #falseSuccessor: v935  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v940  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
result [v42|QWORD[.] + v52|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1019 
index: j1026 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1019 index: j1026  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
result v53|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1181 
value: v1088 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v935 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1181 value: v1088 stateAfter: - lastLocationAccess: - #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid j1031 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1026 
y: j956 
=== Succesors ===
=== Usages ===
j1020 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1026 y: j956  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v52|QWORD * 2], input: v53|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v52|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1020 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v920 
values: j1031 j1026 
=== Succesors ===
=== Usages ===
v1180 v1058 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v920 values: j1031 j1026  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v919 v940 
=== Succesors ===
next: v943 
=== Usages ===
j1020 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v919 v940 #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j421 
y: j1020 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j421 y: j1020  <|@  <|@
f <@*|@fixed>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1058 
=== Succesors ===
trueSuccessor: v942 
falseSuccessor: v941 
=== Usages ===
=== Predecessor ===
v920 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1058 #trueSuccessor: v942 #falseSuccessor: v941  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v946 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v946  <|@  <|@
f <@*|@fixed>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
v942 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1078  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
result [v42|QWORD[.] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1019 
index: j1020 
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1019 index: j1020  <|@  <|@
f <@~|@floating>@ <|@
tid i1087 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1078 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
value: i1087 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v941 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1180 value: i1087 stateAfter: - lastLocationAccess: - #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
v1078 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v55|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B34" "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v906 v922 v946 
=== Succesors ===
next: a582 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v906 v922 v946 #next: a582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a582 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2753) [bci: 104]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a666 
=== Succesors ===
next: j700 
=== Usages ===
j704 v1138 v1139 ?72 
=== Predecessor ===
v907 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a666 #next: j700  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j700 <|@
result v56|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: i64
=== Inputs ===
object: a265 
=== Succesors ===
next: j704 
=== Usages ===
v1151 
=== Predecessor ===
a582 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a265 #next: j704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j704 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: i64
=== Inputs ===
object: a582 
=== Succesors ===
next: v706 
=== Usages ===
v1152 
=== Predecessor ===
j700 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a582 #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid v1151 <|@
result [v56|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j700 
index: - 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j700 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1152 <|@
result [v57|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j704 
index: - 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j704 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.toUpperCase(String.java:2756) [bci: 117]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1151 v1152 j430 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
j704 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1151 v1152 j430 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x118a11c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B61" 
    successors "B54" "B64" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610292582376437329
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i71 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v68 
values: i13 i103 i103 
=== Succesors ===
=== Usages ===
?72 v73 v1138 i103 v1136 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v68 values: i13 i103 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 5.952835834637697
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 157]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v67 
=== Succesors ===
next: v80 
=== Usages ===
v104 v76 i71 v228 v509 v499 v504 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v67 #next: v80  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<String.toUpperCase(Locale)>
duringCall: false
localsSize: 15
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 2765
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i1118 i9 a582 - i9 - - - - i71 - - 
=== Succesors ===
=== Usages ===
a729 a775 v628 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i1118 i9 a582 - i9 - - - - i71 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 160]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i71 
y: i1118 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i71 y: i1118  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 160]
stamp: void
trueSuccessorProbability: 0.832012837615761
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v74 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.832012837615761 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609013567900767044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 163]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1123 
=== Usages ===
v439 
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1123  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1095 v74 
=== Succesors ===
=== Usages ===
v375 i1123 v386 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1095 v74  <|@  <|@
f <@~|@floating>@ <|@
tid v1136 <|@
result [v6|QWORD[.] + v58|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a265 
index: i71 
=== Succesors ===
=== Usages ===
i1123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: i71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1123 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v439 
address: v1136 
=== Succesors ===
next: v500 
=== Usages ===
i358 j399 v375 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v439 address: v1136 #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1123 
=== Succesors ===
=== Usages ===
v227 i207 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1123  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterData.of(CharacterData.java:77) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 22]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
x: i358 
y: i187 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i358 y: i187  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2767) [bci: 177]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v499 
=== Usages ===
=== Predecessor ===
i1123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v496 #falseSuccessor: v499  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVSX [v6|QWORD[.] + v58|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVZX v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v60|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609013567900767044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2767) [bci: 177]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1124 
=== Usages ===
i1124 
=== Predecessor ===
v500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1124  <|@  <|@
f <@~|@floating>@ <|@
tid j399 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1123 
=== Succesors ===
=== Usages ===
v1137 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1123  <|@  <|@
f <@~|@floating>@ <|@
tid v1137 <|@
result [v7|QWORD[.] + v61|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a148 
index: j399 
=== Succesors ===
=== Usages ===
i1124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a148 index: j399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1124 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v496 
address: v1137 
=== Succesors ===
next: v201 
=== Usages ===
i205 i202 v198 
=== Predecessor ===
v496 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v496 address: v1137 #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:225) [bci: 12]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
x: i1124 
y: i94 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1124 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 418]
stamp: i32
=== Inputs ===
x: i71 
y: i27 
=== Succesors ===
=== Usages ===
i71 i71 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i71 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
result [v37|QWORD[.] + v58|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a582 
index: i71 
=== Succesors ===
=== Usages ===
v386 v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a582 index: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:225) [bci: 12]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
trueSuccessorProbability: 0.45385625545370506
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v200 
=== Usages ===
=== Predecessor ===
i1124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v199 #falseSuccessor: v200  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVZX v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v7|QWORD[.] + v61|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v62|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4603925350219245864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:238) [bci: 69]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2807) [bci: 413]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v439 
address: v1138 
value: i1123 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v439 address: v1138 value: i1123 stateAfter: - lastLocationAccess: - #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2765) [bci: 157]
stamp: void
=== Inputs ===
loopBegin: v68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + v58|DWORD * 2 + 16], y: v59|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 15]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
=== Succesors ===
next: v505 
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v505  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 18]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: i32 [0 - 133955584] ⇈0000000007fc0000
=== Inputs ===
x: i1124 
y: i130 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1124 y: i130  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i202 
y: i130 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i202 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v504 
falseSuccessor: v501 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v504 #falseSuccessor: v501  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = AND v62|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v64|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v68 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v68 #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
result int[-96275|0xfffffffffffe87ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96275
stableDimension: 0
stamp: i32 [-96275] ⇊00000000fffe87ed ⇈00000000fffe87ed
stampKind: i32
value: int[-96275|0xfffffffffffe87ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96275|0xfffffffffffe87ed]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:226) [bci: 21]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 26]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i1124 
y: i134 
=== Succesors ===
=== Usages ===
i206 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1124 y: i134  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:227) [bci: 29]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: i32 [-256 - 255]
=== Inputs ===
x: i205 
y: i136 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i205 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:228) [bci: 35]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2777) [bci: 228]
stamp: i32 [-255 - 65791]
=== Inputs ===
x: i358 
y: i206 
=== Succesors ===
=== Usages ===
i235 v231 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i358 y: i206  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2779) [bci: 236]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i207 
y: i32 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i207 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2779) [bci: 236]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v231 
=== Succesors ===
trueSuccessor: v509 
falseSuccessor: v506 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v231 #trueSuccessor: v509 #falseSuccessor: v506  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v62|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SAR v65|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = SUB (x: v60|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2779) [bci: 236]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v68 
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v68 #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid i632 <|@
result int[-96531|0xfffffffffffe86ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96531
stableDimension: 0
stamp: i32 [-96531] ⇊00000000fffe86ed ⇈00000000fffe86ed
stampKind: i32
value: int[-96531|0xfffffffffffe86ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96531|0xfffffffffffe86ed]] destination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2779) [bci: 236]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2807) [bci: 412]
resultBits: 16
stamp: i16
=== Inputs ===
value: i207 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2807) [bci: 413]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v439 
address: v1138 
value: i235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v439 address: v1138 value: i235 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + v58|DWORD * 2 + 16], y: v67|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD] destination: B61 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2767) [bci: 177]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v68 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v68 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid i625 <|@
result int[-91923|0xfffffffffffe98ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91923
stableDimension: 0
stamp: i32 [-91923] ⇊00000000fffe98ed ⇈00000000fffe98ed
stampKind: i32
value: int[-91923|0xfffffffffffe98ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i626 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-96531 - -91923] ⇊00000000fffe80ed ⇈00000000fffe9fed
valueDescription: i32
=== Inputs ===
merge: v623 
values: i625 i630 i632 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v623 values: i625 i630 i632  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v624 v629 v631 
=== Succesors ===
next: v628 
=== Usages ===
i626 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v624 v629 v631 #next: v628  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?72 
actionAndReason: i626 
speculation: a591 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?72 actionAndReason: i626 speculation: a591  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: v0|QWORD[.] v1|QWORD[.] - v3|DWORD int[0|0x0] v37|QWORD[.] - int[0|0x0] - - - - v58|DWORD - - 
>@ <|@ instruction DEOPT info [bci:157] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B65" "B68" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2810) [bci: 424]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v68 
=== Succesors ===
next: j709 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v68 #next: j709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j709 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j745 
=== Usages ===
v1153 v1154 
=== Predecessor ===
v76 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j745  <|@  <|@
f <@~|@floating>@ <|@
tid v1153 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j709 
index: - 
=== Succesors ===
=== Usages ===
j745 v747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j709 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j745 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1153 
=== Succesors ===
next: j746 
=== Usages ===
j713 v1155 v1156 a728 v1161 v1157 v1158 v1159 v1160 
=== Predecessor ===
j709 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1153 #next: j746  <|@  <|@
f <@~|@floating>@ <|@
tid v1154 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j709 
index: - 
=== Succesors ===
=== Usages ===
j746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j709 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j746 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1154 
=== Succesors ===
next: v717 
=== Usages ===
v718 
=== Predecessor ===
j745 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1154 #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v714 
=== Succesors ===
trueSuccessor: v716 
falseSuccessor: v715 
=== Usages ===
=== Predecessor ===
j746 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v714 #trueSuccessor: v716 #falseSuccessor: v715  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598276072030318946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid j713 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: i64
=== Inputs ===
x: j644 
y: j745 
=== Succesors ===
=== Usages ===
v718 v747 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j745  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j746 
y: j713 
=== Succesors ===
=== Usages ===
v724 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j746 y: j713  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v718 
=== Succesors ===
trueSuccessor: v723 
falseSuccessor: v722 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v718 #trueSuccessor: v723 #falseSuccessor: v722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = ADD (x: v69|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4568040121230201127
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4598230027509194816
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1153 
value: j713 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1153 value: j713 stateAfter: - lastLocationAccess: - #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid v1157 <|@
result [v32|QWORD + v69|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j745 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
address: v1157 
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1157 #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
result [v32|QWORD + v69|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j745 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
address: v1158 
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v738 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1158 #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
result [v32|QWORD + v69|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j745 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
address: v1159 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1159 #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid v1160 <|@
result [v32|QWORD + v69|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j644 
index: j745 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j644 index: j745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
address: v1160 
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1160 #next: v748  <|@  <|@
f <@~|@floating>@ <|@
tid v1155 <|@
result [v69|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j745 
index: - 
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j745 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1155 
value: i1118 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1155 value: i1118 stateAfter: - lastLocationAccess: - #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v1156 <|@
result [v69|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j745 
index: - 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j745 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1156 
value: j637 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1156 value: j637 stateAfter: - lastLocationAccess: - #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v1161 <|@
result [v69|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j745 
index: - 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j745 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1161 
value: v808 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1161 value: v808 stateAfter: - lastLocationAccess: - #next: v727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
next: a728 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a728 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j745 
=== Succesors ===
next: v730 
=== Usages ===
a733 
=== Predecessor ===
v727 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j745 #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
a728 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v69|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v69|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v69|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v69|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v69|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v69|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE v69|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4583842914052713758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v715 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B66" 
    successors "B70" 
    xhandlers
    flags 
    probability 4584579626390699843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v719 v721 
=== Succesors ===
next: a729 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v719 v721 #next: a729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a729 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?72 
arguments: v636 i1118 i9 
=== Succesors ===
next: v732 
=== Usages ===
a733 
=== Predecessor ===
v720 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?72 arguments: v636 i1118 i9 #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
a729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: v0|QWORD[.] v1|QWORD[.] - v3|DWORD int[0|0x0] v37|QWORD[.] - int[0|0x0] - - - - v58|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD[.]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a733 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v731 
values: a728 a729 
=== Succesors ===
=== Usages ===
v1140 a578 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v731 values: a728 a729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v730 v732 
=== Succesors ===
next: v950 
=== Usages ===
a733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v730 v732 #next: v950  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v825 
=== Usages ===
j951 j953 
=== Predecessor ===
v731 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v825  <|@  <|@
f <@*|@fixed>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1116 
=== Succesors ===
trueSuccessor: v823 
falseSuccessor: v824 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1116 #trueSuccessor: v823 #falseSuccessor: v824  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B89" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v842  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v823 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
result [v74|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a733 
index: - 
=== Succesors ===
=== Usages ===
j953 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a733 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j953 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v950 
address: v1140 
=== Succesors ===
=== Usages ===
v1170 v1172 v1174 v1176 v1178 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v950 address: v1140  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
result [v37|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a582 
index: - 
=== Succesors ===
=== Usages ===
j951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a582 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j951 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v950 
address: v1139 
=== Succesors ===
=== Usages ===
v1171 v1173 v1175 v1177 v1179 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v950 address: v1139  <|@  <|@
f <@*|@fixed>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v998 
=== Succesors ===
trueSuccessor: v826 
falseSuccessor: v827 
=== Usages ===
=== Predecessor ===
v824 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v998 #trueSuccessor: v826 #falseSuccessor: v827  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = LEA [v74|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = LEA [v37|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v838  <|@  <|@
f <@*|@fixed>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
v826 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v829  <|@  <|@
f <@*|@fixed>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
v827 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B93" 
    successors "B76" "B93" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j988 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v830 
values: j517 j995 
=== Succesors ===
=== Usages ===
v1179 j995 v1178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v830 values: j517 j995  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v829 
=== Succesors ===
next: v1125 
=== Usages ===
v1125 v834 v835 j988 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v829 #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
result [v76|QWORD[.] + v77|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j951 
index: j988 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1125 <|@
result v78|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v830 
address: v1179 
=== Succesors ===
next: v1075 
=== Usages ===
v1075 
=== Predecessor ===
v830 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v830 address: v1179 #next: v1075  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
result [v75|QWORD[.] + v77|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j953 
index: j988 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j953 index: j988  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
value: v1125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1178 value: v1125 stateAfter: - lastLocationAccess: - #next: v837  <|@  <|@
f <@~|@floating>@ <|@
tid j995 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j988 
y: j277 
=== Succesors ===
=== Usages ===
j980 j988 v1000 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j988 y: j277  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j997 
y: j995 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j997 y: j995  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1000 
=== Succesors ===
trueSuccessor: v834 
falseSuccessor: v836 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1000 #trueSuccessor: v834 #falseSuccessor: v836  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|V256_WORD = H [v76|QWORD[.] + v77|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v77|QWORD * 2], input: v78|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v77|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v830 
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v830 #next: v840  <|@  <|@
f <@*|@fixed>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
v834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B73" "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j980 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v839 
values: j517 j995 
=== Succesors ===
=== Usages ===
v1177 j987 j971 v1004 v1176 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v839 values: j517 j995  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v838 v840 
=== Succesors ===
next: v862 
=== Usages ===
j980 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v838 v840 #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1003 
y: j980 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1003 y: j980  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1004 
=== Succesors ===
trueSuccessor: v861 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1004 #trueSuccessor: v861 #falseSuccessor: v860  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
v861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1126 
=== Usages ===
v1126 
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1126  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
result [v76|QWORD[.] + v80|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j951 
index: j980 
=== Succesors ===
=== Usages ===
v1126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1126 <|@
result v81|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v860 
address: v1177 
=== Succesors ===
next: v1073 
=== Usages ===
v1073 
=== Predecessor ===
v860 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v860 address: v1177 #next: v1073  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
result [v75|QWORD[.] + v80|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j953 
index: j980 
=== Succesors ===
=== Usages ===
v1073 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j953 index: j980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
value: v1126 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1176 value: v1126 stateAfter: - lastLocationAccess: - #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid j987 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j980 
y: j690 
=== Succesors ===
=== Usages ===
j971 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j980 y: j690  <|@  <|@
f <@*|@fixed>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
v1073 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|V128_WORD = H [v76|QWORD[.] + v80|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v80|QWORD * 2], input: v81|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v80|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j971 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v850 
values: j987 j980 
=== Succesors ===
=== Usages ===
v1175 j979 j963 v1008 v1174 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v850 values: j987 j980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v849 v865 
=== Succesors ===
next: v868 
=== Usages ===
j971 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v849 v865 #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1007 
y: j971 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1007 y: j971  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1008 
=== Succesors ===
trueSuccessor: v867 
falseSuccessor: v866 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1008 #trueSuccessor: v867 #falseSuccessor: v866  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
v1127 
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
result [v76|QWORD[.] + v83|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j951 
index: j971 
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1127 <|@
result v84|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v866 
address: v1175 
=== Succesors ===
next: v1071 
=== Usages ===
v1071 
=== Predecessor ===
v866 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v866 address: v1175 #next: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
result [v75|QWORD[.] + v83|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j953 
index: j971 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j953 index: j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
value: v1127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v1127 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1174 value: v1127 stateAfter: - lastLocationAccess: - #next: v853  <|@  <|@
f <@~|@floating>@ <|@
tid j979 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j971 
y: j978 
=== Succesors ===
=== Usages ===
j963 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j971 y: j978  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v1071 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|V64_WORD = H [v76|QWORD[.] + v83|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v83|QWORD * 2], input: v84|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v83|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j963 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v854 
values: j979 j971 
=== Succesors ===
=== Usages ===
v1173 j970 j954 v1012 v1172 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v854 values: j979 j971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v853 v871 
=== Succesors ===
next: v874 
=== Usages ===
j963 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v853 v871 #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1011 
y: j963 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1011 y: j963  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1012 
=== Succesors ===
trueSuccessor: v873 
falseSuccessor: v872 
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1012 #trueSuccessor: v873 #falseSuccessor: v872  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1128 
=== Usages ===
v1128 
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
result [v76|QWORD[.] + v86|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j951 
index: j963 
=== Succesors ===
=== Usages ===
v1128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1128 <|@
result v87|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v872 
address: v1173 
=== Succesors ===
next: v1069 
=== Usages ===
v1069 
=== Predecessor ===
v872 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v872 address: v1173 #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
result [v75|QWORD[.] + v86|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j953 
index: j963 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j953 index: j963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1172 
value: v1128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1172 value: v1128 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid j970 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j963 
y: j956 
=== Succesors ===
=== Usages ===
j954 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j963 y: j956  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
v1069 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|V32_WORD = H [v76|QWORD[.] + v86|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v86|QWORD * 2], input: v87|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v86|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j954 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v857 
values: j970 j963 
=== Succesors ===
=== Usages ===
v1171 v1014 v1170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v857 values: j970 j963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v856 v877 
=== Succesors ===
next: v880 
=== Usages ===
j954 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v856 v877 #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j421 
y: j954 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j421 y: j954  <|@  <|@
f <@*|@fixed>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1014 
=== Succesors ===
trueSuccessor: v879 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1014 #trueSuccessor: v879 #falseSuccessor: v878  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v883  <|@  <|@
f <@*|@fixed>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1129 
=== Usages ===
i1129 
=== Predecessor ===
v880 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
result [v76|QWORD[.] + v89|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j951 
index: j954 
=== Succesors ===
=== Usages ===
i1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j951 index: j954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1129 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v878 
address: v1171 
=== Succesors ===
next: v1067 
=== Usages ===
v1067 
=== Predecessor ===
v878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v878 address: v1171 #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
result [v75|QWORD[.] + v89|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j953 
index: j954 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j953 index: j954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
value: i1129 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
i1129 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1170 value: i1129 stateAfter: - lastLocationAccess: - #next: v859  <|@  <|@
f <@*|@fixed>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v1067 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVSX [v76|QWORD[.] + v89|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + v89|QWORD * 2], y: v90|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B71" "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v842 v859 v883 
=== Succesors ===
next: a578 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v842 v859 v883 #next: a578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a578 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.String.toUpperCase(String.java:2810) [bci: 435]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a733 
=== Succesors ===
next: j763 
=== Usages ===
a522 
=== Predecessor ===
v843 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a733 #next: j763  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j763 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j779 
=== Usages ===
v1162 v1163 
=== Predecessor ===
a578 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j779  <|@  <|@
f <@~|@floating>@ <|@
tid v1162 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j763 
index: - 
=== Succesors ===
=== Usages ===
j779 v781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j779 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
=== Succesors ===
next: j780 
=== Usages ===
j810 j785 v1167 
=== Predecessor ===
j763 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1162 #next: j780  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j763 
index: - 
=== Succesors ===
=== Usages ===
j780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j763 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j780 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1163 
=== Succesors ===
next: v771 
=== Usages ===
v768 
=== Predecessor ===
j779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1163 #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j810 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j779 
y: j809 
=== Succesors ===
=== Usages ===
v768 v781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j779 y: j809  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j780 
y: j810 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j780 y: j810  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v768 
=== Succesors ===
trueSuccessor: v769 
falseSuccessor: v770 
=== Usages ===
=== Predecessor ===
j780 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v768 #trueSuccessor: v769 #falseSuccessor: v770  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v91|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4568694976641744313
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a775 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a775  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a775 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.CharacterDataLatin1.getProperties(CharacterDataLatin1.java:72) [bci: 7]
at java.lang.CharacterDataLatin1.toUpperCaseEx(CharacterDataLatin1.java:223) [bci: 4]
at java.lang.Character.toUpperCaseEx(Character.java:7138) [bci: 26]
at java.lang.String.toUpperCase(String.java:2741) [bci: 69]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a775 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a775 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?72 
arguments: v761 i287 i27 
=== Succesors ===
next: j776 
=== Usages ===
j776 
=== Predecessor ===
v769 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?72 arguments: v761 i287 i27 #next: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a775 
=== Succesors ===
next: v786 
=== Usages ===
j785 
=== Predecessor ===
a775 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a775 #next: v786  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
j776 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: v0|QWORD[.] v1|QWORD[.] - v3|DWORD int[0|0x0] v37|QWORD[.] - int[0|0x0] - - - - v58|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157] <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|QWORD[.]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4598736517241560249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v781 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1162 
value: j810 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1162 value: j810 stateAfter: - lastLocationAccess: - #next: v778  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
result [v91|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j779 
index: - 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j779 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1167 
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1167 #next: v784  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
v778 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v91|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B90" 
    successors 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j785 <|@
result v95|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v783 
values: j779 j776 
=== Succesors ===
=== Usages ===
v1166 v1165 a519 v1168 v1169 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v783 values: j779 j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v784 v786 
=== Succesors ===
next: a519 
=== Usages ===
j785 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v784 v786 #next: a519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a519 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j785 
=== Succesors ===
next: j797 
=== Usages ===
a525 
=== Predecessor ===
v783 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j785 #next: j797  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j792 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v791 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v791  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
result [v97|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j792 
index: - 
=== Succesors ===
=== Usages ===
j797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j797 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1164 
=== Succesors ===
next: v798 
=== Usages ===
v798 
=== Predecessor ===
a519 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1164 #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
result [v95|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j785 
index: - 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1165 
value: j797 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
j797 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1165 value: j797 stateAfter: - lastLocationAccess: - #next: v801  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
result [v95|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j785 
index: - 
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
value: v814 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v798 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 value: v814 stateAfter: - lastLocationAccess: - #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
result [v95|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j785 
index: - 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a522 <|@
result v99|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a578 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1168 
value: a522 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1168 value: a522 stateAfter: - lastLocationAccess: - #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
result [v95|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j785 
index: - 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a525 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1169 value: i9 stateAfter: - lastLocationAccess: - #next: a525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a525 <|@
result v96|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a519 
=== Succesors ===
next: v526 
=== Usages ===
v221 
=== Predecessor ===
v807 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a519 #next: v526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
a525 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v221  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a525 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a525 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV [v97|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[*]], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v95|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = COMPRESSPOINTER (input: v74|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[*] + 12], y: v99|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B75" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v830 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v830  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B93 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4592338507517186638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@*|@fixed>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v895 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v895  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B94 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1185 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1185  <|@  <|@
f <@*|@fixed>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v1103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89883|0xfffffffffffea0e5], v26|QWORD[.]] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2766) [bci: 169]
stamp: void
=== Inputs ===
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v1106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v620  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v1102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89883|0xfffffffffffea0e5], v26|QWORD[.]] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2734) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v606  <|@  <|@
f <@~|@floating>@ <|@
tid i607 <|@
result int[-72211|0xfffffffffffee5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72211
stableDimension: 0
stamp: i32 [-72211] ⇊00000000fffee5ed ⇈00000000fffee5ed
stampKind: i32
value: int[-72211|0xfffffffffffee5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i603 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
v464 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72211|0xfffffffffffee5ed], Object[null]] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B10" "B14" "B16" "B18" "B20" "B22" "B96" "B24" "B95" 
    successors 
    xhandlers
    flags 
    probability 4573298130861829772
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i603 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-89883 - -72211] ⇊00000000fffe8085 ⇈00000000fffeffff
valueDescription: i32
=== Inputs ===
merge: v600 
values: i607 i609 i611 i613 i615 i617 i619 i621 i619 i621 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v600 values: i607 i609 i611 i613 i615 i617 i619 i621 i619 i621  <|@  <|@
f <@~|@floating>@ <|@
tid a604 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v600 
values: a591 a591 a591 a591 a591 a591 a591 a622 a591 a622 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v600 values: a591 a591 a591 a591 a591 a591 a591 a622 a591 a622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v606 v608 v610 v612 v614 v616 v618 v620 v635 v1185 
=== Succesors ===
next: v605 
=== Usages ===
i603 a604 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v606 v608 v610 v612 v614 v616 v618 v620 v635 v1185 #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?14 
actionAndReason: i603 
speculation: a604 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?14 actionAndReason: i603 speculation: a604  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD, v101|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v101|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD v3|DWORD - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4602128214912523225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2748) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v12 
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v12 #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2748) [bci: 99]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.toUpperCase(String.java:2732) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid a599 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@125881805
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@125881805]
=== Inputs ===
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i598 <|@
result int[-69915|0xfffffffffffeeee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69915
stableDimension: 0
stamp: i32 [-69915] ⇊00000000fffeeee5 ⇈00000000fffeeee5
stampKind: i32
value: int[-69915|0xfffffffffffeeee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i598 
speculation: a599 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i598 speculation: a599  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@125881805] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -69915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23b41c32 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC v4|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B100" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" "B12" 
    successors "B6" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4614897015143310135
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8629773578177928 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613839940768982972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVSX [v6|QWORD[.] + v8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZX v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v10|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613839940768982972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVZX v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v7|QWORD[.] + v11|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v12|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609950747127707062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v12|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609950747127707062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SAR v15|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v10|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8205450248715109 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608645763477395578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B12 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608721935155517889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4602128214912523225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD v3|DWORD - - - - - - - - - - - 
>@ <|@ instruction v20|DWORD[.] = MOV [v19|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"tr"] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"az"] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"lt"] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4598839355173139395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v3|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B96" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = DEC v23|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v22|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B95" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA [v29|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND v30|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598276072030318946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v32|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598230027509194816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v27|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v27|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v27|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v27|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v27|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v27|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v4|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v4|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v4|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v4|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = LEA [v37|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v46|QWORD * 2], input: v47|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v49|QWORD * 2], input: v50|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v49|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v52|QWORD * 2], input: v53|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v52|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v55|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B34" "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x118a11c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B61" 
    successors "B54" "B64" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610292582376437329
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.832012837615761 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609013567900767044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVSX [v6|QWORD[.] + v58|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVZX v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v60|DWORD y: -256 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609013567900767044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVZX v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v7|QWORD[.] + v61|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v62|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = AND v62|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v64|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v62|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SAR v65|DWORD y: 23 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = SUB (x: v60|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + v58|DWORD * 2 + 16], y: v67|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD] destination: B61 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4603925350219245864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + v58|DWORD * 2 + 16], y: v59|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B65" "B68" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598276072030318946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = ADD (x: v69|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4598230027509194816
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v69|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v69|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v69|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v32|QWORD + v69|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v69|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v69|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v69|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE v69|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD[.]] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = LEA [v74|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = LEA [v37|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B73" "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|V128_WORD = H [v76|QWORD[.] + v80|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v80|QWORD * 2], input: v81|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v80|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|V64_WORD = H [v76|QWORD[.] + v83|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v83|QWORD * 2], input: v84|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = LEA [v83|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|V32_WORD = H [v76|QWORD[.] + v86|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v86|QWORD * 2], input: v87|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = LEA [v86|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVSX [v76|QWORD[.] + v89|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[.] + v89|QWORD * 2], y: v90|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B71" "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD = LEA [v91|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4598736517241560249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v92|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v91|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B90" 
    successors 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE v95|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV [v97|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[*]], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v95|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v99|DWORD[.] = COMPRESSPOINTER (input: v74|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[*] + 12], y: v99|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v96|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B89" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v83|QWORD] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|QWORD] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B94 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B94" 
    successors "B39" "B94" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[.] + v44|QWORD * 2], input: v43|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B75" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4592338507517186638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B93 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B93" 
    successors "B76" "B93" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|V256_WORD = H [v76|QWORD[.] + v77|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v75|QWORD[.] + v77|QWORD * 2], input: v78|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v77|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4583842914052713758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584579626390699843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v106|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD v3|DWORD - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4583842914052713758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B66" 
    successors "B70" 
    xhandlers
    flags 
    probability 4584579626390699843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v105|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: v0|QWORD[.] v1|QWORD[.] - v3|DWORD int[0|0x0] v37|QWORD[.] - int[0|0x0] - - - - v58|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD[.]] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B98" 
    xhandlers
    flags 
    probability 4568827938815907249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84065|0xfffffffffffeb79f], Object[null]] destination: B22 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B10" "B14" "B16" "B18" "B20" "B22" "B96" "B24" "B95" 
    successors 
    xhandlers
    flags 
    probability 4573298130861829772
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD, v101|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v101|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD v3|DWORD - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B98" 
    xhandlers
    flags 
    probability 4568761123653011302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84065|0xfffffffffffeb79f], Object[null]] destination: B24 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4568694976641744313
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v93|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: v0|QWORD[.] v1|QWORD[.] - v3|DWORD int[0|0x0] v37|QWORD[.] - int[0|0x0] - - - - v58|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157] <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v94|QWORD[.]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 4568040121230201127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4568040121230201127
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89107|0xfffffffffffea3ed], Object[null]] destination: B20 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89883|0xfffffffffffea0e5], v103|QWORD[.]] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89883|0xfffffffffffea0e5], v104|QWORD[.]] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75027|0xfffffffffffedaed], Object[null]] destination: B14 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96531|0xfffffffffffe86ed]] destination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: v0|QWORD[.] v1|QWORD[.] - v3|DWORD int[0|0x0] v37|QWORD[.] - int[0|0x0] - - - - v58|DWORD - - 
>@ <|@ instruction DEOPT info [bci:157] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88595|0xfffffffffffea5ed], Object[null]] destination: B16 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72211|0xfffffffffffee5ed], Object[null]] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@125881805] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -69915 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v102|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-74771|0xfffffffffffedbed], Object[null]] destination: B10 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91923|0xfffffffffffe98ed]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96275|0xfffffffffffe87ed]] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88851|0xfffffffffffea4ed], Object[null]] destination: B18 -> B98 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #17         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #31         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #1          // value:char[]
    16: arraylength   
    17: istore_3      
    18: iconst_0      
    19: istore_2      
    20: iload_2       
    21: iload_3       
    22: if_icmpge     98
    25: aload_0       
    26: getfield      #1          // value:char[]
    29: iload_2       
    30: caload        
    31: istore        4
    33: iload         4
    35: ldc           #90         // 55296
    37: if_icmplt     64
    40: iload         4
    42: ldc           #110        // 56319
    44: if_icmpgt     64
    47: aload_0       
    48: iload_2       
    49: invokevirtual #89         // codePointAt:(int)int
    52: istore        4
    54: iload         4
    56: invokestatic  #91         // java.lang.Character.charCount:(int)int
    59: istore        5
    61: goto          67
    64: iconst_1      
    65: istore        5
    67: iload         4
    69: invokestatic  #99         // java.lang.Character.toUpperCaseEx:(int)int
    72: istore        6
    74: iload         6
    76: iconst_m1     
    77: if_icmpeq     100
    80: iload         4
    82: iload         6
    84: if_icmpeq     90
    87: goto          100
    90: iload_2       
    91: iload         5
    93: iadd          
    94: istore_2      
    95: goto          20
    98: aload_0       
    99: areturn       
   100: iconst_0      
   101: istore        4
   103: iload_3       
   104: newarray      char
   106: astore        5
   108: aload_0       
   109: getfield      #1          // value:char[]
   112: iconst_0      
   113: aload         5
   115: iconst_0      
   116: iload_2       
   117: invokestatic  #29         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   120: aload_1       
   121: invokevirtual #92         // java.util.Locale.getLanguage:()java.lang.String
   124: astore        6
   126: aload         6
   128: ldc           #115        // "tr"
   130: if_acmpeq     147
   133: aload         6
   135: ldc           #116        // "az"
   137: if_acmpeq     147
   140: aload         6
   142: ldc           #117        // "lt"
   144: if_acmpne     151
   147: iconst_1      
   148: goto          152
   151: iconst_0      
   152: istore        7
   154: iload_2       
   155: istore        12
   157: iload         12
   159: iload_3       
   160: if_icmpge     424
   163: aload_0       
   164: getfield      #1          // value:char[]
   167: iload         12
   169: caload        
   170: istore        10
   172: iload         10
   174: i2c           
   175: ldc           #90         // 55296
   177: if_icmplt     206
   180: iload         10
   182: i2c           
   183: ldc           #110        // 56319
   185: if_icmpgt     206
   188: aload_0       
   189: iload         12
   191: invokevirtual #89         // codePointAt:(int)int
   194: istore        10
   196: iload         10
   198: invokestatic  #91         // java.lang.Character.charCount:(int)int
   201: istore        11
   203: goto          209
   206: iconst_1      
   207: istore        11
   209: iload         7
   211: ifeq          226
   214: aload_0       
   215: iload         12
   217: aload_1       
   218: invokestatic  #100        // java.lang.ConditionalSpecialCasing.toUpperCaseEx:(java.lang.String, int, java.util.Locale)int
   221: istore        9
   223: goto          233
   226: iload         10
   228: invokestatic  #99         // java.lang.Character.toUpperCaseEx:(int)int
   231: istore        9
   233: iload         9
   235: iconst_m1     
   236: if_icmpeq     246
   239: iload         9
   241: ldc           #62         // 65536
   243: if_icmplt     403
   246: iload         9
   248: iconst_m1     
   249: if_icmpne     279
   252: iload         7
   254: ifeq          269
   257: aload_0       
   258: iload         12
   260: aload_1       
   261: invokestatic  #101        // java.lang.ConditionalSpecialCasing.toUpperCaseCharArray:(java.lang.String, int, java.util.Locale)char[]
   264: astore        8
   266: goto          315
   269: iload         10
   271: invokestatic  #102        // java.lang.Character.toUpperCaseCharArray:(int)char[]
   274: astore        8
   276: goto          315
   279: iload         11
   281: iconst_2      
   282: if_icmpne     308
   285: iload         4
   287: iload         9
   289: aload         5
   291: iload         12
   293: iload         4
   295: iadd          
   296: invokestatic  #95         // java.lang.Character.toChars:(int, char[], int)int
   299: iload         11
   301: isub          
   302: iadd          
   303: istore        4
   305: goto          414
   308: iload         9
   310: invokestatic  #96         // java.lang.Character.toChars:(int)char[]
   313: astore        8
   315: aload         8
   317: arraylength   
   318: istore        13
   320: iload         13
   322: iload         11
   324: if_icmple     358
   327: aload         5
   329: arraylength   
   330: iload         13
   332: iadd          
   333: iload         11
   335: isub          
   336: newarray      char
   338: astore        14
   340: aload         5
   342: iconst_0      
   343: aload         14
   345: iconst_0      
   346: iload         12
   348: iload         4
   350: iadd          
   351: invokestatic  #29         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   354: aload         14
   356: astore        5
   358: iconst_0      
   359: istore        14
   361: iload         14
   363: iload         13
   365: if_icmpge     390
   368: aload         5
   370: iload         12
   372: iload         4
   374: iadd          
   375: iload         14
   377: iadd          
   378: aload         8
   380: iload         14
   382: caload        
   383: castore       
   384: iinc          
   387: goto          361
   390: iload         4
   392: iload         13
   394: iload         11
   396: isub          
   397: iadd          
   398: istore        4
   400: goto          414
   403: aload         5
   405: iload         12
   407: iload         4
   409: iadd          
   410: iload         9
   412: i2c           
   413: castore       
   414: iload         12
   416: iload         11
   418: iadd          
   419: istore        12
   421: goto          157
   424: new           #43         // java.lang.String
   427: dup           
   428: aload         5
   430: iconst_0      
   431: iload_3       
   432: iload         4
   434: iadd          
   435: invokespecial #59         // <init>:(char[], int, int)void
   438: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23b41c32 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r14|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|QWORD = DEC r14|QWORD size: QWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction CMP (x: r14|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B100" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   40  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" "B12" 
    successors "B6" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4614897015143310135
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   46  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.8629773578177928 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613839940768982972
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction TEST r9|DWORD y: -256 size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613839940768982972
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOV [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction TEST rcx|DWORD y: 65536 size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609950747127707062
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = AND rcx|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP rbx|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609950747127707062
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = SHL rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = SAR rcx|DWORD y: 23 size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.8205450248715109 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608645763477395578
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608721935155517889
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4602128214912523225
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP rbx|DWORD y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD r13|DWORD - - - - - - - - - - - 
>@ <|@ instruction rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ instruction CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"tr"] <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"az"] <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"lt"] <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4598839355173139395
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B96" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: r14|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B95" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  266  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdi|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  276  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4598276072030318946
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = ADD (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction CMP (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598230027509194816
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  316  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  318  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  322  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  324  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction r10|QWORD = LEA [r14|QWORD - 2] size: QWORD <|@ <|@
      nr  380  <|@ instruction r11|QWORD = LEA [r14|QWORD - 4] size: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  384  <|@ instruction r9|QWORD = LEA [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  442  <|@ instruction CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  454  <|@ instruction J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  474  <|@ instruction J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  482  <|@ instruction CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  494  <|@ instruction J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  496  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  502  <|@ instruction CMP (x: rsi|QWORD, y: stack:80|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  524  <|@ instruction stack:88|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction stack:112|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction stack:116|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B34" "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x118a11c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  552  <|@ instruction r14|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r10|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr  558  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r13|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B61" 
    successors "B54" "B64" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610292582376437329
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  566  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 0.832012837615761 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609013567900767044
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction rdx|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction TEST rdx|DWORD y: -256 size: DWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609013567900767044
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rcx|QWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction rcx|DWORD = MOV [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr  586  <|@ instruction r8|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  588  <|@ instruction TEST rcx|DWORD y: 65536 size: DWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction rsi|DWORD = AND rcx|DWORD y: 133955584 size: DWORD <|@ <|@
      nr  604  <|@ instruction CMP rsi|DWORD y: 133955584 size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction rcx|DWORD = SHL rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  622  <|@ instruction rcx|DWORD = SAR rcx|DWORD y: 23 size: DWORD <|@ <|@
      nr  624  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction CMP rdx|DWORD y: -1 size: DWORD <|@ <|@
      nr  628  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr  644  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B61 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4603925350219245864
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr  596  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B65" "B68" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  672  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598276072030318946
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = ADD (x: rsi|QWORD, y: stack:56|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4598230027509194816
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rdi|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  704  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  706  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:116|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  746  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction r9|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  762  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B73" "B76" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  796  <|@ instruction CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  808  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  810  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  816  <|@ instruction CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  828  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  830  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B81" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  836  <|@ instruction CMP (x: rcx|QWORD, y: stack:112|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  848  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  856  <|@ instruction CMP (x: rcx|QWORD, y: stack:80|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[.] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B71" "B88" "B87" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  880  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4598736517241560249
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  902  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  904  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  906  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B90" 
    successors 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  912  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  922  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  928  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B52" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction stack:88|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:112|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:116|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B34 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B89" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B71 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction JUMP ~[] destination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction JUMP ~[] destination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B38" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4592338507517186638
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B94 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B94" 
    successors "B39" "B94" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594284078193216564
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  428  <|@ instruction J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  774  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B75" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4592338507517186638
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  934  <|@ instruction JUMP ~[] destination: B93 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B93" 
    successors "B76" "B93" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4594284078193216564
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  780  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  782  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  784  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction stack:88|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction stack:112|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:116|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4583842914052713758
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction stack:56|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584579626390699843
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [stack:56, stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: stack:48|QWORD[.] stack:40|QWORD[.] stack:28|DWORD r13|DWORD - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4583842914052713758
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction stack:116|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B66" 
    successors "B70" 
    xhandlers
    flags 
    probability 4584579626390699843
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  734  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  738  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ st <@st|@reference-map: [r14:0, stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: stack:48|QWORD[.] stack:40|QWORD[.] - r13|DWORD int[0|0x0] r14|QWORD[.] - int[0|0x0] - - - - stack:116|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157] <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B98" 
    xhandlers
    flags 
    probability 4568827938815907249
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  216  <|@ instruction rsi|DWORD = MOVE input: int[-84065|0xfffffffffffeb79f] <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B10" "B14" "B16" "B18" "B20" "B22" "B96" "B24" "B95" 
    successors 
    xhandlers
    flags 
    probability 4573298130861829772
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  984  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: stack:48|QWORD[.] stack:40|QWORD[.] stack:28|DWORD r13|DWORD - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B98" 
    xhandlers
    flags 
    probability 4568761123653011302
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  238  <|@ instruction rsi|DWORD = MOVE input: int[-84065|0xfffffffffffeb79f] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B24 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4568694976641744313
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  888  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  890  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  892  <|@ st <@st|@reference-map: [r14:0, stack:40, stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: stack:48|QWORD[.] stack:40|QWORD[.] - r13|DWORD int[0|0x0] r14|QWORD[.] - int[0|0x0] - - - - stack:116|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 4568040121230201127
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction stack:56|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 4568040121230201127
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction stack:116|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  196  <|@ instruction rsi|DWORD = MOVE input: int[-89107|0xfffffffffffea3ed] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B20 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150] <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  944  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150] <|@ <|@
      nr  950  <|@ instruction rsi|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  132  <|@ instruction rsi|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B14 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-96531|0xfffffffffffe86ed] <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  660  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  664  <|@ st <@st|@reference-map: [r14:0, stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: stack:48|QWORD[.] stack:40|QWORD[.] - r13|DWORD int[0|0x0] r14|QWORD[.] - int[0|0x0] - - - - r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:157] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  156  <|@ instruction rsi|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B16 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  970  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  978  <|@ instruction rsi|DWORD = MOVE input: int[-72211|0xfffffffffffee5ed] <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@125881805] <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 668] y: -69915 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: stack:48|QWORD[.] stack:40|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   94  <|@ instruction rsi|DWORD = MOVE input: int[-74771|0xfffffffffffedbed] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B10 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-96275|0xfffffffffffe87ed] <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD = MOVE input: int[-88851|0xfffffffffffea4ed] <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B18 -> B98 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #17         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #31         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #1          // value:char[]
    16: arraylength   
    17: istore_3      
    18: iconst_0      
    19: istore_2      
    20: iload_2       
    21: iload_3       
    22: if_icmpge     98
    25: aload_0       
    26: getfield      #1          // value:char[]
    29: iload_2       
    30: caload        
    31: istore        4
    33: iload         4
    35: ldc           #90         // 55296
    37: if_icmplt     64
    40: iload         4
    42: ldc           #110        // 56319
    44: if_icmpgt     64
    47: aload_0       
    48: iload_2       
    49: invokevirtual #89         // codePointAt:(int)int
    52: istore        4
    54: iload         4
    56: invokestatic  #91         // java.lang.Character.charCount:(int)int
    59: istore        5
    61: goto          67
    64: iconst_1      
    65: istore        5
    67: iload         4
    69: invokestatic  #99         // java.lang.Character.toUpperCaseEx:(int)int
    72: istore        6
    74: iload         6
    76: iconst_m1     
    77: if_icmpeq     100
    80: iload         4
    82: iload         6
    84: if_icmpeq     90
    87: goto          100
    90: iload_2       
    91: iload         5
    93: iadd          
    94: istore_2      
    95: goto          20
    98: aload_0       
    99: areturn       
   100: iconst_0      
   101: istore        4
   103: iload_3       
   104: newarray      char
   106: astore        5
   108: aload_0       
   109: getfield      #1          // value:char[]
   112: iconst_0      
   113: aload         5
   115: iconst_0      
   116: iload_2       
   117: invokestatic  #29         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   120: aload_1       
   121: invokevirtual #92         // java.util.Locale.getLanguage:()java.lang.String
   124: astore        6
   126: aload         6
   128: ldc           #115        // "tr"
   130: if_acmpeq     147
   133: aload         6
   135: ldc           #116        // "az"
   137: if_acmpeq     147
   140: aload         6
   142: ldc           #117        // "lt"
   144: if_acmpne     151
   147: iconst_1      
   148: goto          152
   151: iconst_0      
   152: istore        7
   154: iload_2       
   155: istore        12
   157: iload         12
   159: iload_3       
   160: if_icmpge     424
   163: aload_0       
   164: getfield      #1          // value:char[]
   167: iload         12
   169: caload        
   170: istore        10
   172: iload         10
   174: i2c           
   175: ldc           #90         // 55296
   177: if_icmplt     206
   180: iload         10
   182: i2c           
   183: ldc           #110        // 56319
   185: if_icmpgt     206
   188: aload_0       
   189: iload         12
   191: invokevirtual #89         // codePointAt:(int)int
   194: istore        10
   196: iload         10
   198: invokestatic  #91         // java.lang.Character.charCount:(int)int
   201: istore        11
   203: goto          209
   206: iconst_1      
   207: istore        11
   209: iload         7
   211: ifeq          226
   214: aload_0       
   215: iload         12
   217: aload_1       
   218: invokestatic  #100        // java.lang.ConditionalSpecialCasing.toUpperCaseEx:(java.lang.String, int, java.util.Locale)int
   221: istore        9
   223: goto          233
   226: iload         10
   228: invokestatic  #99         // java.lang.Character.toUpperCaseEx:(int)int
   231: istore        9
   233: iload         9
   235: iconst_m1     
   236: if_icmpeq     246
   239: iload         9
   241: ldc           #62         // 65536
   243: if_icmplt     403
   246: iload         9
   248: iconst_m1     
   249: if_icmpne     279
   252: iload         7
   254: ifeq          269
   257: aload_0       
   258: iload         12
   260: aload_1       
   261: invokestatic  #101        // java.lang.ConditionalSpecialCasing.toUpperCaseCharArray:(java.lang.String, int, java.util.Locale)char[]
   264: astore        8
   266: goto          315
   269: iload         10
   271: invokestatic  #102        // java.lang.Character.toUpperCaseCharArray:(int)char[]
   274: astore        8
   276: goto          315
   279: iload         11
   281: iconst_2      
   282: if_icmpne     308
   285: iload         4
   287: iload         9
   289: aload         5
   291: iload         12
   293: iload         4
   295: iadd          
   296: invokestatic  #95         // java.lang.Character.toChars:(int, char[], int)int
   299: iload         11
   301: isub          
   302: iadd          
   303: istore        4
   305: goto          414
   308: iload         9
   310: invokestatic  #96         // java.lang.Character.toChars:(int)char[]
   313: astore        8
   315: aload         8
   317: arraylength   
   318: istore        13
   320: iload         13
   322: iload         11
   324: if_icmple     358
   327: aload         5
   329: arraylength   
   330: iload         13
   332: iadd          
   333: iload         11
   335: isub          
   336: newarray      char
   338: astore        14
   340: aload         5
   342: iconst_0      
   343: aload         14
   345: iconst_0      
   346: iload         12
   348: iload         4
   350: iadd          
   351: invokestatic  #29         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   354: aload         14
   356: astore        5
   358: iconst_0      
   359: istore        14
   361: iload         14
   363: iload         13
   365: if_icmpge     390
   368: aload         5
   370: iload         12
   372: iload         4
   374: iadd          
   375: iload         14
   377: iadd          
   378: aload         8
   380: iload         14
   382: caload        
   383: castore       
   384: iinc          
   387: goto          361
   390: iload         4
   392: iload         13
   394: iload         11
   396: isub          
   397: iadd          
   398: istore        4
   400: goto          414
   403: aload         5
   405: iload         12
   407: iload         4
   409: iadd          
   410: iload         9
   412: i2c           
   413: castore       
   414: iload         12
   416: iload         11
   418: iadd          
   419: istore        12
   421: goto          157
   424: new           #43         // java.lang.String
   427: dup           
   428: aload         5
   430: iconst_0      
   431: iload_3       
   432: iload         4
   434: iadd          
   435: invokespecial #59         // <init>:(char[], int, int)void
   438: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B4" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23b41c32 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r14|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr   12  <|@ instruction r10|QWORD = DEC r14|QWORD size: QWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction CMP (x: r14|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B100" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr   40  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" "B12" 
    successors "B6" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4614897015143310135
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   46  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.8629773578177928 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613839940768982972
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction r9|DWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction TEST r9|DWORD y: -256 size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613839940768982972
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = MOV [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr   66  <|@ instruction TEST rcx|DWORD y: 65536 size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609950747127707062
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rbx|DWORD = AND rcx|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   80  <|@ instruction CMP rbx|DWORD y: 133955584 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609950747127707062
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = SHL rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = SAR rcx|DWORD y: 23 size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.8205450248715109 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608645763477395578
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B12 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608721935155517889
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4602128214912523225
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  992  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction CMP rbx|DWORD y: -1 size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  140  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD r13|DWORD - - - - - - - - - - - 
>@ <|@ instruction rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD state [bci:20] <|@ <|@
      nr  142  <|@ instruction CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"tr"] <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"az"] <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"lt"] <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4598891554519151854
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4598839355173139395
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rcx|DWORD = SUB (x: r13|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B96" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r9|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: r14|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B95" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B32" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  266  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdi|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  270  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  276  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" "B30" 
    xhandlers
    flags 
    probability 4598276072030318946
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rbp|QWORD = ADD (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction CMP (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B32 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598230027509194816
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  316  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  318  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  322  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  324  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction stack:56|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B52" "B35" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction r10|QWORD = LEA [r14|QWORD - 2] size: QWORD <|@ <|@
      nr  380  <|@ instruction r11|QWORD = LEA [r14|QWORD - 4] size: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  384  <|@ instruction r9|QWORD = LEA [r14|QWORD - 16] size: QWORD <|@ <|@
      nr  386  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B52 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B43" "B42" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  442  <|@ instruction CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B43 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  454  <|@ instruction J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B40" 
    successors "B46" "B45" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  474  <|@ instruction J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B48" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  482  <|@ instruction CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  494  <|@ instruction J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  496  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B46" 
    successors "B52" "B51" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  502  <|@ instruction CMP (x: rsi|QWORD, y: stack:80|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B33" "B51" "B49" 
    successors "B53" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction stack:88|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:112|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:116|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x118a11c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  552  <|@ instruction r14|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction r10|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}] <|@ <|@
      nr  558  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction r13|DWORD = MOVE stack:116|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B61" 
    successors "B54" "B64" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610292582376437329
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  566  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 0.832012837615761 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B62" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609013567900767044
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  574  <|@ instruction rdx|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction TEST rdx|DWORD y: -256 size: DWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4609013567900767044
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rcx|QWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction rcx|DWORD = MOV [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: DWORD <|@ <|@
      nr  586  <|@ instruction r8|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  588  <|@ instruction TEST rcx|DWORD y: 65536 size: DWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction rsi|DWORD = AND rcx|DWORD y: 133955584 size: DWORD <|@ <|@
      nr  604  <|@ instruction CMP rsi|DWORD y: 133955584 size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction rcx|DWORD = SHL rcx|DWORD y: 5 size: DWORD <|@ <|@
      nr  622  <|@ instruction rcx|DWORD = SAR rcx|DWORD y: 23 size: DWORD <|@ <|@
      nr  624  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  626  <|@ instruction CMP rdx|DWORD y: -1 size: DWORD <|@ <|@
      nr  628  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605094586327547232
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr  644  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B61 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B53" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4603925350219245864
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction MOV (x: [r10|QWORD[.] + r14|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr  596  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B65" "B69" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  672  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B64 -> B65 falseDestination: B64 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B67" 
    xhandlers
    flags 
    probability 4598276072030318946
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = ADD (x: rsi|QWORD, y: stack:56|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B69 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4598230027509194816
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rdi|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  704  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  706  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  710  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  712  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction stack:116|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" 
    successors "B89" "B72" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  746  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B89 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B75" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction r9|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  760  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  762  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B72 -> B77 falseDestination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" "B75" 
    successors "B80" "B79" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  796  <|@ instruction CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B80 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  808  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  810  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B77" 
    successors "B83" "B82" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  816  <|@ instruction CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B83 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  828  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  830  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" "B80" 
    successors "B86" "B85" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  836  <|@ instruction CMP (x: rcx|QWORD, y: stack:112|QWORD) size: QWORD <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B86 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B86" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  848  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  852  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B83" 
    successors "B89" "B88" 
    xhandlers
    flags 
    probability 4594284078193216564
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  856  <|@ instruction CMP (x: rcx|QWORD, y: stack:80|QWORD) size: QWORD <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B89 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B89" 
    xhandlers
    flags 
    probability 4592338507517186638
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[.] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  868  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B70" "B88" "B86" 
    successors "B90" "B91" 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  880  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4598736517241560249
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  902  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  904  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  906  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B90" 
    successors 
    xhandlers
    flags 
    probability 4598787677820587060
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  912  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  922  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  928  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4585276878938475572
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  422  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B38" 
    successors "B40" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  428  <|@ instruction J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  432  <|@ instruction CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B40 falseDestination: B38 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" "B75" 
    successors "B77" "B75" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4594284078193216564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  780  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  782  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  784  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  786  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B77 falseDestination: B75 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B33" 
    xhandlers
    flags 
    probability 4584579626390699843
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction stack:56|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [stack:56, stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: stack:48|QWORD[.] stack:40|QWORD[.] stack:28|DWORD r13|DWORD - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20] <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" "B65" 
    successors "B70" 
    xhandlers
    flags 
    probability 4584579626390699843
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction stack:116|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  734  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  738  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ st <@st|@reference-map: [r14:0, stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: stack:48|QWORD[.] stack:40|QWORD[.] - r13|DWORD int[0|0x0] r14|QWORD[.] - int[0|0x0] - - - - stack:116|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157] <|@ <|@
      nr  742  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B98" 
    xhandlers
    flags 
    probability 4568827938815907249
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  216  <|@ instruction rsi|DWORD = MOVE input: int[-84065|0xfffffffffffeb79f] <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B10" "B14" "B16" "B18" "B20" "B22" "B96" "B24" "B95" 
    successors 
    xhandlers
    flags 
    probability 4573298130861829772
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  984  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2731) [bci: 20]
locals: stack:48|QWORD[.] stack:40|QWORD[.] stack:28|DWORD r13|DWORD - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B98" 
    xhandlers
    flags 
    probability 4568761123653011302
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  238  <|@ instruction rsi|DWORD = MOVE input: int[-84065|0xfffffffffffeb79f] <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B24 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    probability 4568694976641744313
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  888  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  890  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  892  <|@ st <@st|@reference-map: [r14:0, stack:40, stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: stack:48|QWORD[.] stack:40|QWORD[.] - r13|DWORD int[0|0x0] r14|QWORD[.] - int[0|0x0] - - - - stack:116|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157] <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  196  <|@ instruction rsi|DWORD = MOVE input: int[-89107|0xfffffffffffea3ed] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B20 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150] <|@ <|@
      nr  964  <|@ instruction rsi|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  944  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150] <|@ <|@
      nr  950  <|@ instruction rsi|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5] <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  132  <|@ instruction rsi|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B14 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction r10|DWORD = MOVE input: int[-96531|0xfffffffffffe86ed] <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  660  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  664  <|@ st <@st|@reference-map: [r14:0, stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2765) [bci: 157]
locals: stack:48|QWORD[.] stack:40|QWORD[.] - r13|DWORD int[0|0x0] r14|QWORD[.] - int[0|0x0] - - - - r11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:157] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  156  <|@ instruction rsi|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B16 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  970  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  978  <|@ instruction rsi|DWORD = MOVE input: int[-72211|0xfffffffffffee5ed] <|@ <|@
      nr  980  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  998  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1002  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@125881805] <|@ <|@
      nr 1004  <|@ instruction MOV [r15|QWORD + 668] y: -69915 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
java.lang.String.toUpperCase(String.java:2722) [bci: 0]
locals: stack:48|QWORD[.] stack:40|QWORD[.] - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   94  <|@ instruction rsi|DWORD = MOVE input: int[-74771|0xfffffffffffedbed] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B10 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-96275|0xfffffffffffe87ed] <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B58 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  176  <|@ instruction rsi|DWORD = MOVE input: int[-88851|0xfffffffffffea4ed] <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B18 -> B98 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #17         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #31         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #1          // value:char[]
    16: arraylength   
    17: istore_3      
    18: iconst_0      
    19: istore_2      
    20: iload_2       
    21: iload_3       
    22: if_icmpge     98
    25: aload_0       
    26: getfield      #1          // value:char[]
    29: iload_2       
    30: caload        
    31: istore        4
    33: iload         4
    35: ldc           #90         // 55296
    37: if_icmplt     64
    40: iload         4
    42: ldc           #110        // 56319
    44: if_icmpgt     64
    47: aload_0       
    48: iload_2       
    49: invokevirtual #89         // codePointAt:(int)int
    52: istore        4
    54: iload         4
    56: invokestatic  #91         // java.lang.Character.charCount:(int)int
    59: istore        5
    61: goto          67
    64: iconst_1      
    65: istore        5
    67: iload         4
    69: invokestatic  #99         // java.lang.Character.toUpperCaseEx:(int)int
    72: istore        6
    74: iload         6
    76: iconst_m1     
    77: if_icmpeq     100
    80: iload         4
    82: iload         6
    84: if_icmpeq     90
    87: goto          100
    90: iload_2       
    91: iload         5
    93: iadd          
    94: istore_2      
    95: goto          20
    98: aload_0       
    99: areturn       
   100: iconst_0      
   101: istore        4
   103: iload_3       
   104: newarray      char
   106: astore        5
   108: aload_0       
   109: getfield      #1          // value:char[]
   112: iconst_0      
   113: aload         5
   115: iconst_0      
   116: iload_2       
   117: invokestatic  #29         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   120: aload_1       
   121: invokevirtual #92         // java.util.Locale.getLanguage:()java.lang.String
   124: astore        6
   126: aload         6
   128: ldc           #115        // "tr"
   130: if_acmpeq     147
   133: aload         6
   135: ldc           #116        // "az"
   137: if_acmpeq     147
   140: aload         6
   142: ldc           #117        // "lt"
   144: if_acmpne     151
   147: iconst_1      
   148: goto          152
   151: iconst_0      
   152: istore        7
   154: iload_2       
   155: istore        12
   157: iload         12
   159: iload_3       
   160: if_icmpge     424
   163: aload_0       
   164: getfield      #1          // value:char[]
   167: iload         12
   169: caload        
   170: istore        10
   172: iload         10
   174: i2c           
   175: ldc           #90         // 55296
   177: if_icmplt     206
   180: iload         10
   182: i2c           
   183: ldc           #110        // 56319
   185: if_icmpgt     206
   188: aload_0       
   189: iload         12
   191: invokevirtual #89         // codePointAt:(int)int
   194: istore        10
   196: iload         10
   198: invokestatic  #91         // java.lang.Character.charCount:(int)int
   201: istore        11
   203: goto          209
   206: iconst_1      
   207: istore        11
   209: iload         7
   211: ifeq          226
   214: aload_0       
   215: iload         12
   217: aload_1       
   218: invokestatic  #100        // java.lang.ConditionalSpecialCasing.toUpperCaseEx:(java.lang.String, int, java.util.Locale)int
   221: istore        9
   223: goto          233
   226: iload         10
   228: invokestatic  #99         // java.lang.Character.toUpperCaseEx:(int)int
   231: istore        9
   233: iload         9
   235: iconst_m1     
   236: if_icmpeq     246
   239: iload         9
   241: ldc           #62         // 65536
   243: if_icmplt     403
   246: iload         9
   248: iconst_m1     
   249: if_icmpne     279
   252: iload         7
   254: ifeq          269
   257: aload_0       
   258: iload         12
   260: aload_1       
   261: invokestatic  #101        // java.lang.ConditionalSpecialCasing.toUpperCaseCharArray:(java.lang.String, int, java.util.Locale)char[]
   264: astore        8
   266: goto          315
   269: iload         10
   271: invokestatic  #102        // java.lang.Character.toUpperCaseCharArray:(int)char[]
   274: astore        8
   276: goto          315
   279: iload         11
   281: iconst_2      
   282: if_icmpne     308
   285: iload         4
   287: iload         9
   289: aload         5
   291: iload         12
   293: iload         4
   295: iadd          
   296: invokestatic  #95         // java.lang.Character.toChars:(int, char[], int)int
   299: iload         11
   301: isub          
   302: iadd          
   303: istore        4
   305: goto          414
   308: iload         9
   310: invokestatic  #96         // java.lang.Character.toChars:(int)char[]
   313: astore        8
   315: aload         8
   317: arraylength   
   318: istore        13
   320: iload         13
   322: iload         11
   324: if_icmple     358
   327: aload         5
   329: arraylength   
   330: iload         13
   332: iadd          
   333: iload         11
   335: isub          
   336: newarray      char
   338: astore        14
   340: aload         5
   342: iconst_0      
   343: aload         14
   345: iconst_0      
   346: iload         12
   348: iload         4
   350: iadd          
   351: invokestatic  #29         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   354: aload         14
   356: astore        5
   358: iconst_0      
   359: istore        14
   361: iload         14
   363: iload         13
   365: if_icmpge     390
   368: aload         5
   370: iload         12
   372: iload         4
   374: iadd          
   375: iload         14
   377: iadd          
   378: aload         8
   380: iload         14
   382: caload        
   383: castore       
   384: iinc          
   387: goto          361
   390: iload         4
   392: iload         13
   394: iload         11
   396: isub          
   397: iadd          
   398: istore        4
   400: goto          414
   403: aload         5
   405: iload         12
   407: iload         4
   409: iadd          
   410: iload         9
   412: i2c           
   413: castore       
   414: iload         12
   416: iload         11
   418: iadd          
   419: istore        12
   421: goto          157
   424: new           #43         // java.lang.String
   427: dup           
   428: aload         5
   430: iconst_0      
   431: iload_3       
   432: iload         4
   434: iadd          
   435: invokespecial #59         // <init>:(char[], int, int)void
   438: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec7848896c24708b460c448b2cc50c000000458bf54d8bd649ffca48c1e0034d3bf20f87090000004585ed0f8546060000850249bbaddeaddeaddeadde41b8000000000f1f4000453be80f8e5d000000420fbf4c4010440fb7c941f7c100ffffff0f85ed0500000fb7c9418b4c8b10f7c1000001000f842d0000008bd981e30000fc0781fb0000fc070f8414060000c1e105c1f917418bd92bd9443bcb0f852000000041ffc0eb9f41ffc0eb9a488bc6488b6c24704883c478850500000000c5f877c383fbff0f84220500008b4a108b0ccd1000000081f9addeadde0f844f05000081f9addeadde0f84fa05000081f9addeadde0f848e0400004585c00f8c07040000418bcd412bc885c90f8c2b0400004d63c84863c948ffc94903c94c3bf10f8682040000453be80f869c040000498b4f60498b5f70418bfdd1e78d7f1783e7f84863ff4181fdffffff000f834d030000488bef4803e9483beb0f873e03000049896f600f18840fc00000000f18840f000100000f18840f400100000f18840f800100004489690c48c70101000000c74108addeadde48897c24484c894c2440448944246448894424384c8954243048895424584889742450488bc14d8d56fe4d8d5efc4d8d46f84d8d4ef04585ed0f8467000000488d78104d85c90f8d7502000048c7c600000000493bf00f8f0d000000c5f9efc0c5fa7f0477488d7608493bf30f8f0e000000c5f9efc0c4e1f97e0477488d7604493bf20f8f0d000000c5f9efc0c5f97e0477488d7602483b7424300f8f0500000066448924774c894c24284c894424204c895c24184c8954241044896c240c488b7c2438488bf0488d7f10488d7610488b54244048890424e80000000090448b7424644c8b142449bbaddeaddeaddeadde488b442438448b6c240c0f1f440000453bee0f8e6a000000420fbf7470100fb7d6f7c200ffffff0f85110400000fb7ce418b4c8b10458bc641ffc0f7c1000001000f84300000008bf181e60000fc0781fe0000fc070f84f4030000c1e105c1f9172bd183faff0f841d030000664389547210458bf0eb98664389747210458bf0eb8d498b7760498b57704181fdffffff000f83c3010000488bce48034c2448483bca0f87b2010000488b7c244849894f600f188437c00000000f188437000100000f188437400100000f1884378001000044896e0c48c70601000000c74608addeadde488bc6448974240c4d8bf24585ed0f847d0000004c8b4c2428488d7010498d56104d85c948c7c1000000000f8deb000000483b4c24200f8f0e000000c5fa6f044ac5fa7f044e488d4908483b4c24180f8f10000000c4e1f96e044ac4e1f97e044e488d4904483b4c24100f8f0e000000c5f96e044ac5f97e044e488d4902483b4c24300f8f080000000fbf144a6689144e498b7760488d5618493b57700f874e010000498957600f1886d8000000488bd648b9addeaddeaddeadde488b89a800000048890ec74608addeadde48c1e80389460c44896610488bc2488b6c24704883c478850500000000c5f877c3c5f9efc048c7c6000000000f1f4000c5fe7f0477488d7610493bf17ef2e970fdffff0f1f8000000000660f1f440000c5fe6f044ac5fe7f044e488d4910493bc97eede9fdfeffff48897c24484c894c2440448944246448894424384c895424304889542458488974245048b9addeaddeaddeadde488bf1418bd5b900000000e80000000090e9dbfcffff448974240c498bc248beaddeaddeaddeadde418bd5b9000000004c8bf0e80000000090e96cfeffff44894424644889542458488974245048ba0000000000000000be9fb7feff4189b79c020000498997a8020000e8000000009044894424644889542458488974245048ba0000000000000000be9fb7feffebcc488944242848beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0488b442428e991feffff44894424644889542458488974245048ba0000000000000000beeda3feffeb8044894424644889542458488974245048baaddeaddeaddeaddebee5a0feffe95dffffff44894424644889542458488974245048baaddeaddeaddeaddebee5a0feffe93affffff44894424644889542458488974245048ba0000000000000000beeddafeffe917ffffff458bde4d8bf241baed86feff4589979c0200004d89a7a8020000e8000000009044894424644889542458488974245048ba0000000000000000beeda5feffe9d4feffff44894424644889542458488974245048ba0000000000000000beede5feffe9b1feffff4889542458488974245049baaddeaddeaddeadde41c7879c020000e5eefeff4d8997a8020000e8000000009044894424644889542458488974245048ba0000000000000000beeddbfeffe962feffff458bde4d8bf241baed98feffe946ffffff458bde4d8bf241baed87feffe935ffffff44894424644889542458488974245048ba0000000000000000beeda4feffe91dfeffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23b41c32 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 51 8 r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rdx:0, rsi:0]at java.lang.String.toUpperCase(String.java:2722) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 10 r14|QWORD = MOV r13|DWORD size: DWORD  <||@
  Comment 62 12 r10|QWORD = DEC r14|QWORD size: QWORD  <||@
  Comment 68 14 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3  <||@
  Comment 72 16 CMP (x: r14|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 75 18 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 81 block B2 null  <||@
  Comment 81 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 26 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 84 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B100  <||@
  Comment 90 block B4 null  <||@
  Comment 90 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 36 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 90 [rax:0, rdx:0, rsi:0]at java.lang.String.toUpperCase(String.java:2722) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 92 38 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 92 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 102 40 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 108 42 JUMP ~[] destination: B4 -> B5  <||@
  Comment 108 block B5 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 108 44 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 112 46 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 115 48 BRANCH trueDestinationProbability: 0.8629773578177928 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B99  <||@
  Comment 121 block B6 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 121 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 52 rcx|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 127 54 r9|DWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 131 56 TEST r9|DWORD y: -256 size: DWORD  <||@
  Comment 138 58 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B97  <||@
  Comment 144 block B7 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 144 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 62 rcx|QWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 147 64 rcx|DWORD = MOV [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: DWORD  <||@
  Comment 152 66 TEST rcx|DWORD y: 65536 size: DWORD  <||@
  Comment 158 68 BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 164 block B9 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 164 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 78 rbx|DWORD = AND rcx|DWORD y: 133955584 size: DWORD  <||@
  Comment 172 80 CMP rbx|DWORD y: 133955584 size: DWORD  <||@
  Comment 178 82 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 184 block B11 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 184 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 100 rcx|DWORD = SHL rcx|DWORD y: 5 size: DWORD  <||@
  Comment 187 102 rcx|DWORD = SAR rcx|DWORD y: 23 size: DWORD  <||@
  Comment 190 104 rbx|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 195 106 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 198 108 BRANCH trueDestinationProbability: 0.8205450248715109 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 204 block B12 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 204 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 204 112 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 207 114 JUMP ~[] destination: B12 -> B5  <||@
  Comment 209 block B8 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 209 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 72 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 212 74 JUMP ~[] destination: B8 -> B5  <||@
  Comment 214 block B99 null  <||@
  Comment 214 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 214 992 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 217 994 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 226 12  <||@
  Comment 236 block B13 null  <||@
  Comment 236 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 118 CMP rbx|DWORD y: -1 size: DWORD  <||@
  Comment 239 120 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 245 block B15 null  <||@
  Comment 245 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 138 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 248 140 rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD state [bci:20]  <||@
  Comment 248 [rax:0, rdx:0, rsi:0]at java.lang.String.toUpperCase(String.java:2731) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         |3          |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 248 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 255 142 CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"tr"]  <||@
  Comment 255 {NarrowOop[String:"tr"]}  <||@
  Comment 261 144 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 267 block B17 null  <||@
  Comment 267 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 162 CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"az"]  <||@
  Comment 267 {NarrowOop[String:"az"]}  <||@
  Comment 273 164 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 279 block B19 null  <||@
  Comment 279 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 279 182 CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"lt"]  <||@
  Comment 279 {NarrowOop[String:"lt"]}  <||@
  Comment 285 184 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 291 block B21 null  <||@
  Comment 291 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 202 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 294 204 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 300 block B23 null  <||@
  Comment 300 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 300 222 rcx|DWORD = SUB (x: r13|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 306 224 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 308 226 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 314 block B25 null  <||@
  Comment 314 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 244 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 317 246 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 320 248 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 323 250 rcx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 326 252 CMP (x: r14|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 329 254 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B96  <||@
  Comment 335 block B26 null  <||@
  Comment 335 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 335 258 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 338 260 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B95  <||@
  Comment 344 block B27 null  <||@
  Comment 344 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 264 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 348 266 rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 352 268 rdi|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 357 270 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 360 272 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 363 274 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 366 276 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 373 278 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B32  <||@
  Comment 379 block B28 null  <||@
  Comment 379 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 282 rbp|QWORD = ADD (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 385 284 CMP (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 388 286 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B32 falseDestination: B28 -> B30  <||@
  Comment 394 block B30 null  <||@
  Comment 394 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 394 308 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 398 310 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 406 312 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 414 314 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 422 316 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 430 318 MOV (x: [rcx|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 434 320 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 441 322 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 441 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 448 324 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 448 326 stack:56|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 453 328 stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 458 330 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 463 332 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 468 334 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 473 336 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 478 338 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 483 340 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 486 342 JUMP ~[] destination: B30 -> B33  <||@
  Comment 486 block B33 null  <||@
  Comment 486 376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 486 378 r10|QWORD = LEA [r14|QWORD - 2] size: QWORD  <||@
  Comment 490 380 r11|QWORD = LEA [r14|QWORD - 4] size: QWORD  <||@
  Comment 494 382 r8|QWORD = LEA [r14|QWORD - 8] size: QWORD  <||@
  Comment 498 384 r9|QWORD = LEA [r14|QWORD - 16] size: QWORD  <||@
  Comment 502 386 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 505 388 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B52 falseDestination: B33 -> B35  <||@
  Comment 511 block B35 null  <||@
  Comment 511 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 406 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 515 408 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 518 410 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 524 block B36 null  <||@
  Comment 524 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 524 414 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 531 416 JUMP ~[] destination: B36 -> B40  <||@
  Comment 531 block B40 null  <||@
  Comment 531 440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 531 442 CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 534 444 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B43 falseDestination: B40 -> B42  <||@
  Comment 540 block B42 null  <||@
  Comment 540 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 540 452 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 544 454 J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 549 456 rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD  <||@
  Comment 553 458 JUMP ~[] destination: B42 -> B43  <||@
  Comment 553 block B43 null  <||@
  Comment 553 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 553 462 CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 556 464 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45  <||@
  Comment 562 block B45 null  <||@
  Comment 562 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 562 472 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 566 474 J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 572 476 rsi|QWORD = LEA [rsi|QWORD + 4] size: QWORD  <||@
  Comment 576 478 JUMP ~[] destination: B45 -> B46  <||@
  Comment 576 block B46 null  <||@
  Comment 576 480 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 576 482 CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 579 484 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 585 block B48 null  <||@
  Comment 585 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 492 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 589 494 J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 594 496 rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD  <||@
  Comment 598 498 JUMP ~[] destination: B48 -> B49  <||@
  Comment 598 block B49 null  <||@
  Comment 598 500 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 598 502 CMP (x: rsi|QWORD, y: stack:80|QWORD) size: QWORD  <||@
  Comment 603 504 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51  <||@
  Comment 609 block B51 null  <||@
  Comment 609 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 609 522 MOV (x: [rdi|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 614 534 JUMP ~[] destination: B51 -> B52  <||@
  Comment 614 block B52 null  <||@
  Comment 614 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 614 392 stack:88|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 619 394 stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 624 396 stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 629 398 stack:112|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 634 400 stack:116|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 639 538 rdi|QWORD[*] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 644 540 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 647 542 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 651 544 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 655 546 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 660 548 stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 664 550 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x118a11c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 664 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x10b07dca8, value=0x118a11c80]:0x118a11c80}  <||@
  Comment 670 552 r14|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 675 554 r10|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 679 556 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 679 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 689 558 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 694 560 r13|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 699 562 JUMP ~[] destination: B52 -> B53  <||@
  Comment 699 block B53 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 699 564 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 704 566 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 707 568 BRANCH trueDestinationProbability: 0.832012837615761 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B64  <||@
  Comment 713 block B54 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 713 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 713 572 rsi|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD  <||@
  Comment 719 574 rdx|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 722 576 TEST rdx|DWORD y: -256 size: DWORD  <||@
  Comment 728 578 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B62  <||@
  Comment 734 block B55 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 734 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 734 582 rcx|QWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 737 584 rcx|DWORD = MOV [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: DWORD  <||@
  Comment 742 586 r8|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 748 588 TEST rcx|DWORD y: 65536 size: DWORD  <||@
  Comment 754 590 BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 760 block B57 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 760 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 602 rsi|DWORD = AND rcx|DWORD y: 133955584 size: DWORD  <||@
  Comment 768 604 CMP rsi|DWORD y: 133955584 size: DWORD  <||@
  Comment 774 606 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 780 block B59 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 780 618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 780 620 rcx|DWORD = SHL rcx|DWORD y: 5 size: DWORD  <||@
  Comment 783 622 rcx|DWORD = SAR rcx|DWORD y: 23 size: DWORD  <||@
  Comment 786 624 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 788 626 CMP rdx|DWORD y: -1 size: DWORD  <||@
  Comment 791 628 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 797 block B61 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 797 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 642 MOV (x: [r10|QWORD[.] + r14|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 803 644 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 806 646 JUMP ~[] destination: B61 -> B53  <||@
  Comment 808 block B56 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 808 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 808 594 MOV (x: [r10|QWORD[.] + r14|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 814 596 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 817 598 JUMP ~[] destination: B56 -> B53  <||@
  Comment 819 block B64 null  <||@
  Comment 819 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 819 668 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 823 670 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 827 672 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 834 674 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B64 -> B65 falseDestination: B64 -> B69  <||@
  Comment 840 block B65 null  <||@
  Comment 840 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 678 rcx|QWORD = ADD (x: rsi|QWORD, y: stack:56|QWORD) size: QWORD  <||@
  Comment 848 680 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 851 682 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B69 falseDestination: B65 -> B67  <||@
  Comment 857 block B67 null  <||@
  Comment 857 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 857 694 rdi|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 862 696 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 866 698 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 874 700 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 882 702 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 890 704 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 898 706 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 902 708 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 909 710 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 909 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 916 712 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 916 714 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 919 716 stack:116|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 924 718 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 927 720 JUMP ~[] destination: B67 -> B70  <||@
  Comment 927 block B70 null  <||@
  Comment 927 744 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 927 746 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 930 748 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B89 falseDestination: B70 -> B72  <||@
  Comment 936 block B72 null  <||@
  Comment 936 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 936 756 r9|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 941 758 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 945 760 rdx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 949 762 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 952 768 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 959 764 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B72 -> B77 falseDestination: B72 -> B75  <||@
  Comment 965 block B77 null  <||@
  Comment 965 794 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 965 796 CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD  <||@
  Comment 970 798 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B80 falseDestination: B77 -> B79  <||@
  Comment 976 block B79 null  <||@
  Comment 976 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 976 806 xmm0|V128_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 981 808 J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 986 810 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 990 812 JUMP ~[] destination: B79 -> B80  <||@
  Comment 990 block B80 null  <||@
  Comment 990 814 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 990 816 CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD  <||@
  Comment 995 818 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B83 falseDestination: B80 -> B82  <||@
  Comment 1001 block B82 null  <||@
  Comment 1001 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1001 826 xmm0|V64_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1007 828 J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1013 830 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 1017 832 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1017 block B83 null  <||@
  Comment 1017 834 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1017 836 CMP (x: rcx|QWORD, y: stack:112|QWORD) size: QWORD  <||@
  Comment 1022 838 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B86 falseDestination: B83 -> B85  <||@
  Comment 1028 block B85 null  <||@
  Comment 1028 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 846 xmm0|V32_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1033 848 J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1038 850 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 1042 852 JUMP ~[] destination: B85 -> B86  <||@
  Comment 1042 block B86 null  <||@
  Comment 1042 854 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1042 856 CMP (x: rcx|QWORD, y: stack:80|QWORD) size: QWORD  <||@
  Comment 1047 858 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B89 falseDestination: B86 -> B88  <||@
  Comment 1053 block B88 null  <||@
  Comment 1053 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 866 rdx|DWORD = MOVSX [rdx|QWORD[.] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 1057 868 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 1061 870 JUMP ~[] destination: B88 -> B89  <||@
  Comment 1061 block B89 null  <||@
  Comment 1061 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 874 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1065 876 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1069 878 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1073 880 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 1079 block B91 null  <||@
  Comment 1079 900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1079 902 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1083 904 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1090 906 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1090 908 JUMP ~[] destination: B91 -> B92  <||@
  Comment 1090 block B92 null  <||@
  Comment 1090 910 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1090 912 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1093 914 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1093 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1103 916 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 1110 918 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1113 920 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1113 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1120 922 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3  <||@
  Comment 1124 924 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1127 926 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1131 928 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1134 930 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1143 12  <||@
  Comment 1153 block B37 null  <||@
  Comment 1153 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1153 420 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1157 422 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1164 424 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1164 block B38 loop 1 depth 1 header:895|LoopBegin  <||@
  Comment 1164 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1168 428 J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1173 430 rsi|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 1177 432 CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1180 434 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B40 falseDestination: B38 -> B38  <||@
  Comment 1187 block B75 loop 3 depth 1 header:830|LoopBegin  <||@
  Comment 1187 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1200 780 xmm0|V256_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1205 782 J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1210 784 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1214 786 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1217 788 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B77 falseDestination: B75 -> B75  <||@
  Comment 1224 block B32 null  <||@
  Comment 1224 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1224 346 stack:56|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1229 348 stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1234 350 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1239 352 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1244 354 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1249 356 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1254 358 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1259 364 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1259 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1269 366 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1272 368 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1275 370 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1280 372 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20]  <||@
  Comment 1280 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1285 [stack:56, stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2731) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3          |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |stack:28|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 1286 374 JUMP ~[] destination: B32 -> B33  <||@
  Comment 1291 block B69 null  <||@
  Comment 1291 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 724 stack:116|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1296 726 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1299 732 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1299 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1309 734 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1312 736 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1317 738 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1320 740 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157]  <||@
  Comment 1320 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1325 [r14:0, stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2765) [bci: 157, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3          |4           |5             |6  |7           |8  |9  |10  |11  |12               |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |-  |r13|DWORD  |int[0|0x0]  |r14|QWORD[.]  |-  |int[0|0x0]  |-  |-  |-   |-   |stack:116|DWORD  |-   |-    <||@
  Comment 1326 742 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1331 block B22 null  <||@
  Comment 1331 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1331 208 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1336 210 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1341 212 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1346 214 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1356 216 rsi|DWORD = MOVE input: int[-84065|0xfffffffffffeb79f]  <||@
  Comment 1361 218 JUMP ~[] destination: B22 -> B98  <||@
  Comment 1361 block B98 null  <||@
  Comment 1361 982 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1361 984 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 1368 986 MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1375 988 DEOPT info [bci:20]  <||@
  Comment 1375 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1380 [stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2731) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3          |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |stack:28|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 1381 block B24 null  <||@
  Comment 1381 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1381 230 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1386 232 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1391 234 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1396 236 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1406 238 rsi|DWORD = MOVE input: int[-84065|0xfffffffffffeb79f]  <||@
  Comment 1411 240 JUMP ~[] destination: B24 -> B98  <||@
  Comment 1413 block B90 null  <||@
  Comment 1413 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1413 884 stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1418 886 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1418 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1428 888 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1433 890 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1438 892 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157]  <||@
  Comment 1438 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1443 [r14:0, stack:40, stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2765) [bci: 157, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3          |4           |5             |6  |7           |8  |9  |10  |11  |12               |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |-  |r13|DWORD  |int[0|0x0]  |r14|QWORD[.]  |-  |int[0|0x0]  |-  |-  |-   |-   |stack:116|DWORD  |-   |-    <||@
  Comment 1444 894 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1447 896 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1452 898 JUMP ~[] destination: B90 -> B92  <||@
  Comment 1457 block B20 null  <||@
  Comment 1457 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1457 188 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1462 190 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 192 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1472 194 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1482 196 rsi|DWORD = MOVE input: int[-89107|0xfffffffffffea3ed]  <||@
  Comment 1487 198 JUMP ~[] destination: B20 -> B98  <||@
  Comment 1489 block B96 null  <||@
  Comment 1489 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1489 956 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1494 958 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1499 960 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1504 962 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150]  <||@
  Comment 1504 {Object[d.a@1594607150]}  <||@
  Comment 1514 964 rsi|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5]  <||@
  Comment 1519 966 JUMP ~[] destination: B96 -> B98  <||@
  Comment 1524 block B95 null  <||@
  Comment 1524 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1524 942 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1529 944 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1534 946 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1539 948 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150]  <||@
  Comment 1539 {Object[d.a@1594607150]}  <||@
  Comment 1549 950 rsi|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5]  <||@
  Comment 1554 952 JUMP ~[] destination: B95 -> B98  <||@
  Comment 1559 block B14 null  <||@
  Comment 1559 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1559 124 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1564 126 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1569 128 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1574 130 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1584 132 rsi|DWORD = MOVE input: int[-75027|0xfffffffffffedaed]  <||@
  Comment 1589 134 JUMP ~[] destination: B14 -> B98  <||@
  Comment 1594 block B60 null  <||@
  Comment 1594 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1594 632 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1597 634 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1600 636 r10|DWORD = MOVE input: int[-96531|0xfffffffffffe86ed]  <||@
  Comment 1606 638 JUMP ~[] destination: B60 -> B63  <||@
  Comment 1606 block B63 null  <||@
  Comment 1606 658 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1606 660 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1613 662 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1620 664 DEOPT info [bci:157]  <||@
  Comment 1620 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1625 [r14:0, stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2765) [bci: 157, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3          |4           |5             |6  |7           |8  |9  |10  |11  |12         |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |-  |r13|DWORD  |int[0|0x0]  |r14|QWORD[.]  |-  |int[0|0x0]  |-  |-  |-   |-   |r11|DWORD  |-   |-    <||@
  Comment 1626 block B16 null  <||@
  Comment 1626 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1626 148 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1631 150 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1636 152 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1641 154 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1651 156 rsi|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed]  <||@
  Comment 1656 158 JUMP ~[] destination: B16 -> B98  <||@
  Comment 1661 block B97 null  <||@
  Comment 1661 968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1661 970 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1666 972 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1671 974 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1676 976 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1686 978 rsi|DWORD = MOVE input: int[-72211|0xfffffffffffee5ed]  <||@
  Comment 1691 980 JUMP ~[] destination: B97 -> B98  <||@
  Comment 1696 block B100 null  <||@
  Comment 1696 996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1696 998 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1701 1000 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 1002 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@125881805]  <||@
  Comment 1706 {Object[d.a@125881805]}  <||@
  Comment 1716 1004 MOV [r15|QWORD + 668] y: -69915 size: DWORD  <||@
  Comment 1727 1006 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1734 1008 DEOPT info [bci:0]  <||@
  Comment 1734 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1739 [stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2722) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 1740 block B10 null  <||@
  Comment 1740 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1740 86 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1745 88 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1750 90 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1755 92 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1765 94 rsi|DWORD = MOVE input: int[-74771|0xfffffffffffedbed]  <||@
  Comment 1770 96 JUMP ~[] destination: B10 -> B98  <||@
  Comment 1775 block B62 null  <||@
  Comment 1775 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1775 650 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1778 652 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1781 654 r10|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed]  <||@
  Comment 1787 656 JUMP ~[] destination: B62 -> B63  <||@
  Comment 1792 block B58 null  <||@
  Comment 1792 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1792 610 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1795 612 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1798 614 r10|DWORD = MOVE input: int[-96275|0xfffffffffffe87ed]  <||@
  Comment 1804 616 JUMP ~[] destination: B58 -> B63  <||@
  Comment 1809 block B18 null  <||@
  Comment 1809 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1809 168 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1814 170 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1819 172 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1824 174 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1834 176 rsi|DWORD = MOVE input: int[-88851|0xfffffffffffea4ed]  <||@
  Comment 1839 178 JUMP ~[] destination: B18 -> B98  <||@
  Comment 1844 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1844 4  <||@
  Comment 1850 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1850 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6818[java.lang.String.toUpperCase(Locale)]"
  method "HotSpotCompilation-6818[java.lang.String.toUpperCase(Locale)]"
  date 1526687570915
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11972ab60 448b560849c1e203493bc20f85efa22dff900f1f80000000000f1f800000000089842400c0feff4883ec7848896c24708b460c448b2cc50c000000458bf54d8bd649ffca48c1e0034d3bf20f87090000004585ed0f8546060000850249bb680d00c00600000041b8000000000f1f4000453be80f8e5d000000420fbf4c4010440fb7c941f7c100ffffff0f85ed0500000fb7c9418b4c8b10f7c1000001000f842d0000008bd981e30000fc0781fb0000fc070f8414060000c1e105c1f917418bd92bd9443bcb0f852000000041ffc0eb9f41ffc0eb9a488bc6488b6c24704883c4788505be137bf0c5f877c383fbff0f84220500008b4a108b0ccd1000000081f9350700d80f844f05000081f9380700d80f84fa05000081f93b0700d80f848e0400004585c00f8c07040000418bcd412bc885c90f8c2b0400004d63c84863c948ffc94903c94c3bf10f8682040000453be80f869c040000498b4f60498b5f70418bfdd1e78d7f1783e7f84863ff4181fdffffff000f834d030000488bef4803e9483beb0f873e03000049896f600f18840fc00000000f18840f000100000f18840f400100000f18840f800100004489690c48c70101000000c74108410000f848897c24484c894c2440448944246448894424384c8954243048895424584889742450488bc14d8d56fe4d8d5efc4d8d46f84d8d4ef04585ed0f8467000000488d78104d85c90f8d7502000048c7c600000000493bf00f8f0d000000c5f9efc0c5fa7f0477488d7608493bf30f8f0e000000c5f9efc0c4e1f97e0477488d7604493bf20f8f0d000000c5f9efc0c5f97e0477488d7602483b7424300f8f0500000066448924774c894c24284c894424204c895c24184c8954241044896c240c488b7c2438488bf0488d7f10488d7610488b54244048890424e8836e2eff90448b7424644c8b142449bb680d00c006000000488b442438448b6c240c0f1f440000453bee0f8e6a000000420fbf7470100fb7d6f7c200ffffff0f85110400000fb7ce418b4c8b10458bc641ffc0f7c1000001000f84300000008bf181e60000fc0781fe0000fc070f84f4030000c1e105c1f9172bd183faff0f841d030000664389547210458bf0eb98664389747210458bf0eb8d498b7760498b57704181fdffffff000f83c3010000488bce48034c2448483bca0f87b2010000488b7c244849894f600f188437c00000000f188437000100000f188437400100000f1884378001000044896e0c48c70601000000c74608410000f8488bc6448974240c4d8bf24585ed0f847d0000004c8b4c2428488d7010498d56104d85c948c7c1000000000f8deb000000483b4c24200f8f0e000000c5fa6f044ac5fa7f044e488d4908483b4c24180f8f10000000c4e1f96e044ac4e1f97e044e488d4904483b4c24100f8f0e000000c5f96e044ac5f97e044e488d4902483b4c24300f8f080000000fbf144a6689144e498b7760488d5618493b57700f874e010000498957600f1886d8000000488bd648b9d01600c007000000488b89a800000048890ec74608da0200f848c1e80389460c44896610488bc2488b6c24704883c478850529107bf0c5f877c3c5f9efc048c7c6000000000f1f4000c5fe7f0477488d7610493bf17ef2e970fdffff0f1f8000000000660f1f440000c5fe6f044ac5fe7f044e488d4910493bc97eede9fdfeffff48897c24484c894c2440448944246448894424384c895424304889542458488974245048b9080200c007000000488bf1418bd5b900000000e83b92a3ff90e9dbfcffff448974240c498bc248be080200c007000000418bd5b9000000004c8bf0e81392a3ff90e96cfeffff44894424644889542458488974245048ba0000000000000000be9fb7feff4189b79c020000498997a8020000e83ab52dff9044894424644889542458488974245048ba0000000000000000be9fb7feffebcc488944242848be680b00c007000000ba02000000b901000000e89d91a3ff90488bf0488b442428e991feffff44894424644889542458488974245048ba0000000000000000beeda3feffeb8044894424644889542458488974245048bab00b3e7607000000bee5a0feffe95dffffff44894424644889542458488974245048bab00b3e7607000000bee5a0feffe93affffff44894424644889542458488974245048ba0000000000000000beeddafeffe917ffffff458bde4d8bf241baed86feff4589979c0200004d89a7a8020000e845b42dff9044894424644889542458488974245048ba0000000000000000beeda5feffe9d4feffff44894424644889542458488974245048ba0000000000000000beede5feffe9b1feffff4889542458488974245049baa0bb3d760700000041c7879c020000e5eefeff4d8997a8020000e8d3b32dff9044894424644889542458488974245048ba0000000000000000beeddbfeffe962feffff458bde4d8bf241baed98feffe946ffffff458bde4d8bf241baed87feffe935ffffff44894424644889542458488974245048ba0000000000000000beeda4feffe91dfeffffe807456dff90e861b22dff90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@23b41c32 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 51 8 r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rdx:0, rsi:0]at java.lang.String.toUpperCase(String.java:2722) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 10 r14|QWORD = MOV r13|DWORD size: DWORD  <||@
  Comment 62 12 r10|QWORD = DEC r14|QWORD size: QWORD  <||@
  Comment 68 14 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3  <||@
  Comment 72 16 CMP (x: r14|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 75 18 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 81 block B2 null  <||@
  Comment 81 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 26 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 84 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B100  <||@
  Comment 90 block B4 null  <||@
  Comment 90 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 36 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 90 [rax:0, rdx:0, rsi:0]at java.lang.String.toUpperCase(String.java:2722) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 92 38 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 92 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 102 40 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 108 42 JUMP ~[] destination: B4 -> B5  <||@
  Comment 108 block B5 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 108 44 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 112 46 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 115 48 BRANCH trueDestinationProbability: 0.8629773578177928 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B99  <||@
  Comment 121 block B6 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 121 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 52 rcx|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 127 54 r9|DWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 131 56 TEST r9|DWORD y: -256 size: DWORD  <||@
  Comment 138 58 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B97  <||@
  Comment 144 block B7 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 144 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 62 rcx|QWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 147 64 rcx|DWORD = MOV [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: DWORD  <||@
  Comment 152 66 TEST rcx|DWORD y: 65536 size: DWORD  <||@
  Comment 158 68 BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 164 block B9 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 164 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 78 rbx|DWORD = AND rcx|DWORD y: 133955584 size: DWORD  <||@
  Comment 172 80 CMP rbx|DWORD y: 133955584 size: DWORD  <||@
  Comment 178 82 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 184 block B11 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 184 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 100 rcx|DWORD = SHL rcx|DWORD y: 5 size: DWORD  <||@
  Comment 187 102 rcx|DWORD = SAR rcx|DWORD y: 23 size: DWORD  <||@
  Comment 190 104 rbx|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 195 106 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 198 108 BRANCH trueDestinationProbability: 0.8205450248715109 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 204 block B12 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 204 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 204 112 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 207 114 JUMP ~[] destination: B12 -> B5  <||@
  Comment 209 block B8 loop 0 depth 1 header:12|LoopBegin  <||@
  Comment 209 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 72 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 212 74 JUMP ~[] destination: B8 -> B5  <||@
  Comment 214 block B99 null  <||@
  Comment 214 990 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 214 992 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 217 994 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 226 12  <||@
  Comment 236 block B13 null  <||@
  Comment 236 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 118 CMP rbx|DWORD y: -1 size: DWORD  <||@
  Comment 239 120 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 245 block B15 null  <||@
  Comment 245 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 138 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 248 140 rcx|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD state [bci:20]  <||@
  Comment 248 [rax:0, rdx:0, rsi:0]at java.lang.String.toUpperCase(String.java:2731) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         |3          |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 248 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 255 142 CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"tr"]  <||@
  Comment 255 {NarrowOop[String:"tr"]}  <||@
  Comment 261 144 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 267 block B17 null  <||@
  Comment 267 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 162 CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"az"]  <||@
  Comment 267 {NarrowOop[String:"az"]}  <||@
  Comment 273 164 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 279 block B19 null  <||@
  Comment 279 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 279 182 CMP rcx|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[String:"lt"]  <||@
  Comment 279 {NarrowOop[String:"lt"]}  <||@
  Comment 285 184 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 291 block B21 null  <||@
  Comment 291 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 202 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 294 204 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 300 block B23 null  <||@
  Comment 300 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 300 222 rcx|DWORD = SUB (x: r13|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 306 224 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 308 226 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 314 block B25 null  <||@
  Comment 314 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 244 r9|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 317 246 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 320 248 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 323 250 rcx|QWORD = ADD (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 326 252 CMP (x: r14|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 329 254 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B96  <||@
  Comment 335 block B26 null  <||@
  Comment 335 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 335 258 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 338 260 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B95  <||@
  Comment 344 block B27 null  <||@
  Comment 344 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 264 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 348 266 rbx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 352 268 rdi|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 357 270 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 360 272 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 363 274 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 366 276 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 373 278 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B32  <||@
  Comment 379 block B28 null  <||@
  Comment 379 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 379 282 rbp|QWORD = ADD (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 385 284 CMP (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 388 286 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B32 falseDestination: B28 -> B30  <||@
  Comment 394 block B30 null  <||@
  Comment 394 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 394 308 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 398 310 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 406 312 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 414 314 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 422 316 AMD64PREFETCH ~[rdi|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 430 318 MOV (x: [rcx|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 434 320 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 441 322 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 441 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 448 324 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 448 326 stack:56|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 453 328 stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 458 330 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 463 332 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 468 334 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 473 336 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 478 338 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 483 340 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 486 342 JUMP ~[] destination: B30 -> B33  <||@
  Comment 486 block B33 null  <||@
  Comment 486 376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 486 378 r10|QWORD = LEA [r14|QWORD - 2] size: QWORD  <||@
  Comment 490 380 r11|QWORD = LEA [r14|QWORD - 4] size: QWORD  <||@
  Comment 494 382 r8|QWORD = LEA [r14|QWORD - 8] size: QWORD  <||@
  Comment 498 384 r9|QWORD = LEA [r14|QWORD - 16] size: QWORD  <||@
  Comment 502 386 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 505 388 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B33 -> B52 falseDestination: B33 -> B35  <||@
  Comment 511 block B35 null  <||@
  Comment 511 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 406 rdi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 515 408 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 518 410 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 524 block B36 null  <||@
  Comment 524 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 524 414 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 531 416 JUMP ~[] destination: B36 -> B40  <||@
  Comment 531 block B40 null  <||@
  Comment 531 440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 531 442 CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 534 444 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B43 falseDestination: B40 -> B42  <||@
  Comment 540 block B42 null  <||@
  Comment 540 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 540 452 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 544 454 J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 549 456 rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD  <||@
  Comment 553 458 JUMP ~[] destination: B42 -> B43  <||@
  Comment 553 block B43 null  <||@
  Comment 553 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 553 462 CMP (x: rsi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 556 464 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B43 -> B46 falseDestination: B43 -> B45  <||@
  Comment 562 block B45 null  <||@
  Comment 562 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 562 472 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 566 474 J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 572 476 rsi|QWORD = LEA [rsi|QWORD + 4] size: QWORD  <||@
  Comment 576 478 JUMP ~[] destination: B45 -> B46  <||@
  Comment 576 block B46 null  <||@
  Comment 576 480 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 576 482 CMP (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 579 484 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 585 block B48 null  <||@
  Comment 585 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 492 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 589 494 J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 594 496 rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD  <||@
  Comment 598 498 JUMP ~[] destination: B48 -> B49  <||@
  Comment 598 block B49 null  <||@
  Comment 598 500 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 598 502 CMP (x: rsi|QWORD, y: stack:80|QWORD) size: QWORD  <||@
  Comment 603 504 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51  <||@
  Comment 609 block B51 null  <||@
  Comment 609 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 609 522 MOV (x: [rdi|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 614 534 JUMP ~[] destination: B51 -> B52  <||@
  Comment 614 block B52 null  <||@
  Comment 614 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 614 392 stack:88|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 619 394 stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 624 396 stack:104|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 629 398 stack:112|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 634 400 stack:116|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 639 538 rdi|QWORD[*] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 644 540 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 647 542 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 651 544 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 655 546 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 660 548 stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 664 550 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x118a11c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 664 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x10b07dca8, value=0x118a11c80]:0x118a11c80}  <||@
  Comment 670 552 r14|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 675 554 r10|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 679 556 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]  <||@
  Comment 679 {Object[int[256]{1207963663, 1207963663, 1207963663, 1207963663, 1207963663, ...}]}  <||@
  Comment 689 558 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 694 560 r13|DWORD = MOVE stack:116|DWORD moveKind: DWORD  <||@
  Comment 699 562 JUMP ~[] destination: B52 -> B53  <||@
  Comment 699 block B53 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 699 564 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 704 566 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 707 568 BRANCH trueDestinationProbability: 0.832012837615761 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B64  <||@
  Comment 713 block B54 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 713 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 713 572 rsi|DWORD = MOVSX [rax|QWORD[.] + r14|DWORD * 2 + 16] size: DWORD  <||@
  Comment 719 574 rdx|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 722 576 TEST rdx|DWORD y: -256 size: DWORD  <||@
  Comment 728 578 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B62  <||@
  Comment 734 block B55 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 734 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 734 582 rcx|QWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 737 584 rcx|DWORD = MOV [r11|QWORD[.] + rcx|QWORD * 4 + 16] size: DWORD  <||@
  Comment 742 586 r8|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 748 588 TEST rcx|DWORD y: 65536 size: DWORD  <||@
  Comment 754 590 BRANCH trueDestinationProbability: 0.45385625545370506 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 760 block B57 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 760 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 602 rsi|DWORD = AND rcx|DWORD y: 133955584 size: DWORD  <||@
  Comment 768 604 CMP rsi|DWORD y: 133955584 size: DWORD  <||@
  Comment 774 606 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 780 block B59 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 780 618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 780 620 rcx|DWORD = SHL rcx|DWORD y: 5 size: DWORD  <||@
  Comment 783 622 rcx|DWORD = SAR rcx|DWORD y: 23 size: DWORD  <||@
  Comment 786 624 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 788 626 CMP rdx|DWORD y: -1 size: DWORD  <||@
  Comment 791 628 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 797 block B61 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 797 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 642 MOV (x: [r10|QWORD[.] + r14|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 803 644 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 806 646 JUMP ~[] destination: B61 -> B53  <||@
  Comment 808 block B56 loop 2 depth 1 header:68|LoopBegin  <||@
  Comment 808 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 808 594 MOV (x: [r10|QWORD[.] + r14|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 814 596 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 817 598 JUMP ~[] destination: B56 -> B53  <||@
  Comment 819 block B64 null  <||@
  Comment 819 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 819 668 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 823 670 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 827 672 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 834 674 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B64 -> B65 falseDestination: B64 -> B69  <||@
  Comment 840 block B65 null  <||@
  Comment 840 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 678 rcx|QWORD = ADD (x: rsi|QWORD, y: stack:56|QWORD) size: QWORD  <||@
  Comment 848 680 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 851 682 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B65 -> B69 falseDestination: B65 -> B67  <||@
  Comment 857 block B67 null  <||@
  Comment 857 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 857 694 rdi|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 862 696 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 866 698 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 874 700 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 882 702 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 890 704 AMD64PREFETCH ~[rdi|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 898 706 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 902 708 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 909 710 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 909 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 916 712 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 916 714 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 919 716 stack:116|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 924 718 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 927 720 JUMP ~[] destination: B67 -> B70  <||@
  Comment 927 block B70 null  <||@
  Comment 927 744 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 927 746 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 930 748 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B89 falseDestination: B70 -> B72  <||@
  Comment 936 block B72 null  <||@
  Comment 936 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 936 756 r9|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 941 758 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 945 760 rdx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 949 762 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 952 768 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 959 764 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B72 -> B77 falseDestination: B72 -> B75  <||@
  Comment 965 block B77 null  <||@
  Comment 965 794 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 965 796 CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD  <||@
  Comment 970 798 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B77 -> B80 falseDestination: B77 -> B79  <||@
  Comment 976 block B79 null  <||@
  Comment 976 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 976 806 xmm0|V128_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 981 808 J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 986 810 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 990 812 JUMP ~[] destination: B79 -> B80  <||@
  Comment 990 block B80 null  <||@
  Comment 990 814 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 990 816 CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD  <||@
  Comment 995 818 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B80 -> B83 falseDestination: B80 -> B82  <||@
  Comment 1001 block B82 null  <||@
  Comment 1001 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1001 826 xmm0|V64_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1007 828 J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1013 830 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 1017 832 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1017 block B83 null  <||@
  Comment 1017 834 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1017 836 CMP (x: rcx|QWORD, y: stack:112|QWORD) size: QWORD  <||@
  Comment 1022 838 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B83 -> B86 falseDestination: B83 -> B85  <||@
  Comment 1028 block B85 null  <||@
  Comment 1028 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 846 xmm0|V32_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1033 848 J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1038 850 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 1042 852 JUMP ~[] destination: B85 -> B86  <||@
  Comment 1042 block B86 null  <||@
  Comment 1042 854 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1042 856 CMP (x: rcx|QWORD, y: stack:80|QWORD) size: QWORD  <||@
  Comment 1047 858 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B86 -> B89 falseDestination: B86 -> B88  <||@
  Comment 1053 block B88 null  <||@
  Comment 1053 864 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 866 rdx|DWORD = MOVSX [rdx|QWORD[.] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 1057 868 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 1061 870 JUMP ~[] destination: B88 -> B89  <||@
  Comment 1061 block B89 null  <||@
  Comment 1061 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 874 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1065 876 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1069 878 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1073 880 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 1079 block B91 null  <||@
  Comment 1079 900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1079 902 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1083 904 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1090 906 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1090 908 JUMP ~[] destination: B91 -> B92  <||@
  Comment 1090 block B92 null  <||@
  Comment 1090 910 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1090 912 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1093 914 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1093 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1103 916 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 1110 918 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1113 920 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1113 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1120 922 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@30055afe encoding: base: 0 shift: 3  <||@
  Comment 1124 924 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1127 926 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1131 928 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1134 930 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1143 12  <||@
  Comment 1153 block B37 null  <||@
  Comment 1153 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1153 420 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1157 422 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1164 424 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1164 block B38 loop 1 depth 1 header:895|LoopBegin  <||@
  Comment 1164 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1168 428 J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1173 430 rsi|QWORD = LEA [rsi|QWORD + 16] size: QWORD  <||@
  Comment 1177 432 CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1180 434 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B40 falseDestination: B38 -> B38  <||@
  Comment 1187 block B75 loop 3 depth 1 header:830|LoopBegin  <||@
  Comment 1187 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1200 780 xmm0|V256_WORD = H [rdx|QWORD[.] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1205 782 J (address: [rsi|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1210 784 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 1214 786 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 1217 788 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B77 falseDestination: B75 -> B75  <||@
  Comment 1224 block B32 null  <||@
  Comment 1224 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1224 346 stack:56|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1229 348 stack:64|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1234 350 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1239 352 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1244 354 stack:80|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1249 356 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1254 358 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1259 364 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1259 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1269 366 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1272 368 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1275 370 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1280 372 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20]  <||@
  Comment 1280 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1285 [stack:56, stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2731) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3          |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |stack:28|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 1286 374 JUMP ~[] destination: B32 -> B33  <||@
  Comment 1291 block B69 null  <||@
  Comment 1291 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 724 stack:116|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1296 726 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1299 732 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1299 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1309 734 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1312 736 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1317 738 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1320 740 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157]  <||@
  Comment 1320 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1325 [r14:0, stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2765) [bci: 157, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3          |4           |5             |6  |7           |8  |9  |10  |11  |12               |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |-  |r13|DWORD  |int[0|0x0]  |r14|QWORD[.]  |-  |int[0|0x0]  |-  |-  |-   |-   |stack:116|DWORD  |-   |-    <||@
  Comment 1326 742 JUMP ~[] destination: B69 -> B70  <||@
  Comment 1331 block B22 null  <||@
  Comment 1331 206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1331 208 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1336 210 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1341 212 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1346 214 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1356 216 rsi|DWORD = MOVE input: int[-84065|0xfffffffffffeb79f]  <||@
  Comment 1361 218 JUMP ~[] destination: B22 -> B98  <||@
  Comment 1361 block B98 null  <||@
  Comment 1361 982 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1361 984 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 1368 986 MOV (x: [r15|QWORD + 680], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 1375 988 DEOPT info [bci:20]  <||@
  Comment 1375 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1380 [stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2731) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3          |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |stack:28|DWORD  |r13|DWORD  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 1381 block B24 null  <||@
  Comment 1381 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1381 230 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1386 232 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1391 234 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1396 236 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1406 238 rsi|DWORD = MOVE input: int[-84065|0xfffffffffffeb79f]  <||@
  Comment 1411 240 JUMP ~[] destination: B24 -> B98  <||@
  Comment 1413 block B90 null  <||@
  Comment 1413 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1413 884 stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1418 886 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1418 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1428 888 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1433 890 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1438 892 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:157]  <||@
  Comment 1438 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1443 [r14:0, stack:40, stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2765) [bci: 157, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3          |4           |5             |6  |7           |8  |9  |10  |11  |12               |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |-  |r13|DWORD  |int[0|0x0]  |r14|QWORD[.]  |-  |int[0|0x0]  |-  |-  |-   |-   |stack:116|DWORD  |-   |-    <||@
  Comment 1444 894 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1447 896 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1452 898 JUMP ~[] destination: B90 -> B92  <||@
  Comment 1457 block B20 null  <||@
  Comment 1457 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1457 188 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1462 190 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 192 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1472 194 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1482 196 rsi|DWORD = MOVE input: int[-89107|0xfffffffffffea3ed]  <||@
  Comment 1487 198 JUMP ~[] destination: B20 -> B98  <||@
  Comment 1489 block B96 null  <||@
  Comment 1489 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1489 956 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1494 958 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1499 960 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1504 962 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150]  <||@
  Comment 1504 {Object[d.a@1594607150]}  <||@
  Comment 1514 964 rsi|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5]  <||@
  Comment 1519 966 JUMP ~[] destination: B96 -> B98  <||@
  Comment 1524 block B95 null  <||@
  Comment 1524 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1524 942 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1529 944 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1534 946 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1539 948 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1594607150]  <||@
  Comment 1539 {Object[d.a@1594607150]}  <||@
  Comment 1549 950 rsi|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5]  <||@
  Comment 1554 952 JUMP ~[] destination: B95 -> B98  <||@
  Comment 1559 block B14 null  <||@
  Comment 1559 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1559 124 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1564 126 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1569 128 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1574 130 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1584 132 rsi|DWORD = MOVE input: int[-75027|0xfffffffffffedaed]  <||@
  Comment 1589 134 JUMP ~[] destination: B14 -> B98  <||@
  Comment 1594 block B60 null  <||@
  Comment 1594 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1594 632 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1597 634 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1600 636 r10|DWORD = MOVE input: int[-96531|0xfffffffffffe86ed]  <||@
  Comment 1606 638 JUMP ~[] destination: B60 -> B63  <||@
  Comment 1606 block B63 null  <||@
  Comment 1606 658 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1606 660 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1613 662 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1620 664 DEOPT info [bci:157]  <||@
  Comment 1620 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1625 [r14:0, stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2765) [bci: 157, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3          |4           |5             |6  |7           |8  |9  |10  |11  |12         |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |-  |r13|DWORD  |int[0|0x0]  |r14|QWORD[.]  |-  |int[0|0x0]  |-  |-  |-   |-   |r11|DWORD  |-   |-    <||@
  Comment 1626 block B16 null  <||@
  Comment 1626 146 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1626 148 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1631 150 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1636 152 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1641 154 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1651 156 rsi|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed]  <||@
  Comment 1656 158 JUMP ~[] destination: B16 -> B98  <||@
  Comment 1661 block B97 null  <||@
  Comment 1661 968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1661 970 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1666 972 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1671 974 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1676 976 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1686 978 rsi|DWORD = MOVE input: int[-72211|0xfffffffffffee5ed]  <||@
  Comment 1691 980 JUMP ~[] destination: B97 -> B98  <||@
  Comment 1696 block B100 null  <||@
  Comment 1696 996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1696 998 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1701 1000 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1706 1002 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@125881805]  <||@
  Comment 1706 {Object[d.a@125881805]}  <||@
  Comment 1716 1004 MOV [r15|QWORD + 668] y: -69915 size: DWORD  <||@
  Comment 1727 1006 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1734 1008 DEOPT info [bci:0]  <||@
  Comment 1734 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1739 [stack:80, stack:88]at java.lang.String.toUpperCase(String.java:2722) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14 
     locals:  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-    <||@
  Comment 1740 block B10 null  <||@
  Comment 1740 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1740 86 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1745 88 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1750 90 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1755 92 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1765 94 rsi|DWORD = MOVE input: int[-74771|0xfffffffffffedbed]  <||@
  Comment 1770 96 JUMP ~[] destination: B10 -> B98  <||@
  Comment 1775 block B62 null  <||@
  Comment 1775 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1775 650 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1778 652 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1781 654 r10|DWORD = MOVE input: int[-91923|0xfffffffffffe98ed]  <||@
  Comment 1787 656 JUMP ~[] destination: B62 -> B63  <||@
  Comment 1792 block B58 null  <||@
  Comment 1792 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1792 610 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1795 612 r14|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1798 614 r10|DWORD = MOVE input: int[-96275|0xfffffffffffe87ed]  <||@
  Comment 1804 616 JUMP ~[] destination: B58 -> B63  <||@
  Comment 1809 block B18 null  <||@
  Comment 1809 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1809 168 stack:28|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1814 170 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1819 172 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1824 174 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1834 176 rsi|DWORD = MOVE input: int[-88851|0xfffffffffffea4ed]  <||@
  Comment 1839 178 JUMP ~[] destination: B18 -> B98  <||@
  Comment 1844 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1844 4  <||@
  Comment 1850 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1850 5  <||@
  HexCodeFile>>> <|@
end_nmethod
