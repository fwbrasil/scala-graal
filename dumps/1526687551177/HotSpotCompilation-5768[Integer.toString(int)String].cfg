begin_compilation
  name " HotSpotCompilation-5768[java.lang.Integer.toString(int)]"
  method "HotSpotCompilation-5768[java.lang.Integer.toString(int)]"
  date 1526687593064
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid a405 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 v418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?43 v4 v11 i15 ?72 v46 ?56 i82 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:398) [bci: 1]
rawvalue: -2147483648
stableDimension: 0
stamp: i32 [-2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i32
value: int[-2147483648|0xffffffff80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:398) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i3 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:398) [bci: 3]
stamp: void
trueSuccessorProbability: 4.183064861906782E-5
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v5 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v5 #falseSuccessor: v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4541297938918195200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:399) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid a8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:399) [bci: 6]
rawvalue: "-2147483648"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"-2147483648"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:399) [bci: 8]
stamp: void
=== Inputs ===
result: a8 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a8 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4607182042023030341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i386 v889 v897 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j832 j883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j793 j850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v891 v898 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j828 j880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j788 j845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v893 v899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j823 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j824 j877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j476 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j851 j794 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v895 v900 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j820 j874 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v875 j851 v821 j794 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v478 v531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 v528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a447 a508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 38]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 i162 a598 a554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 18]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i131 a554 i54 i68 i486 a598 i423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i455 i515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i425 i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 3]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
rawvalue: int[10]{9, 99, 999, 9999, 99999, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[10]{9, 99, 999, 9999, 99999, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 v912 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 v225 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 i42 i59 v147 i83 v628 v586 a447 a508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i10 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 10]
stamp: void
trueSuccessorProbability: 0.028538893698111245
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4583882653384436038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - - 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$171/333421669@94108b0
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 14]
stamp: i32
=== Inputs ===
value: i1 
=== Succesors ===
=== Usages ===
v62 ?60 i82 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B5" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4590068489652910860
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i10 i68 
=== Succesors ===
=== Usages ===
?60 v912 i162 i68 v214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: i10 i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.6279806363998217
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v57 
=== Succesors ===
next: v329 
=== Usages ===
i59 v64 v69 v328 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v57 #next: v329  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?72 
values: i15 i59 
=== Succesors ===
=== Usages ===
v319 a447 v326 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: i15 i59  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i213 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i59 y: i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v325 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v325 #falseSuccessor: v328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590068489652910860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: i906 
=== Usages ===
i906 
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i906  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a44 
index: i59 
=== Succesors ===
=== Usages ===
i906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v325 
address: v912 
=== Succesors ===
next: v67 
=== Usages ===
v62 
=== Predecessor ===
v325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v325 address: v912 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i906 
y: i15 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i906 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
trueSuccessorProbability: 0.619479692449355
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
i906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v63 #falseSuccessor: v64  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586856243027280245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?60 #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: i32
=== Inputs ===
x: i59 
y: i19 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
loopBegin: v58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: j426 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: j426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j426 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j470 
=== Usages ===
v924 v925 
=== Predecessor ===
v64 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j470  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: - 
=== Succesors ===
=== Usages ===
j470 v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
=== Succesors ===
next: j471 
=== Usages ===
j430 v926 v927 a446 v932 v928 v929 v930 v931 
=== Predecessor ===
j426 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 #next: j471  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: - 
=== Succesors ===
=== Usages ===
j471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v925 
=== Succesors ===
next: v442 
=== Usages ===
v436 
=== Predecessor ===
j470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v925 #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 19]
stamp: i32
=== Inputs ===
x: i59 
y: i105 
=== Succesors ===
=== Usages ===
j644 i203 v473 i423 a447 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i162 
y: i19 
=== Succesors ===
=== Usages ===
i455 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i162 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i423 
y: i454 
=== Succesors ===
=== Usages ===
i425 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i423 y: i454  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i455 
y: i424 
=== Succesors ===
=== Usages ===
j429 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i455 y: i424  <|@  <|@
f <@~|@floating>@ <|@
tid j429 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i425 
=== Succesors ===
=== Usages ===
j430 v928 v929 v930 v931 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i425  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i64
=== Inputs ===
x: j429 
y: j470 
=== Succesors ===
=== Usages ===
v436 v472 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j429 y: j470  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j471 
y: j430 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j471 y: j430  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v436 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v440 
=== Usages ===
=== Predecessor ===
j471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v436 #trueSuccessor: v441 #falseSuccessor: v440  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4553899900108848711
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a447 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a447 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?60 
arguments: v421 i162 i10 
=== Succesors ===
next: v450 
=== Usages ===
a451 
=== Predecessor ===
v441 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?60 arguments: v421 i162 i10 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
a447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4583800399064675918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
value: j430 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v924 value: j430 stateAfter: - lastLocationAccess: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j429 
index: j470 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j429 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v928 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v928 #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j429 
index: j470 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j429 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v929 
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v929 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j429 
index: j470 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j429 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v930 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v930 #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j429 
index: j470 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j429 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v931 
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v931 #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j470 
index: - 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v926 
value: i162 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v926 value: i162 stateAfter: - lastLocationAccess: - #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j470 
index: - 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v927 
value: j422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v927 value: j422 stateAfter: - lastLocationAccess: - #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j470 
index: - 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
value: v629 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v932 value: v629 stateAfter: - lastLocationAccess: - #next: v445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a446 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j470 
=== Succesors ===
next: v448 
=== Usages ===
a451 
=== Predecessor ===
v445 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j470 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
a446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v449 
values: a446 a447 
=== Succesors ===
=== Usages ===
v922 a395 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v449 values: a446 a447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v448 v450 
=== Succesors ===
next: v778 
=== Usages ===
a451 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v448 v450 #next: v778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v689 
=== Usages ===
j780 
=== Predecessor ===
v449 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a451 
index: - 
=== Succesors ===
=== Usages ===
j780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a451 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j780 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v778 
address: v922 
=== Succesors ===
=== Usages ===
v957 v958 v959 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v778 address: v922  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v893 v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i162 
=== Succesors ===
=== Usages ===
j832 j828 j820 j824 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i162  <|@  <|@
f <@~|@floating>@ <|@
tid j820 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j644 
y: j819 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j819  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j820 
y: j365 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j820 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v687 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v688 #falseSuccessor: v687  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
value: v905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v959 value: v905 stateAfter: - lastLocationAccess: - #next: v676  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v895 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j794 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈0000000000000008
valueDescription: i64
=== Inputs ===
merge: v677 
values: j476 j365 
=== Succesors ===
=== Usages ===
v825 j788 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v677 values: j476 j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v676 v692 
=== Succesors ===
next: v695 
=== Usages ===
j794 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v676 v692 #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid j824 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j644 
y: j823 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j823  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j824 
y: j794 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j824 y: j794  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v825 
=== Succesors ===
trueSuccessor: v694 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v825 #trueSuccessor: v694 #falseSuccessor: v693  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
value: v904 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v959 value: v904 stateAfter: - lastLocationAccess: - #next: v680  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j788 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈000000000000000c
valueDescription: i64
=== Inputs ===
merge: v681 
values: j799 j794 
=== Succesors ===
=== Usages ===
v958 j793 j781 v829 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v681 values: j799 j794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v680 v698 
=== Succesors ===
next: v701 
=== Usages ===
j788 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v680 v698 #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j644 
y: j827 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j827  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j828 
y: j788 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j828 y: j788  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v829 
=== Succesors ===
trueSuccessor: v700 
falseSuccessor: v699 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v829 #trueSuccessor: v700 #falseSuccessor: v699  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v704  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
v700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j780 
index: j788 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: v903 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: v903 stateAfter: - lastLocationAccess: - #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid j793 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [2 - 10] ⇊0000000000000002 ⇈000000000000000e
=== Inputs ===
x: j788 
y: j783 
=== Succesors ===
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j788 y: j783  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
v891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j781 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000e
valueDescription: i64
=== Inputs ===
merge: v684 
values: j793 j788 
=== Succesors ===
=== Usages ===
v957 v833 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v684 values: j793 j788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v683 v704 
=== Succesors ===
next: v707 
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v683 v704 #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid j832 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j644 
y: j831 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j831  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j832 
y: j781 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j832 y: j781  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v833 
=== Succesors ===
trueSuccessor: v706 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v833 #trueSuccessor: v706 #falseSuccessor: v705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v710  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
v706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j780 
index: j781 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
value: i300 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 value: i300 stateAfter: - lastLocationAccess: - #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
v889 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v686 v710 
=== Succesors ===
next: a395 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v686 v710 #next: a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a451 
=== Succesors ===
next: v81 
=== Usages ===
a185 
=== Predecessor ===
v670 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a451 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i385 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i386 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
a395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 215
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606924997273779963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - - 
=== Succesors ===
=== Usages ===
?43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B26" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612930980410844842
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v41 
values: i10 i54 
=== Succesors ===
=== Usages ===
?43 v913 i54 v225 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v41 values: i10 i54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.6279806363998217
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v40 
=== Succesors ===
next: v334 
=== Usages ===
i42 v48 v53 v333 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v40 #next: v334  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: i1 i42 
=== Succesors ===
=== Usages ===
v318 a508 v331 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: i1 i42  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i213 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v225 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v333 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v225 #trueSuccessor: v330 #falseSuccessor: v333  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612930980410844842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i907 
=== Usages ===
i907 
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i907  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a44 
index: i42 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v330 
address: v913 
=== Succesors ===
next: v51 
=== Usages ===
v46 
=== Predecessor ===
v330 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v330 address: v913 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i907 
y: i1 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i907 y: i1  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 13]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: i32
=== Inputs ===
x: i42 
y: i19 
=== Succesors ===
=== Usages ===
i203 j711 i42 v527 i486 a508 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
trueSuccessorProbability: 0.619479692449355
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
i907 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v47 #falseSuccessor: v48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609801053530050007
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?43 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?43 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: j488 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j524 
=== Usages ===
v933 v934 
=== Predecessor ===
v48 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j524  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j488 
index: - 
=== Succesors ===
=== Usages ===
j524 v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j488 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v933 
=== Succesors ===
next: j525 
=== Usages ===
j492 v935 v936 a507 v941 v937 v938 v939 v940 
=== Predecessor ===
j488 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v933 #next: j525  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j488 
index: - 
=== Succesors ===
=== Usages ===
j525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j488 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v934 
=== Succesors ===
next: v503 
=== Usages ===
v497 
=== Predecessor ===
j524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v934 #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i54 
y: i19 
=== Succesors ===
=== Usages ===
i515 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i54 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i486 
y: i454 
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i486 y: i454  <|@  <|@
f <@~|@floating>@ <|@
tid i487 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i515 
y: i424 
=== Succesors ===
=== Usages ===
j491 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i515 y: i424  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i487 
=== Succesors ===
=== Usages ===
j492 v937 v938 v939 v940 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i487  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i64
=== Inputs ===
x: j491 
y: j524 
=== Succesors ===
=== Usages ===
v497 v526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j491 y: j524  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j525 
y: j492 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j525 y: j492  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v502 
falseSuccessor: v501 
=== Usages ===
=== Predecessor ===
j525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v502 #falseSuccessor: v501  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4576753479527295714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a508 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a508 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?43 
arguments: v421 i54 i10 
=== Succesors ===
next: v511 
=== Usages ===
a512 
=== Predecessor ===
v502 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?43 arguments: v421 i54 i10 #next: v511  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
a508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606837499496494926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v933 
value: j492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v933 value: j492 stateAfter: - lastLocationAccess: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j491 
index: j524 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v937 
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v937 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j491 
index: j524 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v938 
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v938 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j491 
index: j524 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v939 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v939 #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j491 
index: j524 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v940 
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v940 #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v935 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v935 value: i54 stateAfter: - lastLocationAccess: - #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v936 
value: j422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v936 value: j422 stateAfter: - lastLocationAccess: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
value: v629 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v941 value: v629 stateAfter: - lastLocationAccess: - #next: v506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a507 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j524 
=== Succesors ===
next: v509 
=== Usages ===
a512 
=== Predecessor ===
v506 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j524 #next: v509  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
a507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v510 
values: a507 a508 
=== Succesors ===
=== Usages ===
v923 a399 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v510 values: a507 a508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v509 v511 
=== Succesors ===
next: v836 
=== Usages ===
a512 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v509 v511 #next: v836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v753 
=== Usages ===
j838 
=== Predecessor ===
v510 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v753  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a512 
index: - 
=== Succesors ===
=== Usages ===
j838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a512 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v836 
address: v923 
=== Succesors ===
=== Usages ===
v960 v961 v962 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v836 address: v923  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j838 
index: - 
=== Succesors ===
=== Usages ===
v899 v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j838 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
j883 j880 j874 j877 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j874 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j711 
y: j819 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j711 y: j819  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j874 
y: j365 
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j874 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v752 
falseSuccessor: v751 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v752 #falseSuccessor: v751  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v756  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
v752 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: v905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v741 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: v905 stateAfter: - lastLocationAccess: - #next: v741  <|@  <|@
f <@*|@fixed>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j851 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈0000000000000008
valueDescription: i64
=== Inputs ===
merge: v742 
values: j476 j365 
=== Succesors ===
=== Usages ===
v878 j845 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v742 values: j476 j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v741 v756 
=== Succesors ===
next: v759 
=== Usages ===
j851 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v741 v756 #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid j877 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j711 
y: j823 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j711 y: j823  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j877 
y: j851 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j877 y: j851  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v878 
=== Succesors ===
trueSuccessor: v758 
falseSuccessor: v757 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v878 #trueSuccessor: v758 #falseSuccessor: v757  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
v758 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: v904 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: v904 stateAfter: - lastLocationAccess: - #next: v744  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j845 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈000000000000000c
valueDescription: i64
=== Inputs ===
merge: v745 
values: j799 j851 
=== Succesors ===
=== Usages ===
v961 j850 j839 v881 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v745 values: j799 j851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v744 v762 
=== Succesors ===
next: v765 
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v744 v762 #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid j880 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j711 
y: j827 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j711 y: j827  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j880 
y: j845 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j880 y: j845  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v881 
=== Succesors ===
trueSuccessor: v764 
falseSuccessor: v763 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v881 #trueSuccessor: v764 #falseSuccessor: v763  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v768  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j838 
index: j845 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j838 index: j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: v903 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: v903 stateAfter: - lastLocationAccess: - #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid j850 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [2 - 10] ⇊0000000000000002 ⇈000000000000000e
=== Inputs ===
x: j845 
y: j783 
=== Succesors ===
=== Usages ===
j839 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j845 y: j783  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j839 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000e
valueDescription: i64
=== Inputs ===
merge: v748 
values: j850 j845 
=== Succesors ===
=== Usages ===
v960 v884 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v748 values: j850 j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v747 v768 
=== Succesors ===
next: v771 
=== Usages ===
j839 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v747 v768 #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid j883 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j711 
y: j831 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j711 y: j831  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j883 
y: j839 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j883 y: j839  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v884 
=== Succesors ===
trueSuccessor: v770 
falseSuccessor: v769 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v884 #trueSuccessor: v770 #falseSuccessor: v769  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
v770 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v897 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j838 
index: j839 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j838 index: j839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
value: i300 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v960 value: i300 stateAfter: - lastLocationAccess: - #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
v897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v774 
=== Succesors ===
next: a399 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v774 #next: a399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a512 
=== Succesors ===
next: v212 
=== Usages ===
a185 
=== Predecessor ===
v735 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a512 #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
a399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B22" "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v80 
values: i15 i1 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i15 i1  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v80 
values: i77 i10 
=== Succesors ===
=== Usages ===
v147 ?89 ?124 ?138 ?118 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i77 i10  <|@  <|@
f <@~|@floating>@ <|@
tid a185 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v80 
values: a395 a399 
=== Succesors ===
=== Usages ===
?158 ?138 v915 v917 v916 ?124 ?89 a370 v919 ?118 v921 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: a395 a399  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v80 
values: i162 i54 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i162 i54  <|@  <|@
f <@~|@floating>@ <|@
tid i386 <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v80 
values: i385 i300 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i385 i300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v212 
=== Succesors ===
next: i908 
=== Usages ===
i82 i83 a185 i203 i386 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v212 #next: i908  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a185 
index: - 
=== Succesors ===
=== Usages ===
i908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v915 
=== Succesors ===
next: v85 
=== Usages ===
v277 v290 v247 v257 
=== Predecessor ===
v80 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v915 #next: v85  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 402
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a185 
=== Succesors ===
=== Usages ===
?138 ?89 ?153 ?124 ?118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a185  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i155 i324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 i134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 18]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
i908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B68" 
    successors "B46" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607283580267545149
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i82 i169 
=== Succesors ===
=== Usages ===
?89 v91 i122 i173 i108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i82 i169  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i203 i155 
=== Succesors ===
=== Usages ===
?89 i123 i110 i155 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i203 i155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.022505130143644
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v85 
=== Succesors ===
next: v97 
=== Usages ===
i87 i88 v92 v119 v362 v352 v357 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v85 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i90 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 0.9779902031978241
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v92 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v92 #falseSuccessor: v96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 100]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 85]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 76]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 79]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B61" 
    successors "B48" "B63" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i87 i128 
=== Succesors ===
=== Usages ===
?124 i126 i133 ?138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i87 i128  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i88 i134 
=== Succesors ===
=== Usages ===
?124 i134 i324 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i88 i134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.2956111519798075
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v120 
=== Succesors ===
next: v339 
=== Usages ===
i122 i123 v141 v144 v343 v338 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v120 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$146/798809698@44222a75
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 78]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i122 
y: i125 
=== Succesors ===
=== Usages ===
i128 v140 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i122 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 81]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i126 
y: i127 
=== Succesors ===
=== Usages ===
i122 i130 i131 ?138 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i126 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 86]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i128 
y: i129 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i128 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 89]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i128 
y: i19 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i128 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 90]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i130 
y: i131 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i130 y: i131  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 91]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i122 
y: i132 
=== Succesors ===
=== Usages ===
v914 ?138 v235 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i122 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i133 
y: i234 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i133 y: i234  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v235 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v235 #trueSuccessor: v335 #falseSuccessor: v338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
i909 
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 95]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i123 
y: i109 
=== Succesors ===
=== Usages ===
i123 v916 ?138 v247 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i134 
y: i908 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i134 y: i908  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v340 #falseSuccessor: v343  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B61" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: i909 
=== Usages ===
v255 
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i909  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a135 
index: i133 
=== Succesors ===
=== Usages ===
i909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a135 index: i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v335 
address: v914 
=== Succesors ===
next: v255 
=== Usages ===
v255 
=== Predecessor ===
v340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v335 address: v914 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a185 
index: i134 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a185 index: i134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v340 
address: v916 
value: i909 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
i909 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v340 address: v916 value: i909 stateAfter: - lastLocationAccess: - #next: v146  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rethrowException: false
sourceFile: Integer.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: i122 - a185 i128 i133 i134 i83 
=== Succesors ===
=== Usages ===
v321 a554 v346 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: i122 - a185 i128 i133 i134 i83  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
x: i126 
y: i139 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i126 y: i139  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 0.43561384476528986
=== Inputs ===
condition: v140 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v145 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v140 #trueSuccessor: v141 #falseSuccessor: v145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B55" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 113]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid a370 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# [C
=== Inputs ===
value: a185 
=== Succesors ===
=== Usages ===
v584 v626 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a185  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i10 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i83 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 v622 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j614 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j614 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v570 
=== Succesors ===
=== Usages ===
v948 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j614 
index: - 
=== Succesors ===
=== Usages ===
j618 j576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j614 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a554 a598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j630 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j631 j638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 0.9762910671381908
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v148 #falseSuccessor: v149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606968499873607038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j542 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j542 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j558 
=== Usages ===
v942 v943 
=== Predecessor ===
v148 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j558  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j542 
index: - 
=== Succesors ===
=== Usages ===
j558 v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j542 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
=== Succesors ===
next: j559 
=== Usages ===
j631 j564 v951 
=== Predecessor ===
j542 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v942 #next: j559  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j542 
index: - 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j542 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v943 
=== Succesors ===
next: v550 
=== Usages ===
v547 
=== Predecessor ===
j558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v943 #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid j631 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j558 
y: j630 
=== Succesors ===
=== Usages ===
v547 v560 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j558 y: j630  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j559 
y: j631 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j559 y: j631  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v548 
falseSuccessor: v549 
=== Usages ===
=== Predecessor ===
j559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v548 #falseSuccessor: v549  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4576781321191185043
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a554 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a554 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?138 
arguments: v540 i105 i19 
=== Succesors ===
next: j555 
=== Usages ===
j555 
=== Predecessor ===
v548 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?138 arguments: v540 i105 i19 #next: j555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j555 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a554 
=== Succesors ===
next: v565 
=== Usages ===
j564 
=== Predecessor ===
a554 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a554 #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
j555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4606880567070323732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
value: j631 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v942 value: j631 stateAfter: - lastLocationAccess: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j558 
index: - 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j558 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v951 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v951 #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors 
    xhandlers
    flags 
    probability 4606968499873607038
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v562 
values: j558 j555 
=== Succesors ===
=== Usages ===
v945 v944 a367 v952 v953 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v562 values: j558 j555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v563 v565 
=== Succesors ===
next: a367 
=== Usages ===
j564 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v563 v565 #next: a367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a367 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j564 
=== Succesors ===
next: j576 
=== Usages ===
a373 
=== Predecessor ===
v562 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j564 #next: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v948 
=== Succesors ===
next: v577 
=== Usages ===
v577 
=== Predecessor ===
a367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v948 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
value: j576 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
j576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v944 value: j576 stateAfter: - lastLocationAccess: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
value: v635 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v945 value: v635 stateAfter: - lastLocationAccess: - #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
value: a370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v952 value: a370 stateAfter: - lastLocationAccess: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a373 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v953 value: i10 stateAfter: - lastLocationAccess: - #next: a373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a373 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a367 
=== Succesors ===
next: v374 
=== Usages ===
v175 
=== Predecessor ===
v586 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a367 #next: v374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
a373 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v175  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:403) [bci: 47]
stamp: void
=== Inputs ===
result: a373 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a373 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" "B60" 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 121]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i123 
y: i154 
=== Succesors ===
=== Usages ===
v917 v257 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i908 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i324 y: i908  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v257 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v347 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v257 #trueSuccessor: v345 #falseSuccessor: v347  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
v265 
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a185 
index: i324 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a185 index: i324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v345 
address: v917 
value: i386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j587 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v345 address: v917 value: i386 stateAfter: - lastLocationAccess: - #next: j587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j587 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j602 
=== Usages ===
v946 v947 
=== Predecessor ===
v265 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j602  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j587 
index: - 
=== Succesors ===
=== Usages ===
j602 v604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v946 
=== Succesors ===
next: j603 
=== Usages ===
j638 j608 v954 
=== Predecessor ===
j587 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v946 #next: j603  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j587 
index: - 
=== Succesors ===
=== Usages ===
j603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j603 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v947 
=== Succesors ===
next: v595 
=== Usages ===
v592 
=== Predecessor ===
j602 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v947 #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j602 
y: j630 
=== Succesors ===
=== Usages ===
v592 v604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j602 y: j630  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j603 
y: j638 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j603 y: j638  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v592 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v594 
=== Usages ===
=== Predecessor ===
j603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v592 #trueSuccessor: v593 #falseSuccessor: v594  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4552878710457208910
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a598 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a598  <|@  <|@
tid ?153 <|@
d <@d|@=== Debug Properties ===
bci: 130
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rethrowException: false
sourceFile: Integer.java
sourceLine: 465
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: - - - - - - - 
=== Succesors ===
=== Usages ===
a598 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a598 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?153 
arguments: v540 i105 i19 
=== Succesors ===
next: j599 
=== Usages ===
j599 
=== Predecessor ===
v593 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?153 arguments: v540 i105 i19 #next: j599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j599 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a598 
=== Succesors ===
next: v609 
=== Usages ===
j608 
=== Predecessor ===
a598 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a598 #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
j599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4582422236702154134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v946 
value: j638 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v946 value: j638 stateAfter: - lastLocationAccess: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j602 
index: - 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j602 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v954 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v954 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j608 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v606 
values: j602 j599 
=== Succesors ===
=== Usages ===
v950 v949 a377 v955 v956 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v606 values: j602 j599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v607 v609 
=== Succesors ===
next: a377 
=== Usages ===
j608 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v607 v609 #next: a377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a377 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j608 
=== Succesors ===
next: j618 
=== Usages ===
a382 
=== Predecessor ===
v606 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j608 #next: j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v948 
=== Succesors ===
next: v619 
=== Usages ===
v619 
=== Predecessor ===
a377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v948 #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j608 
index: - 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j608 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
value: j618 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
j618 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v949 value: j618 stateAfter: - lastLocationAccess: - #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j608 
index: - 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j608 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v950 
value: v635 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v950 value: v635 stateAfter: - lastLocationAccess: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j608 
index: - 
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j608 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
value: a370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v628 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v955 value: a370 stateAfter: - lastLocationAccess: - #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j608 
index: - 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j608 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a382 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v956 value: i10 stateAfter: - lastLocationAccess: - #next: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a382 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a377 
=== Succesors ===
next: v383 
=== Usages ===
v39 
=== Predecessor ===
v628 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a377 #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
a382 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:403) [bci: 47]
stamp: void
=== Inputs ===
result: a382 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a382 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 258
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?138 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?138  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B47" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4608513488995687104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?138 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?138 #next: v144  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
loopBegin: v121 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -63515
stableDimension: 0
stamp: i32 [-63515] ⇊00000000ffff07e5 ⇈00000000ffff07e5
stampKind: i32
value: int[-63515|0xffffffffffff07e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid i415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -60443
stableDimension: 0
stamp: i32 [-60443] ⇊00000000ffff13e5 ⇈00000000ffff13e5
stampKind: i32
value: int[-60443|0xffffffffffff13e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
v338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-63515 - -60443] ⇊00000000ffff03e5 ⇈00000000ffff17e5
valueDescription: i32
=== Inputs ===
merge: v413 
values: i415 i420 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v413 values: i415 i420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v414 v419 
=== Succesors ===
next: v418 
=== Usages ===
i416 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v414 v419 #next: v418  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 456
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: i122 - a185 - - i123 i83 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: i122 - a185 - - i123 i83  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?124 
actionAndReason: i416 
speculation: a405 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?124 actionAndReason: i416 speculation: a405  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B66" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:445) [bci: 23]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$172/1247663720@32252e3b
stamp: i32
=== Inputs ===
x: i87 
y: i167 
=== Succesors ===
=== Usages ===
i169 i964 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i87 y: i167  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 34]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i173 
y: i102 
=== Succesors ===
=== Usages ===
?118 i87 i101 ?118 i106 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i173 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 30]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 32]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [-2147483648 - 2147483584] ⇈00000000ffffffc0
=== Inputs ===
x: i169 
y: i100 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i169 y: i100  <|@  <|@
f <@~|@floating>@ <|@
tid i963 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32] ⇊00000000ffffffe0 ⇈00000000ffffffe0
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i964 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i964 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i173 
y: i963 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i173 y: i963  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 36]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i101 
y: i964 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i101 y: i964  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 39]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i169 
y: i105 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i169 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 40]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i104 
y: i106 
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i104 y: i106  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 41]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i87 
y: i107 
=== Succesors ===
=== Usages ===
v920 ?118 v267 v918 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i87 y: i107  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i108 
y: i266 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i108 y: i266  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v352 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v349 #falseSuccessor: v352  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B70" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
i911 i910 
=== Predecessor ===
v353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i88 
y: i109 
=== Succesors ===
=== Usages ===
v919 v277 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i908 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i110 y: i908  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v354 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v354 #falseSuccessor: v357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
v285 
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i88 
y: i154 
=== Succesors ===
=== Usages ===
i88 v921 ?118 v290 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i155 
y: i908 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i155 y: i908  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v359 #falseSuccessor: v362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: i910 
=== Usages ===
v298 
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i910  <|@  <|@
f <@~|@floating>@ <|@
tid a111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 52]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: char[100]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a111 
index: i108 
=== Succesors ===
=== Usages ===
i910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: i108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v349 
address: v918 
=== Succesors ===
next: v285 
=== Usages ===
v285 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v349 address: v918 #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a185 
index: i110 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a185 index: i110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v354 
address: v919 
value: i910 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i911 
=== Usages ===
=== Predecessor ===
i910 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v354 address: v919 value: i910 stateAfter: - lastLocationAccess: - #next: i911  <|@  <|@
f <@~|@floating>@ <|@
tid a115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 65]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: char[100]{0, 0, 0, 0, 0, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 0, 0, 0, 0, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a115 
index: i108 
=== Succesors ===
=== Usages ===
i911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a115 index: i108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 70]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v349 
address: v920 
=== Succesors ===
next: v298 
=== Usages ===
v298 
=== Predecessor ===
v285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v349 address: v920 #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a185 
index: i155 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a185 index: i155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v359 
address: v921 
value: i911 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
i911 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v359 address: v921 value: i911 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rethrowException: false
sourceFile: Integer.java
sourceLine: 450
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: i169 - a185 i169 i108 i155 i83 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: i169 - a185 i169 i108 i155 i83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?118 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?118 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i412 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -74523
stableDimension: 0
stamp: i32 [-74523] ⇊00000000fffedce5 ⇈00000000fffedce5
stampKind: i32
value: int[-74523|0xfffffffffffedce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
v362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid i410 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71195
stableDimension: 0
stamp: i32 [-71195] ⇊00000000fffee9e5 ⇈00000000fffee9e5
stampKind: i32
value: int[-71195|0xfffffffffffee9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -68635
stableDimension: 0
stamp: i32 [-68635] ⇊00000000fffef3e5 ⇈00000000fffef3e5
stampKind: i32
value: int[-68635|0xfffffffffffef3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i406 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-74523 - -68635] ⇊00000000fffec0e5 ⇈00000000fffeffe5
valueDescription: i32
=== Inputs ===
merge: v402 
values: i404 i410 i412 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v402 values: i404 i410 i412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v403 v409 v411 
=== Succesors ===
next: v408 
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v403 v409 v411 #next: v408  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 444
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: i87 - a185 - - i88 i83 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: i87 - a185 - - i88 i83  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?89 
actionAndReason: i406 
speculation: a405 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?89 actionAndReason: i406 speculation: a405  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v331  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 226
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?43  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid a405 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 v418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?43 v4 v11 i15 ?72 v46 ?56 i82 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[-2147483648|0xffffffff80000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:398) [bci: 1]
rawvalue: -2147483648
stableDimension: 0
stamp: i32 [-2147483648] ⇊0000000080000000 ⇈0000000080000000
stampKind: i32
value: int[-2147483648|0xffffffff80000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:398) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i3 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:398) [bci: 3]
stamp: void
trueSuccessorProbability: 4.183064861906782E-5
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v5 
falseSuccessor: v6 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v5 #falseSuccessor: v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2f5cdefa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v0|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.183064861906782E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4541297938918195200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:399) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid a8 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:399) [bci: 6]
rawvalue: "-2147483648"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"-2147483648"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:399) [bci: 8]
stamp: void
=== Inputs ===
result: a8 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a8 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-2147483648"] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4607182042023030341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i386 v889 v897 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j832 j883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j793 j850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v903 <|@
result v2|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v891 v898 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j828 j880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j788 j845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
result v3|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v893 v899 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j823 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j824 j877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j476 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j851 j794 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v905 <|@
result v4|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v895 v900 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j820 j874 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v875 j851 v821 j794 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v478 v531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j422 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v474 v528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a447 a508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 38]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 i162 a598 a554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 18]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i131 a554 i54 i68 i486 a598 i423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i455 i515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i425 i487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a44 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 3]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
rawvalue: int[10]{9, 99, 999, 9999, 99999, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[10]{9, 99, 999, 9999, 99999, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v913 v912 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 v225 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 i42 i59 v147 i83 v628 v586 a447 a508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i10 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 10]
stamp: void
trueSuccessorProbability: 0.028538893698111245
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction v3|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v4|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.028538893698111245 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4583882653384436038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - - 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$171/333421669@94108b0
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 14]
stamp: i32
=== Inputs ===
value: i1 
=== Succesors ===
=== Usages ===
v62 ?60 i82 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = NEG v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B5" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4590068489652910860
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i59 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i10 i68 
=== Succesors ===
=== Usages ===
?60 v912 i162 i68 v214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: i10 i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.6279806363998217
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v57 
=== Succesors ===
next: v329 
=== Usages ===
i59 v64 v69 v328 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v57 #next: v329  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?72 
values: i15 i59 
=== Succesors ===
=== Usages ===
v319 a447 v326 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: i15 i59  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i213 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i59 y: i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v325 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v325 #falseSuccessor: v328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590068489652910860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: i906 
=== Usages ===
i906 
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i906  <|@  <|@
f <@~|@floating>@ <|@
tid v912 <|@
result [v6|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a44 
index: i59 
=== Succesors ===
=== Usages ===
i906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i906 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v325 
address: v912 
=== Succesors ===
next: v67 
=== Usages ===
v62 
=== Predecessor ===
v325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v325 address: v912 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i906 
y: i15 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i906 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
trueSuccessorProbability: 0.619479692449355
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
i906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v63 #falseSuccessor: v64  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v6|QWORD[.] + v8|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586856243027280245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?60 #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: i32
=== Inputs ===
x: i59 
y: i19 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
loopBegin: v58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v7|DWORD v8|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v0|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 15] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B6 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: j426 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: j426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j426 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j470 
=== Usages ===
v924 v925 
=== Predecessor ===
v64 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j470  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: - 
=== Succesors ===
=== Usages ===
j470 v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j470 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
=== Succesors ===
next: j471 
=== Usages ===
j430 v926 v927 a446 v932 v928 v929 v930 v931 
=== Predecessor ===
j426 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v924 #next: j471  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: - 
=== Succesors ===
=== Usages ===
j471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j471 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v925 
=== Succesors ===
next: v442 
=== Usages ===
v436 
=== Predecessor ===
j470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v925 #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 19]
stamp: i32
=== Inputs ===
x: i59 
y: i105 
=== Succesors ===
=== Usages ===
j644 i203 v473 i423 a447 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i162 
y: i19 
=== Succesors ===
=== Usages ===
i455 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i162 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i423 
y: i454 
=== Succesors ===
=== Usages ===
i425 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i423 y: i454  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i455 
y: i424 
=== Succesors ===
=== Usages ===
j429 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i455 y: i424  <|@  <|@
f <@~|@floating>@ <|@
tid j429 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i425 
=== Succesors ===
=== Usages ===
j430 v928 v929 v930 v931 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i425  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i64
=== Inputs ===
x: j429 
y: j470 
=== Succesors ===
=== Usages ===
v436 v472 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j429 y: j470  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j471 
y: j430 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j471 y: j430  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v436 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v440 
=== Usages ===
=== Predecessor ===
j471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v436 #trueSuccessor: v441 #falseSuccessor: v440  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4553899900108848711
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a447 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a447 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?60 
arguments: v421 i162 i10 
=== Succesors ===
next: v450 
=== Usages ===
a451 
=== Predecessor ===
v441 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?60 arguments: v421 i162 i10 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
a447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v7|DWORD v8|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v0|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4583800399064675918
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v924 
value: j430 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v440 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v924 value: j430 stateAfter: - lastLocationAccess: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v928 <|@
result [v15|QWORD + v10|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j429 
index: j470 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j429 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v928 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v928 #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v929 <|@
result [v15|QWORD + v10|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j429 
index: j470 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j429 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v929 
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v929 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
result [v15|QWORD + v10|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j429 
index: j470 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j429 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v930 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v930 #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
result [v15|QWORD + v10|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j429 
index: j470 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j429 index: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v931 
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v931 #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
result [v10|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j470 
index: - 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v926 
value: i162 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v926 value: i162 stateAfter: - lastLocationAccess: - #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
result [v10|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j470 
index: - 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v927 
value: j422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v478 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v927 value: j422 stateAfter: - lastLocationAccess: - #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v932 <|@
result [v10|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j470 
index: - 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j470 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v932 
value: v629 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v932 value: v629 stateAfter: - lastLocationAccess: - #next: v445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a446 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a446 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j470 
=== Succesors ===
next: v448 
=== Usages ===
a451 
=== Predecessor ===
v445 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j470 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
a446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a451 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v449 
values: a446 a447 
=== Succesors ===
=== Usages ===
v922 a395 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v449 values: a446 a447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v448 v450 
=== Succesors ===
next: v778 
=== Usages ===
a451 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v448 v450 #next: v778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v689 
=== Usages ===
j780 
=== Predecessor ===
v449 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v922 <|@
result [v19|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a451 
index: - 
=== Succesors ===
=== Usages ===
j780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a451 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j780 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v778 
address: v922 
=== Succesors ===
=== Usages ===
v957 v958 v959 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v778 address: v922  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [v20|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j780 
index: - 
=== Succesors ===
=== Usages ===
v893 v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j644 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i162 
=== Succesors ===
=== Usages ===
j832 j828 j820 j824 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i162  <|@  <|@
f <@~|@floating>@ <|@
tid j820 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j644 
y: j819 
=== Succesors ===
=== Usages ===
v821 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j819  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j820 
y: j365 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j820 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v821 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v687 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v821 #trueSuccessor: v688 #falseSuccessor: v687  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = LEA [v19|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v895 
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v895  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
value: v905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v959 value: v905 stateAfter: - lastLocationAccess: - #next: v676  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v895 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.]], input: v4|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[8|0x8]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j794 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈0000000000000008
valueDescription: i64
=== Inputs ===
merge: v677 
values: j476 j365 
=== Succesors ===
=== Usages ===
v825 j788 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v677 values: j476 j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v676 v692 
=== Succesors ===
next: v695 
=== Usages ===
j794 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v676 v692 #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid j824 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j644 
y: j823 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j823  <|@  <|@
f <@~|@floating>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j824 
y: j794 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j824 y: j794  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v825 
=== Succesors ===
trueSuccessor: v694 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v825 #trueSuccessor: v694 #falseSuccessor: v693  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
value: v904 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v959 value: v904 stateAfter: - lastLocationAccess: - #next: v680  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
v893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.]], input: v3|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[4|0x4]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j788 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈000000000000000c
valueDescription: i64
=== Inputs ===
merge: v681 
values: j799 j794 
=== Succesors ===
=== Usages ===
v958 j793 j781 v829 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v681 values: j799 j794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v680 v698 
=== Succesors ===
next: v701 
=== Usages ===
j788 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v680 v698 #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j644 
y: j827 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j827  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j828 
y: j788 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j828 y: j788  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v829 
=== Succesors ===
trueSuccessor: v700 
falseSuccessor: v699 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v829 #trueSuccessor: v700 #falseSuccessor: v699  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v21|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v704  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
v700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [v20|QWORD[.] + v25|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j780 
index: j788 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: v903 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: v903 stateAfter: - lastLocationAccess: - #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid j793 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [2 - 10] ⇊0000000000000002 ⇈000000000000000e
=== Inputs ===
x: j788 
y: j783 
=== Succesors ===
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j788 y: j783  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
v891 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.] + v25|QWORD * 2], input: v2|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v25|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j781 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000e
valueDescription: i64
=== Inputs ===
merge: v684 
values: j793 j788 
=== Succesors ===
=== Usages ===
v957 v833 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v684 values: j793 j788  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v683 v704 
=== Succesors ===
next: v707 
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v683 v704 #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid j832 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j644 
y: j831 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j644 y: j831  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j832 
y: j781 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j832 y: j781  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v833 
=== Succesors ===
trueSuccessor: v706 
falseSuccessor: v705 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v833 #trueSuccessor: v706 #falseSuccessor: v705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = DEC v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v710  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
v706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
result [v20|QWORD[.] + v28|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j780 
index: j781 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
value: i300 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 value: i300 stateAfter: - lastLocationAccess: - #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
v889 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v28|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v686 v710 
=== Succesors ===
next: a395 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v686 v710 #next: a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a395 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a451 
=== Succesors ===
next: v81 
=== Usages ===
a185 
=== Predecessor ===
v670 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a451 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i385 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i386 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result int[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:439) [bci: 10]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
a395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD, int[45|0x2d], v19|QWORD[.], v11|DWORD, short[45|0x2d]] destination: B22 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 215
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 15]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -55067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v7|DWORD v8|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v0|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606924997273779963
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:400) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v40  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - - 
=== Succesors ===
=== Usages ===
?43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B26" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612930980410844842
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i42 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v41 
values: i10 i54 
=== Succesors ===
=== Usages ===
?43 v913 i54 v225 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v41 values: i10 i54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.6279806363998217
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v40 
=== Succesors ===
next: v334 
=== Usages ===
i42 v48 v53 v333 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v40 #next: v334  <|@  <|@
tid ?43 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.stringSize(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 473
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: i1 i42 
=== Succesors ===
=== Usages ===
v318 a508 v331 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: i1 i42  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i213 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i42 y: i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v225 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v333 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v225 #trueSuccessor: v330 #falseSuccessor: v333  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612930980410844842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i907 
=== Usages ===
i907 
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i907  <|@  <|@
f <@~|@floating>@ <|@
tid v913 <|@
result [v6|QWORD[.] + v30|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a44 
index: i42 
=== Succesors ===
=== Usages ===
i907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a44 index: i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i907 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v330 
address: v913 
=== Succesors ===
next: v51 
=== Usages ===
v46 
=== Predecessor ===
v330 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v330 address: v913 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i907 
y: i1 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i907 y: i1  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 13]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: i32
=== Inputs ===
x: i42 
y: i19 
=== Succesors ===
=== Usages ===
i203 j711 i42 v527 i486 a508 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i42 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 8]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
trueSuccessorProbability: 0.619479692449355
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v48 
=== Usages ===
=== Predecessor ===
i907 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v47 #falseSuccessor: v48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v0|DWORD, y: [v6|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609801053530050007
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:472) [bci: 15]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?43 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?43 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
loopBegin: v41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v0|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v0|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 24] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B27 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:474) [bci: 11]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: j488 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j488 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j524 
=== Usages ===
v933 v934 
=== Predecessor ===
v48 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j524  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j488 
index: - 
=== Succesors ===
=== Usages ===
j524 v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j488 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v933 
=== Succesors ===
next: j525 
=== Usages ===
j492 v935 v936 a507 v941 v937 v938 v939 v940 
=== Predecessor ===
j488 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v933 #next: j525  <|@  <|@
f <@~|@floating>@ <|@
tid v934 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j488 
index: - 
=== Succesors ===
=== Usages ===
j525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j488 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j525 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v934 
=== Succesors ===
next: v503 
=== Usages ===
v497 
=== Predecessor ===
j524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v934 #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i54 
y: i19 
=== Succesors ===
=== Usages ===
i515 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i54 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i486 
y: i454 
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i486 y: i454  <|@  <|@
f <@~|@floating>@ <|@
tid i487 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i515 
y: i424 
=== Succesors ===
=== Usages ===
j491 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i515 y: i424  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i487 
=== Succesors ===
=== Usages ===
j492 v937 v938 v939 v940 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i487  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: i64
=== Inputs ===
x: j491 
y: j524 
=== Succesors ===
=== Usages ===
v497 v526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j491 y: j524  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j525 
y: j492 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j525 y: j492  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v502 
falseSuccessor: v501 
=== Usages ===
=== Predecessor ===
j525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v502 #falseSuccessor: v501  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA [v33|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = AND v34|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v35|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4576753479527295714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a508 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a508 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?43 
arguments: v421 i54 i10 
=== Succesors ===
next: v511 
=== Usages ===
a512 
=== Predecessor ===
v502 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?43 arguments: v421 i54 i10 #next: v511  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
a508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v0|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v0|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606837499496494926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v933 
value: j492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v933 value: j492 stateAfter: - lastLocationAccess: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
result [v36|QWORD + v32|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j491 
index: j524 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v937 
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v526 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v937 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
result [v36|QWORD + v32|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j491 
index: j524 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v938 
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v938 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
result [v36|QWORD + v32|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j491 
index: j524 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v939 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v939 #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
result [v36|QWORD + v32|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j491 
index: j524 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j491 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
address: v940 
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v940 #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
result [v32|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v935 
value: i54 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v935 value: i54 stateAfter: - lastLocationAccess: - #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
result [v32|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v936 
value: j422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v936 value: j422 stateAfter: - lastLocationAccess: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
result [v32|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
value: v629 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v941 value: v629 stateAfter: - lastLocationAccess: - #next: v506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a507 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a507 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j524 
=== Succesors ===
next: v509 
=== Usages ===
a512 
=== Predecessor ===
v506 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j524 #next: v509  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
a507 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a512 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v510 
values: a507 a508 
=== Succesors ===
=== Usages ===
v923 a399 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v510 values: a507 a508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toString(Integer.java:401) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v509 v511 
=== Succesors ===
next: v836 
=== Usages ===
a512 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v509 v511 #next: v836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v753 
=== Usages ===
j838 
=== Predecessor ===
v510 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v753  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
result [v40|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a512 
index: - 
=== Succesors ===
=== Usages ===
j838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a512 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v836 
address: v923 
=== Succesors ===
=== Usages ===
v960 v961 v962 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v836 address: v923  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [v41|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j838 
index: - 
=== Succesors ===
=== Usages ===
v899 v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j838 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j711 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i54 
=== Succesors ===
=== Usages ===
j883 j880 j874 j877 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i54  <|@  <|@
f <@~|@floating>@ <|@
tid j874 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j711 
y: j819 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j711 y: j819  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j874 
y: j365 
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j874 y: j365  <|@  <|@
f <@*|@fixed>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v752 
falseSuccessor: v751 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v752 #falseSuccessor: v751  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v40|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v756  <|@  <|@
f <@*|@fixed>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
v752 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: v905 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v741 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: v905 stateAfter: - lastLocationAccess: - #next: v741  <|@  <|@
f <@*|@fixed>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
v900 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.]], input: v4|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[8|0x8]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j851 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈0000000000000008
valueDescription: i64
=== Inputs ===
merge: v742 
values: j476 j365 
=== Succesors ===
=== Usages ===
v878 j845 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v742 values: j476 j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v741 v756 
=== Succesors ===
next: v759 
=== Usages ===
j851 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v741 v756 #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid j877 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j711 
y: j823 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j711 y: j823  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j877 
y: j851 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j877 y: j851  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v878 
=== Succesors ===
trueSuccessor: v758 
falseSuccessor: v757 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v878 #trueSuccessor: v758 #falseSuccessor: v757  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
v758 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
value: v904 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v962 value: v904 stateAfter: - lastLocationAccess: - #next: v744  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.]], input: v3|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[4|0x4]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j845 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈000000000000000c
valueDescription: i64
=== Inputs ===
merge: v745 
values: j799 j851 
=== Succesors ===
=== Usages ===
v961 j850 j839 v881 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v745 values: j799 j851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v744 v762 
=== Succesors ===
next: v765 
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v744 v762 #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid j880 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j711 
y: j827 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j711 y: j827  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j880 
y: j845 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j880 y: j845  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v881 
=== Succesors ===
trueSuccessor: v764 
falseSuccessor: v763 
=== Usages ===
=== Predecessor ===
v745 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v881 #trueSuccessor: v764 #falseSuccessor: v763  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v42|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v768  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v41|QWORD[.] + v46|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j838 
index: j845 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j838 index: j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: v903 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: v903 stateAfter: - lastLocationAccess: - #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid j850 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [2 - 10] ⇊0000000000000002 ⇈000000000000000e
=== Inputs ===
x: j845 
y: j783 
=== Succesors ===
=== Usages ===
j839 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j845 y: j783  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v748 
=== Predecessor ===
v898 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.] + v46|QWORD * 2], input: v2|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v46|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j839 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000e
valueDescription: i64
=== Inputs ===
merge: v748 
values: j850 j845 
=== Succesors ===
=== Usages ===
v960 v884 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v748 values: j850 j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v747 v768 
=== Succesors ===
next: v771 
=== Usages ===
j839 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v747 v768 #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid j883 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j711 
y: j831 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j711 y: j831  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j883 
y: j839 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j883 y: j839  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v884 
=== Succesors ===
trueSuccessor: v770 
falseSuccessor: v769 
=== Usages ===
=== Predecessor ===
v748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v884 #trueSuccessor: v770 #falseSuccessor: v769  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = DEC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
v770 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v897 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
result [v41|QWORD[.] + v49|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j838 
index: j839 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j838 index: j839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
value: i300 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v960 value: i300 stateAfter: - lastLocationAccess: - #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
v897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[.] + v49|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v774 
=== Succesors ===
next: a399 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v774 #next: a399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a399 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:401) [bci: 29]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a512 
=== Succesors ===
next: v212 
=== Usages ===
a185 
=== Predecessor ===
v735 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a512 #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
a399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|DWORD, int[0|0x0], v40|QWORD[.], v31|DWORD, short[0|0x0]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B22" "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i82 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v80 
values: i15 i1 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i15 i1  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [0 - 45] ⇈000000000000002d
valueDescription: i32
=== Inputs ===
merge: v80 
values: i77 i10 
=== Succesors ===
=== Usages ===
v147 ?89 ?124 ?138 ?118 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i77 i10  <|@  <|@
f <@~|@floating>@ <|@
tid a185 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v80 
values: a395 a399 
=== Succesors ===
=== Usages ===
?158 ?138 v915 v917 v916 ?124 ?89 a370 v919 ?118 v921 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: a395 a399  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v80 
values: i162 i54 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i162 i54  <|@  <|@
f <@~|@floating>@ <|@
tid i386 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i16 [0 - 45] ⇈000000000000002d
valueDescription: i16
=== Inputs ===
merge: v80 
values: i385 i300 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v80 values: i385 i300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v212 
=== Succesors ===
next: i908 
=== Usages ===
i82 i83 a185 i203 i386 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v212 #next: i908  <|@  <|@
f <@~|@floating>@ <|@
tid v915 <|@
result [v53|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a185 
index: - 
=== Succesors ===
=== Usages ===
i908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a185 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i908 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v915 
=== Succesors ===
next: v85 
=== Usages ===
v277 v290 v247 v257 
=== Predecessor ===
v80 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v915 #next: v85  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<Integer.toString(int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 402
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a185 
=== Succesors ===
=== Usages ===
?138 ?89 ?153 ?124 ?118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a185  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i155 i324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 i134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result int[65536|0x10000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 18]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536] ⇊0000000000010000 ⇈0000000000010000
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
i908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|DWORD, v53|QWORD[.], v54|DWORD, v55|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v53|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v54|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B68" 
    successors "B46" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607283580267545149
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i82 i169 
=== Succesors ===
=== Usages ===
?89 v91 i122 i173 i108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i82 i169  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i203 i155 
=== Succesors ===
=== Usages ===
?89 i123 i110 i155 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i203 i155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.022505130143644
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v85 
=== Succesors ===
next: v97 
=== Usages ===
i87 i88 v92 v119 v362 v352 v357 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v85 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i90 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 20]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 0.9779902031978241
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v92 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v92 #falseSuccessor: v96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD, v58|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
result int[-524288|0xfffffffffff80000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: -524288
stableDimension: 0
stamp: i32 [-524288] ⇊00000000fff80000 ⇈00000000fff80000
stampKind: i32
value: int[-524288|0xfffffffffff80000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 100]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 85]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result int[52429|0xcccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 76]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 52429
stableDimension: 0
stamp: i32 [52429] ⇊000000000000cccd ⇈000000000000cccd
stampKind: i32
value: int[52429|0xcccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result int[19|0x13] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 79]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 19
stableDimension: 0
stamp: i32 [19] ⇊0000000000000013 ⇈0000000000000013
stampKind: i32
value: int[19|0x13]
=== Inputs ===
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result int[36|0x24] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 36
stableDimension: 0
stamp: i32 [36] ⇊0000000000000024 ⇈0000000000000024
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD, v58|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B61" 
    successors "B48" "B63" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i122 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i87 i128 
=== Succesors ===
=== Usages ===
?124 i126 i133 ?138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i87 i128  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i88 i134 
=== Succesors ===
=== Usages ===
?124 i134 i324 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i88 i134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.2956111519798075
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v120 
=== Succesors ===
next: v339 
=== Usages ===
i122 i123 v141 v144 v343 v338 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v120 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$146/798809698@44222a75
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 78]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i122 
y: i125 
=== Succesors ===
=== Usages ===
i128 v140 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i122 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 81]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [0 - 8191] ⇈0000000000001fff
=== Inputs ===
x: i126 
y: i127 
=== Succesors ===
=== Usages ===
i122 i130 i131 ?138 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i126 y: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 86]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [0 - 65528] ⇈000000000000fff8
=== Inputs ===
x: i128 
y: i129 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i128 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 89]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [0 - 16382] ⇈0000000000003ffe
=== Inputs ===
x: i128 
y: i19 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i128 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 90]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [0 - 81910] ⇈000000000001fffe
=== Inputs ===
x: i130 
y: i131 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i130 y: i131  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:457) [bci: 91]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i122 
y: i132 
=== Succesors ===
=== Usages ===
v914 ?138 v235 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i122 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i133 
y: i234 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i133 y: i234  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v235 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v235 #trueSuccessor: v335 #falseSuccessor: v338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = IMUL v60|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SHR v62|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SHL v63|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = ADD (x: v64|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = SUB (x: v60|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
i909 
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 95]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i123 
y: i109 
=== Succesors ===
=== Usages ===
i123 v916 ?138 v247 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i134 
y: i908 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i134 y: i908  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v340 #falseSuccessor: v343  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B61" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: i909 
=== Usages ===
v255 
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i909  <|@  <|@
f <@~|@floating>@ <|@
tid v914 <|@
result [v59|QWORD[.] + v67|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a135 
index: i133 
=== Succesors ===
=== Usages ===
i909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a135 index: i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i909 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v335 
address: v914 
=== Succesors ===
next: v255 
=== Usages ===
v255 
=== Predecessor ===
v340 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v335 address: v914 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid v916 <|@
result [v53|QWORD[.] + v68|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a185 
index: i134 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a185 index: i134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v340 
address: v916 
value: i909 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
i909 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v340 address: v916 value: i909 stateAfter: - lastLocationAccess: - #next: v146  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rethrowException: false
sourceFile: Integer.java
sourceLine: 459
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: i122 - a185 i128 i133 i134 i83 
=== Succesors ===
=== Usages ===
v321 a554 v346 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: i122 - a185 i128 i133 i134 i83  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
x: i126 
y: i139 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i126 y: i139  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 110]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 0.43561384476528986
=== Inputs ===
condition: v140 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v145 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v140 #trueSuccessor: v141 #falseSuccessor: v145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVSX [v59|QWORD[.] + v67|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v68|DWORD * 2 + 16], y: v69|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v62|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B55" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:460) [bci: 113]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid a370 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# [C
=== Inputs ===
value: a185 
=== Succesors ===
=== Usages ===
v584 v626 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a185  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i10 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i83 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 v622 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j614 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j614 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v570 
=== Succesors ===
=== Usages ===
v948 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
result [v71|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j614 
index: - 
=== Succesors ===
=== Usages ===
j618 j576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j614 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a554 a598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j630 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j631 j638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:462) [bci: 118]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 0.9762910671381908
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v148 #falseSuccessor: v149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = COMPRESSPOINTER (input: v53|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@deb9674 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606968499873607038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:465) [bci: 130]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: j542 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j542 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j558 
=== Usages ===
v942 v943 
=== Predecessor ===
v148 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j558  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j542 
index: - 
=== Succesors ===
=== Usages ===
j558 v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j542 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j558 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
=== Succesors ===
next: j559 
=== Usages ===
j631 j564 v951 
=== Predecessor ===
j542 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v942 #next: j559  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j542 
index: - 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j542 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j559 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v943 
=== Succesors ===
next: v550 
=== Usages ===
v547 
=== Predecessor ===
j558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v943 #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid j631 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j558 
y: j630 
=== Succesors ===
=== Usages ===
v547 v560 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j558 y: j630  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j559 
y: j631 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j559 y: j631  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v548 
falseSuccessor: v549 
=== Usages ===
=== Predecessor ===
j559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v548 #falseSuccessor: v549  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v73|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4576781321191185043
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a554 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a554 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?138 
arguments: v540 i105 i19 
=== Succesors ===
next: j555 
=== Usages ===
j555 
=== Predecessor ===
v548 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?138 arguments: v540 i105 i19 #next: j555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j555 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a554 
=== Succesors ===
next: v565 
=== Usages ===
j564 
=== Predecessor ===
a554 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a554 #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
j555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v60|DWORD - v53|QWORD[.] v63|DWORD v67|DWORD v68|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4606880567070323732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
value: j631 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v942 value: j631 stateAfter: - lastLocationAccess: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
result [v73|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j558 
index: - 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j558 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v951 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v951 #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v73|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors 
    xhandlers
    flags 
    probability 4606968499873607038
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j564 <|@
result v76|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v562 
values: j558 j555 
=== Succesors ===
=== Usages ===
v945 v944 a367 v952 v953 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v562 values: j558 j555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v563 v565 
=== Succesors ===
next: a367 
=== Usages ===
j564 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v563 v565 #next: a367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a367 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j564 
=== Succesors ===
next: j576 
=== Usages ===
a373 
=== Predecessor ===
v562 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j564 #next: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j576 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v948 
=== Succesors ===
next: v577 
=== Usages ===
v577 
=== Predecessor ===
a367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v948 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
result [v76|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v944 
value: j576 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
j576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v944 value: j576 stateAfter: - lastLocationAccess: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
result [v76|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
value: v635 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v945 value: v635 stateAfter: - lastLocationAccess: - #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
result [v76|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
value: a370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v952 value: a370 stateAfter: - lastLocationAccess: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
result [v76|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a373 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v953 value: i10 stateAfter: - lastLocationAccess: - #next: a373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a373 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a367 
=== Succesors ===
next: v374 
=== Usages ===
v175 
=== Predecessor ===
v586 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a367 #next: v374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
a373 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v175  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:403) [bci: 47]
stamp: void
=== Inputs ===
result: a373 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a373 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE v76|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOV [v71|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*]], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v76|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*] + 12], y: v70|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" "B60" 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 121]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 122]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i123 
y: i154 
=== Succesors ===
=== Usages ===
v917 v257 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i908 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i324 y: i908  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v257 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v347 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v257 #trueSuccessor: v345 #falseSuccessor: v347  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA [v61|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
v265 
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
result [v53|QWORD[.] + v79|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a185 
index: i324 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a185 index: i324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v345 
address: v917 
value: i386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j587 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v345 address: v917 value: i386 stateAfter: - lastLocationAccess: - #next: j587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j587 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j602 
=== Usages ===
v946 v947 
=== Predecessor ===
v265 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j602  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j587 
index: - 
=== Succesors ===
=== Usages ===
j602 v604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j602 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v946 
=== Succesors ===
next: j603 
=== Usages ===
j638 j608 v954 
=== Predecessor ===
j587 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v946 #next: j603  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j587 
index: - 
=== Succesors ===
=== Usages ===
j603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j587 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j603 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v947 
=== Succesors ===
next: v595 
=== Usages ===
v592 
=== Predecessor ===
j602 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v947 #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j602 
y: j630 
=== Succesors ===
=== Usages ===
v592 v604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j602 y: j630  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j603 
y: j638 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j603 y: j638  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v592 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v594 
=== Usages ===
=== Predecessor ===
j603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v592 #trueSuccessor: v593 #falseSuccessor: v594  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v79|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v80|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4552878710457208910
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a598 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a598  <|@  <|@
tid ?153 <|@
d <@d|@=== Debug Properties ===
bci: 130
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rethrowException: false
sourceFile: Integer.java
sourceLine: 465
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: - - - - - - - 
=== Succesors ===
=== Usages ===
a598 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a598 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?153 
arguments: v540 i105 i19 
=== Succesors ===
next: j599 
=== Usages ===
j599 
=== Predecessor ===
v593 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?153 arguments: v540 i105 i19 #next: j599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j599 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a598 
=== Succesors ===
next: v609 
=== Usages ===
j608 
=== Predecessor ===
a598 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a598 #next: v609  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
j599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:465) [bci: 130]
locals: - - - - - - - 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD[.]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4582422236702154134
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v946 
value: j638 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v946 value: j638 stateAfter: - lastLocationAccess: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result [v80|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j602 
index: - 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j602 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v954 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v954 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v80|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j608 <|@
result v83|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v606 
values: j602 j599 
=== Succesors ===
=== Usages ===
v950 v949 a377 v955 v956 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v606 values: j602 j599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v607 v609 
=== Succesors ===
next: a377 
=== Usages ===
j608 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v607 v609 #next: a377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a377 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j608 
=== Succesors ===
next: j618 
=== Usages ===
a382 
=== Predecessor ===
v606 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j608 #next: j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j618 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v948 
=== Succesors ===
next: v619 
=== Usages ===
v619 
=== Predecessor ===
a377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v948 #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
result [v83|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j608 
index: - 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j608 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
value: j618 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
j618 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v949 value: j618 stateAfter: - lastLocationAccess: - #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
result [v83|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j608 
index: - 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j608 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v950 
value: v635 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v626 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v950 value: v635 stateAfter: - lastLocationAccess: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
result [v83|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j608 
index: - 
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j608 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
value: a370 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v628 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v955 value: a370 stateAfter: - lastLocationAccess: - #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
result [v83|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j608 
index: - 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j608 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a382 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v956 value: i10 stateAfter: - lastLocationAccess: - #next: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a382 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a377 
=== Succesors ===
next: v383 
=== Usages ===
v39 
=== Predecessor ===
v628 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a377 #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
a382 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toString(Integer.java:403) [bci: 47]
stamp: void
=== Inputs ===
result: a382 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a382 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v71|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD[*]], y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v83|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD[*] + 12], y: v70|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 258
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:463) [bci: 129]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?138 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -66075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v60|DWORD - v53|QWORD[.] v63|DWORD v67|DWORD v68|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:107, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B47" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4608513488995687104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?138 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?138 #next: v144  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:456) [bci: 75]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
loopBegin: v121 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v60|DWORD - v53|QWORD[.] v63|DWORD v67|DWORD v68|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD, v68|DWORD] destination: B61 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 106]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result int[-63515|0xffffffffffff07e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -63515
stableDimension: 0
stamp: i32 [-63515] ⇊00000000ffff07e5 ⇈00000000ffff07e5
stampKind: i32
value: int[-63515|0xffffffffffff07e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-63515|0xffffffffffff07e5]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:458) [bci: 105]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid i415 <|@
result int[-60443|0xffffffffffff13e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -60443
stableDimension: 0
stamp: i32 [-60443] ⇊00000000ffff13e5 ⇈00000000ffff13e5
stampKind: i32
value: int[-60443|0xffffffffffff13e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
v338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-60443|0xffffffffffff13e5]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i416 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-63515 - -60443] ⇊00000000ffff03e5 ⇈00000000ffff17e5
valueDescription: i32
=== Inputs ===
merge: v413 
values: i415 i420 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v413 values: i415 i420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v414 v419 
=== Succesors ===
next: v418 
=== Usages ===
i416 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v414 v419 #next: v418  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 75
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 456
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: i122 - a185 - - i123 i83 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: i122 - a185 - - i123 i83  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?124 
actionAndReason: i416 
speculation: a405 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?124 actionAndReason: i416 speculation: a405  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: v60|DWORD - v53|QWORD[.] - - v61|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:75, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B66" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:445) [bci: 23]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
result int[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$172/1247663720@32252e3b
stamp: i32
=== Inputs ===
x: i87 
y: i167 
=== Succesors ===
=== Usages ===
i169 i964 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i87 y: i167  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 34]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i173 
y: i102 
=== Succesors ===
=== Usages ===
?118 i87 i101 ?118 i106 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i173 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 30]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 32]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [-2147483648 - 2147483584] ⇈00000000ffffffc0
=== Inputs ===
x: i169 
y: i100 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i169 y: i100  <|@  <|@
f <@~|@floating>@ <|@
tid i963 <|@
result int[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: -32
stableDimension: 0
stamp: i32 [-32] ⇊00000000ffffffe0 ⇈00000000ffffffe0
stampKind: i32
value: int[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i964 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i964 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 35]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i173 
y: i963 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i173 y: i963  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 36]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i101 
y: i964 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i101 y: i964  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 39]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i169 
y: i105 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i169 y: i105  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 40]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i104 
y: i106 
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i104 y: i106  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:447) [bci: 41]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i87 
y: i107 
=== Succesors ===
=== Usages ===
v920 ?118 v267 v918 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i87 y: i107  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i108 
y: i266 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i108 y: i266  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v352 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v349 #falseSuccessor: v352  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SAR v88|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHL v89|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = AND v88|DWORD y: -32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v90|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SHL v89|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = ADD (x: v92|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SUB (x: v57|DWORD, ~y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B70" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
i911 i910 
=== Predecessor ===
v353 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 47]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i88 
y: i109 
=== Succesors ===
=== Usages ===
v919 v277 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i109  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i908 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i110 y: i908  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v354 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v354 #falseSuccessor: v357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
v285 
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 60]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: i32
=== Inputs ===
x: i88 
y: i154 
=== Succesors ===
=== Usages ===
i88 v921 ?118 v290 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i154  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i155 
y: i908 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i155 y: i908  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v290 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v290 #trueSuccessor: v359 #falseSuccessor: v362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = LEA [v58|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: i910 
=== Usages ===
v298 
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i910  <|@  <|@
f <@~|@floating>@ <|@
tid a111 <|@
result v98|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 52]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: char[100]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
result [v98|QWORD[.] + v95|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a111 
index: i108 
=== Succesors ===
=== Usages ===
i910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a111 index: i108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i910 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v349 
address: v918 
=== Succesors ===
next: v285 
=== Usages ===
v285 
=== Predecessor ===
v359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v349 address: v918 #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v919 <|@
result [v53|QWORD[.] + v96|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a185 
index: i110 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a185 index: i110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v354 
address: v919 
value: i910 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i911 
=== Usages ===
=== Predecessor ===
i910 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v354 address: v919 value: i910 stateAfter: - lastLocationAccess: - #next: i911  <|@  <|@
f <@~|@floating>@ <|@
tid a115 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 65]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rawvalue: char[100]{0, 0, 0, 0, 0, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[100]{0, 0, 0, 0, 0, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
result [v100|QWORD[.] + v95|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a115 
index: i108 
=== Succesors ===
=== Usages ===
i911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a115 index: i108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i911 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 70]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v349 
address: v920 
=== Succesors ===
next: v298 
=== Usages ===
v298 
=== Predecessor ===
v285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v349 address: v920 #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v921 <|@
result [v53|QWORD[.] + v97|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a185 
index: i155 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a185 index: i155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v359 
address: v921 
value: i911 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
i911 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v359 address: v921 value: i911 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
rethrowException: false
sourceFile: Integer.java
sourceLine: 450
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: i169 - a185 i169 i108 i155 i83 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: i169 - a185 i169 i108 i155 i83  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?118 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?118 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:444) [bci: 17]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVSX [v98|QWORD[.] + v95|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v96|DWORD * 2 + 16], y: v99|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVSX [v100|QWORD[.] + v95|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v97|DWORD * 2 + 16], y: v101|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: v89|DWORD - v53|QWORD[.] v89|DWORD v95|DWORD v97|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|DWORD, v97|DWORD] destination: B68 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:450) [bci: 71]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i412 <|@
result int[-74523|0xfffffffffffedce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -74523
stableDimension: 0
stamp: i32 [-74523] ⇊00000000fffedce5 ⇈00000000fffedce5
stampKind: i32
value: int[-74523|0xfffffffffffedce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
v362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-74523|0xfffffffffffedce5]] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 58]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid i410 <|@
result int[-71195|0xfffffffffffee9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71195
stableDimension: 0
stamp: i32 [-71195] ⇊00000000fffee9e5 ⇈00000000fffee9e5
stampKind: i32
value: int[-71195|0xfffffffffffee9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71195|0xfffffffffffee9e5]] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.getChars(Integer.java:449) [bci: 57]
at java.lang.Integer.toString(Integer.java:402) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
result int[-68635|0xfffffffffffef3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -68635
stableDimension: 0
stamp: i32 [-68635] ⇊00000000fffef3e5 ⇈00000000fffef3e5
stampKind: i32
value: int[-68635|0xfffffffffffef3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-68635|0xfffffffffffef3e5]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i406 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-74523 - -68635] ⇊00000000fffec0e5 ⇈00000000fffeffe5
valueDescription: i32
=== Inputs ===
merge: v402 
values: i404 i410 i412 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v402 values: i404 i410 i412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v403 v409 v411 
=== Succesors ===
next: v408 
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v403 v409 v411 #next: v408  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Integer.getChars(int, int, char[])>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 444
stackSize: 0
=== Inputs ===
outerFrameState: ?158 
values: i87 - a185 - - i88 i83 
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?158 values: i87 - a185 - - i88 i83  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?89 
actionAndReason: i406 
speculation: a405 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?89 actionAndReason: i406 speculation: a405  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: v57|DWORD - v53|QWORD[.] - - v58|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:17, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v331  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 226
nodeSourcePosition: at java.lang.Integer.stringSize(Integer.java:473) [bci: 7]
at java.lang.Integer.toString(Integer.java:400) [bci: 24]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -57883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v0|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v0|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 24] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2f5cdefa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v0|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 4.183064861906782E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4607182042023030341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v0|DWORD, y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.028538893698111245 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606924997273779963
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612930980410844842
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v0|DWORD, y: [v6|QWORD[.] + v30|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609801053530050007
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v0|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v0|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 24] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|DWORD] destination: B27 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B26" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612930980410844842
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v30|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA [v33|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = AND v34|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v35|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606837499496494926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v36|QWORD + v32|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v32|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v40|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v43|QWORD, y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.]], input: v107|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[8|0x8]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.]], input: v105|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[4|0x4]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v42|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v41|QWORD[.] + v46|QWORD * 2], input: v103|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v46|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = DEC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[.] + v49|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|DWORD, int[0|0x0], v40|QWORD[.], v31|DWORD, short[0|0x0]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B22" "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|DWORD, v53|QWORD[.], v54|DWORD, v55|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v53|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v54|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B66" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SAR v88|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHL v89|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = AND v88|DWORD y: -32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v90|DWORD, y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SHL v89|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = ADD (x: v92|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = SUB (x: v57|DWORD, ~y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v95|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B70" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = LEA [v58|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVSX [v98|QWORD[.] + v95|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v96|DWORD * 2 + 16], y: v99|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVSX [v100|QWORD[.] + v95|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v97|DWORD * 2 + 16], y: v101|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: v89|DWORD - v53|QWORD[.] v89|DWORD v95|DWORD v97|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|DWORD, v97|DWORD] destination: B68 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B68" 
    successors "B46" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607283580267545149
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD, v58|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: 65536 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|DWORD, v58|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = DEC v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B61" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVSX [v59|QWORD[.] + v67|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v68|DWORD * 2 + 16], y: v69|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v62|DWORD y: -524288 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B47" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4608513488995687104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v60|DWORD - v53|QWORD[.] v63|DWORD v67|DWORD v68|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 35] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD, v68|DWORD] destination: B61 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B61" 
    successors "B48" "B63" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = IMUL v60|DWORD y: 52429 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SHR v62|DWORD y: 19 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = SHL v63|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = ADD (x: v64|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = SUB (x: v60|DWORD, ~y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: 36 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B55" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = COMPRESSPOINTER (input: v53|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@deb9674 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v52|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606968499873607038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v73|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4606880567070323732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v73|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors 
    xhandlers
    flags 
    probability 4606968499873607038
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE v76|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOV [v71|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*]], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v76|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*] + 12], y: v70|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4583882653384436038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = NEG v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590068489652910860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v6|QWORD[.] + v8|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586856243027280245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v7|DWORD v8|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v0|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 15] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B6 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B5" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4590068489652910860
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v8|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4583800399064675918
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = LEA [v19|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.]], input: v108|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[8|0x8]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.]], input: v106|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[4|0x4]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v21|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v20|QWORD[.] + v25|QWORD * 2], input: v104|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v25|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = DEC v21|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v28|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD, int[45|0x2d], v19|QWORD[.], v11|DWORD, short[45|0x2d]] destination: B22 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" "B60" 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA [v61|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v79|DWORD * 2 + 16], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v80|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v81|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4582422236702154134
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v80|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE v83|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v71|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD[*]], y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v83|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD[*] + 12], y: v70|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v83|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4576781321191185043
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v112|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v60|DWORD - v53|QWORD[.] v63|DWORD v67|DWORD v68|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4576753479527295714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v0|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v0|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4553899900108848711
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v110|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v7|DWORD v8|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v0|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4552878710457208910
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v111|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:465) [bci: 130]
locals: - - - - - - - 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD[.]] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4541297938918195200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-2147483648"] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-63515|0xffffffffffff07e5]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: v60|DWORD - v53|QWORD[.] - - v61|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:75, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -57883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v0|DWORD v30|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: v0|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -55067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: v7|DWORD v8|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: v0|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -66075 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: v60|DWORD - v53|QWORD[.] v63|DWORD v67|DWORD v68|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:107, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-60443|0xffffffffffff13e5]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-68635|0xfffffffffffef3e5]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: v57|DWORD - v53|QWORD[.] - - v58|DWORD v52|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - v53|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:17, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71195|0xfffffffffffee9e5]] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-74523|0xfffffffffffedce5]] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: ldc           #15         // -2147483648
     3: if_icmpne     9
     6: ldc           #16         // "-2147483648"
     8: areturn       
     9: iload_0       
    10: ifge          23
    13: iload_0       
    14: ineg          
    15: invokestatic  #10         // stringSize:(int)int
    18: iconst_1      
    19: iadd          
    20: goto          27
    23: iload_0       
    24: invokestatic  #10         // stringSize:(int)int
    27: istore_1      
    28: iload_1       
    29: newarray      char
    31: astore_2      
    32: iload_0       
    33: iload_1       
    34: aload_2       
    35: invokestatic  #11         // getChars:(int, int, char[])void
    38: new           #6          // java.lang.String
    41: dup           
    42: aload_2       
    43: iconst_1      
    44: invokespecial #9          // java.lang.String.<init>:(char[], boolean)void
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2f5cdefa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction CMP r13|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 4.183064861906782E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4607182042023030341
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   22  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.028538893698111245 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606924997273779963
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612930980410844842
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  238  <|@ instruction r10|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMP (x: r13|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609801053530050007
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 24] <|@ <|@
      nr  248  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B27 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B26" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612930980410844842
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  232  <|@ instruction CMP r14|DWORD y: 10 size: DWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  256  <|@ instruction rdx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606837499496494926
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  292  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  296  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  298  <|@ instruction MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  314  <|@ instruction rcx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  330  <|@ instruction J (address: [rdx|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE input: long[8|0x8] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  352  <|@ instruction J (address: [rdx|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  354  <|@ instruction rcx|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  362  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  374  <|@ instruction J (address: [rdx|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [rdx|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  402  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B22" "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  410  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B66" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr  660  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = SHL rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  666  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD <|@ <|@
      nr  668  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD <|@ <|@
      nr  672  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdx|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B70" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r9|DWORD = LEA [r11|DWORD - 2] size: DWORD <|@ <|@
      nr  692  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  700  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV (x: [r13|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: rax|DWORD - r13|QWORD[.] rax|DWORD rdx|DWORD r9|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 35] <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B68 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B68" 
    successors "B46" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607283580267545149
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  420  <|@ instruction CMP r10|DWORD y: 65536 size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  450  <|@ instruction r9|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B61" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|DWORD = MOVSX [rax|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  462  <|@ instruction TEST rdx|DWORD y: -524288 size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B47" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4608513488995687104
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ st <@st|@reference-map: [rax:0, r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r10|DWORD - r13|QWORD[.] r8|DWORD rbx|DWORD r9|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 35] <|@ <|@
      nr  624  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction r10|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B61 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B61" 
    successors "B48" "B63" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = IMUL r10|DWORD y: 52429 size: DWORD <|@ <|@
      nr  434  <|@ instruction r8|DWORD = SHR rdx|DWORD y: 19 size: DWORD <|@ <|@
      nr  436  <|@ instruction r9|DWORD = SHL r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  438  <|@ instruction rbx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction rbx|DWORD = SUB (x: r10|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction CMP rbx|DWORD y: 36 size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B55" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@deb9674 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  472  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606968499873607038
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  482  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4606880567070323732
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors 
    xhandlers
    flags 
    probability 4606968499873607038
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  530  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4583882653384436038
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r14|DWORD = NEG r13|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590068489652910860
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   42  <|@ instruction CMP (x: r14|DWORD, y: [rsi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586856243027280245
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r14|DWORD r10|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 15] <|@ <|@
      nr   50  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B5" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4590068489652910860
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   36  <|@ instruction CMP r10|DWORD y: 10 size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   58  <|@ instruction r11|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr   60  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4583800399064675918
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  102  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  104  <|@ instruction MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  118  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  122  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  136  <|@ instruction J (address: [r10|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = MOVE input: long[8|0x8] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = LEA [r8|QWORD - 4] size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  158  <|@ instruction J (address: [r10|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rdx|QWORD = LEA [r8|QWORD - 2] size: QWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  180  <|@ instruction J (address: [r10|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r8|QWORD = DEC r8|QWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction MOV (x: [r10|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  208  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r13|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction r14|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B22 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" "B60" 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = LEA [r11|DWORD - 2] size: DWORD <|@ <|@
      nr  546  <|@ instruction CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction MOV (x: [r13|QWORD[.] + rdx|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr  554  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4582422236702154134
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  602  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4576781321191185043
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  500  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  502  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: stack:44|DWORD - r13|QWORD[.] stack:40|DWORD stack:36|DWORD stack:28|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35] <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  510  <|@ instruction rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4576753479527295714
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4553899900108848711
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r14|DWORD stack:28|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15] <|@ <|@
      nr   88  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4552878710457208910
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  568  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:465) [bci: 130]
locals: - - - - - - - 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35] <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  578  <|@ instruction rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4541297938918195200
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-2147483648"] <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-63515|0xffffffffffff07e5] <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  648  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  652  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: r8|DWORD - r13|QWORD[.] - - r11|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:75, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 668] y: -57883 size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 668] y: -55067 size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r14|DWORD r10|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 668] y: -66075 size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: stack:44|DWORD - r13|QWORD[.] r8|DWORD rbx|DWORD r9|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:107, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-60443|0xffffffffffff13e5] <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVE input: int[-68635|0xfffffffffffef3e5] <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: r10|DWORD - r13|QWORD[.] - - r11|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:17, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[-71195|0xfffffffffffee9e5] <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r8|DWORD = MOVE input: int[-74523|0xfffffffffffedce5] <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: ldc           #15         // -2147483648
     3: if_icmpne     9
     6: ldc           #16         // "-2147483648"
     8: areturn       
     9: iload_0       
    10: ifge          23
    13: iload_0       
    14: ineg          
    15: invokestatic  #10         // stringSize:(int)int
    18: iconst_1      
    19: iadd          
    20: goto          27
    23: iload_0       
    24: invokestatic  #10         // stringSize:(int)int
    27: istore_1      
    28: iload_1       
    29: newarray      char
    31: astore_2      
    32: iload_0       
    33: iload_1       
    34: aload_2       
    35: invokestatic  #11         // getChars:(int, int, char[])void
    38: new           #6          // java.lang.String
    41: dup           
    42: aload_2       
    43: iconst_1      
    44: invokespecial #9          // java.lang.String.<init>:(char[], boolean)void
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2f5cdefa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction CMP r13|DWORD y: -2147483648 size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 4.183064861906782E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B24" 
    xhandlers
    flags 
    probability 4607182042023030341
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}] <|@ <|@
      nr   22  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.028538893698111245 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606924997273779963
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612930980410844842
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  238  <|@ instruction r10|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  240  <|@ instruction CMP (x: r13|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B25" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609801053530050007
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 24] <|@ <|@
      nr  248  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B27 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B26" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4612930980410844842
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  232  <|@ instruction CMP r14|DWORD y: 10 size: DWORD <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  256  <|@ instruction rdx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606837499496494926
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  292  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  294  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  296  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  298  <|@ instruction MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  304  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  314  <|@ instruction rcx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  330  <|@ instruction J (address: [rdx|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE input: long[8|0x8] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" "B32" 
    successors "B37" "B36" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  352  <|@ instruction J (address: [rdx|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  354  <|@ instruction rcx|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B34" 
    successors "B40" "B39" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  362  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  364  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B40 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  374  <|@ instruction J (address: [rdx|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  376  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B37" 
    successors "B43" "B42" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B43 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4604737552841654076
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [rdx|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4606924997273779962
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD = MOVE input: short[0|0x0] <|@ <|@
      nr  402  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B22" "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  410  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B66" "B71" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  656  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr  660  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr  664  <|@ instruction r8|DWORD = SHL rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  666  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD <|@ <|@
      nr  668  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD <|@ <|@
      nr  672  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction rdx|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction CMP rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B70" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  684  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r9|DWORD = LEA [r11|DWORD - 2] size: DWORD <|@ <|@
      nr  692  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  694  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B45" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4582143612193785535
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  700  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV (x: [r13|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  704  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}] <|@ <|@
      nr  706  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:450) [bci: 72]
locals: rax|DWORD - r13|QWORD[.] rax|DWORD rdx|DWORD r9|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 35] <|@ <|@
      nr  712  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B68 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B68" 
    successors "B46" "B65" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607283580267545149
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  420  <|@ instruction CMP r10|DWORD y: 65536 size: DWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  450  <|@ instruction r9|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  452  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B61" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|DWORD = MOVSX [rax|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  460  <|@ instruction MOV (x: [r13|QWORD[.] + r9|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  462  <|@ instruction TEST rdx|DWORD y: -524288 size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B47" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4608513488995687104
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ st <@st|@reference-map: [rax:0, r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: r10|DWORD - r13|QWORD[.] r8|DWORD rbx|DWORD r9|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 35] <|@ <|@
      nr  624  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction r10|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction JUMP ~[] destination: B61 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B61" 
    successors "B48" "B63" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4612351459330975985
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = IMUL r10|DWORD y: 52429 size: DWORD <|@ <|@
      nr  434  <|@ instruction r8|DWORD = SHR rdx|DWORD y: 19 size: DWORD <|@ <|@
      nr  436  <|@ instruction r9|DWORD = SHL r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  438  <|@ instruction rbx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction rbx|DWORD = SUB (x: r10|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction CMP rbx|DWORD y: 36 size: DWORD <|@ <|@
      nr  446  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B55" 
    xhandlers
    flags 
    probability 4607182042023030340
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@deb9674 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  472  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606968499873607038
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  482  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4606880567070323732
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B52" 
    successors 
    xhandlers
    flags 
    probability 4606968499873607038
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  530  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  536  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  538  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4597917798019038970
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4583882653384436038
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r14|DWORD = NEG r13|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590068489652910860
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   42  <|@ instruction CMP (x: r14|DWORD, y: [rsi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586856243027280245
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r14|DWORD r10|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 15] <|@ <|@
      nr   50  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B6 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B5" "B23" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4590068489652910860
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   36  <|@ instruction CMP r10|DWORD y: 10 size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   58  <|@ instruction r11|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr   60  <|@ instruction rsi|DWORD = SHL r11|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD <|@ <|@
      nr   66  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4583800399064675918
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  102  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  104  <|@ instruction MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  108  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  116  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  118  <|@ instruction r8|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  120  <|@ instruction rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD <|@ <|@
      nr  122  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  136  <|@ instruction J (address: [r10|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  138  <|@ instruction rsi|QWORD = MOVE input: long[8|0x8] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors "B16" "B15" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = LEA [r8|QWORD - 4] size: QWORD <|@ <|@
      nr  146  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B16 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  158  <|@ instruction J (address: [r10|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  160  <|@ instruction rsi|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B13" 
    successors "B19" "B18" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rdx|QWORD = LEA [r8|QWORD - 2] size: QWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  180  <|@ instruction J (address: [r10|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B16" 
    successors "B22" "B21" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r8|QWORD = DEC r8|QWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4581826295390433013
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction MOV (x: [r10|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583882653384436039
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rsi|DWORD = MOVE input: short[45|0x2d] <|@ <|@
      nr  208  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r13|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction r14|DWORD = MOVE input: int[45|0x2d] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B22 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B56" "B60" 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rdx|DWORD = LEA [r11|DWORD - 2] size: DWORD <|@ <|@
      nr  546  <|@ instruction CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction MOV (x: [r13|QWORD[.] + rdx|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr  554  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  558  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4582422236702154134
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  588  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors 
    xhandlers
    flags 
    probability 4582490570189969591
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  602  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    probability 4576781321191185043
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  490  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  496  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  500  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  502  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: stack:44|DWORD - r13|QWORD[.] stack:40|DWORD stack:36|DWORD stack:28|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35] <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  510  <|@ instruction rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4576753479527295714
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  278  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24] <|@ <|@
      nr  282  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4574875454129695047
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4553899900108848711
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r14|DWORD stack:28|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15] <|@ <|@
      nr   88  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4552878710457208910
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  568  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  572  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:465) [bci: 130]
locals: - - - - - - - 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35] <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  578  <|@ instruction rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4541297938918195200
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-2147483648"] <|@ <|@
      nr   16  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  632  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-63515|0xffffffffffff07e5] <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  648  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  652  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:456) [bci: 75]
locals: r8|DWORD - r13|QWORD[.] - - r11|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:75, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction MOV [r15|QWORD + 668] y: -57883 size: DWORD <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  750  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r13|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 24]
locals: r13|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 24] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction MOV [r15|QWORD + 668] y: -55067 size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  222  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.stringSize(Integer.java:473) [bci: 2]
locals: r14|DWORD r10|DWORD 
java.lang.Integer.toString(Integer.java:400) [bci: 15]
locals: r13|DWORD - - 
>@ <|@ instruction DEOPT info [bci:2, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  612  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction MOV [r15|QWORD + 668] y: -66075 size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  618  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:459) [bci: 107]
locals: stack:44|DWORD - r13|QWORD[.] r8|DWORD rbx|DWORD r9|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:107, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction r8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r10|DWORD = MOVE input: int[-60443|0xffffffffffff13e5] <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVE input: int[-68635|0xfffffffffffef3e5] <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B70" "B69" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.Integer.getChars(Integer.java:444) [bci: 17]
locals: r10|DWORD - r13|QWORD[.] - - r11|DWORD r14|DWORD 
java.lang.Integer.toString(Integer.java:402) [bci: 35]
locals: - - r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:17, 35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction r8|DWORD = MOVE input: int[-71195|0xfffffffffffee9e5] <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B72" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r8|DWORD = MOVE input: int[-74523|0xfffffffffffedce5] <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B69 -> B72 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: ldc           #15         // -2147483648
     3: if_icmpne     9
     6: ldc           #16         // "-2147483648"
     8: areturn       
     9: iload_0       
    10: ifge          23
    13: iload_0       
    14: ineg          
    15: invokestatic  #10         // stringSize:(int)int
    18: iconst_1      
    19: iadd          
    20: goto          27
    23: iload_0       
    24: invokestatic  #10         // stringSize:(int)int
    27: istore_1      
    28: iload_1       
    29: newarray      char
    31: astore_2      
    32: iload_0       
    33: iload_1       
    34: aload_2       
    35: invokestatic  #11         // getChars:(int, int, char[])void
    38: new           #6          // java.lang.String
    41: dup           
    42: aload_2       
    43: iconst_1      
    44: invokespecial #9          // java.lang.String.<init>:(char[], boolean)void
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec2848896c2420448bee4181fd000000800f840805000048beaddeaddeaddeadde4585ed0f8ca002000041be00000000e91c0000006690458bd641ffc2463b6cb6100f8e14000000850500000000458bf24183fe0a72e0e9fd040000498b4760418bd2d1e28d521783e2f84863d2488bf24803f0493b77700f870e040000498977600f188402c00000000f188402000100000f188402400100000f188402800100004489500c48c70001000000c74008addeadde488d50104963f2488d4ef84885c90f8cf6010000c5f9efc0c5fa7f0248c7c1080000004c8d5efc493bcb0f8f10000000c5f9efc0c4e1f97e0248c7c1040000004c8d5efe493bcb0f8f0d000000c5f9efc0c5f97e044a488d490248ffce483bce0f8f05000000664489244abe0000000041be000000008b480c458bda458bd54c8be8e993000000660f1f440000660f1f440000418bc2ba1f85eb51f7ea8bc2c1f805448bc041c1e00683e2e04403c28bd0c1e2024403c2418bd2412bd083fa640f8337040000458bc341ffc8413bc80f8642040000458d4bfe413bc90f863d04000049baaddeaddeaddeadde450fbf54521066478954451049baaddeaddeaddeadde450fbf545210664789544d10850500000000458bd9448bd04181fa000001000f8d6cffffff48b8addeaddeaddeaddee93f0000000f1f8000000000660f1f440000458bcb41ffc9413bc90f86360300000fbf7c58106643897c4d10f7c20000f8ff0f8439000000850500000000458bd9458bd04169d2cdcc0000448bc241c1e813458bc841c1e103418bd8d1e34403cb418bda412bd983fb2472a6e950030000498bc548c1e80348bfaddeaddeaddeadde4585f60f8575010000498b7760488d5618493b57700f87c3010000498957600f1886d8000000488bd6488b8fa800000048890ec74608addeadde89460c44896610488bc2488b6c24204883c428850500000000c5f877c348c7c100000000e90dfeffff458bf541f7de41ba00000000e920000000660f1f440000660f1f440000463b7496100f8e1400000085050000000041ffc24183fa0a72e6e96b020000498b4760458d5a02418bf3d1e68d761783e6f84863f6488bd64803d0493b57700f8793010000498957600f188406c00000000f188406000100000f188406400100000f188406800100004489580c48c70001000000c74008addeadde4c8d50104d63c3498d70f84885f60f8c3d010000c5f9efc0c4c17a7f0248c7c608000000498d50fc483bf20f8f10000000c5f9efc0c4c1f97e0248c7c604000000498d50fe483bf20f8f0e000000c5f9efc0c4c1797e0472488d760249ffc8493bf00f8f050000006645892472be2d000000458bd3458bee41be2d000000e945fdffff418d53fe3bca0f8698010000664189745510498b7760488d5618493b57700f87e2000000498957600f1886d8000000488bd6488b8fa800000048890ec74608addeadde89460c44896610488bc2488b6c24204883c428850500000000c5f877c38944241044894c2414895c240c4489442408448954240448beaddeaddeaddeaddeba02000000b901000000e80000000090488bf048bfaddeaddeaddeadde8b442410e901feffff48beaddeaddeaddeadde418bd2b9000000004489542410e80000000090448b542410e901fcffff48c7c600000000e9c7feffff448954241448beaddeaddeaddeadde418bd3b90000000044895c2410e80000000090448b5c2410e977feffff8944241048beaddeaddeaddeaddeba02000000b901000000e80000000090488bf048bfaddeaddeaddeadde8b442410e9f5feffff48b8addeaddeaddeadde488b6c24204883c428850500000000c5f877c3458bc241bae507ffff4589979c0200004d89a7a8020000e8000000009041c7879c020000e51dffff4d89a7a8020000e8000000009041c7879c020000e528ffff4d89a7a8020000e80000000090448954240441c7879c020000e5fdfeff4d89a7a8020000e80000000090458bc241bae513ffffeb9441b8e5f3feff4589879c0200004d89a7a8020000e8000000009041b8e5e9feffebe441b8e5dcfeffebdce80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2f5cdefa slotKind: QWORD  <||@
  Comment 16 6 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 CMP r13|DWORD y: -2147483648 size: DWORD  <||@
  Comment 26 10 BRANCH trueDestinationProbability: 4.183064861906782E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 32 block B2 null  <||@
  Comment 32 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 32 20 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}]  <||@
  Comment 32 {Object[int[10]{9, 99, 999, 9999, 99999, ...}]}  <||@
  Comment 42 22 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 45 24 BRANCH trueDestinationProbability: 0.028538893698111245 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B24  <||@
  Comment 51 block B24 null  <||@
  Comment 51 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 51 226 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 57 228 JUMP ~[] destination: B24 -> B25  <||@
  Comment 62 block B26 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 62 236 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 64 238 r10|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 70 240 CMP (x: r13|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 75 242 BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 81 block B27 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 81 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 246 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 24]  <||@
  Comment 81 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 81 {infopoint: SAFEPOINT}  <||@
  Comment 81 11  <||@
  Comment 87 248 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 90 250 JUMP ~[] destination: B27 -> B25  <||@
  Comment 90 block B25 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 90 230 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 90 232 CMP r14|DWORD y: 10 size: DWORD  <||@
  Comment 94 234 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B73  <||@
  Comment 101 block B28 null  <||@
  Comment 101 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 254 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 105 256 rdx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 110 258 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 113 260 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 116 262 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 119 264 rsi|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 125 266 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 129 268 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 135 block B30 null  <||@
  Comment 135 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 288 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 139 290 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 147 292 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 155 294 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 163 296 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 171 298 MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 175 300 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 182 302 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 182 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 189 304 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 189 306 JUMP ~[] destination: B30 -> B31  <||@
  Comment 189 block B31 null  <||@
  Comment 189 308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 189 310 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 193 312 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 196 314 rcx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 200 316 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 203 318 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 209 block B33 null  <||@
  Comment 209 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 328 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 213 330 J (address: [rdx|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 217 332 rcx|QWORD = MOVE input: long[8|0x8]  <||@
  Comment 224 334 JUMP ~[] destination: B33 -> B34  <||@
  Comment 224 block B34 null  <||@
  Comment 224 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 224 338 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 228 340 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 231 342 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36  <||@
  Comment 237 block B36 null  <||@
  Comment 237 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 350 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 241 352 J (address: [rdx|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 246 354 rcx|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 253 356 JUMP ~[] destination: B36 -> B37  <||@
  Comment 253 block B37 null  <||@
  Comment 253 358 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 253 360 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 257 362 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 260 364 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B40 falseDestination: B37 -> B39  <||@
  Comment 266 block B39 null  <||@
  Comment 266 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 372 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 270 374 J (address: [rdx|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 275 376 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 279 378 JUMP ~[] destination: B39 -> B40  <||@
  Comment 279 block B40 null  <||@
  Comment 279 380 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 279 382 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 282 384 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 285 386 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B43 falseDestination: B40 -> B42  <||@
  Comment 291 block B42 null  <||@
  Comment 291 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 394 MOV (x: [rdx|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 296 396 JUMP ~[] destination: B42 -> B43  <||@
  Comment 296 block B43 null  <||@
  Comment 296 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 400 rsi|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 301 402 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 307 404 JUMP ~[] destination: B43 -> B44  <||@
  Comment 307 block B44 null  <||@
  Comment 307 406 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 307 408 rcx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 310 410 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 313 412 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 316 414 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 319 416 JUMP ~[] destination: B44 -> B45  <||@
  Comment 324 block B65 loop 2 depth 1 header:86|LoopBegin  <||@
  Comment 324 654 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 336 656 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 339 658 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 344 660 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 346 662 rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 351 664 r8|DWORD = SHL rax|DWORD y: 6 size: DWORD  <||@
  Comment 358 666 rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD  <||@
  Comment 361 668 r8|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 364 670 rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD  <||@
  Comment 369 672 r8|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 372 674 rdx|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 378 676 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 381 678 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71  <||@
  Comment 387 block B66 loop 2 depth 1 header:86|LoopBegin  <||@
  Comment 387 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 387 682 r8|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 393 684 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 396 686 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 402 block B67 loop 2 depth 1 header:86|LoopBegin  <||@
  Comment 402 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 402 690 r9|DWORD = LEA [r11|DWORD - 2] size: DWORD  <||@
  Comment 406 692 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 409 694 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 415 block B68 loop 2 depth 1 header:86|LoopBegin  <||@
  Comment 415 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 698 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 415 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 425 700 r10|DWORD = MOVSX [r10|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 431 702 MOV (x: [r13|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 437 704 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 437 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 447 706 r10|DWORD = MOVSX [r10|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 453 708 MOV (x: [r13|QWORD[.] + r9|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 459 710 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 35]  <||@
  Comment 459 [r13:0]at java.lang.Integer.getChars(Integer.java:450) [bci: 72, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4          |5         |6         
     locals:  |rax|DWORD  |-  |r13|QWORD[.]  |rax|DWORD  |rdx|DWORD  |r9|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 459 {infopoint: SAFEPOINT}  <||@
  Comment 459 11  <||@
  Comment 465 712 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 468 714 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 471 716 JUMP ~[] destination: B68 -> B45  <||@
  Comment 471 block B45 loop 2 depth 1 header:86|LoopBegin  <||@
  Comment 471 418 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 471 420 CMP r10|DWORD y: 65536 size: DWORD  <||@
  Comment 478 422 BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B65  <||@
  Comment 484 block B46 null  <||@
  Comment 484 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 484 426 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 484 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 494 428 JUMP ~[] destination: B46 -> B47  <||@
  Comment 499 block B48 loop 3 depth 1 header:121|LoopBegin  <||@
  Comment 499 448 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 512 450 r9|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 518 452 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 521 454 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B62  <||@
  Comment 527 block B49 loop 3 depth 1 header:121|LoopBegin  <||@
  Comment 527 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 527 458 rdi|DWORD = MOVSX [rax|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 532 460 MOV (x: [r13|QWORD[.] + r9|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 538 462 TEST rdx|DWORD y: -524288 size: DWORD  <||@
  Comment 544 464 BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B61  <||@
  Comment 550 block B61 loop 3 depth 1 header:121|LoopBegin  <||@
  Comment 550 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 550 622 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 35]  <||@
  Comment 550 [rax:0, r13:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0          |1  |2             |3         |4          |5         |6         
     locals:  |r10|DWORD  |-  |r13|QWORD[.]  |r8|DWORD  |rbx|DWORD  |r9|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 550 {infopoint: SAFEPOINT}  <||@
  Comment 550 11  <||@
  Comment 556 624 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 559 626 r10|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 562 628 JUMP ~[] destination: B61 -> B47  <||@
  Comment 562 block B47 loop 3 depth 1 header:121|LoopBegin  <||@
  Comment 562 430 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 562 432 rdx|DWORD = IMUL r10|DWORD y: 52429 size: DWORD  <||@
  Comment 569 434 r8|DWORD = SHR rdx|DWORD y: 19 size: DWORD  <||@
  Comment 576 436 r9|DWORD = SHL r8|DWORD y: 3 size: DWORD  <||@
  Comment 583 438 rbx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 588 440 r9|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 591 442 rbx|DWORD = SUB (x: r10|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 597 444 CMP rbx|DWORD y: 36 size: DWORD  <||@
  Comment 600 446 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B63  <||@
  Comment 607 block B50 null  <||@
  Comment 607 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 607 468 rax|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@deb9674 encoding: base: 0 shift: 3  <||@
  Comment 614 470 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 614 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 624 472 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 627 474 BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55  <||@
  Comment 633 block B51 null  <||@
  Comment 633 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 633 478 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 637 480 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 641 482 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 645 484 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 651 block B53 null  <||@
  Comment 651 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 651 516 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 655 518 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 662 520 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 662 522 JUMP ~[] destination: B53 -> B54  <||@
  Comment 662 block B54 null  <||@
  Comment 662 524 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 662 526 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 665 528 rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 672 530 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 675 532 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 675 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 682 534 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 685 536 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 689 538 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 692 540 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 701 12  <||@
  Comment 711 block B32 null  <||@
  Comment 711 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 322 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 718 324 JUMP ~[] destination: B32 -> B34  <||@
  Comment 723 block B3 null  <||@
  Comment 723 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 28 r14|DWORD = NEG r13|DWORD size: DWORD  <||@
  Comment 729 30 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 735 32 JUMP ~[] destination: B3 -> B4  <||@
  Comment 740 block B5 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 740 40 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 752 42 CMP (x: r14|DWORD, y: [rsi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 757 44 BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 763 block B6 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 763 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 48 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 15]  <||@
  Comment 763 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r14|DWORD  |r10|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 763 {infopoint: SAFEPOINT}  <||@
  Comment 763 11  <||@
  Comment 769 50 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 772 52 JUMP ~[] destination: B6 -> B4  <||@
  Comment 772 block B4 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 772 34 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 772 36 CMP r10|DWORD y: 10 size: DWORD  <||@
  Comment 776 38 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B23  <||@
  Comment 783 block B7 null  <||@
  Comment 783 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 783 56 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 787 58 r11|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 791 60 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 796 62 rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD  <||@
  Comment 799 64 rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD  <||@
  Comment 802 66 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 805 68 rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 811 70 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 815 72 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 821 block B9 null  <||@
  Comment 821 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 821 94 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 825 96 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 833 98 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 841 100 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 849 102 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 857 104 MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 861 106 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 868 108 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 868 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 875 110 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 875 112 JUMP ~[] destination: B9 -> B10  <||@
  Comment 875 block B10 null  <||@
  Comment 875 114 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 875 116 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 879 118 r8|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 882 120 rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 886 122 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 889 124 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 895 block B12 null  <||@
  Comment 895 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 895 134 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 899 136 J (address: [r10|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 904 138 rsi|QWORD = MOVE input: long[8|0x8]  <||@
  Comment 911 140 JUMP ~[] destination: B12 -> B13  <||@
  Comment 911 block B13 null  <||@
  Comment 911 142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 911 144 rdx|QWORD = LEA [r8|QWORD - 4] size: QWORD  <||@
  Comment 915 146 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 918 148 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B16 falseDestination: B13 -> B15  <||@
  Comment 924 block B15 null  <||@
  Comment 924 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 924 156 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 928 158 J (address: [r10|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 933 160 rsi|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 940 162 JUMP ~[] destination: B15 -> B16  <||@
  Comment 940 block B16 null  <||@
  Comment 940 164 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 940 166 rdx|QWORD = LEA [r8|QWORD - 2] size: QWORD  <||@
  Comment 944 168 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 947 170 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18  <||@
  Comment 953 block B18 null  <||@
  Comment 953 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 953 178 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 957 180 J (address: [r10|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 963 182 rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD  <||@
  Comment 967 184 JUMP ~[] destination: B18 -> B19  <||@
  Comment 967 block B19 null  <||@
  Comment 967 186 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 967 188 r8|QWORD = DEC r8|QWORD size: QWORD  <||@
  Comment 970 190 CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 973 192 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 979 block B21 null  <||@
  Comment 979 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 979 200 MOV (x: [r10|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 984 202 JUMP ~[] destination: B21 -> B22  <||@
  Comment 984 block B22 null  <||@
  Comment 984 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 984 206 rsi|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 989 208 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 992 210 r13|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 995 212 r14|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 1001 214 JUMP ~[] destination: B22 -> B44  <||@
  Comment 1006 block B55 null  <||@
  Comment 1006 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1006 544 rdx|DWORD = LEA [r11|DWORD - 2] size: DWORD  <||@
  Comment 1010 546 CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1012 548 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B60  <||@
  Comment 1018 block B56 null  <||@
  Comment 1018 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1018 552 MOV (x: [r13|QWORD[.] + rdx|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 1024 554 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1028 556 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1032 558 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1036 560 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1042 block B58 null  <||@
  Comment 1042 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1042 584 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1046 586 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1053 588 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1053 590 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1053 block B59 null  <||@
  Comment 1053 592 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1053 594 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1056 596 rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 1063 598 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1066 600 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1066 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1073 602 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1076 604 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1080 606 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1083 608 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1092 12  <||@
  Comment 1102 block B52 null  <||@
  Comment 1102 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 488 stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1106 490 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1111 492 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1115 494 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1120 496 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1125 498 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1125 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1135 500 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1140 502 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1145 504 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35]  <||@
  Comment 1145 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1150 [r13:0, stack:16]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0               |1  |2             |3               |4               |5               |6         
     locals:  |stack:44|DWORD  |-  |r13|QWORD[.]  |stack:40|DWORD  |stack:36|DWORD  |stack:28|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 1151 506 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 508 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1154 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1164 510 rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 1168 512 JUMP ~[] destination: B52 -> B54  <||@
  Comment 1173 block B29 null  <||@
  Comment 1173 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 272 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1173 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1183 274 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1186 276 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1191 278 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1196 280 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24]  <||@
  Comment 1196 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1201 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 1202 282 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1207 284 JUMP ~[] destination: B29 -> B31  <||@
  Comment 1212 block B11 null  <||@
  Comment 1212 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1212 128 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1219 130 JUMP ~[] destination: B11 -> B13  <||@
  Comment 1224 block B8 null  <||@
  Comment 1224 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1224 76 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1229 78 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1229 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1239 80 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1242 82 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1247 84 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1252 86 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15]  <||@
  Comment 1252 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1257 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1              
     locals:  |r14|DWORD  |stack:28|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 1258 88 r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1263 90 JUMP ~[] destination: B8 -> B10  <||@
  Comment 1268 block B57 null  <||@
  Comment 1268 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1268 564 stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1272 566 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1272 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1282 568 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1287 570 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1292 572 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35]  <||@
  Comment 1292 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1297 [r13:0, stack:16]at java.lang.Integer.getChars(Integer.java:465) [bci: 130, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 1298 574 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1301 576 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1301 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1311 578 rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 1315 580 JUMP ~[] destination: B57 -> B59  <||@
  Comment 1320 block B1 null  <||@
  Comment 1320 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 14 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-2147483648"]  <||@
  Comment 1320 {Object[String:"-2147483648"]}  <||@
  Comment 1330 16 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1339 12  <||@
  Comment 1349 block B62 null  <||@
  Comment 1349 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1349 632 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1352 634 r10|DWORD = MOVE input: int[-63515|0xffffffffffff07e5]  <||@
  Comment 1358 636 JUMP ~[] destination: B62 -> B64  <||@
  Comment 1358 block B64 null  <||@
  Comment 1358 646 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1358 648 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1365 650 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1372 652 DEOPT info [bci:75, 35]  <||@
  Comment 1372 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1377 [r13:0]at java.lang.Integer.getChars(Integer.java:456) [bci: 75, duringCall: false, rethrow: false]
              |0         |1  |2             |3  |4  |5          |6         
     locals:  |r8|DWORD  |-  |r13|QWORD[.]  |-  |-  |r11|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 1378 block B73 null  <||@
  Comment 1378 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1378 746 MOV [r15|QWORD + 668] y: -57883 size: DWORD  <||@
  Comment 1389 748 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1396 750 DEOPT info [bci:2, 24]  <||@
  Comment 1396 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1401 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 1402 block B23 null  <||@
  Comment 1402 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1402 218 MOV [r15|QWORD + 668] y: -55067 size: DWORD  <||@
  Comment 1413 220 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1420 222 DEOPT info [bci:2, 15]  <||@
  Comment 1420 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1425 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r14|DWORD  |r10|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 1426 block B60 null  <||@
  Comment 1426 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1426 612 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1431 614 MOV [r15|QWORD + 668] y: -66075 size: DWORD  <||@
  Comment 1442 616 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1449 618 DEOPT info [bci:107, 35]  <||@
  Comment 1449 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1454 [r13:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0               |1  |2             |3         |4          |5         |6         
     locals:  |stack:44|DWORD  |-  |r13|QWORD[.]  |r8|DWORD  |rbx|DWORD  |r9|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 1455 block B63 null  <||@
  Comment 1455 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1455 640 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1458 642 r10|DWORD = MOVE input: int[-60443|0xffffffffffff13e5]  <||@
  Comment 1464 644 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1466 block B71 null  <||@
  Comment 1466 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1466 732 r8|DWORD = MOVE input: int[-68635|0xfffffffffffef3e5]  <||@
  Comment 1472 734 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1472 block B72 null  <||@
  Comment 1472 736 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1472 738 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 1479 740 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1486 742 DEOPT info [bci:17, 35]  <||@
  Comment 1486 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1491 [r13:0]at java.lang.Integer.getChars(Integer.java:444) [bci: 17, duringCall: false, rethrow: false]
              |0          |1  |2             |3  |4  |5          |6         
     locals:  |r10|DWORD  |-  |r13|QWORD[.]  |-  |-  |r11|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 1492 block B70 null  <||@
  Comment 1492 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1492 726 r8|DWORD = MOVE input: int[-71195|0xfffffffffffee9e5]  <||@
  Comment 1498 728 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1500 block B69 null  <||@
  Comment 1500 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1500 720 r8|DWORD = MOVE input: int[-74523|0xfffffffffffedce5]  <||@
  Comment 1506 722 JUMP ~[] destination: B69 -> B72  <||@
  Comment 1508 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1508 4  <||@
  Comment 1514 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1514 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5768[java.lang.Integer.toString(int)]"
  method "HotSpotCompilation-5768[java.lang.Integer.toString(int)]"
  date 1526687593476
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 119980880 89842400c0feff4883ec2848896c2420448bee4181fd000000800f840805000048bec86d03c0060000004585ed0f8ca002000041be00000000e91c0000006690458bd641ffc2463b6cb6100f8e1400000085052fb755f0458bf24183fe0a72e0e9fd040000498b4760418bd2d1e28d521783e2f84863d2488bf24803f0493b77700f870e040000498977600f188402c00000000f188402000100000f188402400100000f188402800100004489500c48c70001000000c74008410000f8488d50104963f2488d4ef84885c90f8cf6010000c5f9efc0c5fa7f0248c7c1080000004c8d5efc493bcb0f8f10000000c5f9efc0c4e1f97e0248c7c1040000004c8d5efe493bcb0f8f0d000000c5f9efc0c5f97e044a488d490248ffce483bce0f8f05000000664489244abe0000000041be000000008b480c458bda458bd54c8be8e993000000660f1f440000660f1f440000418bc2ba1f85eb51f7ea8bc2c1f805448bc041c1e00683e2e04403c28bd0c1e2024403c2418bd2412bd083fa640f8337040000458bc341ffc8413bc80f8642040000458d4bfe413bc90f863d04000049ba006e03c006000000450fbf54521066478954451049bad86e03c006000000450fbf545210664789544d108505b5b555f0458bd9448bd04181fa000001000f8d6cffffff48b8b06f03c006000000e93f0000000f1f8000000000660f1f440000458bcb41ffc9413bc90f86360300000fbf7c58106643897c4d10f7c20000f8ff0f843900000085055ab555f0458bd9458bd04169d2cdcc0000448bc241c1e813458bc841c1e103418bd8d1e34403cb418bda412bd983fb2472a6e950030000498bc548c1e80348bfd01600c0070000004585f60f8575010000498b7760488d5618493b57700f87c3010000498957600f1886d8000000488bd6488b8fa800000048890ec74608da0200f889460c44896610488bc2488b6c24204883c4288505c3b455f0c5f877c348c7c100000000e90dfeffff458bf541f7de41ba00000000e920000000660f1f440000660f1f440000463b7496100f8e14000000850585b455f041ffc24183fa0a72e6e96b020000498b4760458d5a02418bf3d1e68d761783e6f84863f6488bd64803d0493b57700f8793010000498957600f188406c00000000f188406000100000f188406400100000f188406800100004489580c48c70001000000c74008410000f84c8d50104d63c3498d70f84885f60f8c3d010000c5f9efc0c4c17a7f0248c7c608000000498d50fc483bf20f8f10000000c5f9efc0c4c1f97e0248c7c604000000498d50fe483bf20f8f0e000000c5f9efc0c4c1797e0472488d760249ffc8493bf00f8f050000006645892472be2d000000458bd3458bee41be2d000000e945fdffff418d53fe3bca0f8698010000664189745510498b7760488d5618493b57700f87e2000000498957600f1886d8000000488bd6488b8fa800000048890ec74608da0200f889460c44896610488bc2488b6c24204883c42885053cb355f0c5f877c38944241044894c2414895c240c4489442408448954240448be680b00c007000000ba02000000b901000000e8a2357eff90488bf048bfd01600c0070000008b442410e901feffff48be080200c007000000418bd2b9000000004489542410e86f357eff90448b542410e901fcffff48c7c600000000e9c7feffff448954241448be080200c007000000418bd3b90000000044895c2410e837357eff90448b5c2410e977feffff8944241048be680b00c007000000ba02000000b901000000e80f357eff90488bf048bfd01600c0070000008b442410e9f5feffff48b8185b00c006000000488b6c24204883c428850545b255f0c5f877c3458bc241bae507ffff4589979c0200004d89a7a8020000e81d5808ff9041c7879c020000e51dffff4d89a7a8020000e8055808ff9041c7879c020000e528ffff4d89a7a8020000e8ed5708ff90448954240441c7879c020000e5fdfeff4d89a7a8020000e8d05708ff90458bc241bae513ffffeb9441b8e5f3feff4589879c0200004d89a7a8020000e8ab5708ff9041b8e5e9feffebe441b8e5dcfeffebdce837e947ff90e8915608ff90  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2f5cdefa slotKind: QWORD  <||@
  Comment 16 6 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 19 8 CMP r13|DWORD y: -2147483648 size: DWORD  <||@
  Comment 26 10 BRANCH trueDestinationProbability: 4.183064861906782E-5 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 32 block B2 null  <||@
  Comment 32 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 32 20 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[10]{9, 99, 999, 9999, 99999, ...}]  <||@
  Comment 32 {Object[int[10]{9, 99, 999, 9999, 99999, ...}]}  <||@
  Comment 42 22 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 45 24 BRANCH trueDestinationProbability: 0.028538893698111245 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B24  <||@
  Comment 51 block B24 null  <||@
  Comment 51 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 51 226 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 57 228 JUMP ~[] destination: B24 -> B25  <||@
  Comment 62 block B26 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 62 236 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 64 238 r10|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 70 240 CMP (x: r13|DWORD, y: [rsi|QWORD[.] + r14|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 75 242 BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 81 block B27 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 81 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 246 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 24]  <||@
  Comment 81 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 81 {infopoint: SAFEPOINT}  <||@
  Comment 81 11  <||@
  Comment 87 248 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 90 250 JUMP ~[] destination: B27 -> B25  <||@
  Comment 90 block B25 loop 1 depth 1 header:41|LoopBegin  <||@
  Comment 90 230 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 90 232 CMP r14|DWORD y: 10 size: DWORD  <||@
  Comment 94 234 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B73  <||@
  Comment 101 block B28 null  <||@
  Comment 101 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 254 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 105 256 rdx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 110 258 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 113 260 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 116 262 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 119 264 rsi|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 125 266 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 129 268 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 135 block B30 null  <||@
  Comment 135 286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 288 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 139 290 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 147 292 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 155 294 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 163 296 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 171 298 MOV (x: [rax|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 175 300 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 182 302 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 182 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 189 304 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 189 306 JUMP ~[] destination: B30 -> B31  <||@
  Comment 189 block B31 null  <||@
  Comment 189 308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 189 310 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 193 312 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 196 314 rcx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 200 316 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 203 318 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 209 block B33 null  <||@
  Comment 209 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 209 328 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 213 330 J (address: [rdx|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 217 332 rcx|QWORD = MOVE input: long[8|0x8]  <||@
  Comment 224 334 JUMP ~[] destination: B33 -> B34  <||@
  Comment 224 block B34 null  <||@
  Comment 224 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 224 338 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 228 340 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 231 342 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36  <||@
  Comment 237 block B36 null  <||@
  Comment 237 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 350 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 241 352 J (address: [rdx|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 246 354 rcx|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 253 356 JUMP ~[] destination: B36 -> B37  <||@
  Comment 253 block B37 null  <||@
  Comment 253 358 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 253 360 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 257 362 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 260 364 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B40 falseDestination: B37 -> B39  <||@
  Comment 266 block B39 null  <||@
  Comment 266 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 372 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 270 374 J (address: [rdx|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 275 376 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 279 378 JUMP ~[] destination: B39 -> B40  <||@
  Comment 279 block B40 null  <||@
  Comment 279 380 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 279 382 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 282 384 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 285 386 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B43 falseDestination: B40 -> B42  <||@
  Comment 291 block B42 null  <||@
  Comment 291 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 394 MOV (x: [rdx|QWORD[.] + rcx|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 296 396 JUMP ~[] destination: B42 -> B43  <||@
  Comment 296 block B43 null  <||@
  Comment 296 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 296 400 rsi|DWORD = MOVE input: short[0|0x0]  <||@
  Comment 301 402 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 307 404 JUMP ~[] destination: B43 -> B44  <||@
  Comment 307 block B44 null  <||@
  Comment 307 406 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 307 408 rcx|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 310 410 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 313 412 r10|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 316 414 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 319 416 JUMP ~[] destination: B44 -> B45  <||@
  Comment 324 block B65 loop 2 depth 1 header:86|LoopBegin  <||@
  Comment 324 654 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 336 656 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 339 658 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 344 660 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 346 662 rax|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 351 664 r8|DWORD = SHL rax|DWORD y: 6 size: DWORD  <||@
  Comment 358 666 rdx|DWORD = AND rdx|DWORD y: -32 size: DWORD  <||@
  Comment 361 668 r8|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 364 670 rdx|DWORD = SHL rax|DWORD y: 2 size: DWORD  <||@
  Comment 369 672 r8|DWORD = ADD (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 372 674 rdx|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 378 676 CMP rdx|DWORD y: 100 size: DWORD  <||@
  Comment 381 678 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B71  <||@
  Comment 387 block B66 loop 2 depth 1 header:86|LoopBegin  <||@
  Comment 387 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 387 682 r8|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 393 684 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 396 686 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 402 block B67 loop 2 depth 1 header:86|LoopBegin  <||@
  Comment 402 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 402 690 r9|DWORD = LEA [r11|DWORD - 2] size: DWORD  <||@
  Comment 406 692 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 409 694 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 415 block B68 loop 2 depth 1 header:86|LoopBegin  <||@
  Comment 415 696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 415 698 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 415 {Object[char[100]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 425 700 r10|DWORD = MOVSX [r10|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 431 702 MOV (x: [r13|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 437 704 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[100]{0, 0, 0, 0, 0, ...}]  <||@
  Comment 437 {Object[char[100]{0, 0, 0, 0, 0, ...}]}  <||@
  Comment 447 706 r10|DWORD = MOVSX [r10|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 453 708 MOV (x: [r13|QWORD[.] + r9|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 459 710 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:72, 35]  <||@
  Comment 459 [r13:0]at java.lang.Integer.getChars(Integer.java:450) [bci: 72, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4          |5         |6         
     locals:  |rax|DWORD  |-  |r13|QWORD[.]  |rax|DWORD  |rdx|DWORD  |r9|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 459 {infopoint: SAFEPOINT}  <||@
  Comment 459 11  <||@
  Comment 465 712 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 468 714 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 471 716 JUMP ~[] destination: B68 -> B45  <||@
  Comment 471 block B45 loop 2 depth 1 header:86|LoopBegin  <||@
  Comment 471 418 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 471 420 CMP r10|DWORD y: 65536 size: DWORD  <||@
  Comment 478 422 BRANCH trueDestinationProbability: 0.9779902031978241 condition: < trueDestination: B45 -> B46 falseDestination: B45 -> B65  <||@
  Comment 484 block B46 null  <||@
  Comment 484 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 484 426 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 484 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 494 428 JUMP ~[] destination: B46 -> B47  <||@
  Comment 499 block B48 loop 3 depth 1 header:121|LoopBegin  <||@
  Comment 499 448 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 512 450 r9|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 518 452 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 521 454 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B62  <||@
  Comment 527 block B49 loop 3 depth 1 header:121|LoopBegin  <||@
  Comment 527 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 527 458 rdi|DWORD = MOVSX [rax|QWORD[.] + rbx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 532 460 MOV (x: [r13|QWORD[.] + r9|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 538 462 TEST rdx|DWORD y: -524288 size: DWORD  <||@
  Comment 544 464 BRANCH trueDestinationProbability: 0.43561384476528986 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B61  <||@
  Comment 550 block B61 loop 3 depth 1 header:121|LoopBegin  <||@
  Comment 550 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 550 622 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:107, 35]  <||@
  Comment 550 [rax:0, r13:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0          |1  |2             |3         |4          |5         |6         
     locals:  |r10|DWORD  |-  |r13|QWORD[.]  |r8|DWORD  |rbx|DWORD  |r9|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 550 {infopoint: SAFEPOINT}  <||@
  Comment 550 11  <||@
  Comment 556 624 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 559 626 r10|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 562 628 JUMP ~[] destination: B61 -> B47  <||@
  Comment 562 block B47 loop 3 depth 1 header:121|LoopBegin  <||@
  Comment 562 430 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 562 432 rdx|DWORD = IMUL r10|DWORD y: 52429 size: DWORD  <||@
  Comment 569 434 r8|DWORD = SHR rdx|DWORD y: 19 size: DWORD  <||@
  Comment 576 436 r9|DWORD = SHL r8|DWORD y: 3 size: DWORD  <||@
  Comment 583 438 rbx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 588 440 r9|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 591 442 rbx|DWORD = SUB (x: r10|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 597 444 CMP rbx|DWORD y: 36 size: DWORD  <||@
  Comment 600 446 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B63  <||@
  Comment 607 block B50 null  <||@
  Comment 607 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 607 468 rax|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@deb9674 encoding: base: 0 shift: 3  <||@
  Comment 614 470 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 614 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 624 472 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 627 474 BRANCH trueDestinationProbability: 0.9762910671381908 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B55  <||@
  Comment 633 block B51 null  <||@
  Comment 633 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 633 478 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 637 480 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 641 482 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 645 484 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 651 block B53 null  <||@
  Comment 651 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 651 516 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 655 518 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 662 520 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 662 522 JUMP ~[] destination: B53 -> B54  <||@
  Comment 662 block B54 null  <||@
  Comment 662 524 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 662 526 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 665 528 rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 672 530 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 675 532 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 675 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 682 534 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 685 536 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 689 538 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 692 540 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 701 12  <||@
  Comment 711 block B32 null  <||@
  Comment 711 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 322 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 718 324 JUMP ~[] destination: B32 -> B34  <||@
  Comment 723 block B3 null  <||@
  Comment 723 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 723 28 r14|DWORD = NEG r13|DWORD size: DWORD  <||@
  Comment 729 30 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 735 32 JUMP ~[] destination: B3 -> B4  <||@
  Comment 740 block B5 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 740 40 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 752 42 CMP (x: r14|DWORD, y: [rsi|QWORD[.] + r10|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 757 44 BRANCH trueDestinationProbability: 0.619479692449355 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 763 block B6 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 763 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 48 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:2, 15]  <||@
  Comment 763 [rsi:0]at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r14|DWORD  |r10|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 763 {infopoint: SAFEPOINT}  <||@
  Comment 763 11  <||@
  Comment 769 50 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 772 52 JUMP ~[] destination: B6 -> B4  <||@
  Comment 772 block B4 loop 0 depth 1 header:58|LoopBegin  <||@
  Comment 772 34 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 772 36 CMP r10|DWORD y: 10 size: DWORD  <||@
  Comment 776 38 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B23  <||@
  Comment 783 block B7 null  <||@
  Comment 783 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 783 56 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 787 58 r11|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 791 60 rsi|DWORD = SHL r11|DWORD size: DWORD  <||@
  Comment 796 62 rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD  <||@
  Comment 799 64 rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD  <||@
  Comment 802 66 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 805 68 rdx|QWORD = ADD (x: rsi|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 811 70 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 815 72 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 821 block B9 null  <||@
  Comment 821 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 821 94 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 825 96 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 833 98 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 841 100 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 849 102 AMD64PREFETCH ~[rsi|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 857 104 MOV (x: [rax|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 861 106 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 868 108 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 868 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 875 110 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 875 112 JUMP ~[] destination: B9 -> B10  <||@
  Comment 875 block B10 null  <||@
  Comment 875 114 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 875 116 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 879 118 r8|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 882 120 rsi|QWORD = LEA [r8|QWORD - 8] size: QWORD  <||@
  Comment 886 122 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 889 124 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 895 block B12 null  <||@
  Comment 895 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 895 134 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 899 136 J (address: [r10|QWORD[.]], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 904 138 rsi|QWORD = MOVE input: long[8|0x8]  <||@
  Comment 911 140 JUMP ~[] destination: B12 -> B13  <||@
  Comment 911 block B13 null  <||@
  Comment 911 142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 911 144 rdx|QWORD = LEA [r8|QWORD - 4] size: QWORD  <||@
  Comment 915 146 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 918 148 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B16 falseDestination: B13 -> B15  <||@
  Comment 924 block B15 null  <||@
  Comment 924 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 924 156 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 928 158 J (address: [r10|QWORD[.]], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 933 160 rsi|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 940 162 JUMP ~[] destination: B15 -> B16  <||@
  Comment 940 block B16 null  <||@
  Comment 940 164 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 940 166 rdx|QWORD = LEA [r8|QWORD - 2] size: QWORD  <||@
  Comment 944 168 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 947 170 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B19 falseDestination: B16 -> B18  <||@
  Comment 953 block B18 null  <||@
  Comment 953 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 953 178 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 957 180 J (address: [r10|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 963 182 rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD  <||@
  Comment 967 184 JUMP ~[] destination: B18 -> B19  <||@
  Comment 967 block B19 null  <||@
  Comment 967 186 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 967 188 r8|QWORD = DEC r8|QWORD size: QWORD  <||@
  Comment 970 190 CMP (x: rsi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 973 192 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 979 block B21 null  <||@
  Comment 979 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 979 200 MOV (x: [r10|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 984 202 JUMP ~[] destination: B21 -> B22  <||@
  Comment 984 block B22 null  <||@
  Comment 984 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 984 206 rsi|DWORD = MOVE input: short[45|0x2d]  <||@
  Comment 989 208 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 992 210 r13|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 995 212 r14|DWORD = MOVE input: int[45|0x2d]  <||@
  Comment 1001 214 JUMP ~[] destination: B22 -> B44  <||@
  Comment 1006 block B55 null  <||@
  Comment 1006 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1006 544 rdx|DWORD = LEA [r11|DWORD - 2] size: DWORD  <||@
  Comment 1010 546 CMP (x: rcx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1012 548 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B60  <||@
  Comment 1018 block B56 null  <||@
  Comment 1018 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1018 552 MOV (x: [r13|QWORD[.] + rdx|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 1024 554 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1028 556 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1032 558 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1036 560 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 1042 block B58 null  <||@
  Comment 1042 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1042 584 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1046 586 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1053 588 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1053 590 JUMP ~[] destination: B58 -> B59  <||@
  Comment 1053 block B59 null  <||@
  Comment 1053 592 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1053 594 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1056 596 rcx|QWORD = MOV [rdi|QWORD + 168] size: QWORD  <||@
  Comment 1063 598 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1066 600 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1066 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1073 602 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1076 604 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1080 606 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1083 608 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1092 12  <||@
  Comment 1102 block B52 null  <||@
  Comment 1102 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1102 488 stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1106 490 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1111 492 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1115 494 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1120 496 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1125 498 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1125 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1135 500 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1140 502 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1145 504 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:107, 35]  <||@
  Comment 1145 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1150 [r13:0, stack:16]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0               |1  |2             |3               |4               |5               |6         
     locals:  |stack:44|DWORD  |-  |r13|QWORD[.]  |stack:40|DWORD  |stack:36|DWORD  |stack:28|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 1151 506 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1154 508 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1154 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1164 510 rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 1168 512 JUMP ~[] destination: B52 -> B54  <||@
  Comment 1173 block B29 null  <||@
  Comment 1173 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1173 272 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1173 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1183 274 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1186 276 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1191 278 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1196 280 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 24]  <||@
  Comment 1196 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1201 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 1202 282 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1207 284 JUMP ~[] destination: B29 -> B31  <||@
  Comment 1212 block B11 null  <||@
  Comment 1212 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1212 128 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1219 130 JUMP ~[] destination: B11 -> B13  <||@
  Comment 1224 block B8 null  <||@
  Comment 1224 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1224 76 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1229 78 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1229 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1239 80 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1242 82 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1247 84 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1252 86 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:2, 15]  <||@
  Comment 1252 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1257 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1              
     locals:  |r14|DWORD  |stack:28|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 1258 88 r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1263 90 JUMP ~[] destination: B8 -> B10  <||@
  Comment 1268 block B57 null  <||@
  Comment 1268 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1268 564 stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1272 566 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1272 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1282 568 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1287 570 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1292 572 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:130, 35]  <||@
  Comment 1292 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1297 [r13:0, stack:16]at java.lang.Integer.getChars(Integer.java:465) [bci: 130, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 1298 574 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1301 576 rdi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1301 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1311 578 rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 1315 580 JUMP ~[] destination: B57 -> B59  <||@
  Comment 1320 block B1 null  <||@
  Comment 1320 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 14 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"-2147483648"]  <||@
  Comment 1320 {Object[String:"-2147483648"]}  <||@
  Comment 1330 16 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1339 12  <||@
  Comment 1349 block B62 null  <||@
  Comment 1349 630 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1349 632 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1352 634 r10|DWORD = MOVE input: int[-63515|0xffffffffffff07e5]  <||@
  Comment 1358 636 JUMP ~[] destination: B62 -> B64  <||@
  Comment 1358 block B64 null  <||@
  Comment 1358 646 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1358 648 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1365 650 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1372 652 DEOPT info [bci:75, 35]  <||@
  Comment 1372 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1377 [r13:0]at java.lang.Integer.getChars(Integer.java:456) [bci: 75, duringCall: false, rethrow: false]
              |0         |1  |2             |3  |4  |5          |6         
     locals:  |r8|DWORD  |-  |r13|QWORD[.]  |-  |-  |r11|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 1378 block B73 null  <||@
  Comment 1378 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1378 746 MOV [r15|QWORD + 668] y: -57883 size: DWORD  <||@
  Comment 1389 748 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1396 750 DEOPT info [bci:2, 24]  <||@
  Comment 1396 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1401 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r13|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 24, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 1402 block B23 null  <||@
  Comment 1402 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1402 218 MOV [r15|QWORD + 668] y: -55067 size: DWORD  <||@
  Comment 1413 220 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1420 222 DEOPT info [bci:2, 15]  <||@
  Comment 1420 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1425 []at java.lang.Integer.stringSize(Integer.java:473) [bci: 2, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |r14|DWORD  |r10|DWORD 
  at java.lang.Integer.toString(Integer.java:400) [bci: 15, duringCall: true, rethrow: false]
              |0          |1  |2 
     locals:  |r13|DWORD  |-  |-   <||@
  Comment 1426 block B60 null  <||@
  Comment 1426 610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1426 612 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1431 614 MOV [r15|QWORD + 668] y: -66075 size: DWORD  <||@
  Comment 1442 616 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1449 618 DEOPT info [bci:107, 35]  <||@
  Comment 1449 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1454 [r13:0]at java.lang.Integer.getChars(Integer.java:459) [bci: 107, duringCall: false, rethrow: false]
              |0               |1  |2             |3         |4          |5         |6         
     locals:  |stack:44|DWORD  |-  |r13|QWORD[.]  |r8|DWORD  |rbx|DWORD  |r9|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 1455 block B63 null  <||@
  Comment 1455 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1455 640 r8|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1458 642 r10|DWORD = MOVE input: int[-60443|0xffffffffffff13e5]  <||@
  Comment 1464 644 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1466 block B71 null  <||@
  Comment 1466 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1466 732 r8|DWORD = MOVE input: int[-68635|0xfffffffffffef3e5]  <||@
  Comment 1472 734 JUMP ~[] destination: B71 -> B72  <||@
  Comment 1472 block B72 null  <||@
  Comment 1472 736 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1472 738 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 1479 740 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1486 742 DEOPT info [bci:17, 35]  <||@
  Comment 1486 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1491 [r13:0]at java.lang.Integer.getChars(Integer.java:444) [bci: 17, duringCall: false, rethrow: false]
              |0          |1  |2             |3  |4  |5          |6         
     locals:  |r10|DWORD  |-  |r13|QWORD[.]  |-  |-  |r11|DWORD  |r14|DWORD 
  at java.lang.Integer.toString(Integer.java:402) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2            
     locals:  |-  |-  |r13|QWORD[.]   <||@
  Comment 1492 block B70 null  <||@
  Comment 1492 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1492 726 r8|DWORD = MOVE input: int[-71195|0xfffffffffffee9e5]  <||@
  Comment 1498 728 JUMP ~[] destination: B70 -> B72  <||@
  Comment 1500 block B69 null  <||@
  Comment 1500 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1500 720 r8|DWORD = MOVE input: int[-74523|0xfffffffffffedce5]  <||@
  Comment 1506 722 JUMP ~[] destination: B69 -> B72  <||@
  Comment 1508 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1508 4  <||@
  Comment 1514 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1514 5  <||@
  HexCodeFile>>> <|@
end_nmethod
