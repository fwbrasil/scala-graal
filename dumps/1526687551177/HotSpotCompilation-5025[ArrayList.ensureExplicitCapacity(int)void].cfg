begin_compilation
  name " HotSpotCompilation-5025[java.util.ArrayList.ensureExplicitCapacity(int)]"
  method "HotSpotCompilation-5025[java.util.ArrayList.ensureExplicitCapacity(int)]"
  date 1526687580384
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a537 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a537  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v545 v546 ?8 j284 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a537 v82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a537 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 12]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
=== Succesors ===
next: i538 
=== Usages ===
v550 v548 v547 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v546 #next: i538  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?8 i11 i83 i31 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 235
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a537 
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v547 
=== Succesors ===
next: i539 
=== Usages ===
i11 i29 i30 i144 v115 
=== Predecessor ===
a537 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v547 #next: i539  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i539 v68 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i539 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
=== Succesors ===
next: v68 
=== Usages ===
i6 
=== Predecessor ===
i538 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v545 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6 v13 i29 v44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
stamp: i32
=== Inputs ===
x: i539 
y: i5 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i539 y: i5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
value: i6 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
i539 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v545 value: i6 stateAfter: - lastLocationAccess: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
stamp: i32
=== Inputs ===
x: i2 
y: i538 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2 y: i538  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i5 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
stamp: void
trueSuccessorProbability: 0.6860121986002325
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4604354268109251660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B49" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i538 
y: i5 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i538 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32
=== Inputs ===
x: i29 
y: i538 
=== Succesors ===
=== Usages ===
i31 i83 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i29 y: i538  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32
=== Inputs ===
x: i30 
y: i2 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i30 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 v99 v276 a209 v250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i32 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i31 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v33 
trueValue: i2 
falseValue: i30 
=== Succesors ===
=== Usages ===
j293 i43 v99 v115 i144 a209 v238 i259 v250 i193 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v33 trueValue: i2 falseValue: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32
=== Inputs ===
x: i83 
y: i42 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i83 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i5 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i43 y: i5  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
a209 v169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i32 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i83 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v104 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -28513
stableDimension: 0
stamp: i32 [-28513] ⇊00000000ffff909f ⇈00000000ffff909f
stampKind: i32
value: int[-28513|0xffffffffffff909f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
v104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: j196 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j196 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j235 
=== Usages ===
v551 v552 
=== Predecessor ===
v100 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j235  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j196 
index: - 
=== Succesors ===
=== Usages ===
j235 v237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
=== Succesors ===
next: j236 
=== Usages ===
j200 v553 v554 a208 v559 v555 v556 v557 v558 
=== Predecessor ===
j196 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v551 #next: j236  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j196 
index: - 
=== Succesors ===
=== Usages ===
j236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
=== Succesors ===
next: v540 
=== Usages ===
v201 
=== Predecessor ===
j235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v552 #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a537 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
=== Succesors ===
next: v204 
=== Usages ===
v177 v242 
=== Predecessor ===
j236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v550 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:403) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i193 i260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i83 
y: i192 
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i83 y: i192  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i217 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i193 
y: i216 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i216  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i217 
y: i194 
=== Succesors ===
=== Usages ===
j199 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i217 y: i194  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i195 
=== Succesors ===
=== Usages ===
j200 v555 v556 v557 v558 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i195  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
=== Inputs ===
x: j199 
y: j235 
=== Succesors ===
=== Usages ===
v201 v237 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j199 y: j235  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j236 
y: j200 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j236 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 j265 v271 v304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v203 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v202 #falseSuccessor: v203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4569386488294672769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a209 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a209  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v540 
=== Succesors ===
=== Usages ===
a209 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a209 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?8 
arguments: v177 i83 i32 
=== Succesors ===
next: v212 
=== Usages ===
a213 
=== Predecessor ===
v202 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?8 arguments: v177 i83 i32 #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
a209 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4599271358285622101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
value: j200 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v551 value: j200 stateAfter: - lastLocationAccess: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j199 
index: j235 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j199 index: j235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
address: v555 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v555 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j199 
index: j235 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j199 index: j235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
address: v556 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v556 #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j199 
index: j235 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j199 index: j235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
address: v557 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v557 #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j199 
index: j235 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j199 index: j235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
address: v558 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v558 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j235 
index: - 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j235 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
value: i83 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v553 value: i83 stateAfter: - lastLocationAccess: - #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j235 
index: - 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j235 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v554 
value: j179 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v554 value: j179 stateAfter: - lastLocationAccess: - #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j235 
index: - 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j235 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
value: v540 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 value: v540 stateAfter: - lastLocationAccess: - #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a208 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j235 
=== Succesors ===
next: v210 
=== Usages ===
a213 
=== Predecessor ===
v207 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j235 #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
a208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v211 
values: a208 a209 
=== Succesors ===
=== Usages ===
v561 a150 v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v211 values: a208 a209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v210 v212 
=== Succesors ===
next: v415 
=== Usages ===
a213 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v210 v212 #next: v415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v307 
=== Usages ===
j416 j418 
=== Predecessor ===
v211 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a213 
index: - 
=== Succesors ===
=== Usages ===
j418 j257 j255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i538 
y: i83 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i538 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v115 
trueValue: i538 
falseValue: i83 
=== Succesors ===
=== Usages ===
j294 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v115 trueValue: i538 falseValue: i83  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
j467 v561 j298 v304 v412 j454 j460 j464 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i144  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j294 
y: j179 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j294 y: j179  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 j467 j509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j435 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j436 j485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j464 j506 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j444 j491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j459 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j460 j503 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 j452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j454 j498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j486 v499 j437 j445 v455 j492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v305 
falseSuccessor: v306 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v305 #falseSuccessor: v306  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v305 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid j418 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v415 
address: v549 
=== Succesors ===
=== Usages ===
v562 v564 v566 v568 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v415 address: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a537 
=== Succesors ===
=== Usages ===
j416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a537  <|@  <|@
f <@~|@floating>@ <|@
tid j416 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v415 
address: v548 
=== Succesors ===
=== Usages ===
v563 v565 v567 v569 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v415 address: v548  <|@  <|@
f <@~|@floating>@ <|@
tid j454 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j294 
y: j453 
=== Succesors ===
=== Usages ===
v455 v457 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j294 y: j453  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j454 
y: j220 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j454 y: j220  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v308 #falseSuccessor: v309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B48" 
    successors "B14" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v312 
values: j220 j452 
=== Succesors ===
=== Usages ===
v569 j452 v568 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: j220 j452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v311 
=== Succesors ===
next: v541 
=== Usages ===
v541 v316 v317 j445 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v311 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j416 
index: j445 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v312 
address: v569 
=== Succesors ===
next: v524 
=== Usages ===
v524 
=== Predecessor ===
v312 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v312 address: v569 #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j418 
index: j445 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
value: v541 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v568 value: v541 stateAfter: - lastLocationAccess: - #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j445 
y: j174 
=== Succesors ===
=== Usages ===
j437 j445 v457 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j445 y: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j454 
y: j452 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j454 y: j452  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v316 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v316 #falseSuccessor: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v312 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v312 #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v321 
values: j220 j452 
=== Succesors ===
=== Usages ===
v567 j444 j428 v461 v566 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v321 values: j220 j452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v320 v322 
=== Succesors ===
next: v340 
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v320 v322 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j294 
y: j459 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j294 y: j459  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j460 
y: j437 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j460 y: j437  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v339 #falseSuccessor: v338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
v542 
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j416 
index: j437 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v338 
address: v567 
=== Succesors ===
next: v522 
=== Usages ===
v522 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v338 address: v567 #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j418 
index: j437 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
value: v542 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v566 value: v542 stateAfter: - lastLocationAccess: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j437 
y: j421 
=== Succesors ===
=== Usages ===
j428 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j437 y: j421  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j428 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v332 
values: j444 j437 
=== Succesors ===
=== Usages ===
v565 j436 j419 v465 v564 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: j444 j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v331 v343 
=== Succesors ===
next: v346 
=== Usages ===
j428 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v331 v343 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid j464 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j294 
y: j463 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j294 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j464 
y: j428 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j464 y: j428  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v465 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v344 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v465 #trueSuccessor: v345 #falseSuccessor: v344  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v345 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
v543 
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j416 
index: j428 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v344 
address: v565 
=== Succesors ===
next: v520 
=== Usages ===
v520 
=== Predecessor ===
v344 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v344 address: v565 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j418 
index: j428 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
value: v543 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v564 value: v543 stateAfter: - lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j428 
y: j435 
=== Succesors ===
=== Usages ===
j419 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j428 y: j435  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v520 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j419 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v335 
values: j436 j428 
=== Succesors ===
=== Usages ===
v563 v468 v562 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: j436 j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v334 v349 
=== Succesors ===
next: v352 
=== Usages ===
j419 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v334 v349 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid j467 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j294 
y: j269 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j294 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j467 
y: j419 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j467 y: j419  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v468 
=== Succesors ===
trueSuccessor: v351 
falseSuccessor: v350 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v468 #trueSuccessor: v351 #falseSuccessor: v350  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a544 
=== Usages ===
a544 
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a544  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j416 
index: j419 
=== Succesors ===
=== Usages ===
a544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: j419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a544 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v350 
address: v563 
=== Succesors ===
next: v518 
=== Usages ===
v518 
=== Predecessor ===
v350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v350 address: v563 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j418 
index: j419 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
value: a544 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
a544 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v562 value: a544 stateAfter: - lastLocationAccess: - #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" "B23" "B22" 
    successors "B25" "B40" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v324 v337 v355 
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v324 v337 v355 #next: v471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v362 
=== Usages ===
j473 
=== Predecessor ===
v325 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i83 
=== Succesors ===
=== Usages ===
j298 v412 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i83  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j294 
y: j293 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j294 y: j293  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v412 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v360 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v412 #trueSuccessor: v361 #falseSuccessor: v360  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a213 
index: j294 
=== Succesors ===
=== Usages ===
j473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: j294  <|@  <|@
f <@~|@floating>@ <|@
tid j473 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v471 
address: v561 
=== Succesors ===
=== Usages ===
v570 v571 v572 v573 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v471 address: v561  <|@  <|@
f <@~|@floating>@ <|@
tid j298 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j293 
y: j294 
=== Succesors ===
=== Usages ===
j509 j498 j503 j506 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j293 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j298 
y: j453 
=== Succesors ===
=== Usages ===
v499 v501 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j298 y: j453  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j498 
y: j220 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j498 y: j220  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v363 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v363 #falseSuccessor: v364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v374  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
v364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B39" 
    successors "B29" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v367 
values: j220 j497 
=== Succesors ===
=== Usages ===
v573 j497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v367 values: j220 j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v366 
=== Succesors ===
next: v532 
=== Usages ===
j492 v370 v371 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v366 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j473 
index: j492 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
value: v533 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v573 value: v533 stateAfter: - lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j492 
y: j174 
=== Succesors ===
=== Usages ===
j486 j492 v501 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j492 y: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j498 
y: j497 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j498 y: j497  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v370 #falseSuccessor: v372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v367 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v367 #next: v376  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v375 
values: j220 j497 
=== Succesors ===
=== Usages ===
v572 j491 j480 v504 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j220 j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v374 v376 
=== Succesors ===
next: v394 
=== Usages ===
j486 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v374 v376 #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid j503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j298 
y: j459 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j298 y: j459  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j503 
y: j486 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j503 y: j486  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v393 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j473 
index: j486 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: j486  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
value: v536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v572 value: v536 stateAfter: - lastLocationAccess: - #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j486 
y: j421 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j486 y: j421  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j480 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v386 
values: j491 j486 
=== Succesors ===
=== Usages ===
v571 j485 j474 v507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v386 values: j491 j486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v385 v397 
=== Succesors ===
next: v400 
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v385 v397 #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid j506 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j298 
y: j463 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j298 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j506 
y: j480 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j506 y: j480  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v399 #falseSuccessor: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j473 
index: j480 
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: j480  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
value: v535 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v571 value: v535 stateAfter: - lastLocationAccess: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j480 
y: j435 
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j480 y: j435  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j474 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v389 
values: j485 j480 
=== Succesors ===
=== Usages ===
v570 v510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: j485 j480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v388 v403 
=== Succesors ===
next: v406 
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v388 v403 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j298 
y: j269 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j298 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j509 
y: j474 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j509 y: j474  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v405 #falseSuccessor: v404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j473 
index: j474 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: j474  <|@  <|@
f <@~|@floating>@ <|@
tid a534 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
value: a534 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 value: a534 stateAfter: - lastLocationAccess: - #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v367 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v367  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B37" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v378 v391 v409 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v378 v391 v409 #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i32 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i83 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j279 v560 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j256 j263 j285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v252 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v251 #falseSuccessor: v252  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
v251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: j255 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v549 
=== Succesors ===
next: j257 
=== Usages ===
j256 
=== Predecessor ===
v252 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v549 #next: j257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v549 
=== Succesors ===
next: v266 
=== Usages ===
j262 
=== Predecessor ===
j255 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v549 #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32
=== Inputs ===
x: i83 
y: i258 
=== Succesors ===
=== Usages ===
i260 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i83 y: i258  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i259 
y: i192 
=== Succesors ===
=== Usages ===
j261 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i259 y: i192  <|@  <|@
f <@~|@floating>@ <|@
tid j261 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i260 
=== Succesors ===
=== Usages ===
j262 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i260  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
=== Inputs ===
x: j257 
y: j261 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j257 y: j261  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j262 
y: i254 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j262 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid j256 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j255 
y: i254 
=== Succesors ===
=== Usages ===
j264 j279 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j255 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j263 
y: j256 
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j263 y: j256  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j264 
y: j179 
=== Succesors ===
=== Usages ===
j268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j264 y: j179  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
j257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B45" "B47" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599327921299437416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v267 
values: j265 j270 
=== Succesors ===
=== Usages ===
j270 v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: j265 j270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v266 
=== Succesors ===
next: v274 
=== Usages ===
j268 v272 v277 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v266 #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j268 
y: j179 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j268 y: j179  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v273 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v272 #falseSuccessor: v273  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v267 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v267 #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v282 
=== Succesors ===
next: a150 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v282 #next: a150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a213 
=== Succesors ===
next: v82 
=== Usages ===
a81 
=== Predecessor ===
v280 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a213 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: Compress
stamp: n! -
=== Inputs ===
value: a150 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
value: a81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j284 
=== Usages ===
=== Predecessor ===
a150 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v546 value: a81 stateAfter: - lastLocationAccess: - #next: j284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v288 
=== Usages ===
j285 
=== Predecessor ===
v82 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j284 
y: i254 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j284 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j285 
index: j278 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j285 index: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i289 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
value: i289 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
j284 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 value: i289 stateAfter: - lastLocationAccess: - #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
=== Inputs ===
x: j268 
y: j269 
=== Succesors ===
=== Usages ===
j268 j275 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j268 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [4431593472 - 36028801450557439] ⇈00ffffffffffffff
=== Inputs ===
x: j256 
y: j278 
=== Succesors ===
=== Usages ===
j275 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j256 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
=== Inputs ===
x: j270 
y: j279 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j270 y: j279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
address: j275 
value: i32 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j275 value: i32 #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
loopBegin: v267 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -19987
stableDimension: 0
stamp: i32 [-19987] ⇊00000000ffffb1ed ⇈00000000ffffb1ed
stampKind: i32
value: int[-19987|0xffffffffffffb1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-28513 - -19987] ⇊00000000ffff908d ⇈00000000ffffb1ff
valueDescription: i32
=== Inputs ===
merge: v164 
values: i166 i171 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v164 values: i166 i171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v165 v170 
=== Succesors ===
next: v169 
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v165 v170 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?8 
actionAndReason: i167 
speculation: a123 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?8 actionAndReason: i167 speculation: a123  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a537 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a537  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v545 v546 ?8 j284 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a537 v82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a537 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 12]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
=== Succesors ===
next: i538 
=== Usages ===
v550 v548 v547 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v546 #next: i538  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?8 i11 i83 i31 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 235
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a537 
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i538 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v547 
=== Succesors ===
next: i539 
=== Usages ===
i11 i29 i30 i144 v115 
=== Predecessor ===
a537 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v547 #next: i539  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i539 v68 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i539 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
=== Succesors ===
next: v68 
=== Usages ===
i6 
=== Predecessor ===
i538 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v545 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6 v13 i29 v44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
stamp: i32
=== Inputs ===
x: i539 
y: i5 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i539 y: i5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
value: i6 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
i539 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v545 value: i6 stateAfter: - lastLocationAccess: - #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
stamp: i32
=== Inputs ===
x: i2 
y: i538 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2 y: i538  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i5 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
stamp: void
trueSuccessorProbability: 0.6860121986002325
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@597ec69d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6860121986002325 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4604354268109251660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B49" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i538 
y: i5 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i538 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32
=== Inputs ===
x: i29 
y: i538 
=== Succesors ===
=== Usages ===
i31 i83 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i29 y: i538  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32
=== Inputs ===
x: i30 
y: i2 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i30 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 v99 v276 a209 v250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i32 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i31 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v33 
trueValue: i2 
falseValue: i30 
=== Succesors ===
=== Usages ===
j293 i43 v99 v115 i144 a209 v238 i259 v250 i193 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v33 trueValue: i2 falseValue: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[-2147483639|0xffffffff80000009] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i43 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32
=== Inputs ===
x: i83 
y: i42 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i83 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i5 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i43 y: i5  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
a209 v169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v8|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i32 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i83 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v104 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
result int[-28513|0xffffffffffff909f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -28513
stableDimension: 0
stamp: i32 [-28513] ⇊00000000ffff909f ⇈00000000ffff909f
stampKind: i32
value: int[-28513|0xffffffffffff909f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
v104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28513|0xffffffffffff909f]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: j196 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j196 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j235 
=== Usages ===
v551 v552 
=== Predecessor ===
v100 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j235  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j196 
index: - 
=== Succesors ===
=== Usages ===
j235 v237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j235 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
=== Succesors ===
next: j236 
=== Usages ===
j200 v553 v554 a208 v559 v555 v556 v557 v558 
=== Predecessor ===
j196 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v551 #next: j236  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j196 
index: - 
=== Succesors ===
=== Usages ===
j236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j196 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j236 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
=== Succesors ===
next: v540 
=== Usages ===
v201 
=== Predecessor ===
j235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v552 #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [v2|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a537 
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v540 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
=== Succesors ===
next: v204 
=== Usages ===
v177 v242 
=== Predecessor ===
j236 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v550 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:403) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i193 i260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i83 
y: i192 
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i83 y: i192  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i217 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i193 
y: i216 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i216  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i217 
y: i194 
=== Succesors ===
=== Usages ===
j199 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i217 y: i194  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i195 
=== Succesors ===
=== Usages ===
j200 v555 v556 v557 v558 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i195  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
=== Inputs ===
x: j199 
y: j235 
=== Succesors ===
=== Usages ===
v201 v237 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j199 y: j235  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j236 
y: j200 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j236 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v239 j265 v271 v304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v202 
falseSuccessor: v203 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v202 #falseSuccessor: v203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v2|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v10|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v15|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = AND v16|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4569386488294672769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a209 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a209  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v540 
=== Succesors ===
=== Usages ===
a209 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a209 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?8 
arguments: v177 i83 i32 
=== Succesors ===
next: v212 
=== Usages ===
a213 
=== Predecessor ===
v202 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?8 arguments: v177 i83 i32 #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
a209 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4599271358285622101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
value: j200 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v551 value: j200 stateAfter: - lastLocationAccess: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result [v18|QWORD + v12|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j199 
index: j235 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j199 index: j235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
address: v555 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v555 #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
result [v18|QWORD + v12|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j199 
index: j235 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j199 index: j235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
address: v556 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v556 #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
result [v18|QWORD + v12|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j199 
index: j235 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j199 index: j235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
address: v557 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v557 #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [v18|QWORD + v12|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j199 
index: j235 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j199 index: j235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
address: v558 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v558 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
result [v12|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j235 
index: - 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j235 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
value: i83 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v553 value: i83 stateAfter: - lastLocationAccess: - #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
result [v12|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j235 
index: - 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j235 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v554 
value: j179 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v554 value: j179 stateAfter: - lastLocationAccess: - #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [v12|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j235 
index: - 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j235 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
value: v540 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 value: v540 stateAfter: - lastLocationAccess: - #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a208 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a208 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j235 
=== Succesors ===
next: v210 
=== Usages ===
a213 
=== Predecessor ===
v207 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j235 #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
a208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 8], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a213 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v211 
values: a208 a209 
=== Succesors ===
=== Usages ===
v561 a150 v549 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v211 values: a208 a209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v210 v212 
=== Succesors ===
next: v415 
=== Usages ===
a213 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v210 v212 #next: v415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v307 
=== Usages ===
j416 j418 
=== Predecessor ===
v211 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result [v23|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a213 
index: - 
=== Succesors ===
=== Usages ===
j418 j257 j255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i538 
y: i83 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i538 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v115 
trueValue: i538 
falseValue: i83 
=== Succesors ===
=== Usages ===
j294 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v115 trueValue: i538 falseValue: i83  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
j467 v561 j298 v304 v412 j454 j460 j464 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i144  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j294 
y: j179 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j294 y: j179  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j270 j467 j509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j435 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j436 j485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j463 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j464 j506 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j444 j491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j459 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j460 j503 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j497 j452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j454 j498 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j486 v499 j437 j445 v455 j492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v305 
falseSuccessor: v306 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v305 #falseSuccessor: v306  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = CMOVE (falseValue: v10|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v25|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v305 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid j418 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v415 
address: v549 
=== Succesors ===
=== Usages ===
v562 v564 v566 v568 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v415 address: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a537 
=== Succesors ===
=== Usages ===
j416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a537  <|@  <|@
f <@~|@floating>@ <|@
tid j416 <|@
result v27|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v415 
address: v548 
=== Succesors ===
=== Usages ===
v563 v565 v567 v569 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v415 address: v548  <|@  <|@
f <@~|@floating>@ <|@
tid j454 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j294 
y: j453 
=== Succesors ===
=== Usages ===
v455 v457 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j294 y: j453  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j454 
y: j220 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j454 y: j220  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v308 #falseSuccessor: v309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B48" 
    successors "B14" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j445 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v312 
values: j220 j452 
=== Succesors ===
=== Usages ===
v569 j452 v568 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v312 values: j220 j452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v311 
=== Succesors ===
next: v541 
=== Usages ===
v541 v316 v317 j445 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v311 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v27|QWORD[*] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j416 
index: j445 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
result v30|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v312 
address: v569 
=== Succesors ===
next: v524 
=== Usages ===
v524 
=== Predecessor ===
v312 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v312 address: v569 #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v26|QWORD[.] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j418 
index: j445 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
value: v541 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v568 value: v541 stateAfter: - lastLocationAccess: - #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j445 
y: j174 
=== Succesors ===
=== Usages ===
j437 j445 v457 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j445 y: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j454 
y: j452 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j454 y: j452  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v316 
falseSuccessor: v318 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v316 #falseSuccessor: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V256_DWORD[........] = H [v27|QWORD[*] + v29|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v29|QWORD * 4], input: v30|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v29|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v312 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v312 #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j437 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v321 
values: j220 j452 
=== Succesors ===
=== Usages ===
v567 j444 j428 v461 v566 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v321 values: j220 j452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v320 v322 
=== Succesors ===
next: v340 
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v320 v322 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j294 
y: j459 
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j294 y: j459  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j460 
y: j437 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j460 y: j437  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v339 #falseSuccessor: v338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v25|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
v542 
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v27|QWORD[*] + v32|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j416 
index: j437 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
result v34|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v338 
address: v567 
=== Succesors ===
next: v522 
=== Usages ===
v522 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v338 address: v567 #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [v26|QWORD[.] + v32|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j418 
index: j437 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
value: v542 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v566 value: v542 stateAfter: - lastLocationAccess: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid j444 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j437 
y: j421 
=== Succesors ===
=== Usages ===
j428 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j437 y: j421  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
v522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V128_DWORD[....] = H [v27|QWORD[*] + v32|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v32|QWORD * 4], input: v34|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v32|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j428 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v332 
values: j444 j437 
=== Succesors ===
=== Usages ===
v565 j436 j419 v465 v564 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v332 values: j444 j437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v331 v343 
=== Succesors ===
next: v346 
=== Usages ===
j428 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v331 v343 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid j464 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j294 
y: j463 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j294 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j464 
y: j428 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j464 y: j428  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v465 
=== Succesors ===
trueSuccessor: v345 
falseSuccessor: v344 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v465 #trueSuccessor: v345 #falseSuccessor: v344  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v25|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v345 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
v543 
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v27|QWORD[*] + v36|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j416 
index: j428 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
result v38|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v344 
address: v565 
=== Succesors ===
next: v520 
=== Usages ===
v520 
=== Predecessor ===
v344 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v344 address: v565 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v26|QWORD[.] + v36|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j418 
index: j428 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
value: v543 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v564 value: v543 stateAfter: - lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j428 
y: j435 
=== Succesors ===
=== Usages ===
j419 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j428 y: j435  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v520 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|V64_DWORD[..] = H [v27|QWORD[*] + v36|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v36|QWORD * 4], input: v38|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v36|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j419 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v335 
values: j436 j428 
=== Succesors ===
=== Usages ===
v563 v468 v562 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: j436 j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v334 v349 
=== Succesors ===
next: v352 
=== Usages ===
j419 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v334 v349 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid j467 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j294 
y: j269 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j294 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j467 
y: j419 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j467 y: j419  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v468 
=== Succesors ===
trueSuccessor: v351 
falseSuccessor: v350 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v468 #trueSuccessor: v351 #falseSuccessor: v350  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = DEC v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a544 
=== Usages ===
a544 
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a544  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v27|QWORD[*] + v40|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j416 
index: j419 
=== Succesors ===
=== Usages ===
a544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j416 index: j419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a544 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v350 
address: v563 
=== Succesors ===
next: v518 
=== Usages ===
v518 
=== Predecessor ===
v350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v350 address: v563 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [v26|QWORD[.] + v40|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j418 
index: j419 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
value: a544 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
a544 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v562 value: a544 stateAfter: - lastLocationAccess: - #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v27|QWORD[*] + v40|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v40|QWORD * 4], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" "B23" "B22" 
    successors "B25" "B40" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v324 v337 v355 
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v324 v337 v355 #next: v471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v362 
=== Usages ===
j473 
=== Predecessor ===
v325 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v362  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i83 
=== Succesors ===
=== Usages ===
j298 v412 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i83  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j294 
y: j293 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j294 y: j293  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v412 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v360 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v412 #trueSuccessor: v361 #falseSuccessor: v360  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v23|QWORD[.] + v25|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a213 
index: j294 
=== Succesors ===
=== Usages ===
j473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a213 index: j294  <|@  <|@
f <@~|@floating>@ <|@
tid j473 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v471 
address: v561 
=== Succesors ===
=== Usages ===
v570 v571 v572 v573 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v471 address: v561  <|@  <|@
f <@~|@floating>@ <|@
tid j298 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j293 
y: j294 
=== Succesors ===
=== Usages ===
j509 j498 j503 j506 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j293 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j298 
y: j453 
=== Succesors ===
=== Usages ===
v499 v501 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j298 y: j453  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j498 
y: j220 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j498 y: j220  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v363 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v363 #falseSuccessor: v364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = LEA [v23|QWORD[.] + v25|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = SUB (x: v43|QWORD, ~y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v374  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
result v47|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
v364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B39" 
    successors "B29" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j492 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v367 
values: j220 j497 
=== Succesors ===
=== Usages ===
v573 j497 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v367 values: j220 j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v366 
=== Succesors ===
next: v532 
=== Usages ===
j492 v370 v371 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v366 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v44|QWORD[.] + v48|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j473 
index: j492 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
value: v533 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v573 value: v533 stateAfter: - lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j492 
y: j174 
=== Succesors ===
=== Usages ===
j486 j492 v501 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j492 y: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j498 
y: j497 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j498 y: j497  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v370 #falseSuccessor: v372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v48|QWORD * 4], input: v47|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v367 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v367 #next: v376  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j486 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v375 
values: j220 j497 
=== Succesors ===
=== Usages ===
v572 j491 j480 v504 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v375 values: j220 j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v374 v376 
=== Succesors ===
next: v394 
=== Usages ===
j486 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v374 v376 #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid j503 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j298 
y: j459 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j298 y: j459  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j503 
y: j486 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j503 y: j486  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v393 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v45|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v44|QWORD[.] + v50|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j473 
index: j486 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: j486  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result v52|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
value: v536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v572 value: v536 stateAfter: - lastLocationAccess: - #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j486 
y: j421 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j486 y: j421  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v50|QWORD * 4], input: v52|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j480 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v386 
values: j491 j486 
=== Succesors ===
=== Usages ===
v571 j485 j474 v507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v386 values: j491 j486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v385 v397 
=== Succesors ===
next: v400 
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v385 v397 #next: v400  <|@  <|@
f <@~|@floating>@ <|@
tid j506 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j298 
y: j463 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j298 y: j463  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j506 
y: j480 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j506 y: j480  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v399 #falseSuccessor: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v45|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v44|QWORD[.] + v54|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j473 
index: j480 
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: j480  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
result v56|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
value: v535 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v571 value: v535 stateAfter: - lastLocationAccess: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j480 
y: j435 
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j480 y: j435  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v54|QWORD * 4], input: v56|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v54|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j474 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v389 
values: j485 j480 
=== Succesors ===
=== Usages ===
v570 v510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: j485 j480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v388 v403 
=== Succesors ===
next: v406 
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v388 v403 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j298 
y: j269 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j298 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j509 
y: j474 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j509 y: j474  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v405 #falseSuccessor: v404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = DEC v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
v405 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v44|QWORD[.] + v58|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j473 
index: j474 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: j474  <|@  <|@
f <@~|@floating>@ <|@
tid a534 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
value: a534 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 value: a534 stateAfter: - lastLocationAccess: - #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD[.] + v58|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v367 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v367  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B39 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B37" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v378 v391 v409 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v378 v391 v409 #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i83 
y: i32 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i83 y: i32  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j279 v560 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j256 j263 j285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v252 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v251 #falseSuccessor: v252  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
v251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: j255 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j255 <|@
result [v23|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v549 
=== Succesors ===
next: j257 
=== Usages ===
j256 
=== Predecessor ===
v252 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v549 #next: j257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j257 <|@
result [v23|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v549 
=== Succesors ===
next: v266 
=== Usages ===
j262 
=== Predecessor ===
j255 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v549 #next: v266  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i259 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32
=== Inputs ===
x: i83 
y: i258 
=== Succesors ===
=== Usages ===
i260 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i83 y: i258  <|@  <|@
f <@~|@floating>@ <|@
tid i260 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i259 
y: i192 
=== Succesors ===
=== Usages ===
j261 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i259 y: i192  <|@  <|@
f <@~|@floating>@ <|@
tid j261 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i260 
=== Succesors ===
=== Usages ===
j262 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i260  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
=== Inputs ===
x: j257 
y: j261 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j257 y: j261  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result v66|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j262 
y: i254 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j262 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid j256 <|@
result v67|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j255 
y: i254 
=== Succesors ===
=== Usages ===
j264 j279 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j255 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result v69|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j263 
y: j256 
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j263 y: j256  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
result v70|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j264 
y: j179 
=== Succesors ===
=== Usages ===
j268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j264 y: j179  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
j257 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SHL v61|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVSXD v62|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = ADD (x: v64|QWORD[.], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = SHR v65|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = SHR v68|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[*] = SUB (x: v66|QWORD[*], ~y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = INC v69|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[*]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B45" "B47" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599327921299437416
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j268 <|@
result v71|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v267 
values: j265 j270 
=== Succesors ===
=== Usages ===
j270 v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: j265 j270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v266 
=== Succesors ===
next: v274 
=== Usages ===
j268 v272 v277 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v266 #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j268 
y: j179 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j268 y: j179  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v273 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v272 #falseSuccessor: v273  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v71|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v267 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v267 #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
v272 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v282 
=== Succesors ===
next: a150 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v282 #next: a150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a150 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a213 
=== Succesors ===
next: v82 
=== Usages ===
a81 
=== Predecessor ===
v280 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a213 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
result v72|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
op: Compress
stamp: n! -
=== Inputs ===
value: a150 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
value: a81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j284 
=== Usages ===
=== Predecessor ===
a150 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v546 value: a81 stateAfter: - lastLocationAccess: - #next: j284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j284 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v288 
=== Usages ===
j285 
=== Predecessor ===
v82 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
result v73|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j284 
y: i254 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j284 y: i254  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
result [v73|QWORD[*] + v60|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j285 
index: j278 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j285 index: j278  <|@  <|@
f <@~|@floating>@ <|@
tid i289 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
value: i289 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
j284 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 value: i289 stateAfter: - lastLocationAccess: - #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v72|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v73|QWORD[*] + v60|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j270 <|@
result v74|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
=== Inputs ===
x: j268 
y: j269 
=== Succesors ===
=== Usages ===
j268 j275 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j268 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64 [4431593472 - 36028801450557439] ⇈00ffffffffffffff
=== Inputs ===
x: j256 
y: j278 
=== Succesors ===
=== Usages ===
j275 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j256 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
result v76|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: i64
=== Inputs ===
x: j270 
y: j279 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j270 y: j279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
address: j275 
value: i32 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j275 value: i32 #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
loopBegin: v267 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[*] = DEC v71|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = ADD (x: v67|QWORD[*], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = ADD (x: v75|QWORD[*], y: v74|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v76|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[*]] destination: B47 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593148872735462172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v312 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B48 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
result int[-19987|0xffffffffffffb1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -19987
stableDimension: 0
stamp: i32 [-19987] ⇊00000000ffffb1ed ⇈00000000ffffb1ed
stampKind: i32
value: int[-19987|0xffffffffffffb1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19987|0xffffffffffffb1ed]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i167 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-28513 - -19987] ⇊00000000ffff908d ⇈00000000ffffb1ff
valueDescription: i32
=== Inputs ===
merge: v164 
values: i166 i171 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v164 values: i166 i171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v165 v170 
=== Succesors ===
next: v169 
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v165 v170 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid a123 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?8 
actionAndReason: i167 
speculation: a123 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?8 actionAndReason: i167 speculation: a123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@597ec69d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v4|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6860121986002325 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4604354268109251660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B49" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v8|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v2|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v10|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v15|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = AND v16|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4599271358285622101
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 8], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = CMOVE (falseValue: v10|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v25|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v25|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v25|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V128_DWORD[....] = H [v27|QWORD[*] + v32|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v32|QWORD * 4], input: v34|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v32|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v25|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|V64_DWORD[..] = H [v27|QWORD[*] + v36|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v36|QWORD * 4], input: v38|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v36|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = DEC v25|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v27|QWORD[*] + v40|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v26|QWORD[.] + v40|QWORD * 4], y: v42|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" "B23" "B22" 
    successors "B25" "B40" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v10|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B37" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SHL v61|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVSXD v62|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = ADD (x: v64|QWORD[.], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[*] = SHR v65|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = SHR v68|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[*] = SUB (x: v66|QWORD[*], ~y: v67|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[*] = INC v69|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD[*]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[*] = DEC v71|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = ADD (x: v67|QWORD[*], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = ADD (x: v75|QWORD[*], y: v74|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v76|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[*]] destination: B47 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B45" "B47" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599327921299437416
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v71|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = LEA [v23|QWORD[.] + v25|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = SUB (x: v43|QWORD, ~y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v45|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v46|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = LEA [v45|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v50|QWORD * 4], input: v52|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v50|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v45|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|QWORD, y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v54|QWORD * 4], input: v56|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v54|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = DEC v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD[.] + v58|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v72|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v73|QWORD[*] + v60|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593148872735462172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B39 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B39" 
    successors "B29" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v44|QWORD[.] + v48|QWORD * 4], input: v47|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593148872735462172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B48 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B48" 
    successors "B14" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V256_DWORD[........] = H [v27|QWORD[*] + v29|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[.] + v29|QWORD * 4], input: v30|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v29|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4569386488294672769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-28513|0xffffffffffff909f]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19987|0xffffffffffffb1ed]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #13         // java.util.AbstractList.modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #13         // java.util.AbstractList.modCount:int
    10: iload_1       
    11: aload_0       
    12: getfield      #2          // elementData:java.lang.Object[]
    15: arraylength   
    16: isub          
    17: ifle          25
    20: aload_0       
    21: iload_1       
    22: invokespecial #18         // grow:(int)void
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@597ec69d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   16  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   18  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.6860121986002325 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4604354268109251660
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B49" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = SHR r11|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: < <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = LEA [rsi|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   64  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   68  <|@ instruction r9|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr   70  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr   74  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4599271358285622101
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  124  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [rdx|QWORD + 8], y: r8|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  136  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  156  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr  194  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction xmm0|V128_DWORD[....] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  206  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  208  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  210  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction xmm0|V64_DWORD[..] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  230  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  232  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  234  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  240  <|@ instruction r8|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[*] + r9|QWORD * 4] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B9" "B23" "B22" 
    successors "B25" "B40" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  262  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B41" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" "B37" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rcx|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  384  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  400  <|@ instruction r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD[.] = ADD (x: r10|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  410  <|@ instruction r10|QWORD[*] = SUB (x: r10|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  412  <|@ instruction r10|QWORD[*] = INC r10|QWORD[*] size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  440  <|@ instruction r10|QWORD[*] = DEC r10|QWORD[*] size: QWORD <|@ <|@
      nr  442  <|@ instruction r11|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB (x: [r11|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B45" "B47" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599327921299437416
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction CMP r10|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B24" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B9 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction r11|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  310  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  322  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  324  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  334  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  346  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  350  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  356  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r11|QWORD[.] + r8|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3 <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  432  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction MOVB (x: [r13|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  288  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B28" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593148872735462172
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B39 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B39" 
    successors "B29" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  294  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  296  <|@ instruction r8|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4593148872735462172
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B48 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B48" 
    successors "B14" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction xmm0|V256_DWORD[........] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  178  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  180  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4569386488294672769
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   98  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[-28513|0xffffffffffff909f] <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-19987|0xffffffffffffb1ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #13         // java.util.AbstractList.modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #13         // java.util.AbstractList.modCount:int
    10: iload_1       
    11: aload_0       
    12: getfield      #2          // elementData:java.lang.Object[]
    15: arraylength   
    16: isub          
    17: ifle          25
    20: aload_0       
    21: iload_1       
    22: invokespecial #18         // grow:(int)void
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@597ec69d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 0]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   16  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   18  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.6860121986002325 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4604354268109251660
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B49" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = SHR r11|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: < <|@ <|@
      nr   42  <|@ instruction rdx|DWORD = LEA [rsi|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   64  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   68  <|@ instruction r9|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr   70  <|@ instruction r9|DWORD = LEA [r9|DWORD + 23] size: DWORD <|@ <|@
      nr   72  <|@ instruction r9|DWORD = AND r9|DWORD y: -8 size: DWORD <|@ <|@
      nr   74  <|@ instruction r9|QWORD = MOVSXD r9|DWORD size: QWORD <|@ <|@
      nr   76  <|@ instruction rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4599271358285622101
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  124  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [rdx|QWORD + 8], y: r8|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B24" "B10" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  136  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  140  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  142  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B24 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B13" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  156  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  158  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  160  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B15 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B18" "B17" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr  194  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction xmm0|V128_DWORD[....] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  206  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  208  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  210  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B21" "B20" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  216  <|@ instruction r8|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  218  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  220  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction xmm0|V64_DWORD[..] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  230  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  232  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  234  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B24" "B23" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  240  <|@ instruction r8|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[*] + r9|QWORD * 4] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B8" "B23" "B21" 
    successors "B25" "B41" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  262  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B24" "B38" "B36" 
    successors "B46" "B43" 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rcx|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  384  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  400  <|@ instruction r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  402  <|@ instruction r10|QWORD[.] = ADD (x: r10|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  410  <|@ instruction r10|QWORD[*] = SUB (x: r10|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  412  <|@ instruction r10|QWORD[*] = INC r10|QWORD[*] size: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  440  <|@ instruction r10|QWORD[*] = DEC r10|QWORD[*] size: QWORD <|@ <|@
      nr  442  <|@ instruction r11|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD[*]) size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB (x: [r11|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B47 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B47" 
    successors "B46" "B47" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4599327921299437416
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction CMP r10|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B46 falseDestination: B44 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction r11|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  270  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B33" "B32" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  310  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  322  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  324  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  326  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B30" 
    successors "B36" "B35" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  334  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B36 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  346  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  350  <|@ instruction r8|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B33" 
    successors "B41" "B38" 
    xhandlers
    flags 
    probability 4594824321672066920
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  356  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  358  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B41 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4593148872735462172
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r11|QWORD[.] + r8|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" 
    successors 
    xhandlers
    flags 
    probability 4599327921299437416
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3 <|@ <|@
      nr  430  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  432  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  434  <|@ instruction MOVB (x: [r13|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4585817122417325928
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  288  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" "B28" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  294  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  296  <|@ instruction r8|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B30 falseDestination: B28 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B13" 
    successors "B15" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594824321672066920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  176  <|@ instruction xmm0|V256_DWORD[........] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  178  <|@ instruction J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  180  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  182  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B15 falseDestination: B13 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4569386488294672769
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   98  <|@ instruction stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [r13:0, stack:16]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr  102  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[-28513|0xffffffffffff909f] <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B4" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  462  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  466  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: r13|QWORD[.] r14|DWORD 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-19987|0xffffffffffffb1ed] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #13         // java.util.AbstractList.modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #13         // java.util.AbstractList.modCount:int
    10: iload_1       
    11: aload_0       
    12: getfield      #2          // elementData:java.lang.Object[]
    15: arraylength   
    16: isub          
    17: ifle          25
    20: aload_0       
    21: iload_1       
    22: invokespecial #18         // grow:(int)void
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf2458b5514468b1cd50c000000be010000004103750c4189750c418bf6412bf383fe010f8d13000000488b6c24204883c428850500000000c5f877c3418bf3d1ee4103f38bd6412bd685d2410f4cf68d960900008083fa010f8d9e02000085f60f8c7c020000498b5760498b4f70468b04d508000000448bce41c1e102458d49174183e1f84d63c9498bd94803da483bd90f870e02000049895f60410f188411c0000000410f18841100010000410f18841140010000410f1884118001000089720c48c7020100000044894208413bf38bce410f4fcb4863c94883f9010f8c770000004c8d5a104e8d14d5100000004c8d41f84d85c049c7c1000000000f8d880100004c8d41fc4d3bc80f8f13000000c4817a6f048ac4817a7f048b4d8d41044d8bc84c8d41fe4d3bc80f8f13000000c481f96e048ac481f97e048b4d8d41024d8bc84c8bc149ffc84d3bc80f8f08000000478b148a4789148b4c63d64c3bd10f8f6000000048b900c024080100000085f60f84bb000000ffcec1e6024863f64c8d52104c03d649c1ea09488d721048c1ee094c2bd649ffc2e91c0000000f1f8000000000660f1f44000049ffca4c8bde4c03d94d03da4588234983fa010f8c6f000000ebe54c8d5c8a104c2bd1498d4af84885c90f8d7c00000049c7c000000000498d4afc4c3bc10f8f11000000c5f9efc0c4817a7f0483498d48044c8bc1498d4afe4c3bc10f8f11000000c5f9efc0c481f97e0483498d48024c8bc149ffca4d3bc20f8f3cffffff47892483e933ffffff48c1ea034189551449c1ed094588640d00488b6c24204883c428850500000000c5f877c3c5f9efc049c7c000000000660f1f840000000000c4817e7f04834d8d40084c3bc17ef1e963ffffff660f1f440000660f1f440000c4817e6f048ac4817e7f048b4d8d49084d3bc87eebe95efeffff44895c2414448954241049c1e003448bce498bf0418bd1b90000000044894c240ce80000000090488bd08b74240c448b5c2414448b542410e9ebfdffff41ba9f90ffff4589979c0200004d89a7a8020000e8000000009041baedb1ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@597ec69d slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 58 12 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 58 [r10:0, r13:0]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 71 16 rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 75 18 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 79 20 rsi|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 85 22 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 88 24 BRANCH trueDestinationProbability: 0.6860121986002325 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 94 block B1 null  <||@
  Comment 94 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 28 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 103 12  <||@
  Comment 113 block B2 null  <||@
  Comment 113 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 32 rsi|DWORD = SHR r11|DWORD size: DWORD  <||@
  Comment 118 34 rsi|DWORD = ADD (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 121 36 rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 126 38 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 128 40 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: <  <||@
  Comment 132 42 rdx|DWORD = LEA [rsi|DWORD - 2147483639] size: DWORD  <||@
  Comment 138 44 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 141 46 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B49  <||@
  Comment 147 block B3 null  <||@
  Comment 147 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 50 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 149 52 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 155 block B5 null  <||@
  Comment 155 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 62 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 159 64 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 163 66 r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 171 68 r9|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 178 70 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 182 72 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 186 74 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 189 76 rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 195 78 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 198 80 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 204 block B7 null  <||@
  Comment 204 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 204 114 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 208 116 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 217 118 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 226 120 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 235 122 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 244 124 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 247 126 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 254 128 MOV (x: [rdx|QWORD + 8], y: r8|DWORD) size: DWORD  <||@
  Comment 258 130 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 258 132 JUMP ~[] destination: B7 -> B8  <||@
  Comment 258 block B8 null  <||@
  Comment 258 134 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 258 136 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 261 138 rcx|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 267 140 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 270 142 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 274 144 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B24 falseDestination: B8 -> B10  <||@
  Comment 280 block B10 null  <||@
  Comment 280 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 152 r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 284 154 r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 292 156 r8|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 296 158 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 299 164 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 306 160 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B15 falseDestination: B10 -> B13  <||@
  Comment 312 block B15 null  <||@
  Comment 312 190 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 312 192 r8|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 316 194 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 319 196 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17  <||@
  Comment 325 block B17 null  <||@
  Comment 325 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 204 xmm0|V128_DWORD[....] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 331 206 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 337 208 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 341 210 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 344 212 JUMP ~[] destination: B17 -> B18  <||@
  Comment 344 block B18 null  <||@
  Comment 344 214 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 344 216 r8|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 348 218 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 351 220 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20  <||@
  Comment 357 block B20 null  <||@
  Comment 357 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 228 xmm0|V64_DWORD[..] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 363 230 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 369 232 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 373 234 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 376 236 JUMP ~[] destination: B20 -> B21  <||@
  Comment 376 block B21 null  <||@
  Comment 376 238 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 376 240 r8|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 382 242 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 385 244 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 391 block B23 null  <||@
  Comment 391 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 252 r10|DWORD[.] = MOV [r10|QWORD[*] + r9|QWORD * 4] size: DWORD  <||@
  Comment 395 254 MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 399 256 JUMP ~[] destination: B23 -> B24  <||@
  Comment 399 block B24 null  <||@
  Comment 399 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 260 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 402 262 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 405 264 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B41  <||@
  Comment 411 block B41 null  <||@
  Comment 411 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 382 rcx|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 421 384 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 423 386 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43  <||@
  Comment 429 block B43 null  <||@
  Comment 429 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 394 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 431 396 rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 434 398 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 437 400 r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 441 402 r10|QWORD[.] = ADD (x: r10|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 444 404 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 448 406 rsi|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 452 408 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 456 410 r10|QWORD[*] = SUB (x: r10|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 459 412 r10|QWORD[*] = INC r10|QWORD[*] size: QWORD  <||@
  Comment 462 414 JUMP ~[] destination: B43 -> B44  <||@
  Comment 467 block B47 loop 2 depth 1 header:267|LoopBegin  <||@
  Comment 467 438 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 480 440 r10|QWORD[*] = DEC r10|QWORD[*] size: QWORD  <||@
  Comment 483 442 r11|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 489 444 r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD[*]) size: QWORD  <||@
  Comment 492 446 MOVB (x: [r11|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 495 448 JUMP ~[] destination: B47 -> B44  <||@
  Comment 495 block B44 loop 2 depth 1 header:267|LoopBegin  <||@
  Comment 495 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 495 418 CMP r10|QWORD[*] y: 1 size: QWORD  <||@
  Comment 499 420 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B46 falseDestination: B44 -> B47  <||@
  Comment 507 block B25 null  <||@
  Comment 507 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 268 r11|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 512 270 r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 515 272 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 519 274 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 522 276 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 528 block B26 null  <||@
  Comment 528 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 528 280 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 535 282 JUMP ~[] destination: B26 -> B30  <||@
  Comment 535 block B30 null  <||@
  Comment 535 306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 535 308 rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 539 310 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 542 312 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32  <||@
  Comment 548 block B32 null  <||@
  Comment 548 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 320 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 552 322 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 558 324 rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 562 326 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 565 328 JUMP ~[] destination: B32 -> B33  <||@
  Comment 565 block B33 null  <||@
  Comment 565 330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 565 332 rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 569 334 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 572 336 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B36 falseDestination: B33 -> B35  <||@
  Comment 578 block B35 null  <||@
  Comment 578 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 578 344 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 582 346 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 588 348 rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 592 350 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 595 352 JUMP ~[] destination: B35 -> B36  <||@
  Comment 595 block B36 null  <||@
  Comment 595 354 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 595 356 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 598 358 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 601 360 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B41 falseDestination: B36 -> B38  <||@
  Comment 607 block B38 null  <||@
  Comment 607 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 607 368 MOV (x: [r11|QWORD[.] + r8|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 611 370 JUMP ~[] destination: B38 -> B41  <||@
  Comment 616 block B46 null  <||@
  Comment 616 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 616 428 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3  <||@
  Comment 620 430 MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 624 432 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 628 434 MOVB (x: [r13|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 633 436 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 642 12  <||@
  Comment 652 block B27 null  <||@
  Comment 652 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 652 286 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 656 288 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 663 290 JUMP ~[] destination: B27 -> B28  <||@
  Comment 663 block B28 loop 1 depth 1 header:367|LoopBegin  <||@
  Comment 663 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 672 294 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 678 296 r8|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 682 298 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 685 300 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B30 falseDestination: B28 -> B28  <||@
  Comment 692 block B13 loop 0 depth 1 header:312|LoopBegin  <||@
  Comment 692 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 704 176 xmm0|V256_DWORD[........] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 710 178 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 716 180 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 720 182 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 723 184 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B15 falseDestination: B13 -> B13  <||@
  Comment 730 block B6 null  <||@
  Comment 730 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 730 84 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 735 86 stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 740 88 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3  <||@
  Comment 744 90 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 747 92 rsi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 750 94 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 753 96 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 758 98 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 763 100 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10]  <||@
  Comment 763 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 768 [r13:0, stack:16]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 769 102 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 772 104 rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 776 106 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 781 108 r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 786 110 JUMP ~[] destination: B6 -> B8  <||@
  Comment 791 block B4 null  <||@
  Comment 791 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 791 56 r10|DWORD = MOVE input: int[-28513|0xffffffffffff909f]  <||@
  Comment 797 58 JUMP ~[] destination: B4 -> B50  <||@
  Comment 797 block B50 null  <||@
  Comment 797 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 797 462 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 804 464 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 811 466 DEOPT info [bci:10]  <||@
  Comment 811 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 816 [r13:0]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 817 block B49 null  <||@
  Comment 817 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 456 r10|DWORD = MOVE input: int[-19987|0xffffffffffffb1ed]  <||@
  Comment 823 458 JUMP ~[] destination: B49 -> B50  <||@
  Comment 825 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 825 4  <||@
  Comment 831 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 831 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5025[java.util.ArrayList.ensureExplicitCapacity(int)]"
  method "HotSpotCompilation-5025[java.util.ArrayList.ensureExplicitCapacity(int)]"
  date 1526687580690
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11984a8a0 448b560849c1e203493bc20f85afa51bff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf2458b5514468b1cd50c000000be010000004103750c4189750c418bf6412bf383fe010f8d13000000488b6c24204883c4288505f91669f0c5f877c3418bf3d1ee4103f38bd6412bd685d2410f4cf68d960900008083fa010f8d9e02000085f60f8c7c020000498b5760498b4f70468b04d508000000448bce41c1e102458d49174183e1f84d63c9498bd94803da483bd90f870e02000049895f60410f188411c0000000410f18841100010000410f18841140010000410f1884118001000089720c48c7020100000044894208413bf38bce410f4fcb4863c94883f9010f8c770000004c8d5a104e8d14d5100000004c8d41f84d85c049c7c1000000000f8d880100004c8d41fc4d3bc80f8f13000000c4817a6f048ac4817a7f048b4d8d41044d8bc84c8d41fe4d3bc80f8f13000000c481f96e048ac481f97e048b4d8d41024d8bc84c8bc149ffc84d3bc80f8f08000000478b148a4789148b4c63d64c3bd10f8f6000000048b900c024080100000085f60f84bb000000ffcec1e6024863f64c8d52104c03d649c1ea09488d721048c1ee094c2bd649ffc2e91c0000000f1f8000000000660f1f44000049ffca4c8bde4c03d94d03da4588234983fa010f8c6f000000ebe54c8d5c8a104c2bd1498d4af84885c90f8d7c00000049c7c000000000498d4afc4c3bc10f8f11000000c5f9efc0c4817a7f0483498d48044c8bc1498d4afe4c3bc10f8f11000000c5f9efc0c481f97e0483498d48024c8bc149ffca4d3bc20f8f3cffffff47892483e933ffffff48c1ea034189551449c1ed094588640d00488b6c24204883c4288505de1469f0c5f877c3c5f9efc049c7c000000000660f1f840000000000c4817e7f04834d8d40084c3bc17ef1e963ffffff660f1f440000660f1f440000c4817e6f048ac4817e7f048b4d8d49084d3bc87eebe95efeffff44895c2414448954241049c1e003448bce498bf0418bd1b90000000044894c240ce8009791ff90488bd08b74240c448b5c2414448b542410e9ebfdffff41ba9f90ffff4589979c0200004d89a7a8020000e82eba1bff9041baedb1ffffebe4e8c24b5bff90e81cb91bff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@597ec69d slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 r10|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 58 12 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 58 [r10:0, r13:0]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 14 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 71 16 rsi|DWORD = ADD (x: rsi|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 75 18 MOV (x: [r13|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 79 20 rsi|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 85 22 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 88 24 BRANCH trueDestinationProbability: 0.6860121986002325 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 94 block B1 null  <||@
  Comment 94 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 28 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 103 12  <||@
  Comment 113 block B2 null  <||@
  Comment 113 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 32 rsi|DWORD = SHR r11|DWORD size: DWORD  <||@
  Comment 118 34 rsi|DWORD = ADD (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 121 36 rdx|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 126 38 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 128 40 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r14|DWORD) condition: <  <||@
  Comment 132 42 rdx|DWORD = LEA [rsi|DWORD - 2147483639] size: DWORD  <||@
  Comment 138 44 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 141 46 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B49  <||@
  Comment 147 block B3 null  <||@
  Comment 147 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 147 50 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 149 52 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 155 block B5 null  <||@
  Comment 155 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 62 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 159 64 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 163 66 r8|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 171 68 r9|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 178 70 r9|DWORD = LEA [r9|DWORD + 23] size: DWORD  <||@
  Comment 182 72 r9|DWORD = AND r9|DWORD y: -8 size: DWORD  <||@
  Comment 186 74 r9|QWORD = MOVSXD r9|DWORD size: QWORD  <||@
  Comment 189 76 rbx|QWORD = ADD (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 195 78 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 198 80 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 204 block B7 null  <||@
  Comment 204 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 204 114 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 208 116 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 217 118 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 226 120 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 235 122 AMD64PREFETCH ~[r9|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 244 124 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 247 126 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 254 128 MOV (x: [rdx|QWORD + 8], y: r8|DWORD) size: DWORD  <||@
  Comment 258 130 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 258 132 JUMP ~[] destination: B7 -> B8  <||@
  Comment 258 block B8 null  <||@
  Comment 258 134 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 258 136 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 261 138 rcx|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 267 140 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 270 142 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 274 144 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B24 falseDestination: B8 -> B10  <||@
  Comment 280 block B10 null  <||@
  Comment 280 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 152 r11|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 284 154 r10|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 292 156 r8|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 296 158 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 299 164 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 306 160 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B10 -> B15 falseDestination: B10 -> B13  <||@
  Comment 312 block B15 null  <||@
  Comment 312 190 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 312 192 r8|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 316 194 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 319 196 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B18 falseDestination: B15 -> B17  <||@
  Comment 325 block B17 null  <||@
  Comment 325 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 325 204 xmm0|V128_DWORD[....] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 331 206 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 337 208 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 341 210 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 344 212 JUMP ~[] destination: B17 -> B18  <||@
  Comment 344 block B18 null  <||@
  Comment 344 214 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 344 216 r8|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 348 218 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 351 220 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20  <||@
  Comment 357 block B20 null  <||@
  Comment 357 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 228 xmm0|V64_DWORD[..] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 363 230 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 369 232 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 373 234 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 376 236 JUMP ~[] destination: B20 -> B21  <||@
  Comment 376 block B21 null  <||@
  Comment 376 238 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 376 240 r8|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 382 242 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 385 244 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 391 block B23 null  <||@
  Comment 391 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 252 r10|DWORD[.] = MOV [r10|QWORD[*] + r9|QWORD * 4] size: DWORD  <||@
  Comment 395 254 MOV (x: [r11|QWORD[.] + r9|QWORD * 4], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 399 256 JUMP ~[] destination: B23 -> B24  <||@
  Comment 399 block B24 null  <||@
  Comment 399 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 260 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 402 262 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 405 264 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B41  <||@
  Comment 411 block B41 null  <||@
  Comment 411 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 382 rcx|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 421 384 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 423 386 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43  <||@
  Comment 429 block B43 null  <||@
  Comment 429 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 394 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 431 396 rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 434 398 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 437 400 r10|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 441 402 r10|QWORD[.] = ADD (x: r10|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 444 404 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 448 406 rsi|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 452 408 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 456 410 r10|QWORD[*] = SUB (x: r10|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 459 412 r10|QWORD[*] = INC r10|QWORD[*] size: QWORD  <||@
  Comment 462 414 JUMP ~[] destination: B43 -> B44  <||@
  Comment 467 block B47 loop 2 depth 1 header:267|LoopBegin  <||@
  Comment 467 438 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 480 440 r10|QWORD[*] = DEC r10|QWORD[*] size: QWORD  <||@
  Comment 483 442 r11|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 489 444 r11|QWORD[*] = ADD (x: r11|QWORD[*], y: r10|QWORD[*]) size: QWORD  <||@
  Comment 492 446 MOVB (x: [r11|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 495 448 JUMP ~[] destination: B47 -> B44  <||@
  Comment 495 block B44 loop 2 depth 1 header:267|LoopBegin  <||@
  Comment 495 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 495 418 CMP r10|QWORD[*] y: 1 size: QWORD  <||@
  Comment 499 420 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B44 -> B46 falseDestination: B44 -> B47  <||@
  Comment 507 block B25 null  <||@
  Comment 507 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 268 r11|QWORD[.] = LEA [rdx|QWORD[.] + rcx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 512 270 r10|QWORD = SUB (x: r10|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 515 272 rcx|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 519 274 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 522 276 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 528 block B26 null  <||@
  Comment 528 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 528 280 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 535 282 JUMP ~[] destination: B26 -> B30  <||@
  Comment 535 block B30 null  <||@
  Comment 535 306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 535 308 rcx|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 539 310 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 542 312 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B33 falseDestination: B30 -> B32  <||@
  Comment 548 block B32 null  <||@
  Comment 548 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 320 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 552 322 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 558 324 rcx|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 562 326 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 565 328 JUMP ~[] destination: B32 -> B33  <||@
  Comment 565 block B33 null  <||@
  Comment 565 330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 565 332 rcx|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 569 334 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 572 336 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B36 falseDestination: B33 -> B35  <||@
  Comment 578 block B35 null  <||@
  Comment 578 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 578 344 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 582 346 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 588 348 rcx|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 592 350 r8|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 595 352 JUMP ~[] destination: B35 -> B36  <||@
  Comment 595 block B36 null  <||@
  Comment 595 354 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 595 356 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 598 358 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 601 360 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B41 falseDestination: B36 -> B38  <||@
  Comment 607 block B38 null  <||@
  Comment 607 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 607 368 MOV (x: [r11|QWORD[.] + r8|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 611 370 JUMP ~[] destination: B38 -> B41  <||@
  Comment 616 block B46 null  <||@
  Comment 616 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 616 428 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3  <||@
  Comment 620 430 MOV (x: [r13|QWORD[.] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 624 432 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 628 434 MOVB (x: [r13|QWORD[*] + rcx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 633 436 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 642 12  <||@
  Comment 652 block B27 null  <||@
  Comment 652 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 652 286 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 656 288 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 663 290 JUMP ~[] destination: B27 -> B28  <||@
  Comment 663 block B28 loop 1 depth 1 header:367|LoopBegin  <||@
  Comment 663 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 672 294 J (address: [r11|QWORD[.] + r8|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 678 296 r8|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 682 298 CMP (x: r8|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 685 300 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B28 -> B30 falseDestination: B28 -> B28  <||@
  Comment 692 block B13 loop 0 depth 1 header:312|LoopBegin  <||@
  Comment 692 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 704 176 xmm0|V256_DWORD[........] = H [r10|QWORD[*] + r9|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 710 178 J (address: [r11|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 716 180 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 720 182 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 723 184 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B13 -> B15 falseDestination: B13 -> B13  <||@
  Comment 730 block B6 null  <||@
  Comment 730 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 730 84 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 735 86 stack:32|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 740 88 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@489a797b encoding: base: 0 shift: 3  <||@
  Comment 744 90 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 747 92 rsi|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 750 94 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 753 96 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 758 98 stack:36|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 763 100 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10]  <||@
  Comment 763 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 768 [r13:0, stack:16]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 769 102 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 772 104 rsi|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 776 106 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 781 108 r10|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 786 110 JUMP ~[] destination: B6 -> B8  <||@
  Comment 791 block B4 null  <||@
  Comment 791 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 791 56 r10|DWORD = MOVE input: int[-28513|0xffffffffffff909f]  <||@
  Comment 797 58 JUMP ~[] destination: B4 -> B50  <||@
  Comment 797 block B50 null  <||@
  Comment 797 460 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 797 462 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 804 464 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 811 466 DEOPT info [bci:10]  <||@
  Comment 811 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 816 [r13:0]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r13|QWORD[.]  |r14|DWORD   <||@
  Comment 817 block B49 null  <||@
  Comment 817 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 456 r10|DWORD = MOVE input: int[-19987|0xffffffffffffb1ed]  <||@
  Comment 823 458 JUMP ~[] destination: B49 -> B50  <||@
  Comment 825 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 825 4  <||@
  Comment 831 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 831 5  <||@
  HexCodeFile>>> <|@
end_nmethod
