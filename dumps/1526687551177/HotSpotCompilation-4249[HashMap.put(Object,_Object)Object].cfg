begin_compilation
  name " HotSpotCompilation-4249[java.util.HashMap.put(Object, Object)]"
  method "HotSpotCompilation-4249[java.util.HashMap.put(Object, Object)]"
  date 1526687581115
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?38 v603 v1026 v466 ?50 ?57 v525 ?782 ?781 ?780 ?779 v553 ?778 ?112 v1042 v1049 ?777 v1043 v567 ?776 ?775 v561 ?360 v607 v1044 v587 v597 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v551 ?38 v567 a735 ?50 ?57 v525 v77 i445 ?775 ?778 ?777 v553 ?112 ?360 v128 a1001 v1048 v1025 v463 v578 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?38 a585 ?50 ?57 v525 ?781 ?780 v553 ?779 ?112 ?777 ?360 ?778 ?775 v567 a999 a1000 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.put(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 612
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v1004 i445 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1048 
=== Succesors ===
next: v424 
=== Usages ===
v1024 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1048 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1004 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1024 
=== Succesors ===
next: v1005 
=== Usages ===
v21 
=== Predecessor ===
v1004 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1024 #next: v1005  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
=== Succesors ===
next: v24 
=== Usages ===
v1031 v972 v1045 v1077 v1078 
=== Predecessor ===
v424 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1049 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1005 
y: v971 
=== Succesors ===
=== Usages ===
v301 v221 v245 v255 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1005 y: v971  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v424 
y: v20 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v424 y: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i898 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 v905 v912 v965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i892 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j893 j902 j909 j962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j896 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 v1056 v1057 v1063 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v880 v950 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j942 j1003 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a851 a926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a851 a926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j975 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j976 j985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 v567 v287 v286 v303 v302 v817 v800 a808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i59 i371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?205 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.put(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 612
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?50 ?57 ?785 ?784 ?783 ?782 ?781 ?112 ?776 ?775 ?780 ?360 ?779 ?778 ?777 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 15]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i35 i342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.put(HashMap.java:612) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v603 ?50 ?57 ?782 ?781 ?780 ?779 ?778 ?112 ?360 i180 ?777 i184 i145 ?776 ?775 a926 v607 a851 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashMap.put(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 612
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 a3 a1 
=== Succesors ===
=== Usages ===
?774 ?310 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1006 a1007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.put(HashMap.java:612) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 v46 ?50 ?57 ?781 v86 ?780 ?779 i111 ?112 v438 ?360 ?778 v139 v960 ?777 ?775 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j449 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j449  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
=== Succesors ===
next: v435 
=== Usages ===
j431 j436 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1025 #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j449 
y: j446 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j449 y: j446  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j431 
y: j447 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j431 y: j447  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v434 
falseSuccessor: v433 
=== Usages ===
=== Predecessor ===
j449 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v434 #falseSuccessor: v433  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:751) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j436 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j449 
y: i429 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j449 y: i429  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
resultBits: 32
stamp: i32
=== Inputs ===
value: j436 
=== Succesors ===
=== Usages ===
v438 i453 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i437 
y: i8 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i437 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v443 #falseSuccessor: v442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v439 v441 
=== Succesors ===
next: i445 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v439 v441 #next: i445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i445 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: a2 
=== Succesors ===
next: v455 
=== Usages ===
i453 
=== Predecessor ===
v440 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: a2 #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
i445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v451 
values: i437 i445 
=== Succesors ===
=== Usages ===
i342 i314 i341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v451 values: i437 i445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v455 
=== Succesors ===
next: a1006 
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v455 #next: a1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1006 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
=== Succesors ===
next: v340 
=== Usages ===
a786 v608 
=== Predecessor ===
v451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a1006 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1006  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i453 
y: i34 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i453 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32
=== Inputs ===
x: i342 
y: i453 
=== Succesors ===
=== Usages ===
i317 i316 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i342 y: i453  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.05863352896966776
=== Inputs ===
condition: v608 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v339 
=== Usages ===
=== Predecessor ===
a1006 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v608 #trueSuccessor: v338 #falseSuccessor: v339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4588526303270259096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 19]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606569504167815955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 10]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i28 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i28  <|@  <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@235e5b08
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?774 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: ?38 
values: - - 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?38 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v463 
stateDuring: ?774 
=== Succesors ===
next: a1007 
=== Usages ===
i35 i314 i36 
=== Predecessor ===
v23 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v463 stateDuring: ?774 #next: a1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1007 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
=== Succesors ===
next: v44 
=== Usages ===
a786 v609 
=== Predecessor ===
i28 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a1007 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1007  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i28 
y: i34 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i28 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32
=== Inputs ===
x: i28 
y: i35 
=== Succesors ===
=== Usages ===
i317 i316 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i28 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.05863352896966776
=== Inputs ===
condition: v609 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
a1007 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v609 #trueSuccessor: v42 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558547211786780941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 19]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4588610803090809244
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v305 
values: i36 i341 
=== Succesors ===
=== Usages ===
i60 ?50 i368 i369 ?775 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v305 values: i36 i341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v306 v307 
=== Succesors ===
next: a49 
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v306 v307 #next: a49  <|@  <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@3b0b92fc
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a49 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?775 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i317 a2 a3 i8 i9 - - - - - - - 
=== Succesors ===
=== Usages ===
a49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i317 a2 a3 i8 i9 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a49 <|@
d <@d|@=== Debug Properties ===
bci: 20
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v466 
stateDuring: ?775 
=== Succesors ===
next: i1008 
=== Usages ===
?50 a665 v1028 v1027 a661 
=== Predecessor ===
v305 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v466 stateDuring: ?775 #next: i1008  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 1
=== Inputs ===
outerFrameState: ?205 
values: a1 i317 a2 a3 i8 i9 - - - - - - - a49 
=== Succesors ===
=== Usages ===
v800 i1008 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i317 a2 a3 i8 i9 - - - - - - - a49  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a49 
index: - 
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a49 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 26]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?50 
guard: - 
address: v1027 
=== Succesors ===
next: v682 
=== Usages ===
v474 i666 i59 i662 
=== Predecessor ===
a49 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?50 guard: - address: v1027 #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1008 
y: i58 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1008 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32
=== Inputs ===
x: i59 
y: i317 
=== Succesors ===
=== Usages ===
v1028 i362 v474 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i59 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i1008 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i60 y: i1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v474 
=== Succesors ===
trueSuccessor: v679 
falseSuccessor: v681 
=== Usages ===
=== Predecessor ===
i1008 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v474 #trueSuccessor: v679 #falseSuccessor: v681  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4588610803090809244
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1009 
=== Usages ===
a1009 
=== Predecessor ===
v682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1009  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a49 
index: i60 
=== Succesors ===
=== Usages ===
a1009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a49 index: i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1009 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v679 
address: v1028 
=== Succesors ===
next: v65 
=== Usages ===
a789 v611 
=== Predecessor ===
v679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v679 address: v1028 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a1009 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.875149887835132
=== Inputs ===
condition: v611 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
a1009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v611 #trueSuccessor: v63 #falseSuccessor: v64  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4587555821883449523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B35" 
    xhandlers
    flags 
    probability 4575089871812560710
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v64 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid i802 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121627
stableDimension: 0
stamp: i32 [-121627] ⇊00000000fffe24e5 ⇈00000000fffe24e5
stampKind: i32
value: int[-121627|0xfffffffffffe24e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
actionAndReason: i802 
speculation: a40 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?50 actionAndReason: i802 speculation: a40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576580230021887087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 10]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B9" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a786 <|@
d <@d|@=== Debug Properties ===
stamp: n [Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v308 
values: a1007 a1006 
=== Succesors ===
=== Usages ===
a787 v1029 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: a1007 a1006  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v308 
values: i28 i453 
=== Succesors ===
=== Usages ===
?310 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i28 i453  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v308 
values: i36 i341 
=== Succesors ===
=== Usages ===
i368 i372 i369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i36 i341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v309 v311 
=== Succesors ===
next: i1010 
=== Usages ===
a786 i314 i316 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v309 v311 #next: i1010  <|@  <|@
tid ?310 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 1
=== Inputs ===
outerFrameState: ?38 
values: - - i314 
=== Succesors ===
=== Usages ===
v817 i1010 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?38 values: - - i314  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a786 
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1010 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 12]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?310 
guard: - 
address: v1029 
=== Succesors ===
next: v690 
=== Usages ===
v46 v492 i371 i666 i662 
=== Predecessor ===
v308 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?310 guard: - address: v1029 #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1010 
y: i8 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1010 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v689 
falseSuccessor: v687 
=== Usages ===
=== Predecessor ===
i1010 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v689 #falseSuccessor: v687  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid i819 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125459
stableDimension: 0
stamp: i32 [-125459] ⇊00000000fffe15ed ⇈00000000fffe15ed
stampKind: i32
value: int[-125459|0xfffffffffffe15ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B75" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1010 
y: i58 
=== Succesors ===
=== Usages ===
i372 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1010 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32
=== Inputs ===
x: i316 
y: i371 
=== Succesors ===
=== Usages ===
v1030 i362 v492 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i316 y: i371  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i372 
y: i1010 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i372 y: i1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v691 #falseSuccessor: v693  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B34" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1011 
=== Usages ===
a1011 
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1011  <|@  <|@
f <@~|@floating>@ <|@
tid a787 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a786 
=== Succesors ===
=== Usages ===
a665 a661 v1030 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a786  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a787 
index: i372 
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a787 index: i372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1011 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v691 
address: v1030 
=== Succesors ===
next: v377 
=== Usages ===
a789 v613 
=== Predecessor ===
v691 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v691 address: v1030 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a1011 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.875149887835132
=== Inputs ===
condition: v613 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
a1011 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v613 #trueSuccessor: v375 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605595681409793236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" "B32" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v355 
values: i60 i372 
=== Succesors ===
=== Usages ===
?776 v1034 v530 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: i60 i372  <|@  <|@
f <@~|@floating>@ <|@
tid a661 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v355 
values: a49 a787 
=== Succesors ===
=== Usages ===
?57 ?776 v1033 v1050 v1034 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: a49 a787  <|@  <|@
f <@~|@floating>@ <|@
tid i662 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v355 
values: i1008 i1010 
=== Succesors ===
=== Usages ===
?57 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: i1008 i1010  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v355 
values: i317 i316 
=== Succesors ===
=== Usages ===
?57 v525 v884 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: i317 i316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v356 v357 
=== Succesors ===
next: v1012 
=== Usages ===
i362 a661 i662 i369 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v357 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a661 
index: - 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a661 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1050 
=== Succesors ===
next: v698 
=== Usages ===
v974 
=== Predecessor ===
v355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1050 #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1012 
y: v973 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1012 y: v973  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i369 a2 a3 i8 i9 a661 - i662 - - - - 
=== Succesors ===
=== Usages ===
a851 v809 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i369 a2 a3 i8 i9 a661 - i662 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v974 
=== Succesors ===
trueSuccessor: v695 
falseSuccessor: v697 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v974 #trueSuccessor: v695 #falseSuccessor: v697  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B31" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1013 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a661 
index: - 
=== Succesors ===
=== Usages ===
i1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a661 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1033 
=== Succesors ===
next: v702 
=== Usages ===
v530 
=== Predecessor ===
v695 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1033 #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i362 
y: i1013 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i362 y: i1013  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v701 
=== Usages ===
=== Predecessor ===
i1013 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v699 #falseSuccessor: v701  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v221 
=== Usages ===
v541 v516 
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a661 
index: i362 
=== Succesors ===
=== Usages ===
v541 v516 j891 j901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a661 index: i362  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9298090349479812
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v220 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v217 #falseSuccessor: v220  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4605504578192990952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j839 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j839 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j858 
=== Usages ===
v1051 v1052 
=== Predecessor ===
v217 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j858  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j839 
index: - 
=== Succesors ===
=== Usages ===
j858 v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
=== Succesors ===
next: j859 
=== Usages ===
j976 j864 v1065 
=== Predecessor ===
j839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1051 #next: j859  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j839 
index: - 
=== Succesors ===
=== Usages ===
j859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
=== Succesors ===
next: v847 
=== Usages ===
v844 
=== Predecessor ===
j858 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1052 #next: v847  <|@  <|@
f <@~|@floating>@ <|@
tid j976 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j858 
y: j975 
=== Succesors ===
=== Usages ===
v844 v860 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j858 y: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j859 
y: j976 
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j859 y: j976  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v844 
=== Succesors ===
trueSuccessor: v845 
falseSuccessor: v846 
=== Usages ===
=== Predecessor ===
j859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v844 #trueSuccessor: v845 #falseSuccessor: v846  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4575844411315590747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a851 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a851 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?57 
arguments: v837 i977 i9 
=== Succesors ===
next: j852 
=== Usages ===
j852 
=== Predecessor ===
v845 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?57 arguments: v837 i977 i9 #next: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a851 
=== Succesors ===
next: v865 
=== Usages ===
j864 
=== Predecessor ===
a851 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a851 #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
j852 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605431284606513807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
value: j976 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1051 value: j976 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j858 
index: - 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j858 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1065 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1065 #next: v863  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
v856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B66" 
    xhandlers
    flags 
    probability 4605504578192990952
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j864 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v862 
values: j858 j852 
=== Succesors ===
=== Usages ===
v1054 v1053 a732 v1066 v1067 v1068 v1069 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v862 values: j858 j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v863 v865 
=== Succesors ===
next: a732 
=== Usages ===
j864 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v863 v865 #next: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j864 
=== Succesors ===
next: j876 
=== Usages ===
a739 
=== Predecessor ===
v862 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j864 #next: j876  <|@  <|@
f <@~|@floating>@ <|@
tid j1003 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v870 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1003 
index: - 
=== Succesors ===
=== Usages ===
j876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1003 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j876 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
=== Succesors ===
next: v877 
=== Usages ===
v877 
=== Predecessor ===
a732 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1075 #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
value: j876 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v880 
=== Usages ===
=== Predecessor ===
j876 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1053 value: j876 stateAfter: - lastLocationAccess: - #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
value: v980 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1054 value: v980 stateAfter: - lastLocationAccess: - #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
value: i369 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1066 value: i369 stateAfter: - lastLocationAccess: - #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a735 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
value: a735 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1067 value: a735 stateAfter: - lastLocationAccess: - #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1000 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1068 
value: a1000 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1068 value: a1000 stateAfter: - lastLocationAccess: - #next: v890  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1069 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a739 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1069 value: i8 stateAfter: - lastLocationAccess: - #next: a739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a739 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a732 
=== Succesors ===
next: v740 
=== Usages ===
a515 
=== Predecessor ===
v890 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a732 #next: v740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
a739 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid a515 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n -
=== Inputs ===
value: a739 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v699 
address: v1034 
value: a515 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j891 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v699 address: v1034 value: a515 stateAfter: - lastLocationAccess: - #next: j891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1034 
=== Succesors ===
next: v897 
=== Usages ===
j893 
=== Predecessor ===
v516 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1034 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid j893 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j891 
y: i892 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j891 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j893 
index: j896 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j893 index: j896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
value: i898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
j891 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1055 value: i898 stateAfter: - lastLocationAccess: - #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B66" 
    xhandlers
    flags 
    probability 4589013473352286057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1005 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
=== Succesors ===
next: j524 
=== Usages ===
v1032 v525 
=== Predecessor ===
v220 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1031 #next: j524  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v521 
index: - 
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v521 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1032 
=== Succesors ===
next: a67 
=== Usages ===
v525 
=== Predecessor ===
v521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1032 #next: a67  <|@  <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@5d1e9dfd
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j524 
metaspaceMethod: v521 
arguments: a1 i369 a2 a3 a40 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j524 metaspaceMethod: v521 arguments: a1 i369 a2 a3 a40  <|@  <|@
tid ?776 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 631
stackSize: 2
=== Inputs ===
outerFrameState: ?205 
values: a1 - - - - i9 - - - - - - - a661 i362 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 - - - - i9 - - - - - - - a661 i362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a67 <|@
d <@d|@=== Debug Properties ===
bci: 56
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v525 
stateDuring: ?776 
=== Succesors ===
next: v541 
=== Usages ===
a540 
=== Predecessor ===
j524 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v525 stateDuring: ?776 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid a540 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a67 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v699 
address: v1034 
value: a540 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j901 
=== Usages ===
=== Predecessor ===
a67 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v699 address: v1034 value: a540 stateAfter: - lastLocationAccess: - #next: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1034 
=== Succesors ===
next: v905 
=== Usages ===
j902 
=== Predecessor ===
v541 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1034 #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid j902 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j901 
y: i892 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j901 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j902 
index: j896 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: j896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
value: i898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
j901 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1056 value: i898 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v810 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid i811 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171035
stableDimension: 0
stamp: i32 [-171035] ⇊00000000fffd63e5 ⇈00000000fffd63e5
stampKind: i32
value: int[-171035|0xfffffffffffd63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
v701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid a806 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@659709764
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@659709764]
=== Inputs ===
=== Succesors ===
=== Usages ===
a808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i805 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171324
stableDimension: 0
stamp: i32 [-171324] ⇊00000000fffd62c4 ⇈00000000fffd62c4
stampKind: i32
value: int[-171324|0xfffffffffffd62c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
v697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i807 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-171324 - -171035] ⇊00000000fffd62c4 ⇈00000000fffd63e5
valueDescription: i32
=== Inputs ===
merge: v803 
values: i805 i811 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v803 values: i805 i811  <|@  <|@
f <@~|@floating>@ <|@
tid a808 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v803 
values: a806 a40 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v803 values: a806 a40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v804 v810 
=== Succesors ===
next: v809 
=== Usages ===
i807 a808 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v804 v810 #next: v809  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?57 
actionAndReason: i807 
speculation: a808 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?57 actionAndReason: i807 speculation: a808  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 4593133328757450890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B15" "B34" 
    successors "B36" "B43" 
    xhandlers
    flags 
    probability 4593660819361130750
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a789 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v358 
values: a1009 a1011 
=== Succesors ===
=== Usages ===
a790 v1064 v1035 v1036 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v358 values: a1009 a1011  <|@  <|@
f <@~|@floating>@ <|@
tid a665 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v358 
values: a49 a787 
=== Succesors ===
=== Usages ===
?780 ?778 v553 ?112 v561 ?777 ?360 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v358 values: a49 a787  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v358 
values: i1008 i1010 
=== Succesors ===
=== Usages ===
?360 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v358 values: i1008 i1010  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v358 
values: i317 i316 
=== Succesors ===
=== Usages ===
v561 v72 ?780 ?778 v553 ?112 v954 v123 ?777 v567 ?360 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v358 values: i317 i316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v359 v361 
=== Succesors ===
next: v1014 
=== Usages ===
a789 a665 i666 i368 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v359 v361 #next: v1014  <|@  <|@
tid ?360 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i368 a2 a3 i8 i9 a665 - i666 - - - - 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i368 a2 a3 i8 i9 a665 - i666 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a789 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?360 
guard: - 
address: v1064 
=== Succesors ===
next: i1015 
=== Usages ===
v992 
=== Predecessor ===
v358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?360 guard: - address: v1064 #next: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a789 
=== Succesors ===
=== Usages ===
i1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 65]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
=== Succesors ===
next: v75 
=== Usages ===
v72 
=== Predecessor ===
v1014 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1035 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i368 
y: i1015 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i368 y: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1014 
y: v991 
=== Succesors ===
=== Usages ===
v97 v354 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1014 y: v991  <|@  <|@
f <@~|@floating>@ <|@
tid a790 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a789 
=== Succesors ===
=== Usages ===
v553 a107 ?777 a107 a110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a789  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.08110840494462568
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
i1015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4576991090170156761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 72]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1016 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a789 
=== Succesors ===
=== Usages ===
a1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
=== Succesors ===
next: v80 
=== Usages ===
a550 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1036 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid a550 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1016 
=== Succesors ===
=== Usages ===
v77 v551 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1016  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a550 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a550  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.515014164305949
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
a1016 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4572662779961835827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B42" 
    xhandlers
    flags 
    probability 4572312201123736703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 84]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i84 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i84  <|@  <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@572064e3
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a550 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a550  <|@  <|@
tid ?777 <|@
d <@d|@=== Debug Properties ===
bci: 91
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 635
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i368 a2 a3 i8 i9 a665 a790 - - - - - 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i368 a2 a3 i8 i9 a665 a790 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
bci: 91
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v551 
stateDuring: ?777 
=== Succesors ===
next: v92 
=== Usages ===
v86 
=== Predecessor ===
v79 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v551 stateDuring: ?777 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i8 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i84 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.29439252336448596
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
i84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v90 #falseSuccessor: v91  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4564310435517883761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 5.926511260371248E-4
=== Inputs ===
condition: v992 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v992 #trueSuccessor: v95 #falseSuccessor: v96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4516196038521133477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4564306483949757166
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B64" 
    xhandlers
    flags 
    probability 4570136974156949061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" "B46" 
    xhandlers
    flags 
    probability 4592931135812492835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 5.926511260371248E-4
=== Inputs ===
condition: v992 
=== Succesors ===
trueSuccessor: v352 
falseSuccessor: v353 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v992 #trueSuccessor: v352 #falseSuccessor: v353  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4544645285104342366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 4544708510194367889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v344 v345 
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v344 v345 #next: a102  <|@  <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@677e314
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>
=== Inputs ===
arguments: a790 a1 a665 i368 a2 a3 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a790 a1 a665 i368 a2 a3  <|@  <|@
tid ?779 <|@
d <@d|@=== Debug Properties ===
bci: 123
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 - - a3 i8 i9 - - - - - - - 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 - - a3 i8 i9 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
bci: 123
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.putTreeVal
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v553 
stateDuring: ?779 
=== Succesors ===
next: v106 
=== Usages ===
a107 
=== Predecessor ===
v343 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v553 stateDuring: ?779 #next: v106  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
a102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592926236534450958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593030356238369946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v349 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v349 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B74" "B62" 
    successors "B49" "B58" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594256994591928297
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a110 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v109 
values: a790 a560 a560 
=== Succesors ===
=== Usages ===
?112 j908 v1037 ?780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v109 values: a790 a560 a560  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v109 
values: i8 i145 i145 
=== Succesors ===
=== Usages ===
?112 ?778 ?780 i145 v153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v109 values: i8 i145 i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2165941885748173
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v108 
=== Succesors ===
next: a1017 
=== Usages ===
a110 i111 v115 v130 v140 v146 v204 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v108 #next: a1017  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 134
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 641
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i368 a2 a3 i8 i9 a665 a110 - - - - i111 
=== Succesors ===
=== Usages ===
v670 a926 a1017 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i368 a2 a3 i8 i9 a665 a110 - - - - i111  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a110 
index: - 
=== Succesors ===
=== Usages ===
a1017 v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: true
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?112 
guard: - 
address: v1037 
=== Succesors ===
next: v121 
=== Usages ===
a560 v570 v1039 v1040 
=== Predecessor ===
v109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?112 guard: - address: v1037 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid a560 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a1017 
=== Succesors ===
=== Usages ===
a110 a110 ?778 a107 a107 ?780 a107 ?781 a107 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1017  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a1017 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1017  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 142]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.8180267273244242
=== Inputs ===
condition: v570 
=== Succesors ===
trueSuccessor: v115 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
a1017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v570 #trueSuccessor: v115 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B54" 
    xhandlers
    flags 
    probability 4592990254649577947
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 145]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v109 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v109 #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.7108595262922688
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v242 #falseSuccessor: v244  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590582919066734559
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j915 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j915 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j930 
=== Usages ===
v1058 v1059 
=== Predecessor ===
v242 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j930  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j915 
index: - 
=== Succesors ===
=== Usages ===
j930 v932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j915 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j930 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
=== Succesors ===
next: j931 
=== Usages ===
j985 j936 v1070 
=== Predecessor ===
j915 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1058 #next: j931  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j915 
index: - 
=== Succesors ===
=== Usages ===
j931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j915 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j931 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
=== Succesors ===
next: v923 
=== Usages ===
v920 
=== Predecessor ===
j930 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1059 #next: v923  <|@  <|@
f <@~|@floating>@ <|@
tid j985 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j930 
y: j975 
=== Succesors ===
=== Usages ===
v920 v932 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j930 y: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j931 
y: j985 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j931 y: j985  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v920 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v922 
=== Usages ===
=== Predecessor ===
j931 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v920 #trueSuccessor: v921 #falseSuccessor: v922  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4560714901228140590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a926 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a926 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?112 
arguments: v837 i977 i9 
=== Succesors ===
next: j927 
=== Usages ===
j927 
=== Predecessor ===
v921 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?112 arguments: v837 i977 i9 #next: j927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j927 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a926 
=== Succesors ===
next: v937 
=== Usages ===
j936 
=== Predecessor ===
a926 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a926 #next: v937  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
j927 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590523734082698863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
value: j985 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v929 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1058 value: j985 stateAfter: - lastLocationAccess: - #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j930 
index: - 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j930 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1070 
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1070 #next: v935  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
v929 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590582919066734559
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j936 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v934 
values: j930 j927 
=== Succesors ===
=== Usages ===
v1062 v1061 a761 v1071 v1072 v1073 v1074 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v934 values: j930 j927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v935 v937 
=== Succesors ===
next: a761 
=== Usages ===
j936 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v935 v937 #next: a761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a761 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j936 
=== Succesors ===
next: j946 
=== Usages ===
a766 
=== Predecessor ===
v934 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j936 #next: j946  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v870 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j942 
index: - 
=== Succesors ===
=== Usages ===
j946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j942 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
=== Succesors ===
next: v947 
=== Usages ===
v947 
=== Predecessor ===
a761 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1061 
value: j946 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
j946 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1061 value: j946 stateAfter: - lastLocationAccess: - #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1062 
value: v980 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1062 value: v980 stateAfter: - lastLocationAccess: - #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1071 
value: i368 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1071 value: i368 stateAfter: - lastLocationAccess: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1001 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
value: a1001 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1072 value: a1001 stateAfter: - lastLocationAccess: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a999 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
value: a999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1073 value: a999 stateAfter: - lastLocationAccess: - #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a766 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1074 value: i8 stateAfter: - lastLocationAccess: - #next: a766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a766 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a761 
=== Succesors ===
next: v767 
=== Usages ===
a562 
=== Predecessor ===
v960 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a761 #next: v767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
a766 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid a562 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n -
=== Inputs ===
value: a766 
=== Succesors ===
=== Usages ===
a792 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a766  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
v767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584975492201481209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1005 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1078 
=== Succesors ===
next: j566 
=== Usages ===
v1038 v567 
=== Predecessor ===
v244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1078 #next: j566  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v564 
index: - 
=== Succesors ===
=== Usages ===
j566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
=== Succesors ===
next: a148 
=== Usages ===
v567 
=== Predecessor ===
v564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 #next: a148  <|@  <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@610c0d54
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j566 
metaspaceMethod: v564 
arguments: a1 i368 a2 a3 a40 
=== Succesors ===
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j566 metaspaceMethod: v564 arguments: a1 i368 a2 a3 a40  <|@  <|@
tid ?780 <|@
d <@d|@=== Debug Properties ===
bci: 152
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?205 
values: a1 i368 - a3 i8 i9 a665 - - - a560 - i111 a110 
=== Succesors ===
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i368 - a3 i8 i9 a665 - - - a560 - i111 a110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a148 <|@
d <@d|@=== Debug Properties ===
bci: 152
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v567 
stateDuring: ?780 
=== Succesors ===
next: v385 
=== Usages ===
a568 
=== Predecessor ===
j566 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v567 stateDuring: ?780 #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid a568 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a148 
=== Succesors ===
=== Usages ===
a792 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a148  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
a148 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4592990254649577948
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a792 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v386 
values: a568 a562 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v386 values: a568 a562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v385 v388 
=== Succesors ===
next: v794 
=== Usages ===
a792 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v385 v388 #next: v794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1037 
value: a792 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j908 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1037 value: a792 stateAfter: - lastLocationAccess: - #next: j908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a110 
=== Succesors ===
next: v912 
=== Usages ===
j909 
=== Predecessor ===
v794 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a110 #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid j909 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j908 
y: i892 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j908 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j909 
index: j896 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: j896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1057 
value: i898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
j908 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1057 value: i898 stateAfter: - lastLocationAccess: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 160]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: 7
stableDimension: 0
stamp: i32 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i152 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i111 y: i152  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9992054427173859
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v156 #falseSuccessor: v155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592983639297550207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4546402544865866425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 165]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@485495fd
stamp: void
targetMethod: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>
=== Inputs ===
arguments: a1 a665 i368 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a665 i368  <|@  <|@
tid ?781 <|@
d <@d|@=== Debug Properties ===
bci: 169
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 - - a3 i8 i9 - - - - a560 - - 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 - - a3 i8 i9 - - - - a560 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
bci: 169
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.treeifyBin
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v561 
stateDuring: ?781 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v561 stateDuring: ?781 #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583065679873914843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 175]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1018 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1017 
=== Succesors ===
=== Usages ===
i1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
=== Succesors ===
next: v126 
=== Usages ===
v123 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1039 #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i368 
y: i1018 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i368 y: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 216]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32
=== Inputs ===
x: i111 
y: i9 
=== Succesors ===
=== Usages ===
i111 i111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i111 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.042857142857142816
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
i1018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v124 #falseSuccessor: v125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562722908703849998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 184]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1019 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1017 
=== Succesors ===
=== Usages ===
a1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
=== Succesors ===
next: v134 
=== Usages ===
a577 
=== Predecessor ===
v124 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid a577 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1019 
=== Succesors ===
=== Usages ===
v128 v578 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1019  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a577 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a577  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.03125
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
a1019 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v130 #falseSuccessor: v133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4540204910566997518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v109 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v109 #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562564156022446622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 196]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i137 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i137  <|@  <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1c87e768
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a577 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a577  <|@  <|@
tid ?778 <|@
d <@d|@=== Debug Properties ===
bci: 203
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 648
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i368 a2 a3 i8 i9 a665 - - - a560 - i111 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i368 a2 a3 i8 i9 a665 - - - a560 - i111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
bci: 203
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v578 
stateDuring: ?778 
=== Succesors ===
next: v144 
=== Usages ===
v139 
=== Predecessor ===
v133 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v578 stateDuring: ?778 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i137 
y: i8 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i137 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.510752688172043
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
i137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v143 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4558166391516011710
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
loopBegin: v109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4557954721274140542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 209]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v109 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v109 #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B37" "B45" "B60" "B56" "B57" "B63" "B42" 
    successors "B65" "B73" 
    xhandlers
    flags 
    probability 4593660819361130751
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v105 
values: a790 a102 a560 a560 a560 a560 a790 
=== Succesors ===
=== Usages ===
v587 v164 j961 v1041 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: a790 a102 a560 a560 a560 a560 a790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v104 v106 v129 v154 v161 v162 v203 
=== Succesors ===
next: v170 
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v104 v106 v129 v154 v161 v162 v203 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a107 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a107  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9260076290270692
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v168 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v169 #falseSuccessor: v168  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592995154491250473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B30" "B65" "B29" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607099210691282372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v165 v167 v384 
=== Succesors ===
next: i1020 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v165 v167 v384 #next: i1020  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1020 v590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1020 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 261]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
=== Succesors ===
next: v590 
=== Usages ===
i180 
=== Predecessor ===
v166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1042 #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 265]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32
=== Inputs ===
x: i1020 
y: i9 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1020 y: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 266]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
value: i180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1021 
=== Usages ===
=== Predecessor ===
i1020 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1042 value: i180 stateAfter: - lastLocationAccess: - #next: i1021  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1021 v593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 271]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
=== Succesors ===
next: v593 
=== Usages ===
i184 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1043 #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 275]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32
=== Inputs ===
x: i1021 
y: i9 
=== Succesors ===
=== Usages ===
v593 v188 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1021 y: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 277]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
value: i184 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1022 
=== Usages ===
=== Predecessor ===
i1021 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1043 value: i184 stateAfter: - lastLocationAccess: - #next: i1022  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1022 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.threshold
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 281]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1044 
=== Succesors ===
next: v191 
=== Usages ===
v188 
=== Predecessor ===
v593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1044 #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1022 
y: i184 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1022 y: i184  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.001922731668896338
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
i1022 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v189 #falseSuccessor: v190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4566427944378302554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 287]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a193 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a193  <|@  <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@2551d8af
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a193 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?782 <|@
d <@d|@=== Debug Properties ===
bci: 288
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 663
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 - - - - i9 - - - - - - - 
=== Succesors ===
=== Usages ===
a193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 - - - - i9 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a193 <|@
d <@d|@=== Debug Properties ===
bci: 288
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v597 
stateDuring: ?782 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v597 stateDuring: ?782 #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9042840266839618
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
a193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v252 #falseSuccessor: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4565587067925205921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
result: a40 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a40 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4550859035641603532
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1005 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1045 
=== Succesors ===
next: j602 
=== Usages ===
v1046 v603 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1045 #next: j602  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v600 
index: - 
=== Succesors ===
=== Usages ===
j602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v600 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
=== Succesors ===
next: v200 
=== Usages ===
v603 
=== Predecessor ===
v600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1046 #next: v200  <|@  <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@24b617fc
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j602 
metaspaceMethod: v600 
arguments: a1 i9 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j602 metaspaceMethod: v600 arguments: a1 i9  <|@  <|@
tid ?784 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v603 
stateDuring: ?784 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
j602 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v603 stateDuring: ?784 #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
result: a40 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a40 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4607082052250892996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 292]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9042840266839618
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v299 #falseSuccessor: v300  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4606229526089311783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
result: a40 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a40 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4591484629955814632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1005 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1077 
=== Succesors ===
next: j606 
=== Usages ===
v1047 v607 
=== Predecessor ===
v300 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1077 #next: j606  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v604 
index: - 
=== Succesors ===
=== Usages ===
j606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v604 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1047 
=== Succesors ===
next: v298 
=== Usages ===
v607 
=== Predecessor ===
v604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1047 #next: v298  <|@  <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@48a185ea
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j606 
metaspaceMethod: v604 
arguments: a1 i9 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j606 metaspaceMethod: v604 arguments: a1 i9  <|@  <|@
tid ?785 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v607 
stateDuring: ?785 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
j606 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v607 stateDuring: ?785 #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
result: a40 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a40 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4576478940740095668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 227]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1023 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a107 
index: - 
=== Succesors ===
=== Usages ===
a1023 v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
=== Succesors ===
next: v586 
=== Usages ===
a584 
=== Predecessor ===
v168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1041 #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid a585 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
value: a585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j961 
=== Usages ===
=== Predecessor ===
a1023 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1041 value: a585 stateAfter: - lastLocationAccess: - #next: j961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a107 
=== Succesors ===
next: v965 
=== Usages ===
j962 
=== Predecessor ===
v586 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a107 #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid j962 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j961 
y: i892 
=== Succesors ===
=== Usages ===
v1063 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j961 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j962 
index: j896 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j962 index: j896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
value: i898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
j961 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1063 value: i898 stateAfter: - lastLocationAccess: - #next: v175  <|@  <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6bbe9731
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>
=== Inputs ===
arguments: a1 a107 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a107  <|@  <|@
f <@~|@floating>@ <|@
tid a584 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1023 
=== Succesors ===
=== Usages ===
?783 v229 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1023  <|@  <|@
tid ?783 <|@
d <@d|@=== Debug Properties ===
bci: 253
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 657
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: - - - - - - - - - - - - a584 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: - - - - - - - - - - - - a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
bci: 253
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.afterNodeAccess
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v587 
stateDuring: ?783 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v965 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v587 stateDuring: ?783 #next: v229  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a584 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a584 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582748174511108090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?112 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?112 #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
loopBegin: v109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid i821 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -126235
stableDimension: 0
stamp: i32 [-126235] ⇊00000000fffe12e5 ⇈00000000fffe12e5
stampKind: i32
value: int[-126235|0xfffffffffffe12e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v693 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B19" "B75" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i815 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-126235 - -124427] ⇊00000000fffe10e5 ⇈00000000fffe1ffd
valueDescription: i32
=== Inputs ===
merge: v812 
values: i819 i821 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v812 values: i819 i821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v818 v820 
=== Succesors ===
next: v817 
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v818 v820 #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?310 
actionAndReason: i815 
speculation: a40 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?310 actionAndReason: i815 speculation: a40  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1004 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?38 v603 v1026 v466 ?50 ?57 v525 ?782 ?781 ?780 ?779 v553 ?778 ?112 v1042 v1049 ?777 v1043 v567 ?776 ?775 v561 ?360 v607 v1044 v587 v597 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v551 ?38 v567 a735 ?50 ?57 v525 v77 i445 ?775 ?778 ?777 v553 ?112 ?360 v128 a1001 v1048 v1025 v463 v578 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?38 a585 ?50 ?57 v525 ?781 ?780 v553 ?779 ?112 ?777 ?360 ?778 ?775 v567 a999 a1000 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.put(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 612
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v1004 i445 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1004 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1048 
=== Succesors ===
next: v424 
=== Usages ===
v1024 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1048 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
result [v3|DWORD * 8 + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1004 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1024 
=== Succesors ===
next: v1005 
=== Usages ===
v21 
=== Predecessor ===
v1004 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1024 #next: v1005  <|@  <|@
f <@~|@floating>@ <|@
tid v1049 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1049 
=== Succesors ===
next: v24 
=== Usages ===
v1031 v972 v1045 v1077 v1078 
=== Predecessor ===
v424 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1049 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1005 
y: v971 
=== Succesors ===
=== Usages ===
v301 v221 v245 v255 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1005 y: v971  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v424 
y: v20 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v424 y: v20  <|@  <|@
f <@~|@floating>@ <|@
tid i898 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 v905 v912 v965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i892 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j893 j902 j909 j962 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j896 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 v1056 v1057 v1063 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v880 v950 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j942 j1003 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a851 a926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a851 a926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j975 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j976 j985 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a40 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v525 v567 v287 v286 v303 v302 v817 v800 a808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i59 i371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?205 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.put(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 612
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?50 ?57 ?785 ?784 ?783 ?782 ?781 ?112 ?776 ?775 ?780 ?360 ?779 ?778 ?777 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 15]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i35 i342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.put(HashMap.java:612) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v603 ?50 ?57 ?782 ?781 ?780 ?779 ?778 ?112 ?360 i180 ?777 i184 i145 ?776 ?775 a926 v607 a851 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashMap.put(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 612
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 a3 a1 
=== Succesors ===
=== Usages ===
?774 ?310 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1006 a1007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.put(HashMap.java:612) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 v46 ?50 ?57 ?781 v86 ?780 ?779 i111 ?112 v438 ?360 ?778 v139 v960 ?777 ?775 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4081be49 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.put(HashMap.java:612) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [v3|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j449 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j449  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j449 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
=== Succesors ===
next: v435 
=== Usages ===
j431 j436 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1025 #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j449 
y: j446 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j449 y: j446  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j431 
y: j447 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j431 y: j447  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v434 
falseSuccessor: v433 
=== Usages ===
=== Predecessor ===
j449 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v434 #falseSuccessor: v433  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND v10|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:751) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j436 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j436 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j449 
y: i429 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j449 y: i429  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
resultBits: 32
stamp: i32
=== Inputs ===
value: j436 
=== Succesors ===
=== Usages ===
v438 i453 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i437 
y: i8 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i437 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v443 #falseSuccessor: v442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SHR v10|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
f <@*|@fixed>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v440 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v439 v441 
=== Succesors ===
next: i445 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v439 v441 #next: i445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i445 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: a2 
=== Succesors ===
next: v455 
=== Usages ===
i453 
=== Predecessor ===
v440 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: a2 #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
i445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.put(HashMap.java:612) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x118ac73e0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i453 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v451 
values: i437 i445 
=== Succesors ===
=== Usages ===
i342 i314 i341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v451 values: i437 i445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v454 v455 
=== Succesors ===
next: a1006 
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v454 v455 #next: a1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1006 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
=== Succesors ===
next: v340 
=== Usages ===
a786 v608 
=== Predecessor ===
v451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a1006 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1006  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i453 
y: i34 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i453 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32
=== Inputs ===
x: i342 
y: i453 
=== Succesors ===
=== Usages ===
i317 i316 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i342 y: i453  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.05863352896966776
=== Inputs ===
condition: v608 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v339 
=== Usages ===
=== Predecessor ===
a1006 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v608 #trueSuccessor: v338 #falseSuccessor: v339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR v15|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = XOR (x: v17|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4588526303270259096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 19]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606569504167815955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 10]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD[.], v15|DWORD, v18|DWORD] destination: B9 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i28 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i28  <|@  <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@235e5b08
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?774 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: ?38 
values: - - 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?38 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v463 
stateDuring: ?774 
=== Succesors ===
next: a1007 
=== Usages ===
i35 i314 i36 
=== Predecessor ===
v23 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v463 stateDuring: ?774 #next: a1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1007 <|@
result v20|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
=== Succesors ===
next: v44 
=== Usages ===
a786 v609 
=== Predecessor ===
i28 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 #next: v44  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a1007 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1007  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i28 
y: i34 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i28 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
stamp: i32
=== Inputs ===
x: i28 
y: i35 
=== Succesors ===
=== Usages ===
i317 i316 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i28 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.05863352896966776
=== Inputs ===
condition: v609 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
a1007 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v609 #trueSuccessor: v42 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 2] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SHR v19|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = XOR (x: v19|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD[.], y: v20|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558547211786780941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 19]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v42 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4588610803090809244
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i317 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v305 
values: i36 i341 
=== Succesors ===
=== Usages ===
i60 ?50 i368 i369 ?775 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v305 values: i36 i341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v306 v307 
=== Succesors ===
next: a49 
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v306 v307 #next: a49  <|@  <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@3b0b92fc
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a49 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?775 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i317 a2 a3 i8 i9 - - - - - - - 
=== Succesors ===
=== Usages ===
a49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i317 a2 a3 i8 i9 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a49 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 20
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v466 
stateDuring: ?775 
=== Succesors ===
next: i1008 
=== Usages ===
?50 a665 v1028 v1027 a661 
=== Predecessor ===
v305 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v466 stateDuring: ?775 #next: i1008  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 1
=== Inputs ===
outerFrameState: ?205 
values: a1 i317 a2 a3 i8 i9 - - - - - - - a49 
=== Succesors ===
=== Usages ===
v800 i1008 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i317 a2 a3 i8 i9 - - - - - - - a49  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
result [v24|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a49 
index: - 
=== Succesors ===
=== Usages ===
i1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a49 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1008 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 26]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?50 
guard: - 
address: v1027 
=== Succesors ===
next: v682 
=== Usages ===
v474 i666 i59 i662 
=== Predecessor ===
a49 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?50 guard: - address: v1027 #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1008 
y: i58 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1008 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32
=== Inputs ===
x: i59 
y: i317 
=== Succesors ===
=== Usages ===
v1028 i362 v474 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i59 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i1008 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i60 y: i1008  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v474 
=== Succesors ===
trueSuccessor: v679 
falseSuccessor: v681 
=== Usages ===
=== Predecessor ===
i1008 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v474 #trueSuccessor: v679 #falseSuccessor: v681  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: v0|QWORD[.] v23|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:20, 9] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v24|QWORD[.] 
locals: v0|QWORD[.] v23|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction v25|DWORD = MOV [v24|QWORD[.] + 12] size: DWORD state [bci:23, 9] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = DEC v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = AND (x: v26|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4588610803090809244
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1009 
=== Usages ===
a1009 
=== Predecessor ===
v682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1009  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
result [v24|QWORD[.] + v27|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a49 
index: i60 
=== Succesors ===
=== Usages ===
a1009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a49 index: i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1009 <|@
result v28|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v679 
address: v1028 
=== Succesors ===
next: v65 
=== Usages ===
a789 v611 
=== Predecessor ===
v679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v679 address: v1028 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a1009 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.875149887835132
=== Inputs ===
condition: v611 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v64 
=== Usages ===
=== Predecessor ===
a1009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v611 #trueSuccessor: v63 #falseSuccessor: v64  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v24|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|DWORD[.], y: v28|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4587555821883449523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD, v24|QWORD[.], v25|DWORD, v23|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B35" 
    xhandlers
    flags 
    probability 4575089871812560710
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v64 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD[.], v24|QWORD[.], v25|DWORD, v23|DWORD] destination: B15 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v800 
=== Usages ===
=== Predecessor ===
v682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v800  <|@  <|@
f <@~|@floating>@ <|@
tid i802 <|@
result int[-121627|0xfffffffffffe24e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -121627
stableDimension: 0
stamp: i32 [-121627] ⇊00000000fffe24e5 ⇈00000000fffe24e5
stampKind: i32
value: int[-121627|0xfffffffffffe24e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
actionAndReason: i802 
speculation: a40 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?50 actionAndReason: i802 speculation: a40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -121627 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v24|QWORD[.] 
locals: v0|QWORD[.] v23|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:23, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576580230021887087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 10]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v309  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD[.], v19|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B9" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a786 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n [Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v308 
values: a1007 a1006 
=== Succesors ===
=== Usages ===
a787 v1029 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: a1007 a1006  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v308 
values: i28 i453 
=== Succesors ===
=== Usages ===
?310 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i28 i453  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v308 
values: i36 i341 
=== Succesors ===
=== Usages ===
i368 i372 i369 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v308 values: i36 i341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v309 v311 
=== Succesors ===
next: i1010 
=== Usages ===
a786 i314 i316 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v309 v311 #next: i1010  <|@  <|@
tid ?310 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.put(HashMap.java:612) [bci: 2]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 1
=== Inputs ===
outerFrameState: ?38 
values: - - i314 
=== Succesors ===
=== Usages ===
v817 i1010 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?38 values: - - i314  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
result [v29|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a786 
=== Succesors ===
=== Usages ===
i1010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1010 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 12]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?310 
guard: - 
address: v1029 
=== Succesors ===
next: v690 
=== Usages ===
v46 v492 i371 i666 i662 
=== Predecessor ===
v308 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?310 guard: - address: v1029 #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1010 
y: i8 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1010 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v689 
falseSuccessor: v687 
=== Usages ===
=== Predecessor ===
i1010 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v689 #falseSuccessor: v687  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD[.], v30|DWORD, v31|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v30|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV [v29|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid i819 <|@
result int[-125459|0xfffffffffffe15ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125459
stableDimension: 0
stamp: i32 [-125459] ⇊00000000fffe15ed ⇈00000000fffe15ed
stampKind: i32
value: int[-125459|0xfffffffffffe15ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125459|0xfffffffffffe15ed]] destination: B19 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B75" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i1010 
y: i58 
=== Succesors ===
=== Usages ===
i372 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1010 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32
=== Inputs ===
x: i316 
y: i371 
=== Succesors ===
=== Usages ===
v1030 i362 v492 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i316 y: i371  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i372 
y: i1010 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i372 y: i1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v691 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v691 #falseSuccessor: v693  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = AND (x: v31|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B34" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1011 
=== Usages ===
a1011 
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1011  <|@  <|@
f <@~|@floating>@ <|@
tid a787 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a786 
=== Succesors ===
=== Usages ===
a665 a661 v1030 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a786  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
result [v35|QWORD[.] + v34|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a787 
index: i372 
=== Succesors ===
=== Usages ===
a1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a787 index: i372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1011 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v691 
address: v1030 
=== Succesors ===
next: v377 
=== Usages ===
a789 v613 
=== Predecessor ===
v691 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v691 address: v1030 #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a1011 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.875149887835132
=== Inputs ===
condition: v613 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
a1011 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v613 #trueSuccessor: v375 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v35|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD[.], y: v36|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605595681409793236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v35|QWORD[.], v32|DWORD, v31|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" "B32" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i362 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v355 
values: i60 i372 
=== Succesors ===
=== Usages ===
?776 v1034 v530 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: i60 i372  <|@  <|@
f <@~|@floating>@ <|@
tid a661 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v355 
values: a49 a787 
=== Succesors ===
=== Usages ===
?57 ?776 v1033 v1050 v1034 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: a49 a787  <|@  <|@
f <@~|@floating>@ <|@
tid i662 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v355 
values: i1008 i1010 
=== Succesors ===
=== Usages ===
?57 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: i1008 i1010  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v355 
values: i317 i316 
=== Succesors ===
=== Usages ===
?57 v525 v884 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: i317 i316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v356 v357 
=== Succesors ===
next: v1012 
=== Usages ===
i362 a661 i662 i369 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v357 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
result [v38|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a661 
index: - 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a661 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1050 
=== Succesors ===
next: v698 
=== Usages ===
v974 
=== Predecessor ===
v355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1050 #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1012 
y: v973 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1012 y: v973  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i369 a2 a3 i8 i9 a661 - i662 - - - - 
=== Succesors ===
=== Usages ===
a851 v809 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i369 a2 a3 i8 i9 a661 - i662 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v974 
=== Succesors ===
trueSuccessor: v695 
falseSuccessor: v697 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v974 #trueSuccessor: v695 #falseSuccessor: v697  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD[.], v39|DWORD, v40|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B31" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1013 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
result [v38|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a661 
index: - 
=== Succesors ===
=== Usages ===
i1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a661 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1013 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1033 
=== Succesors ===
next: v702 
=== Usages ===
v530 
=== Predecessor ===
v695 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1033 #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i362 
y: i1013 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i362 y: i1013  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v530 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v701 
=== Usages ===
=== Predecessor ===
i1013 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v530 #trueSuccessor: v699 #falseSuccessor: v701  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: [v38|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B24 -> B25 falseDestination: B24 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v221 
=== Usages ===
v541 v516 
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
result [v38|QWORD[.] + v37|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a661 
index: i362 
=== Succesors ===
=== Usages ===
v541 v516 j891 j901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a661 index: i362  <|@  <|@
f <@*|@fixed>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9298090349479812
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v220 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v217 #falseSuccessor: v220  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9298090349479812 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4605504578192990952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j839 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j839 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j858 
=== Usages ===
v1051 v1052 
=== Predecessor ===
v217 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j858  <|@  <|@
f <@~|@floating>@ <|@
tid v1051 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j839 
index: - 
=== Succesors ===
=== Usages ===
j858 v860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j858 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
=== Succesors ===
next: j859 
=== Usages ===
j976 j864 v1065 
=== Predecessor ===
j839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1051 #next: j859  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j839 
index: - 
=== Succesors ===
=== Usages ===
j859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j859 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1052 
=== Succesors ===
next: v847 
=== Usages ===
v844 
=== Predecessor ===
j858 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1052 #next: v847  <|@  <|@
f <@~|@floating>@ <|@
tid j976 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j858 
y: j975 
=== Succesors ===
=== Usages ===
v844 v860 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j858 y: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j859 
y: j976 
=== Succesors ===
=== Usages ===
v847 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j859 y: j976  <|@  <|@
f <@*|@fixed>@ <|@
tid v847 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v844 
=== Succesors ===
trueSuccessor: v845 
falseSuccessor: v846 
=== Usages ===
=== Predecessor ===
j859 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v844 #trueSuccessor: v845 #falseSuccessor: v846  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4575844411315590747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a851 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a851 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?57 
arguments: v837 i977 i9 
=== Succesors ===
next: j852 
=== Usages ===
j852 
=== Predecessor ===
v845 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?57 arguments: v837 i977 i9 #next: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j852 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a851 
=== Succesors ===
next: v865 
=== Usages ===
j864 
=== Predecessor ===
a851 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a851 #next: v865  <|@  <|@
f <@*|@fixed>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
j852 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v40|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v38|QWORD[.] - v39|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605431284606513807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
v847 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1051 
value: j976 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1051 value: j976 stateAfter: - lastLocationAccess: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
result [v42|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j858 
index: - 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j858 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1065 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1065 #next: v863  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
v856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v42|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B66" 
    xhandlers
    flags 
    probability 4605504578192990952
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j864 <|@
result v45|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v862 
values: j858 j852 
=== Succesors ===
=== Usages ===
v1054 v1053 a732 v1066 v1067 v1068 v1069 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v862 values: j858 j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v863 v865 
=== Succesors ===
next: a732 
=== Usages ===
j864 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v863 v865 #next: a732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a732 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j864 
=== Succesors ===
next: j876 
=== Usages ===
a739 
=== Predecessor ===
v862 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j864 #next: j876  <|@  <|@
f <@~|@floating>@ <|@
tid j1003 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v870 
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
result [v8|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1003 
index: - 
=== Succesors ===
=== Usages ===
j876 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1003 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j876 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
=== Succesors ===
next: v877 
=== Usages ===
v877 
=== Predecessor ===
a732 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1075 #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
result [v45|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1053 
value: j876 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v880 
=== Usages ===
=== Predecessor ===
j876 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1053 value: j876 stateAfter: - lastLocationAccess: - #next: v880  <|@  <|@
f <@~|@floating>@ <|@
tid v1054 <|@
result [v45|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1054 
value: v980 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1054 value: v980 stateAfter: - lastLocationAccess: - #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
result [v45|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
value: i369 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
v880 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1066 value: i369 stateAfter: - lastLocationAccess: - #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
result [v45|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a735 <|@
result v48|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v886 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
value: a735 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1067 value: a735 stateAfter: - lastLocationAccess: - #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
result [v45|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1000 <|@
result v49|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1068 
value: a1000 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1068 value: a1000 stateAfter: - lastLocationAccess: - #next: v890  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
result [v45|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1069 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a739 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1069 value: i8 stateAfter: - lastLocationAccess: - #next: a739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a739 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a732 
=== Succesors ===
next: v740 
=== Usages ===
a515 
=== Predecessor ===
v890 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a732 #next: v740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
a739 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid a515 <|@
result v50|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n -
=== Inputs ===
value: a739 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v699 
address: v1034 
value: a515 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j891 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v699 address: v1034 value: a515 stateAfter: - lastLocationAccess: - #next: j891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j891 <|@
result [v38|QWORD[.] + v37|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1034 
=== Succesors ===
next: v897 
=== Usages ===
j893 
=== Predecessor ===
v516 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1034 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid j893 <|@
result v51|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j891 
y: i892 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j891 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
result [v51|QWORD[*] + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j893 
index: j896 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j893 index: j896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1055 
value: i898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
j891 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1055 value: i898 stateAfter: - lastLocationAccess: - #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v45|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [v8|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*]], y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v45|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*] + 12], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*] + 16], y: v48|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*] + 20], y: v49|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v37|DWORD * 4 + 16], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LEA [v38|QWORD[.] + v37|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[*] = SHR v52|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v51|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B66" 
    xhandlers
    flags 
    probability 4589013473352286057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
result [v5|DWORD * 8 + 680] <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1005 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
=== Succesors ===
next: j524 
=== Usages ===
v1032 v525 
=== Predecessor ===
v220 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1031 #next: j524  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
result [v53|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v521 
index: - 
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v521 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1032 
=== Succesors ===
next: a67 
=== Usages ===
v525 
=== Predecessor ===
v521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1032 #next: a67  <|@  <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@5d1e9dfd
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j524 
metaspaceMethod: v521 
arguments: a1 i369 a2 a3 a40 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j524 metaspaceMethod: v521 arguments: a1 i369 a2 a3 a40  <|@  <|@
tid ?776 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 631
stackSize: 2
=== Inputs ===
outerFrameState: ?205 
values: a1 - - - - i9 - - - - - - - a661 i362 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 - - - - i9 - - - - - - - a661 i362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a67 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 56
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v525 
stateDuring: ?776 
=== Succesors ===
next: v541 
=== Usages ===
a540 
=== Predecessor ===
j524 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v525 stateDuring: ?776 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid a540 <|@
result v56|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a67 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v699 
address: v1034 
value: a540 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j901 
=== Usages ===
=== Predecessor ===
a67 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v699 address: v1034 value: a540 stateAfter: - lastLocationAccess: - #next: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j901 <|@
result [v38|QWORD[.] + v37|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1034 
=== Succesors ===
next: v905 
=== Usages ===
j902 
=== Predecessor ===
v541 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1034 #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid j902 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j901 
y: i892 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j901 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
result [v57|QWORD[*] + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j902 
index: j896 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: j896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1056 
value: i898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
j901 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1056 value: i898 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v5|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: v38|QWORD[.] v37|DWORD 
locals: v0|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:56, 9] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v37|DWORD * 4 + 16], y: v56|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v38|QWORD[.] + v37|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = SHR v58|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v57|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v810 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid i811 <|@
result int[-171035|0xfffffffffffd63e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171035
stableDimension: 0
stamp: i32 [-171035] ⇊00000000fffd63e5 ⇈00000000fffd63e5
stampKind: i32
value: int[-171035|0xfffffffffffd63e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
v701 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171035|0xfffffffffffd63e5], Object[null]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v804  <|@  <|@
f <@~|@floating>@ <|@
tid a806 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@659709764
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@659709764]
=== Inputs ===
=== Succesors ===
=== Usages ===
a808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i805 <|@
result int[-171324|0xfffffffffffd62c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171324
stableDimension: 0
stamp: i32 [-171324] ⇊00000000fffd62c4 ⇈00000000fffd62c4
stampKind: i32
value: int[-171324|0xfffffffffffd62c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
v697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@659709764] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171324|0xfffffffffffd62c4], v59|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i807 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-171324 - -171035] ⇊00000000fffd62c4 ⇈00000000fffd63e5
valueDescription: i32
=== Inputs ===
merge: v803 
values: i805 i811 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v803 values: i805 i811  <|@  <|@
f <@~|@floating>@ <|@
tid a808 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v803 
values: a806 a40 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v803 values: a806 a40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v804 v810 
=== Succesors ===
next: v809 
=== Usages ===
i807 a808 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v804 v810 #next: v809  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?57 
actionAndReason: i807 
speculation: a808 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?57 actionAndReason: i807 speculation: a808  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v61|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v40|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v38|QWORD[.] - v39|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:29, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 4593133328757450890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD[.], v35|QWORD[.], v32|DWORD, v31|DWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B15" "B34" 
    successors "B36" "B43" 
    xhandlers
    flags 
    probability 4593660819361130750
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a789 <|@
result v62|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v358 
values: a1009 a1011 
=== Succesors ===
=== Usages ===
a790 v1064 v1035 v1036 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v358 values: a1009 a1011  <|@  <|@
f <@~|@floating>@ <|@
tid a665 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v358 
values: a49 a787 
=== Succesors ===
=== Usages ===
?780 ?778 v553 ?112 v561 ?777 ?360 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v358 values: a49 a787  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v358 
values: i1008 i1010 
=== Succesors ===
=== Usages ===
?360 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v358 values: i1008 i1010  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v358 
values: i317 i316 
=== Succesors ===
=== Usages ===
v561 v72 ?780 ?778 v553 ?112 v954 v123 ?777 v567 ?360 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v358 values: i317 i316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v359 v361 
=== Succesors ===
next: v1014 
=== Usages ===
a789 a665 i666 i368 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v359 v361 #next: v1014  <|@  <|@
tid ?360 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i368 a2 a3 i8 i9 a665 - i666 - - - - 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i368 a2 a3 i8 i9 a665 - i666 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
result [v62|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a789 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?360 
guard: - 
address: v1064 
=== Succesors ===
next: i1015 
=== Usages ===
v992 
=== Predecessor ===
v358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?360 guard: - address: v1064 #next: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
result [v62|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a789 
=== Succesors ===
=== Usages ===
i1015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1015 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 65]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
=== Succesors ===
next: v75 
=== Usages ===
v72 
=== Predecessor ===
v1014 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1035 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i368 
y: i1015 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i368 y: i1015  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1014 
y: v991 
=== Succesors ===
=== Usages ===
v97 v354 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1014 y: v991  <|@  <|@
f <@~|@floating>@ <|@
tid a790 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a789 
=== Succesors ===
=== Usages ===
v553 a107 ?777 a107 a110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a789  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.08110840494462568
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
i1015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD[.], v63|QWORD[.], v64|DWORD, v65|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] - v64|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction v66|DWORD = MOV [v62|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: [v62|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08110840494462568 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4576991090170156761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 72]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1016 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
result [v62|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a789 
=== Succesors ===
=== Usages ===
a1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1016 <|@
result v68|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1036 
=== Succesors ===
next: v80 
=== Usages ===
a550 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1036 #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid a550 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1016 
=== Succesors ===
=== Usages ===
v77 v551 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1016  <|@  <|@
f <@~|@floating>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a550 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a550  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.515014164305949
=== Inputs ===
condition: v77 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v79 
=== Usages ===
=== Predecessor ===
a1016 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v77 #trueSuccessor: v78 #falseSuccessor: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOV [v62|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.515014164305949 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4572662779961835827
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.]] destination: B37 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B42" 
    xhandlers
    flags 
    probability 4572312201123736703
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 84]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i84 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i84  <|@  <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@572064e3
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a550 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a550  <|@  <|@
tid ?777 <|@
d <@d|@=== Debug Properties ===
bci: 91
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 635
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i368 a2 a3 i8 i9 a665 a790 - - - - - 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i368 a2 a3 i8 i9 a665 a790 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i84 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 91
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v551 
stateDuring: ?777 
=== Succesors ===
next: v92 
=== Usages ===
v86 
=== Predecessor ===
v79 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v551 stateDuring: ?777 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i8 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i84 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.29439252336448596
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
i84 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v90 #falseSuccessor: v91  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] v67|QWORD[.] - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:91, 9] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD, y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.29439252336448596 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4564310435517883761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 5.926511260371248E-4
=== Inputs ===
condition: v992 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v992 #trueSuccessor: v95 #falseSuccessor: v96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4516196038521133477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4564306483949757166
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B64" 
    xhandlers
    flags 
    probability 4570136974156949061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.]] destination: B42 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" "B46" 
    xhandlers
    flags 
    probability 4592931135812492835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 5.926511260371248E-4
=== Inputs ===
condition: v992 
=== Succesors ===
trueSuccessor: v352 
falseSuccessor: v353 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v992 #trueSuccessor: v352 #falseSuccessor: v353  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4544645285104342366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 4544708510194367889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v344 v345 
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v344 v345 #next: a102  <|@  <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@677e314
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>
=== Inputs ===
arguments: a790 a1 a665 i368 a2 a3 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a790 a1 a665 i368 a2 a3  <|@  <|@
tid ?779 <|@
d <@d|@=== Debug Properties ===
bci: 123
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 - - a3 i8 i9 - - - - - - - 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 - - a3 i8 i9 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 123
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.putTreeVal
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v553 
stateDuring: ?779 
=== Succesors ===
next: v106 
=== Usages ===
a107 
=== Predecessor ===
v343 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v553 stateDuring: ?779 #next: v106  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
a102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: v0|QWORD[.] - - v2|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:123, 9] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592926236534450958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593030356238369946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v349 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v349 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.], int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B74" "B62" 
    successors "B49" "B58" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594256994591928297
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a110 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v109 
values: a790 a560 a560 
=== Succesors ===
=== Usages ===
?112 j908 v1037 ?780 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v109 values: a790 a560 a560  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v109 
values: i8 i145 i145 
=== Succesors ===
=== Usages ===
?112 ?778 ?780 i145 v153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v109 values: i8 i145 i145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2165941885748173
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v108 
=== Succesors ===
next: a1017 
=== Usages ===
a110 i111 v115 v130 v140 v146 v204 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v108 #next: a1017  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 134
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 641
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i368 a2 a3 i8 i9 a665 a110 - - - - i111 
=== Succesors ===
=== Usages ===
v670 a926 a1017 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i368 a2 a3 i8 i9 a665 a110 - - - - i111  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
result [v72|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a110 
index: - 
=== Succesors ===
=== Usages ===
a1017 v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1017 <|@
result v74|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: true
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?112 
guard: - 
address: v1037 
=== Succesors ===
next: v121 
=== Usages ===
a560 v570 v1039 v1040 
=== Predecessor ===
v109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?112 guard: - address: v1037 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid a560 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a1017 
=== Succesors ===
=== Usages ===
a110 a110 ?778 a107 a107 ?780 a107 ?781 a107 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1017  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a1017 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1017  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 142]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.8180267273244242
=== Inputs ===
condition: v570 
=== Succesors ===
trueSuccessor: v115 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
a1017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v570 #trueSuccessor: v115 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.], v73|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] v72|QWORD[.] - - - - v73|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction v74|DWORD[.] = MOV [v72|QWORD[.] + 24] size: DWORD state [bci:134, 9] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD[.], y: v74|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8180267273244242 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B54" 
    xhandlers
    flags 
    probability 4592990254649577947
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 145]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v109 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v109 #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.7108595262922688
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v244 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v242 #falseSuccessor: v244  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7108595262922688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590582919066734559
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j915 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j915  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j915 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j930 
=== Usages ===
v1058 v1059 
=== Predecessor ===
v242 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j930  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j915 
index: - 
=== Succesors ===
=== Usages ===
j930 v932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j915 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j930 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
=== Succesors ===
next: j931 
=== Usages ===
j985 j936 v1070 
=== Predecessor ===
j915 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1058 #next: j931  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j915 
index: - 
=== Succesors ===
=== Usages ===
j931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j915 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j931 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1059 
=== Succesors ===
next: v923 
=== Usages ===
v920 
=== Predecessor ===
j930 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1059 #next: v923  <|@  <|@
f <@~|@floating>@ <|@
tid j985 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j930 
y: j975 
=== Succesors ===
=== Usages ===
v920 v932 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j930 y: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j931 
y: j985 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j931 y: j985  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v920 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v922 
=== Usages ===
=== Predecessor ===
j931 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v920 #trueSuccessor: v921 #falseSuccessor: v922  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4560714901228140590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a926 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a926 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?112 
arguments: v837 i977 i9 
=== Succesors ===
next: j927 
=== Usages ===
j927 
=== Predecessor ===
v921 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?112 arguments: v837 i977 i9 #next: j927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j927 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a926 
=== Succesors ===
next: v937 
=== Usages ===
j936 
=== Predecessor ===
a926 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a926 #next: v937  <|@  <|@
f <@*|@fixed>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
j927 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] v72|QWORD[.] - - - - v73|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590523734082698863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1058 
value: j985 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v929 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1058 value: j985 stateAfter: - lastLocationAccess: - #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
result [v76|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j930 
index: - 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j930 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1070 
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1070 #next: v935  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
v929 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v76|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590582919066734559
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j936 <|@
result v79|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v934 
values: j930 j927 
=== Succesors ===
=== Usages ===
v1062 v1061 a761 v1071 v1072 v1073 v1074 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v934 values: j930 j927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v935 v937 
=== Succesors ===
next: a761 
=== Usages ===
j936 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v935 v937 #next: a761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a761 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j936 
=== Succesors ===
next: j946 
=== Usages ===
a766 
=== Predecessor ===
v934 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j936 #next: j946  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v870 
=== Succesors ===
=== Usages ===
v1060 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v870  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
result [v8|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j942 
index: - 
=== Succesors ===
=== Usages ===
j946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j942 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j946 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1060 
=== Succesors ===
next: v947 
=== Usages ===
v947 
=== Predecessor ===
a761 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1060 #next: v947  <|@  <|@
f <@~|@floating>@ <|@
tid v1061 <|@
result [v79|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1061 
value: j946 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
j946 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1061 value: j946 stateAfter: - lastLocationAccess: - #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid v1062 <|@
result [v79|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1062 
value: v980 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v947 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1062 value: v980 stateAfter: - lastLocationAccess: - #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
result [v79|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1071 
value: i368 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v956 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1071 value: i368 stateAfter: - lastLocationAccess: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
result [v79|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1001 <|@
result v82|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1072 
value: a1001 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1072 value: a1001 stateAfter: - lastLocationAccess: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
result [v79|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a999 <|@
result v83|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
value: a999 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1073 value: a999 stateAfter: - lastLocationAccess: - #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
result [v79|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j936 
index: - 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j936 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a766 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1074 value: i8 stateAfter: - lastLocationAccess: - #next: a766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a766 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a761 
=== Succesors ===
next: v767 
=== Usages ===
a562 
=== Predecessor ===
v960 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a761 #next: v767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
a766 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid a562 <|@
result v84|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n -
=== Inputs ===
value: a766 
=== Succesors ===
=== Usages ===
a792 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a766  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
v767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [v8|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*]], y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v79|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 12], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 16], y: v82|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 20], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = COMPRESSPOINTER (input: v80|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|DWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584975492201481209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
result [v5|DWORD * 8 + 680] <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1005 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1078 
=== Succesors ===
next: j566 
=== Usages ===
v1038 v567 
=== Predecessor ===
v244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1078 #next: j566  <|@  <|@
f <@~|@floating>@ <|@
tid v1038 <|@
result [v85|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v564 
index: - 
=== Succesors ===
=== Usages ===
j566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j566 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1038 
=== Succesors ===
next: a148 
=== Usages ===
v567 
=== Predecessor ===
v564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1038 #next: a148  <|@  <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@610c0d54
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j566 
metaspaceMethod: v564 
arguments: a1 i368 a2 a3 a40 
=== Succesors ===
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j566 metaspaceMethod: v564 arguments: a1 i368 a2 a3 a40  <|@  <|@
tid ?780 <|@
d <@d|@=== Debug Properties ===
bci: 152
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?205 
values: a1 i368 - a3 i8 i9 a665 - - - a560 - i111 a110 
=== Succesors ===
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i368 - a3 i8 i9 a665 - - - a560 - i111 a110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a148 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 152
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v567 
stateDuring: ?780 
=== Succesors ===
next: v385 
=== Usages ===
a568 
=== Predecessor ===
j566 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v567 stateDuring: ?780 #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid a568 <|@
result v88|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a148 
=== Succesors ===
=== Usages ===
a792 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a148  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
a148 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v5|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: v72|QWORD[.] 
locals: v0|QWORD[.] v65|DWORD - v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] - - - v75|QWORD[.] - v73|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:152, 9] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4592990254649577948
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a792 <|@
result v89|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v386 
values: a568 a562 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v386 values: a568 a562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v385 v388 
=== Succesors ===
next: v794 
=== Usages ===
a792 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v385 v388 #next: v794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1037 
value: a792 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j908 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1037 value: a792 stateAfter: - lastLocationAccess: - #next: j908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j908 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a110 
=== Succesors ===
next: v912 
=== Usages ===
j909 
=== Predecessor ===
v794 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a110 #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid j909 <|@
result v90|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j908 
y: i892 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j908 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
result [v90|QWORD[*] + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j909 
index: j896 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j909 index: j896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1057 
value: i898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
j908 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1057 value: i898 stateAfter: - lastLocationAccess: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i152 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 160]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
rawvalue: 7
stableDimension: 0
stamp: i32 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i152 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i111 y: i152  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9992054427173859
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v156 #falseSuccessor: v155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[.] + 24], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = SHR v72|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v90|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: 7 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9992054427173859 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592983639297550207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4546402544865866425
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 165]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@485495fd
stamp: void
targetMethod: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>
=== Inputs ===
arguments: a1 a665 i368 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a665 i368  <|@  <|@
tid ?781 <|@
d <@d|@=== Debug Properties ===
bci: 169
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 - - a3 i8 i9 - - - - a560 - - 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 - - a3 i8 i9 - - - - a560 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
bci: 169
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.treeifyBin
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v561 
stateDuring: ?781 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v561 stateDuring: ?781 #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: v0|QWORD[.] - - v2|QWORD[.] int[0|0x0] int[1|0x1] - - - - v75|QWORD[.] - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:169, 9] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583065679873914843
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 175]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1018 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
result [v74|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1017 
=== Succesors ===
=== Usages ===
i1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1018 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1039 
=== Succesors ===
next: v126 
=== Usages ===
v123 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1039 #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i368 
y: i1018 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i368 y: i1018  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 216]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32
=== Inputs ===
x: i111 
y: i9 
=== Succesors ===
=== Usages ===
i111 i111 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i111 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.042857142857142816
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
i1018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v124 #falseSuccessor: v125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = INC v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: [v74|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.042857142857142816 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562722908703849998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 184]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1019 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1019  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
result [v74|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1017 
=== Succesors ===
=== Usages ===
a1019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1019 <|@
result v92|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1040 
=== Succesors ===
next: v134 
=== Usages ===
a577 
=== Predecessor ===
v124 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1040 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid a577 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1019 
=== Succesors ===
=== Usages ===
v128 v578 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1019  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a577 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a577  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.03125
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
a1019 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v130 #falseSuccessor: v133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = MOV [v74|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.03125 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4540204910566997518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v109 
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v109 #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562564156022446622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 196]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i137 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i137  <|@  <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1c87e768
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a577 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a577  <|@  <|@
tid ?778 <|@
d <@d|@=== Debug Properties ===
bci: 203
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 648
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 i368 a2 a3 i8 i9 a665 - - - a560 - i111 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 i368 a2 a3 i8 i9 a665 - - - a560 - i111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i137 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 203
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v578 
stateDuring: ?778 
=== Succesors ===
next: v144 
=== Usages ===
v139 
=== Predecessor ===
v133 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v578 stateDuring: ?778 #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i137 
y: i8 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i137 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.510752688172043
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
i137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v143 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] - - - v75|QWORD[.] - v73|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:203, 9] <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.510752688172043 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4558166391516011710
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
loopBegin: v109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.], v91|DWORD] destination: B62 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4557954721274140542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 209]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v109 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v109 #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B37" "B45" "B60" "B56" "B57" "B63" "B42" 
    successors "B65" "B73" 
    xhandlers
    flags 
    probability 4593660819361130751
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a107 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v105 
values: a790 a102 a560 a560 a560 a560 a790 
=== Succesors ===
=== Usages ===
v587 v164 j961 v1041 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: a790 a102 a560 a560 a560 a560 a790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v104 v106 v129 v154 v161 v162 v203 
=== Succesors ===
next: v170 
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v104 v106 v129 v154 v161 v162 v203 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
value: a107 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a107  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9260076290270692
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v168 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v169 #falseSuccessor: v168  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v95|QWORD[.], y: v95|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9260076290270692 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592995154491250473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B30" "B65" "B29" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607099210691282372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v165 v167 v384 
=== Succesors ===
next: i1020 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v165 v167 v384 #next: i1020  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1020 v590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1020 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 261]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
=== Succesors ===
next: v590 
=== Usages ===
i180 
=== Predecessor ===
v166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1042 #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 265]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32
=== Inputs ===
x: i1020 
y: i9 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1020 y: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 266]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1042 
value: i180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1021 
=== Usages ===
=== Predecessor ===
i1020 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1042 value: i180 stateAfter: - lastLocationAccess: - #next: i1021  <|@  <|@
f <@~|@floating>@ <|@
tid v1043 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1021 v593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1021 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 271]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
=== Succesors ===
next: v593 
=== Usages ===
i184 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1043 #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 275]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i32
=== Inputs ===
x: i1021 
y: i9 
=== Succesors ===
=== Usages ===
v593 v188 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1021 y: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 277]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1043 
value: i184 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1022 
=== Usages ===
=== Predecessor ===
i1021 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1043 value: i184 stateAfter: - lastLocationAccess: - #next: i1022  <|@  <|@
f <@~|@floating>@ <|@
tid v1044 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1022 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1022 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.threshold
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 281]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1044 
=== Succesors ===
next: v191 
=== Usages ===
v188 
=== Predecessor ===
v593 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1044 #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1022 
y: i184 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1022 y: i184  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.001922731668896338
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
i1022 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v189 #falseSuccessor: v190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ADD (x: v96|DWORD, ~y: [v0|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ADD (x: v98|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v99|DWORD, y: [v0|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.001922731668896338 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4566427944378302554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 287]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a193 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a193  <|@  <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@2551d8af
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a193 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?782 <|@
d <@d|@=== Debug Properties ===
bci: 288
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 663
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: a1 - - - - i9 - - - - - - - 
=== Succesors ===
=== Usages ===
a193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: a1 - - - - i9 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a193 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 288
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v597 
stateDuring: ?782 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v597 stateDuring: ?782 #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9042840266839618
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v252 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
a193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v252 #falseSuccessor: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: v0|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:288, 9] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4565587067925205921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
result: a40 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a40 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4550859035641603532
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid v1045 <|@
result [v5|DWORD * 8 + 728] <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1005 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1045 
=== Succesors ===
next: j602 
=== Usages ===
v1046 v603 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1045 #next: j602  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
result [v101|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v600 
index: - 
=== Succesors ===
=== Usages ===
j602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v600 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j602 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1046 
=== Succesors ===
next: v200 
=== Usages ===
v603 
=== Predecessor ===
v600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1046 #next: v200  <|@  <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@24b617fc
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j602 
metaspaceMethod: v600 
arguments: a1 i9 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j602 metaspaceMethod: v600 arguments: a1 i9  <|@  <|@
tid ?784 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v603 
stateDuring: ?784 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
j602 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v603 stateDuring: ?784 #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
result: a40 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a40 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v5|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v101|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v101|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4607082052250892996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 292]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v301  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
trueSuccessorProbability: 0.9042840266839618
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v299 #falseSuccessor: v300  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4606229526089311783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
result: a40 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a40 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4591484629955814632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
result [v5|DWORD * 8 + 728] <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v1005 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v1005  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v604 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1077 
=== Succesors ===
next: j606 
=== Usages ===
v1047 v607 
=== Predecessor ===
v300 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1077 #next: j606  <|@  <|@
f <@~|@floating>@ <|@
tid v1047 <|@
result [v103|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v604 
index: - 
=== Succesors ===
=== Usages ===
j606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v604 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j606 <|@
result v104|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1047 
=== Succesors ===
next: v298 
=== Usages ===
v607 
=== Predecessor ===
v604 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1047 #next: v298  <|@  <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@48a185ea
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j606 
metaspaceMethod: v604 
arguments: a1 i9 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j606 metaspaceMethod: v604 arguments: a1 i9  <|@  <|@
tid ?785 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v607 
stateDuring: ?785 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
j606 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v607 stateDuring: ?785 #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
result: a40 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a40 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [v5|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOV [v103|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v104|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4576478940740095668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 227]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1023 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1041 <|@
result [v95|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a107 
index: - 
=== Succesors ===
=== Usages ===
a1023 v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1023 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
=== Succesors ===
next: v586 
=== Usages ===
a584 
=== Predecessor ===
v168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1041 #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid a585 <|@
result v106|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1041 
value: a585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j961 
=== Usages ===
=== Predecessor ===
a1023 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1041 value: a585 stateAfter: - lastLocationAccess: - #next: j961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j961 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a107 
=== Succesors ===
next: v965 
=== Usages ===
j962 
=== Predecessor ===
v586 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a107 #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid j962 <|@
result v107|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j961 
y: i892 
=== Succesors ===
=== Usages ===
v1063 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j961 y: i892  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
result [v107|QWORD[*] + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j962 
index: j896 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j962 index: j896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
value: i898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
j961 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1063 value: i898 stateAfter: - lastLocationAccess: - #next: v175  <|@  <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6bbe9731
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>
=== Inputs ===
arguments: a1 a107 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a107  <|@  <|@
f <@~|@floating>@ <|@
tid a584 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1023 
=== Succesors ===
=== Usages ===
?783 v229 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1023  <|@  <|@
tid ?783 <|@
d <@d|@=== Debug Properties ===
bci: 253
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 657
stackSize: 0
=== Inputs ===
outerFrameState: ?205 
values: - - - - - - - - - - - - a584 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?205 values: - - - - - - - - - - - - a584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
bci: 253
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.afterNodeAccess
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v587 
stateDuring: ?783 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v965 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v587 stateDuring: ?783 #next: v229  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a584 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a584 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v95|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[.] + 20], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[*] = SHR v95|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v107|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v105|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v95|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - v108|QWORD[.] 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:253, 9] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582748174511108090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v670 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?112 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?112 #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
loopBegin: v109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] v72|QWORD[.] - - - - v73|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:134, 9] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.], v91|DWORD] destination: B74 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
at java.util.HashMap.put(HashMap.java:612) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid i821 <|@
result int[-126235|0xfffffffffffe12e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -126235
stableDimension: 0
stamp: i32 [-126235] ⇊00000000fffe12e5 ⇈00000000fffe12e5
stampKind: i32
value: int[-126235|0xfffffffffffe12e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
v693 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-126235|0xfffffffffffe12e5]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B19" "B75" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i815 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-126235 - -124427] ⇊00000000fffe10e5 ⇈00000000fffe1ffd
valueDescription: i32
=== Inputs ===
merge: v812 
values: i819 i821 
=== Succesors ===
=== Usages ===
v817 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v812 values: i819 i821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v818 v820 
=== Succesors ===
next: v817 
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v818 v820 #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?310 
actionAndReason: i815 
speculation: a40 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?310 actionAndReason: i815 speculation: a40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v30|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4081be49 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.put(HashMap.java:612) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV [v3|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND v10|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SHR v10|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR v15|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = XOR (x: v17|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606569504167815955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD[.], v15|DWORD, v18|DWORD] destination: B9 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B9" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD[.], v30|DWORD, v31|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v30|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction v32|DWORD = MOV [v29|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B75" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = AND (x: v31|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B34" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v29|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v35|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD[.], y: v36|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605595681409793236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v35|QWORD[.], v32|DWORD, v31|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" "B32" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD[.], v39|DWORD, v40|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v38|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v41|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B31" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: [v38|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B24 -> B25 falseDestination: B24 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9298090349479812 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4605504578192990952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA [v42|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605431284606513807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v42|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B66" 
    xhandlers
    flags 
    probability 4605504578192990952
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE v45|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [v111|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*]], y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v45|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*] + 12], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*] + 16], y: v48|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*] + 20], y: v49|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = COMPRESSPOINTER (input: v46|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v37|DWORD * 4 + 16], y: v50|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LEA [v38|QWORD[.] + v37|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[*] = SHR v52|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v51|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B30" "B65" "B29" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607099210691282372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = ADD (x: v96|DWORD, ~y: [v0|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = ADD (x: v98|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v99|DWORD, y: [v0|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.001922731668896338 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4607082052250892996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4606229526089311783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 4593133328757450890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|DWORD[.], v35|QWORD[.], v32|DWORD, v31|DWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B15" "B34" 
    successors "B36" "B43" 
    xhandlers
    flags 
    probability 4593660819361130750
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD[.], v63|QWORD[.], v64|DWORD, v65|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] - v64|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction v66|DWORD = MOV [v62|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: [v62|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08110840494462568 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" "B46" 
    xhandlers
    flags 
    probability 4592931135812492835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592926236534450958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593030356238369946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.], int[0|0x0]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B74" "B62" 
    successors "B49" "B58" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594256994591928297
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.], v73|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] v72|QWORD[.] - - - - v73|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction v74|DWORD[.] = MOV [v72|QWORD[.] + 24] size: DWORD state [bci:134, 9] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD[.], y: v74|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8180267273244242 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583065679873914843
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = INC v73|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: [v74|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.042857142857142816 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582748174511108090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] v72|QWORD[.] - - - - v73|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:134, 9] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.], v91|DWORD] destination: B74 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562722908703849998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = MOV [v74|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.03125 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562564156022446622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v93|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] - - - v75|QWORD[.] - v73|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:203, 9] <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.510752688172043 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4558166391516011710
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.], v91|DWORD] destination: B62 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B54" 
    xhandlers
    flags 
    probability 4592990254649577947
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7108595262922688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590582919066734559
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = LEA [v76|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590523734082698863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v76|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v76|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590582919066734559
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE v79|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [v110|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*]], y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v79|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 12], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 16], y: v82|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 20], y: v83|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v79|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = COMPRESSPOINTER (input: v80|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|DWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4592990254649577948
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v72|QWORD[.] + 24], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = SHR v72|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v90|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v73|DWORD y: 7 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9992054427173859 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592983639297550207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B37" "B45" "B60" "B56" "B57" "B63" "B42" 
    successors "B65" "B73" 
    xhandlers
    flags 
    probability 4593660819361130751
    begin_IR
      LIR
      nr   -1  <|@ instruction [v95|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v95|QWORD[.], y: v95|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9260076290270692 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592995154491250473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4591484629955814632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOV [v5|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD = MOV [v103|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v103|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v104|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B66" 
    xhandlers
    flags 
    probability 4589013473352286057
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v5|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [v53|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v53|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: v38|QWORD[.] v37|DWORD 
locals: v0|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:56, 9] <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = COMPRESSPOINTER (input: v55|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v37|DWORD * 4 + 16], y: v56|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v38|QWORD[.] + v37|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = SHR v58|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v57|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4588526303270259096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4588610803090809244
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: v0|QWORD[.] v23|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:20, 9] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v24|QWORD[.] 
locals: v0|QWORD[.] v23|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction v25|DWORD = MOV [v24|QWORD[.] + 12] size: DWORD state [bci:23, 9] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = DEC v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = AND (x: v26|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4588610803090809244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v24|QWORD[.] + v27|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|DWORD[.], y: v28|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4587555821883449523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|DWORD, v24|QWORD[.], v25|DWORD, v23|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584975492201481209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOV [v5|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOV [v85|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: v72|QWORD[.] 
locals: v0|QWORD[.] v65|DWORD - v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] - - - v75|QWORD[.] - v73|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:152, 9] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = COMPRESSPOINTER (input: v87|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|DWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4576991090170156761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOV [v62|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.515014164305949 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4572662779961835827
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.]] destination: B37 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 2] <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SHR v19|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = XOR (x: v19|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD[.], y: v20|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576580230021887087
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD[.], v19|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.put(HashMap.java:612) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x118ac73e0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4576478940740095668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v95|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[.] + 20], y: v106|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[*] = SHR v95|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v107|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = UNCOMPRESSPOINTER (input: v105|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v95|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - v108|QWORD[.] 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:253, 9] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v108|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4575844411315590747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v113|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v40|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v38|QWORD[.] - v39|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B35" 
    xhandlers
    flags 
    probability 4575089871812560710
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD[.], v24|QWORD[.], v25|DWORD, v23|DWORD] destination: B15 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B42" 
    xhandlers
    flags 
    probability 4572312201123736703
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] v67|QWORD[.] - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:91, 9] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v70|DWORD, y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.29439252336448596 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B64" 
    xhandlers
    flags 
    probability 4570136974156949061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD[.]] destination: B42 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4566427944378302554
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: v0|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:288, 9] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4565587067925205921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4564310435517883761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4564306483949757166
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4560714901228140590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v112|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v65|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v63|QWORD[.] v72|QWORD[.] - - - - v73|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558547211786780941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4557954721274140542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4550859035641603532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOV [v5|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v101|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v101|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v102|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4546402544865866425
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: v0|QWORD[.] - - v2|QWORD[.] int[0|0x0] int[1|0x1] - - - - v75|QWORD[.] - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:169, 9] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4544645285104342366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 4544708510194367889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: v0|QWORD[.] - - v2|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:123, 9] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4540204910566997518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4516196038521133477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171035|0xfffffffffffd63e5], Object[null]] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v61|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v40|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] v38|QWORD[.] - v39|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:29, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125459|0xfffffffffffe15ed]] destination: B19 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B19" "B75" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v109|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v30|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@659709764] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171324|0xfffffffffffd62c4], v59|QWORD[.]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -121627 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v24|QWORD[.] 
locals: v0|QWORD[.] v23|DWORD v1|QWORD[.] v2|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:23, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-126235|0xfffffffffffe12e5]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokestatic  #28         // hash:(java.lang.Object)int
     5: aload_1       
     6: aload_2       
     7: iconst_0      
     8: iconst_1      
     9: invokevirtual #29         // putVal:(int, java.lang.Object, java.lang.Object, boolean, boolean)java.lang.Object
    12: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4081be49 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.put(HashMap.java:612) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r10|QWORD = MOV [r10|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   18  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   22  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   24  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr   34  <|@ instruction CMP r8|QWORD y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = SHR r10|QWORD y: 8 size: QWORD <|@ <|@
      nr   42  <|@ instruction r10|DWORD = MOV r10|QWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   86  <|@ instruction rbx|DWORD = SHR r10|DWORD y: 16 size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606569504167815955
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B9 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B9" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r10|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: rsi|QWORD[.] 
locals: - rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2] <|@ <|@
      nr  222  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B75" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rax|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = AND (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B34" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  246  <|@ instruction r10|DWORD[.] = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605595681409793236
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" "B32" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  262  <|@ instruction stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r10|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B31" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction CMP (x: rax|DWORD, y: [r8|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B24 -> B25 falseDestination: B24 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.9298090349479812 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4605504578192990952
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = LEA [r10|QWORD + 32] size: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605431284606513807
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 224] instr: 0 <|@ <|@
      nr  330  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B66" 
    xhandlers
    flags 
    probability 4605504578192990952
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  346  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction MOV (x: [r10|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[*] + 20], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  358  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction MOV (x: [r8|QWORD[.] + rax|DWORD * 4 + 16], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  362  <|@ instruction rdx|QWORD[.] = LEA [r8|QWORD[.] + rax|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B29 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B30" "B65" "B29" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607099210691282372
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  836  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  840  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  842  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  848  <|@ instruction BRANCH trueDestinationProbability: 0.001922731668896338 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4607082052250892996
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4606229526089311783
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 4593133328757450890
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B15" "B34" 
    successors "B36" "B43" 
    xhandlers
    flags 
    probability 4593660819361130750
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  456  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: rsi|QWORD[.] rbx|DWORD rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] - rdi|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9] <|@ <|@
      nr  460  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction CMP (x: rbx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.08110840494462568 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" "B46" 
    xhandlers
    flags 
    probability 4592931135812492835
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592926236534450958
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593030356238369946
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction r10|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B74" "B62" 
    successors "B49" "B58" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594256994591928297
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] rbx|DWORD rdx|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] r10|QWORD[.] - - - - r11|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134, 9] <|@ <|@
      nr  586  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  588  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.8180267273244242 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583065679873914843
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction r13|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  760  <|@ instruction CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  762  <|@ instruction BRANCH trueDestinationProbability: 0.042857142857142816 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582748174511108090
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ st <@st|@reference-map: [rdx:0, rbp:0, r10:0, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] rbx|DWORD rdx|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] r10|QWORD[.] - - - - r11|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:134, 9] <|@ <|@
      nr  948  <|@ instruction r11|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r10|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B74 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562722908703849998
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction r10|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  768  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  770  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.03125 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562564156022446622
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction stack:92|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: stack:32|QWORD[.] stack:56|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] - - - stack:72|QWORD[.] - stack:76|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:203, 9] <|@ <|@
      nr  796  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.510752688172043 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4558166391516011710
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B62 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B54" 
    xhandlers
    flags 
    probability 4592990254649577947
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.7108595262922688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590582919066734559
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  608  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590523734082698863
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590582919066734559
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  654  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  656  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  664  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  674  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4592990254649577948
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  724  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  726  <|@ instruction r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  728  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  730  <|@ instruction CMP stack:76|DWORD y: 7 size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.9992054427173859 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592983639297550207
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B37" "B45" "B60" "B56" "B57" "B63" "B42" 
    successors "B65" "B73" 
    xhandlers
    flags 
    probability 4593660819361130751
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  822  <|@ instruction TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  824  <|@ instruction BRANCH trueDestinationProbability: 0.9260076290270692 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592995154491250473
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4591484629955814632
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rbx|QWORD = MOV [r11|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  902  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  904  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  906  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9] <|@ <|@
      nr  908  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  910  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B66" 
    xhandlers
    flags 
    probability 4589013473352286057
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|QWORD = MOV [r11|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rbp|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r8|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  390  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [stack:24, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: stack:72|QWORD[.] stack:56|DWORD 
locals: stack:32|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:56, 9] <|@ <|@
      nr  394  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = LEA [r8|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  408  <|@ instruction MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B30 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4588526303270259096
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4588610803090809244
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: stack:32|QWORD[.] stack:56|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:20, 9] <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [rax:0, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] stack:56|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rdi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23, 9] <|@ <|@
      nr  136  <|@ instruction rsi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, y: stack:56|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4588610803090809244
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4587555821883449523
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r14|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584975492201481209
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction rax|QWORD = MOV [r11|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  694  <|@ instruction rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  696  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  706  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rax|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32, stack:48, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: stack:88|QWORD[.] 
locals: stack:32|QWORD[.] stack:56|DWORD - stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] - - - stack:72|QWORD[.] - stack:76|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:152, 9] <|@ <|@
      nr  712  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  714  <|@ instruction r9|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4576991090170156761
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r11|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  474  <|@ instruction CMP (x: r10|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.515014164305949 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4572662779961835827
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B37 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: stack:32|QWORD[.] 
locals: - stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 2] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  114  <|@ instruction r10|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576580230021887087
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  210  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rbx:0, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.put(HashMap.java:612) [bci: 0]
locals: rbx|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x118ac73e0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   72  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4576478940740095668
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction r9|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|DWORD[.] = MOV [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  922  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rdi|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  930  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  932  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - stack:72|QWORD[.] 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:253, 9] <|@ <|@
      nr  940  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4575844411315590747
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [stack:24, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:32|QWORD[.] r14|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:72|QWORD[.] - r13|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9] <|@ <|@
      nr  306  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  314  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B35" 
    xhandlers
    flags 
    probability 4575089871812560710
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  182  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B15 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B42" 
    xhandlers
    flags 
    probability 4572312201123736703
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: stack:32|QWORD[.] stack:56|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] stack:72|QWORD[.] - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:91, 9] <|@ <|@
      nr  494  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.29439252336448596 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B64" 
    xhandlers
    flags 
    probability 4570136974156949061
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B42 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4566427944378302554
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ st <@st|@reference-map: [stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: stack:32|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:288, 9] <|@ <|@
      nr  856  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4565587067925205921
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  864  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4564310435517883761
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4564306483949757166
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  518  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4560714901228140590
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  618  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  620  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  622  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] stack:56|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] r13|QWORD[.] - - - - stack:76|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9] <|@ <|@
      nr  624  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558547211786780941
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4557954721274140542
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4550859035641603532
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rbx|QWORD = MOV [r11|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  872  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  878  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9] <|@ <|@
      nr  880  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  882  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4546402544865866425
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ st <@st|@reference-map: [stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: stack:32|QWORD[.] - - stack:48|QWORD[.] int[0|0x0] int[1|0x1] - - - - stack:72|QWORD[.] - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:169, 9] <|@ <|@
      nr  750  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  754  <|@ instruction JUMP ~[] destination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4544645285104342366
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 4544708510194367889
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [stack:48, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: stack:32|QWORD[.] - - stack:48|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:123, 9] <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4540204910566997518
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" 
    xhandlers
    flags 
    probability 4516196038521133477
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B40 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  418  <|@ instruction r10|DWORD = MOVE input: int[-171035|0xfffffffffffd63e5] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: rsi|QWORD[.] r14|DWORD rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] int[1|0x1] r8|QWORD[.] - r13|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:29, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE input: int[-125459|0xfffffffffffe15ed] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B19 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B19" "B75" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  966  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r10|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: stack:32|QWORD[.] 
locals: - stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@659709764] <|@ <|@
      nr  426  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r10|DWORD = MOVE input: int[-171324|0xfffffffffffd62c4] <|@ <|@
      nr  430  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction MOV [r15|QWORD + 668] y: -121627 size: DWORD <|@ <|@
      nr  198  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [rax:0, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] r10|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:23, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction r11|DWORD = MOVE input: int[-126235|0xfffffffffffe12e5] <|@ <|@
      nr  958  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokestatic  #28         // hash:(java.lang.Object)int
     5: aload_1       
     6: aload_2       
     7: iconst_0      
     8: iconst_1      
     9: invokevirtual #29         // putVal:(int, java.lang.Object, java.lang.Object, boolean, boolean)java.lang.Object
    12: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4081be49 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.put(HashMap.java:612) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r10|QWORD = MOV [r10|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   18  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   20  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   22  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   24  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   32  <|@ instruction r8|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr   34  <|@ instruction CMP r8|QWORD y: 1 size: QWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD = SHR r10|QWORD y: 8 size: QWORD <|@ <|@
      nr   42  <|@ instruction r10|DWORD = MOV r10|QWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B8" "B18" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   86  <|@ instruction rbx|DWORD = SHR r10|DWORD y: 16 size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = XOR (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B7" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r10|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: rsi|QWORD[.] 
locals: - rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2] <|@ <|@
      nr  222  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B75" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rax|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  236  <|@ instruction rax|DWORD = AND (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  238  <|@ instruction CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B34" 
    xhandlers
    flags 
    probability 4606654294921578981
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  246  <|@ instruction r10|DWORD[.] = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605595681409793236
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" "B32" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  262  <|@ instruction stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r10|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  268  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B31" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction CMP (x: rax|DWORD, y: [r8|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B24 -> B25 falseDestination: B24 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4606057868962771679
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.9298090349479812 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4605504578192990952
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  288  <|@ instruction rbx|QWORD = LEA [r10|QWORD + 32] size: QWORD <|@ <|@
      nr  290  <|@ instruction CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  292  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605431284606513807
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  328  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 224] instr: 0 <|@ <|@
      nr  330  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B66" 
    xhandlers
    flags 
    probability 4605504578192990952
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [r10|QWORD[*]], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  346  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction MOV (x: [r10|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [r10|QWORD[*] + 20], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r10|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  358  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction MOV (x: [r8|QWORD[.] + rax|DWORD * 4 + 16], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  362  <|@ instruction rdx|QWORD[.] = LEA [r8|QWORD[.] + rax|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B29 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B30" "B65" "B29" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607099210691282372
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  836  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  840  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  842  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  844  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  848  <|@ instruction BRANCH trueDestinationProbability: 0.001922731668896338 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4607082052250892996
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  888  <|@ instruction BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4606229526089311783
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  894  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B35" 
    xhandlers
    flags 
    probability 4593133328757450890
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B15" "B34" 
    successors "B36" "B43" 
    xhandlers
    flags 
    probability 4593660819361130750
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  456  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: rsi|QWORD[.] rbx|DWORD rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] - rdi|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9] <|@ <|@
      nr  460  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction CMP (x: rbx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.08110840494462568 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4592931135812492835
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B48" 
    xhandlers
    flags 
    probability 4593030356238369946
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction r10|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B74" "B62" 
    successors "B49" "B58" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594256994591928297
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] rbx|DWORD rdx|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] r10|QWORD[.] - - - - r11|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134, 9] <|@ <|@
      nr  586  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  588  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.8180267273244242 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B59" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583065679873914843
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction r13|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  760  <|@ instruction CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  762  <|@ instruction BRANCH trueDestinationProbability: 0.042857142857142816 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582748174511108090
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ st <@st|@reference-map: [rdx:0, rbp:0, r10:0, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] rbx|DWORD rdx|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] r10|QWORD[.] - - - - r11|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:134, 9] <|@ <|@
      nr  948  <|@ instruction r11|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r10|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B74 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562722908703849998
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction r10|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  768  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  770  <|@ instruction CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.03125 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562564156022446622
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction stack:92|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: stack:32|QWORD[.] stack:56|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] - - - stack:72|QWORD[.] - stack:76|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:203, 9] <|@ <|@
      nr  796  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.510752688172043 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4558166391516011710
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B62 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B54" 
    xhandlers
    flags 
    probability 4592990254649577947
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.7108595262922688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4590582919066734559
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  608  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590523734082698863
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  642  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 4590582919066734559
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  644  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  656  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  660  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  662  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  664  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  666  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  672  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  674  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  678  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4592990254649577948
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  718  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  724  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  726  <|@ instruction r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  728  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  730  <|@ instruction CMP stack:76|DWORD y: 7 size: DWORD <|@ <|@
      nr  732  <|@ instruction BRANCH trueDestinationProbability: 0.9992054427173859 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592983639297550207
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B56 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B36" "B45" "B60" "B56" "B57" "B63" "B42" 
    successors "B65" "B73" 
    xhandlers
    flags 
    probability 4593660819361130751
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  822  <|@ instruction TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  824  <|@ instruction BRANCH trueDestinationProbability: 0.9260076290270692 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592995154491250473
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4591484629955814632
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rbx|QWORD = MOV [r11|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  902  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  904  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  906  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9] <|@ <|@
      nr  908  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  910  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B66" 
    xhandlers
    flags 
    probability 4589013473352286057
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction rbx|QWORD = MOV [r11|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  374  <|@ instruction r10|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction rbp|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r8|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  390  <|@ instruction rax|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [stack:24, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: stack:72|QWORD[.] stack:56|DWORD 
locals: stack:32|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:56, 9] <|@ <|@
      nr  394  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD[.] = LEA [r8|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  408  <|@ instruction MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B30 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4588526303270259096
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B8" 
    successors "B13" "B16" 
    xhandlers
    flags 
    probability 4588610803090809244
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: stack:32|QWORD[.] stack:56|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:20, 9] <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [rax:0, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] stack:56|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rdi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23, 9] <|@ <|@
      nr  136  <|@ instruction rsi|DWORD = DEC rdi|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction rsi|DWORD = AND (x: rsi|DWORD, y: stack:56|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4588610803090809244
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r10|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4587555821883449523
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r14|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  164  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584975492201481209
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction rax|QWORD = MOV [r11|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  694  <|@ instruction rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  696  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  706  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rax|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32, stack:48, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: stack:88|QWORD[.] 
locals: stack:32|QWORD[.] stack:56|DWORD - stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] - - - stack:72|QWORD[.] - stack:76|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:152, 9] <|@ <|@
      nr  712  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  714  <|@ instruction r9|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B64" "B38" 
    xhandlers
    flags 
    probability 4576991090170156761
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r11|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  472  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  474  <|@ instruction CMP (x: r10|QWORD[.], y: stack:40|QWORD[.]) size: QWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.515014164305949 condition: = trueDestination: B36 -> B64 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: stack:32|QWORD[.] 
locals: - stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 2] <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  114  <|@ instruction r10|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576580230021887087
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rbx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  210  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rbx:0, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.put(HashMap.java:612) [bci: 0]
locals: rbx|QWORD[.] stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x118ac73e0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   72  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4576478940740095668
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction r9|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|DWORD[.] = MOV [rdi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  922  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  924  <|@ instruction MOV (x: [rdi|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  926  <|@ instruction rdx|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  930  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3 <|@ <|@
      nr  932  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - stack:72|QWORD[.] 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:253, 9] <|@ <|@
      nr  940  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4575844411315590747
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  302  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [stack:24, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:32|QWORD[.] r14|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:72|QWORD[.] - r13|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9] <|@ <|@
      nr  306  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  314  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B35" 
    xhandlers
    flags 
    probability 4575089871812560710
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  182  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B15 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B42" 
    xhandlers
    flags 
    probability 4572312201123736703
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: stack:32|QWORD[.] stack:56|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] stack:72|QWORD[.] - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:91, 9] <|@ <|@
      nr  494  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  496  <|@ instruction BRANCH trueDestinationProbability: 0.29439252336448596 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B64" 
    xhandlers
    flags 
    probability 4570136974156949061
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B42 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4566427944378302554
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ st <@st|@reference-map: [stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: stack:32|QWORD[.] - - - - int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:288, 9] <|@ <|@
      nr  856  <|@ instruction CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  858  <|@ instruction BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4565587067925205921
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  864  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B41" 
    xhandlers
    flags 
    probability 4564310435517883761
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B39 -> B45 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B47" 
    xhandlers
    flags 
    probability 4564306483949757166
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ instruction r9|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  518  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B41 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4560714901228140590
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  618  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  620  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  622  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] stack:56|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] stack:64|QWORD[.] r13|QWORD[.] - - - - stack:76|DWORD 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9] <|@ <|@
      nr  624  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558547211786780941
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4557954721274140542
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  814  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  818  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4550859035641603532
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rbx|QWORD = MOV [r11|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  872  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  878  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9] <|@ <|@
      nr  880  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  882  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 4546402544865866425
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ st <@st|@reference-map: [stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: stack:32|QWORD[.] - - stack:48|QWORD[.] int[0|0x0] int[1|0x1] - - - - stack:72|QWORD[.] - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:169, 9] <|@ <|@
      nr  750  <|@ instruction rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  754  <|@ instruction JUMP ~[] destination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4544645285104342366
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 4544708510194367889
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction rdi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [stack:48, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: stack:32|QWORD[.] - - stack:48|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:123, 9] <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4540204910566997518
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  416  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  418  <|@ instruction r10|DWORD = MOVE input: int[-171035|0xfffffffffffd63e5] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: rsi|QWORD[.] r14|DWORD rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] int[1|0x1] r8|QWORD[.] - r13|DWORD - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:29, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r11|DWORD = MOVE input: int[-125459|0xfffffffffffe15ed] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B19 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B19" "B75" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  962  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  966  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r10|DWORD 
locals: - - 
java.util.HashMap.put(HashMap.java:612) [bci: 2]
stack: stack:32|QWORD[.] 
locals: - stack:40|QWORD[.] stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:12, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@659709764] <|@ <|@
      nr  426  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r10|DWORD = MOVE input: int[-171324|0xfffffffffffd62c4] <|@ <|@
      nr  430  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction MOV [r15|QWORD + 668] y: -121627 size: DWORD <|@ <|@
      nr  198  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [rax:0, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] r10|DWORD stack:40|QWORD[.] stack:48|QWORD[.] int[0|0x0] int[1|0x1] - - - - - - - 
java.util.HashMap.put(HashMap.java:612) [bci: 9]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:23, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction r11|DWORD = MOVE input: int[-126235|0xfffffffffffe12e5] <|@ <|@
      nr  958  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokestatic  #28         // hash:(java.lang.Object)int
     5: aload_1       
     6: aload_2       
     7: iconst_0      
     8: iconst_1      
     9: invokevirtual #29         // putVal:(int, java.lang.Object, java.lang.Object, boolean, boolean)java.lang.Object
    12: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504889742440488954243848894c2430448b52084e8b14d5d0010000448b5e0844895c242c49b8addeaddeaddeadde49b900c02408010000004d3bc20f85530400004c8b124d8bc24983e0074983f8010f859804000049c1ea08458bd24585d20f8488040000448b4624418bdac1eb104133da4585c00f8448030000428b3cc50c00000085ff0f84420700008bc7ffc823c33bf80f869407000049c1e003458b5480104585d20f85ec000000448bf3448bef894424284c89442418458b50084181faaddeadde0f851c070000413b400c0f83d40600004181fbaddeadde0f857d0200004d8b5760498d5a20493b5f700f878904000049895f60410f1882e000000048bbaddeaddeaddeadde498bfa488b9ba800000049891a41c74208addeadde4589720c48c1ea034189521048c1e90341894a144589621848c1ef0341897c8010498d54801048c1ea094688240ab801000000034618894618b8010000000346148946143b461c0f8fcd040000817c242caddeadde0f85af01000048b80000000000000000488b6c24504883c458850500000000c5f877c34c89442420895c2428428b04d508000000418bfa48c1e703423b1cd50c0000000f84b802000081f8addeadde0f84900500004c8bd741bb000000000f1f80000000000f1f8000000000418b42188be848c1e50385c00f847b000000458beb41ffc53b1cc50c0000000f840e000000850500000000458bdd4c8bd5ebcd448b14c51000000049c1e2034c3bd20f846f05000044896c240448896c241844895c2414488bf2498bd248b8ffffffffffffffffe8000000009085c00f8589040000448b5c24044c8b5424188b5c2428488b542438e973ffffff48896c241844895c2414817c242caddeadde0f85a1010000498b7760488d5620493b57700f8715040000498957600f1886e00000008b5c2428488b4c2430488b54243849b8addeaddeaddeadde4c8bce4d8b80a80000004c8906c74608addeadde895e0c48c1ea03895610488bd148c1ea038956144489661849c1e9034d8bea49bb00c024080100000045894d184d8bd549c1ea094788241a837c2414070f8d1c040000488b7c24184885ff0f8500020000488b742440e924feffff448b5c242c4a8b1cddd8020000488b4340ba01000000ffd09048b80000000000000000488b6c24504883c458850500000000c5f877c34a8b1cdda80200004c8b5340488b742440488bfa418bd6488be9488bcf4c8bc549b90000000000000000498bc2ffd09048c1e803448b5424284c8b44241843894490104b8d74901048c1ee0949b900c02408010000004688240e488b742440e98afdffff895c2428488b742440666690e800000000908b780c8bf7ffce237424283bfe0f8628040000448b54b0104585d20f85d3010000448b742428448bef4c8bc08bc649b900c0240801000000448b5c242c488b4c2430488b542438488b742440e98bfcffff4c895424088b5c2428448b5c242c4a8b04dda8020000488b7840488b7424408bd3488b4c24384c8b44243049b90000000000000000488bd8488bc7ffd09048c1e803448bc84c8b6c2408e978feffff4d8bd9468b14d51000000049c1e2034c3b5424380f8487feffffe961010000488b74243848b8ffffffffffffffff0f1f4000e80000000090488b742440448b4624448bd041c1ea104433d04585c00f840b020000418bda448bd049b900c0240801000000448b5c242c488b4c2430488b542438e98efbffff488bde488b742438e80000000090448bd049b900c0240801000000448b5c242c488b4c2430488b542438488bf3e946fbffff4d8bcb488b4c2430488b5c24408b771448c1e903894f14488bd748c1ea094688240a48c1e6034889742418488bf3488bd748b8ffffffffffffffff0f1f440000e80000000090488b442418488b6c24504883c458850500000000c5f877c348baaddeaddeaddeadde488bf2ba04000000b901000000e800000000904c8bd04c8b4424188b44242849b900c0240801000000448b5c242c488b4c2430488b542438488b742440e937fbffff8b5c2428488944242049b900c0240801000000448b5c242c488b4c2430488b542438488b742440e9a7fbffff48897c241889442414488b742438498bd248b8ffffffffffffffff0f1f8000000000e8000000009085c00f844b000000488b7c241849bb00c0240801000000e9ddfcffff488b74244090e80000000090817c242caddeadde0f859f00000048b80000000000000000488b6c24504883c458850500000000c5f877c38b44241481f8addeadde0f84de000000488b7c24188b5c242849b900c0240801000000448b5c242c488b4c2430488b542438488b742440e91dfbffff4d8bea48beaddeaddeaddeaddeba04000000b901000000e80000000090488bf04d8bd5e9cefbffff4489542428e9e9fcffff488b7c241849bb00c0240801000000e924fcffff448b5c242c4a8b1cddd8020000488b4340488b742440ba01000000ffd09048b80000000000000000488b6c24504883c458850500000000c5f877c3488b742440488b5424208b4c24280f1f4000e80000000090488b7c241849bb00c0240801000000e9bdfbffff48897c2418488b742418488b542440488b4c2420448b4424284c8b4c2438488b7c2430666690e80000000090488bf849bb00c0240801000000e97ffbffff488bfd49bb00c0240801000000e96dfbffff49bb000000000000000041bae563fdff4589979c0200004d899fa8020000e8000000009041bbed15feff45899f9c0200004d89a7a8020000e8000000009049baaddeaddeaddeadde4d8bda41bac462fdff4c8b442418488b4c2430488b542438488b742440eba9448b54242841c7879c020000e524feff4d89a7a8020000e8000000009041bbe512feffeb9ee80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4081be49 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 63 [rcx:0, rdx:0, rsi:0, stack:48, stack:56, stack:64]at java.util.HashMap.put(HashMap.java:612) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 63 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 14 r10|QWORD = MOV [r10|DWORD * 8 + 464] size: QWORD  <||@
  Comment 75 16 r11|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 79 18 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 84 20 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 84 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 94 22 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 104 24 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 107 26 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10  <||@
  Comment 113 block B1 null  <||@
  Comment 113 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 30 r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 116 32 r8|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 123 34 CMP r8|QWORD y: 1 size: QWORD  <||@
  Comment 127 36 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6  <||@
  Comment 133 block B2 null  <||@
  Comment 133 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 40 r10|QWORD = SHR r10|QWORD y: 8 size: QWORD  <||@
  Comment 137 42 r10|DWORD = MOV r10|QWORD size: DWORD  <||@
  Comment 140 44 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 143 46 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B7  <||@
  Comment 149 block B7 null  <||@
  Comment 149 82 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 149 84 r8|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 153 86 rbx|DWORD = SHR r10|DWORD y: 16 size: DWORD  <||@
  Comment 159 88 rbx|DWORD = XOR (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 162 90 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 165 92 BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B18  <||@
  Comment 171 block B18 null  <||@
  Comment 171 218 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 171 220 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2]  <||@
  Comment 171 [rcx:0, rdx:0, rsi:0, r8:0, stack:48, stack:56, stack:64]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |  
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0             |1             |2            
     locals:  |-             |rdx|QWORD[.]  |rcx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |              |               <||@
  Comment 171 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 179 222 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 181 224 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 187 block B20 null  <||@
  Comment 187 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 234 rax|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 191 236 rax|DWORD = AND (x: rbx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 193 238 CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 195 240 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B75  <||@
  Comment 201 block B21 null  <||@
  Comment 201 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 244 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 205 246 r10|DWORD[.] = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 210 248 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 213 250 BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B34  <||@
  Comment 219 block B22 null  <||@
  Comment 219 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 254 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 222 256 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 225 258 JUMP ~[] destination: B22 -> B23  <||@
  Comment 225 block B23 null  <||@
  Comment 225 260 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 225 262 stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 229 264 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 234 266 r10|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD  <||@
  Comment 238 268 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 238 {meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 245 270 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B32  <||@
  Comment 251 block B24 null  <||@
  Comment 251 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 274 CMP (x: rax|DWORD, y: [r8|QWORD[.] + 12]) size: DWORD  <||@
  Comment 255 276 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B24 -> B25 falseDestination: B24 -> B31  <||@
  Comment 261 block B25 null  <||@
  Comment 261 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 280 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 261 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 268 282 BRANCH trueDestinationProbability: 0.9298090349479812 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B30  <||@
  Comment 274 block B26 null  <||@
  Comment 274 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 274 286 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 278 288 rbx|QWORD = LEA [r10|QWORD + 32] size: QWORD  <||@
  Comment 282 290 CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 286 292 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 292 block B28 null  <||@
  Comment 292 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 326 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 296 328 AMD64PREFETCH ~[r10|QWORD + 224] instr: 0  <||@
  Comment 304 330 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 304 332 JUMP ~[] destination: B28 -> B29  <||@
  Comment 304 block B29 null  <||@
  Comment 304 334 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 304 336 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 304 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 314 338 rdi|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 317 340 rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD  <||@
  Comment 324 342 MOV (x: [r10|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 327 344 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 327 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 335 346 MOV (x: [r10|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 339 348 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 343 350 MOV (x: [r10|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 347 352 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 351 354 MOV (x: [r10|QWORD[*] + 20], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 355 356 MOV (x: [r10|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 359 358 rdi|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 363 360 MOV (x: [r8|QWORD[.] + rax|DWORD * 4 + 16], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 368 362 rdx|QWORD[.] = LEA [r8|QWORD[.] + rax|DWORD * 4 + 16] size: QWORD  <||@
  Comment 373 364 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 377 366 MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 381 368 JUMP ~[] destination: B29 -> B66  <||@
  Comment 381 block B66 null  <||@
  Comment 381 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 381 834 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 386 836 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD  <||@
  Comment 389 838 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 392 840 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 397 842 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 400 844 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 403 846 CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) size: DWORD  <||@
  Comment 406 848 BRANCH trueDestinationProbability: 0.001922731668896338 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 412 block B70 null  <||@
  Comment 412 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 412 886 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 412 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 420 888 BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 426 block B71 null  <||@
  Comment 426 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 426 892 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 436 894 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 445 12  <||@
  Comment 455 block B34 null  <||@
  Comment 455 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 450 stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 460 452 JUMP ~[] destination: B34 -> B35  <||@
  Comment 460 block B35 null  <||@
  Comment 460 454 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 460 456 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 464 458 rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9]  <||@
  Comment 464 [rcx:0, rdx:0, rsi:0, r10:0, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0             |1          |2             |3             |4           |5           |6                  |7  |8          |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |rbx|DWORD  |rdx|QWORD[.]  |rcx|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |-  |rdi|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 464 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 472 460 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 479 462 CMP (x: rbx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 487 464 BRANCH trueDestinationProbability: 0.08110840494462568 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B43  <||@
  Comment 493 block B43 null  <||@
  Comment 493 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 538 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 493 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 499 540 BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 505 block B47 null  <||@
  Comment 505 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 505 576 r10|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 508 578 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 514 580 JUMP ~[] destination: B47 -> B48  <||@
  Comment 514 block B48 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 514 582 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 528 584 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134, 9]  <||@
  Comment 528 [rdx:0, r10:0, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                  |4           |5           |6                  |7             |8  |9  |10  |11  |12        
     locals:  |stack:32|QWORD[.]  |rbx|DWORD  |rdx|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |r10|QWORD[.]  |-  |-  |-   |-   |r11|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 528 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 532 586 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 538 588 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 540 590 BRANCH trueDestinationProbability: 0.8180267273244242 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B58  <||@
  Comment 546 block B58 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 546 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 546 758 r13|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 552 760 CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 559 762 BRANCH trueDestinationProbability: 0.042857142857142816 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B74  <||@
  Comment 565 block B74 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 565 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 946 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:134, 9]  <||@
  Comment 565 [rdx:0, rbp:0, r10:0, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                  |4           |5           |6                  |7             |8  |9  |10  |11  |12        
     locals:  |stack:32|QWORD[.]  |rbx|DWORD  |rdx|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |r10|QWORD[.]  |-  |-  |-   |-   |r11|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 565 {infopoint: SAFEPOINT}  <||@
  Comment 565 11  <||@
  Comment 571 948 r11|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 574 950 r10|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 577 952 JUMP ~[] destination: B74 -> B48  <||@
  Comment 579 block B59 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 579 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 766 r10|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 587 768 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 591 770 CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 594 772 BRANCH trueDestinationProbability: 0.03125 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 600 block B61 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 600 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 600 784 stack:92|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 605 786 stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 610 788 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 615 790 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 618 792 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 621 794 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:203, 9]  <||@
  Comment 621 7  <||@
  Comment 631 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 636 [stack:24, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:648) [bci: 203, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4           |5           |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |-  |-  |-  |stack:72|QWORD[.]  |-   |stack:76|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 637 796 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 639 798 BRANCH trueDestinationProbability: 0.510752688172043 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 645 block B62 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 645 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 645 802 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 650 804 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 655 806 rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 659 808 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 664 810 JUMP ~[] destination: B62 -> B48  <||@
  Comment 669 block B49 null  <||@
  Comment 669 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 594 stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 674 596 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 679 598 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 679 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 687 600 BRANCH trueDestinationProbability: 0.7108595262922688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B54  <||@
  Comment 693 block B50 null  <||@
  Comment 693 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 693 604 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 697 606 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 701 608 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 705 610 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B52  <||@
  Comment 711 block B52 null  <||@
  Comment 711 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 638 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 715 640 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 722 642 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 722 650 JUMP ~[] destination: B52 -> B53  <||@
  Comment 722 block B53 null  <||@
  Comment 722 652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 722 644 rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 726 646 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 731 648 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 736 654 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 736 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 746 656 r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 749 658 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 756 660 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 759 662 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 759 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 766 664 MOV (x: [rsi|QWORD[*] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 769 666 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 773 668 MOV (x: [rsi|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 776 670 rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 783 672 MOV (x: [rsi|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 786 674 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 790 676 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 794 678 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 797 682 JUMP ~[] destination: B53 -> B55  <||@
  Comment 797 block B55 null  <||@
  Comment 797 722 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 797 718 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 807 724 MOV (x: [r13|QWORD[.] + 24], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 811 726 r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 818 728 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 822 730 CMP stack:76|DWORD y: 7 size: DWORD  <||@
  Comment 827 732 BRANCH trueDestinationProbability: 0.9992054427173859 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 833 block B56 null  <||@
  Comment 833 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 833 736 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 838 738 JUMP ~[] destination: B56 -> B64  <||@
  Comment 838 block B64 null  <||@
  Comment 838 820 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 838 822 TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 841 824 BRANCH trueDestinationProbability: 0.9260076290270692 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73  <||@
  Comment 847 block B65 null  <||@
  Comment 847 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 828 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 852 830 JUMP ~[] destination: B65 -> B66  <||@
  Comment 857 block B72 null  <||@
  Comment 857 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 857 898 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 862 900 rbx|QWORD = MOV [r11|DWORD * 8 + 728] size: QWORD  <||@
  Comment 870 902 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 874 904 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 879 906 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9]  <||@
  Comment 879 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 879 10  <||@
  Comment 881 []at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 882 908 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 892 910 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 901 12  <||@
  Comment 911 block B30 null  <||@
  Comment 911 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 911 372 rbx|QWORD = MOV [r11|DWORD * 8 + 680] size: QWORD  <||@
  Comment 919 374 r10|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 923 376 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 928 378 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 931 380 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 934 382 rbp|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 937 384 rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 940 386 r8|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 943 388 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 953 390 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 956 392 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:56, 9]  <||@
  Comment 956 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 956 10  <||@
  Comment 958 [stack:24, stack:64]at java.util.HashMap.putVal(HashMap.java:631) [bci: 56, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4  |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-               |-  |-  |-  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:72|QWORD[.]  |stack:56|DWORD  |   |   |   |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 959 394 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 963 396 r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 968 398 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 973 400 MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 978 402 rsi|QWORD[.] = LEA [r8|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 983 404 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 987 406 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 997 408 MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1001 410 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1006 412 JUMP ~[] destination: B30 -> B66  <||@
  Comment 1011 block B8 null  <||@
  Comment 1011 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1011 96 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1015 98 JUMP ~[] destination: B8 -> B12  <||@
  Comment 1015 block B12 null  <||@
  Comment 1015 128 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1015 130 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 132 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:20, 9]  <||@
  Comment 1020 9  <||@
  Comment 1023 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1028 [stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:629) [bci: 20, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1029 134 rdi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23, 9]  <||@
  Comment 1029 [rax:0, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]       |                |                   |                   |            |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1029 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1032 136 rsi|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 1036 138 rsi|DWORD = AND (x: rsi|DWORD, y: stack:56|DWORD) size: DWORD  <||@
  Comment 1040 140 CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1042 142 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B16  <||@
  Comment 1048 block B13 null  <||@
  Comment 1048 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1048 146 r10|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1053 148 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1056 150 BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 1062 block B14 null  <||@
  Comment 1062 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1062 154 r14|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1067 156 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1070 158 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1073 160 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1075 162 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1085 164 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1090 166 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1095 168 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1100 170 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1105 172 JUMP ~[] destination: B14 -> B23  <||@
  Comment 1110 block B54 null  <||@
  Comment 1110 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1110 686 stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1115 688 rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1119 690 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1124 692 rax|QWORD = MOV [r11|DWORD * 8 + 680] size: QWORD  <||@
  Comment 1132 694 rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 1136 696 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1141 698 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1143 700 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1148 702 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1153 704 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1163 706 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1166 708 rax|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1169 710 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:152, 9]  <||@
  Comment 1169 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1169 10  <||@
  Comment 1171 [stack:8, stack:24, stack:32, stack:48, stack:64]at java.util.HashMap.putVal(HashMap.java:642) [bci: 152, duringCall: true, rethrow: false]
              |0                  |1               |2  |3                  |4           |5           |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |-  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |-  |-  |-  |stack:72|QWORD[.]  |-   |stack:76|DWORD 
     stack:   |stack:88|QWORD[.]  |                |   |                   |            |            |                   |   |   |   |                   |    |               
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1172 712 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 1176 714 r9|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1179 716 r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1184 720 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1189 block B36 null  <||@
  Comment 1189 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1189 468 r11|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1192 470 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1200 472 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 1204 474 CMP (x: r10|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 1209 476 BRANCH trueDestinationProbability: 0.515014164305949 condition: = trueDestination: B36 -> B64 falseDestination: B36 -> B38  <||@
  Comment 1220 block B10 null  <||@
  Comment 1220 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1220 106 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1225 108 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 2]  <||@
  Comment 1225 7  <||@
  Comment 1239 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 1244 [stack:48, stack:56, stack:64]at java.util.HashMap.hash(HashMap.java:339) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2                 
     locals:  |-                  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:32|QWORD[.]  |                   |                    <||@
  Comment 1245 110 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 112 r8|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 1254 114 r10|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 1261 116 r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1264 118 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1267 120 BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B17  <||@
  Comment 1273 block B17 null  <||@
  Comment 1273 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1273 204 rbx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1276 206 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1279 208 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1289 210 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1294 212 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1299 214 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1304 216 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1309 block B6 null  <||@
  Comment 1309 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1309 62 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1312 64 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1317 66 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x118ac73e0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 1317 {Stub<identity_hashcode(Object)int>@0x118ac73e0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1322 [rbx:0, stack:48, stack:56, stack:64]at java.util.HashMap.put(HashMap.java:612) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2                 
     locals:  |rbx|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1323 68 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1326 70 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1336 72 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1341 74 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1346 76 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1351 78 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1354 80 JUMP ~[] destination: B6 -> B7  <||@
  Comment 1359 block B73 null  <||@
  Comment 1359 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1359 914 r9|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1362 916 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1367 918 rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 920 rsi|DWORD[.] = MOV [rdi|QWORD[.] + 20] size: DWORD  <||@
  Comment 1375 922 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 1379 924 MOV (x: [rdi|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1382 926 rdx|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1389 928 MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1393 930 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 1397 932 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1402 934 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1405 936 rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1408 938 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:253, 9]  <||@
  Comment 1408 7  <||@
  Comment 1423 {HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>}  <||@
  Comment 1428 [stack:24]at java.util.HashMap.putVal(HashMap.java:657) [bci: 253, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12                
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |stack:72|QWORD[.] 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1429 940 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1434 942 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1443 12  <||@
  Comment 1453 block B27 null  <||@
  Comment 1453 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1453 296 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1453 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1463 298 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1466 300 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1471 302 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1476 304 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9]  <||@
  Comment 1476 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1481 [stack:24, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                  |4           |5           |6                  |7  |8          |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |-  |r13|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1482 306 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1485 308 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1490 310 rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1494 312 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1504 314 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1509 316 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1514 318 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1519 320 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1524 322 JUMP ~[] destination: B27 -> B29  <||@
  Comment 1529 block B15 null  <||@
  Comment 1529 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1529 176 rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1533 178 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1538 180 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1548 182 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1553 184 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1558 186 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1563 188 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1568 190 JUMP ~[] destination: B15 -> B35  <||@
  Comment 1573 block B38 null  <||@
  Comment 1573 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1573 484 stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1578 486 stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1582 488 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1587 490 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1590 492 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:91, 9]  <||@
  Comment 1590 7  <||@
  Comment 1607 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1612 [stack:24, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:635) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4           |5           |6                  |7                  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1613 494 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1615 496 BRANCH trueDestinationProbability: 0.29439252336448596 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 1621 block B42 null  <||@
  Comment 1621 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1621 530 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1626 532 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1636 534 JUMP ~[] destination: B42 -> B64  <||@
  Comment 1641 block B67 null  <||@
  Comment 1641 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1641 852 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1646 854 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:288, 9]  <||@
  Comment 1646 9  <||@
  Comment 1647 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1652 [stack:64]at java.util.HashMap.putVal(HashMap.java:663) [bci: 288, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1653 856 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 1653 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 1661 858 BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 1667 block B68 null  <||@
  Comment 1667 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1667 862 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1677 864 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1686 12  <||@
  Comment 1696 block B39 null  <||@
  Comment 1696 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1696 500 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1700 502 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 1700 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 1706 504 BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B39 -> B45 falseDestination: B39 -> B41  <||@
  Comment 1712 block B41 null  <||@
  Comment 1712 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1712 512 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1717 514 rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1721 516 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1731 518 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1736 520 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1741 522 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1746 524 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1751 526 JUMP ~[] destination: B41 -> B47  <||@
  Comment 1756 block B51 null  <||@
  Comment 1756 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1756 614 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1759 616 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1759 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1769 618 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1774 620 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1779 622 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9]  <||@
  Comment 1779 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1784 [r13:0, stack:24, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4           |5           |6                  |7             |8  |9  |10  |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   |-   |stack:76|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1785 624 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 626 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1791 634 JUMP ~[] destination: B51 -> B53  <||@
  Comment 1796 block B11 null  <||@
  Comment 1796 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 124 stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1801 126 JUMP ~[] destination: B11 -> B12  <||@
  Comment 1806 block B63 null  <||@
  Comment 1806 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1806 814 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1811 816 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1821 818 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1826 block B69 null  <||@
  Comment 1826 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1826 868 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1831 870 rbx|QWORD = MOV [r11|DWORD * 8 + 728] size: QWORD  <||@
  Comment 1839 872 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1843 874 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1848 876 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1853 878 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9]  <||@
  Comment 1853 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 1853 10  <||@
  Comment 1855 []at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1856 880 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1866 882 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1875 12  <||@
  Comment 1885 block B57 null  <||@
  Comment 1885 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1885 742 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1890 744 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1895 746 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1899 748 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:169, 9]  <||@
  Comment 1899 9  <||@
  Comment 1903 {HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>}  <||@
  Comment 1908 [stack:24, stack:48, stack:64]at java.util.HashMap.putVal(HashMap.java:644) [bci: 169, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4           |5           |6  |7  |8  |9  |10                 |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |stack:72|QWORD[.]  |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1909 750 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1914 752 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1924 754 JUMP ~[] destination: B57 -> B64  <||@
  Comment 1929 block B44 null  <||@
  Comment 1929 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1929 544 stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1934 546 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1934 block B45 null  <||@
  Comment 1934 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1934 550 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1939 552 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1944 554 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1949 556 r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1954 558 r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1959 560 rdi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1964 562 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:123, 9]  <||@
  Comment 1964 9  <||@
  Comment 1967 {HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>}  <||@
  Comment 1972 [stack:48, stack:64]at java.util.HashMap.putVal(HashMap.java:638) [bci: 123, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1973 564 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1976 566 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1986 568 JUMP ~[] destination: B45 -> B64  <||@
  Comment 1991 block B60 null  <||@
  Comment 1991 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1991 776 rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1994 778 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 2004 780 JUMP ~[] destination: B60 -> B64  <||@
  Comment 2009 block B31 null  <||@
  Comment 2009 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2009 416 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2019 418 r10|DWORD = MOVE input: int[-171035|0xfffffffffffd63e5]  <||@
  Comment 2025 420 JUMP ~[] destination: B31 -> B33  <||@
  Comment 2025 block B33 null  <||@
  Comment 2025 440 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2025 442 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2032 444 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2039 446 DEOPT info [bci:29, 9]  <||@
  Comment 2039 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2044 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0             |1          |2             |3             |4           |5           |6            |7  |8          |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |r14|DWORD  |rdx|QWORD[.]  |rcx|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |r8|QWORD[.]  |-  |r13|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 2045 block B19 null  <||@
  Comment 2045 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2045 228 r11|DWORD = MOVE input: int[-125459|0xfffffffffffe15ed]  <||@
  Comment 2051 230 JUMP ~[] destination: B19 -> B76  <||@
  Comment 2051 block B76 null  <||@
  Comment 2051 960 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2051 962 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2058 964 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2065 966 DEOPT info [bci:12, 2]  <||@
  Comment 2065 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2070 [stack:48, stack:56, stack:64]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |  
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2                 
     locals:  |-                  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:32|QWORD[.]  |                   |                    <||@
  Comment 2071 block B32 null  <||@
  Comment 2071 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2071 424 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@659709764]  <||@
  Comment 2071 {Object[d.a@659709764]}  <||@
  Comment 2081 426 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2084 428 r10|DWORD = MOVE input: int[-171324|0xfffffffffffd62c4]  <||@
  Comment 2090 430 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2095 432 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2100 434 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2105 436 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2110 438 JUMP ~[] destination: B32 -> B33  <||@
  Comment 2112 block B16 null  <||@
  Comment 2112 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2112 194 r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2117 196 MOV [r15|QWORD + 668] y: -121627 size: DWORD  <||@
  Comment 2128 198 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2135 200 DEOPT info [bci:23, 9]  <||@
  Comment 2135 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2140 [rax:0, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                  |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |r10|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]       |           |                   |                   |            |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 2141 block B75 null  <||@
  Comment 2141 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2141 956 r11|DWORD = MOVE input: int[-126235|0xfffffffffffe12e5]  <||@
  Comment 2147 958 JUMP ~[] destination: B75 -> B76  <||@
  Comment 2149 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2149 4  <||@
  Comment 2155 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2155 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4249[java.util.HashMap.put(Object, Object)]"
  method "HotSpotCompilation-4249[java.util.HashMap.put(Object, Object)]"
  date 1526687581685
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11986d080 448b560849c1e203493bc20f85cf7d19ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504889742440488954243848894c2430448b52084e8b14d5d0010000448b5e0844895c242c49b84036da140100000049b900c02408010000004d3bc20f85530400004c8b124d8bc24983e0074983f8010f859804000049c1ea08458bd24585d20f8488040000448b4624418bdac1eb104133da4585c00f8448030000428b3cc50c00000085ff0f84420700008bc7ffc823c33bf80f869407000049c1e003458b5480104585d20f85ec000000448bf3448bef894424284c89442418458b50084181fadf3800f80f851c070000413b400c0f83d40600004181fba33700f80f857d0200004d8b5760498d5a20493b5f700f878904000049895f60410f1882e000000048bbe8c201c007000000498bfa488b9ba800000049891a41c742085d3800f84589720c48c1ea034189521048c1e90341894a144589621848c1ef0341897c8010498d54801048c1ea094688240ab801000000034618894618b8010000000346148946143b461c0f8fcd040000817c242ca33700f80f85af01000048b80000000000000000488b6c24504883c4588505c3ed66f0c5f877c34c89442420895c2428428b04d508000000418bfa48c1e703423b1cd50c0000000f84b802000081f8826500f80f84900500004c8bd741bb000000000f1f80000000000f1f8000000000418b42188be848c1e50385c00f847b000000458beb41ffc53b1cc50c0000000f840e00000085054bed66f0458bdd4c8bd5ebcd448b14c51000000049c1e2034c3bd20f846f05000044896c240448896c241844895c2414488bf2498bd248b8ffffffffffffffffe8e47f19ff9085c00f8589040000448b5c24044c8b5424188b5c2428488b542438e973ffffff48896c241844895c2414817c242ca33700f80f85a1010000498b7760488d5620493b57700f8715040000498957600f1886e00000008b5c2428488b4c2430488b54243849b8e8c201c0070000004c8bce4d8b80a80000004c8906c746085d3800f8895e0c48c1ea03895610488bd148c1ea038956144489661849c1e9034d8bea49bb00c024080100000045894d184d8bd549c1ea094788241a837c2414070f8d1c040000488b7c24184885ff0f8500020000488b742440e924feffff448b5c242c4a8b1cddd8020000488b4340ba01000000ffd09048b80000000000000000488b6c24504883c4588505fbeb66f0c5f877c34a8b1cdda80200004c8b5340488b742440488bfa418bd6488be9488bcf4c8bc549b90000000000000000498bc2ffd09048c1e803448b5424284c8b44241843894490104b8d74901048c1ee0949b900c02408010000004688240e488b742440e98afdffff895c2428488b742440666690e81c7c19ff908b780c8bf7ffce237424283bfe0f8628040000448b54b0104585d20f85d3010000448b742428448bef4c8bc08bc649b900c0240801000000448b5c242c488b4c2430488b542438488b742440e98bfcffff4c895424088b5c2428448b5c242c4a8b04dda8020000488b7840488b7424408bd3488b4c24384c8b44243049b90000000000000000488bd8488bc7ffd09048c1e803448bc84c8b6c2408e978feffff4d8bd9468b14d51000000049c1e2034c3b5424380f8487feffffe961010000488b74243848b8ffffffffffffffff0f1f4000e8847d19ff90488b742440448b4624448bd041c1ea104433d04585c00f840b020000418bda448bd049b900c0240801000000448b5c242c488b4c2430488b542438e98efbffff488bde488b742438e8369e25ff90448bd049b900c0240801000000448b5c242c488b4c2430488b542438488bf3e946fbffff4d8bcb488b4c2430488b5c24408b771448c1e903894f14488bd748c1ea094688240a48c1e6034889742418488bf3488bd748b8ffffffffffffffff0f1f440000e8cc7c19ff90488b442418488b6c24504883c4588505dde966f0c5f877c348ba680b00c007000000488bf2ba04000000b901000000e8576c8fff904c8bd04c8b4424188b44242849b900c0240801000000448b5c242c488b4c2430488b542438488b742440e937fbffff8b5c2428488944242049b900c0240801000000448b5c242c488b4c2430488b542438488b742440e9a7fbffff48897c241889442414488b742438498bd248b8ffffffffffffffff0f1f8000000000e8147c19ff9085c00f844b000000488b7c241849bb00c0240801000000e9ddfcffff488b74244090e8ac7919ff90817c242ca33700f80f859f00000048b80000000000000000488b6c24504883c4588505eae866f0c5f877c38b44241481f8826500f80f84de000000488b7c24188b5c242849b900c0240801000000448b5c242c488b4c2430488b542438488b742440e91dfbffff4d8bea48be680b00c007000000ba04000000b901000000e8286b8fff90488bf04d8bd5e9cefbffff4489542428e9e9fcffff488b7c241849bb00c0240801000000e924fcffff448b5c242c4a8b1cddd8020000488b4340488b742440ba01000000ffd09048b80000000000000000488b6c24504883c45885052de866f0c5f877c3488b742440488b5424208b4c24280f1f4000e8ac7819ff90488b7c241849bb00c0240801000000e9bdfbffff48897c2418488b742418488b542440488b4c2420448b4424284c8b4c2438488b7c2430666690e86c7819ff90488bf849bb00c0240801000000e97ffbffff488bfd49bb00c0240801000000e96dfbffff49bb000000000000000041bae563fdff4589979c0200004d899fa8020000e8828d19ff9041bbed15feff45899f9c0200004d89a7a8020000e8688d19ff9049bab8e6c874070000004d8bda41bac462fdff4c8b442418488b4c2430488b542438488b742440eba9448b54242841c7879c020000e524feff4d89a7a8020000e8228d19ff9041bbe512feffeb9ee8b61e59ff90e8108c19ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4081be49 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 63 12 r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 63 [rcx:0, rdx:0, rsi:0, stack:48, stack:56, stack:64]at java.util.HashMap.put(HashMap.java:612) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 63 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 14 r10|QWORD = MOV [r10|DWORD * 8 + 464] size: QWORD  <||@
  Comment 75 16 r11|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 79 18 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 84 20 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 84 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 94 22 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 104 24 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 107 26 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10  <||@
  Comment 113 block B1 null  <||@
  Comment 113 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 30 r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 116 32 r8|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 123 34 CMP r8|QWORD y: 1 size: QWORD  <||@
  Comment 127 36 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6  <||@
  Comment 133 block B2 null  <||@
  Comment 133 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 40 r10|QWORD = SHR r10|QWORD y: 8 size: QWORD  <||@
  Comment 137 42 r10|DWORD = MOV r10|QWORD size: DWORD  <||@
  Comment 140 44 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 143 46 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B7  <||@
  Comment 149 block B7 null  <||@
  Comment 149 82 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 149 84 r8|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 153 86 rbx|DWORD = SHR r10|DWORD y: 16 size: DWORD  <||@
  Comment 159 88 rbx|DWORD = XOR (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 162 90 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 165 92 BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B18  <||@
  Comment 171 block B18 null  <||@
  Comment 171 218 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 171 220 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2]  <||@
  Comment 171 [rcx:0, rdx:0, rsi:0, r8:0, stack:48, stack:56, stack:64]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |  
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0             |1             |2            
     locals:  |-             |rdx|QWORD[.]  |rcx|QWORD[.] 
     stack:   |rsi|QWORD[.]  |              |               <||@
  Comment 171 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 179 222 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 181 224 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 187 block B20 null  <||@
  Comment 187 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 234 rax|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 191 236 rax|DWORD = AND (x: rbx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 193 238 CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 195 240 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B75  <||@
  Comment 201 block B21 null  <||@
  Comment 201 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 244 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 205 246 r10|DWORD[.] = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 210 248 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 213 250 BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B34  <||@
  Comment 219 block B22 null  <||@
  Comment 219 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 254 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 222 256 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 225 258 JUMP ~[] destination: B22 -> B23  <||@
  Comment 225 block B23 null  <||@
  Comment 225 260 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 225 262 stack:56|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 229 264 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 234 266 r10|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD  <||@
  Comment 238 268 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 238 {meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 245 270 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B32  <||@
  Comment 251 block B24 null  <||@
  Comment 251 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 251 274 CMP (x: rax|DWORD, y: [r8|QWORD[.] + 12]) size: DWORD  <||@
  Comment 255 276 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B24 -> B25 falseDestination: B24 -> B31  <||@
  Comment 261 block B25 null  <||@
  Comment 261 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 280 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 261 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 268 282 BRANCH trueDestinationProbability: 0.9298090349479812 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B30  <||@
  Comment 274 block B26 null  <||@
  Comment 274 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 274 286 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 278 288 rbx|QWORD = LEA [r10|QWORD + 32] size: QWORD  <||@
  Comment 282 290 CMP (x: rbx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 286 292 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 292 block B28 null  <||@
  Comment 292 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 326 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 296 328 AMD64PREFETCH ~[r10|QWORD + 224] instr: 0  <||@
  Comment 304 330 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 304 332 JUMP ~[] destination: B28 -> B29  <||@
  Comment 304 block B29 null  <||@
  Comment 304 334 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 304 336 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 304 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 314 338 rdi|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 317 340 rbx|QWORD = MOV [rbx|QWORD + 168] size: QWORD  <||@
  Comment 324 342 MOV (x: [r10|QWORD[*]], y: rbx|QWORD) size: QWORD  <||@
  Comment 327 344 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 327 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 335 346 MOV (x: [r10|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 339 348 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 343 350 MOV (x: [r10|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 347 352 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 351 354 MOV (x: [r10|QWORD[*] + 20], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 355 356 MOV (x: [r10|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 359 358 rdi|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 363 360 MOV (x: [r8|QWORD[.] + rax|DWORD * 4 + 16], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 368 362 rdx|QWORD[.] = LEA [r8|QWORD[.] + rax|DWORD * 4 + 16] size: QWORD  <||@
  Comment 373 364 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 377 366 MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 381 368 JUMP ~[] destination: B29 -> B66  <||@
  Comment 381 block B66 null  <||@
  Comment 381 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 381 834 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 386 836 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD  <||@
  Comment 389 838 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 392 840 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 397 842 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 400 844 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 403 846 CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) size: DWORD  <||@
  Comment 406 848 BRANCH trueDestinationProbability: 0.001922731668896338 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 412 block B70 null  <||@
  Comment 412 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 412 886 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 412 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 420 888 BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 426 block B71 null  <||@
  Comment 426 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 426 892 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 436 894 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 445 12  <||@
  Comment 455 block B34 null  <||@
  Comment 455 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 455 450 stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 460 452 JUMP ~[] destination: B34 -> B35  <||@
  Comment 460 block B35 null  <||@
  Comment 460 454 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 460 456 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 464 458 rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:29, 9]  <||@
  Comment 464 [rcx:0, rdx:0, rsi:0, r10:0, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0             |1          |2             |3             |4           |5           |6                  |7  |8          |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |rbx|DWORD  |rdx|QWORD[.]  |rcx|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |-  |rdi|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 464 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 472 460 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 479 462 CMP (x: rbx|DWORD, y: [r10|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 487 464 BRANCH trueDestinationProbability: 0.08110840494462568 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B43  <||@
  Comment 493 block B43 null  <||@
  Comment 493 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 538 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 493 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 499 540 BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 505 block B47 null  <||@
  Comment 505 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 505 576 r10|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 508 578 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 514 580 JUMP ~[] destination: B47 -> B48  <||@
  Comment 514 block B48 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 514 582 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 528 584 rax|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134, 9]  <||@
  Comment 528 [rdx:0, r10:0, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                  |4           |5           |6                  |7             |8  |9  |10  |11  |12        
     locals:  |stack:32|QWORD[.]  |rbx|DWORD  |rdx|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |r10|QWORD[.]  |-  |-  |-   |-   |r11|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 528 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 532 586 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 538 588 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 540 590 BRANCH trueDestinationProbability: 0.8180267273244242 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B58  <||@
  Comment 546 block B58 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 546 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 546 758 r13|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 552 760 CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 559 762 BRANCH trueDestinationProbability: 0.042857142857142816 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B74  <||@
  Comment 565 block B74 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 565 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 946 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b thread: r15 state [bci:134, 9]  <||@
  Comment 565 [rdx:0, rbp:0, r10:0, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                  |4           |5           |6                  |7             |8  |9  |10  |11  |12        
     locals:  |stack:32|QWORD[.]  |rbx|DWORD  |rdx|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |r10|QWORD[.]  |-  |-  |-   |-   |r11|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 565 {infopoint: SAFEPOINT}  <||@
  Comment 565 11  <||@
  Comment 571 948 r11|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 574 950 r10|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 577 952 JUMP ~[] destination: B74 -> B48  <||@
  Comment 579 block B59 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 579 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 579 766 r10|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 587 768 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 591 770 CMP (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 594 772 BRANCH trueDestinationProbability: 0.03125 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 600 block B61 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 600 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 600 784 stack:92|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 605 786 stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 610 788 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 615 790 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 618 792 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 621 794 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:203, 9]  <||@
  Comment 621 7  <||@
  Comment 631 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 636 [stack:24, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:648) [bci: 203, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4           |5           |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |-  |-  |-  |stack:72|QWORD[.]  |-   |stack:76|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 637 796 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 639 798 BRANCH trueDestinationProbability: 0.510752688172043 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 645 block B62 loop 0 depth 1 header:109|LoopBegin  <||@
  Comment 645 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 645 802 r11|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 650 804 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 655 806 rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 659 808 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 664 810 JUMP ~[] destination: B62 -> B48  <||@
  Comment 669 block B49 null  <||@
  Comment 669 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 594 stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 674 596 stack:76|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 679 598 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 679 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 687 600 BRANCH trueDestinationProbability: 0.7108595262922688 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B54  <||@
  Comment 693 block B50 null  <||@
  Comment 693 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 693 604 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 697 606 rdx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 701 608 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 705 610 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B52  <||@
  Comment 711 block B52 null  <||@
  Comment 711 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 638 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 715 640 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 722 642 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 722 650 JUMP ~[] destination: B52 -> B53  <||@
  Comment 722 block B53 null  <||@
  Comment 722 652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 722 644 rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 726 646 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 731 648 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 736 654 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 736 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 746 656 r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 749 658 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 756 660 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 759 662 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 759 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 766 664 MOV (x: [rsi|QWORD[*] + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 769 666 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 773 668 MOV (x: [rsi|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 776 670 rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 783 672 MOV (x: [rsi|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 786 674 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 790 676 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 794 678 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 797 682 JUMP ~[] destination: B53 -> B55  <||@
  Comment 797 block B55 null  <||@
  Comment 797 722 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 797 718 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 807 724 MOV (x: [r13|QWORD[.] + 24], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 811 726 r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 818 728 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 822 730 CMP stack:76|DWORD y: 7 size: DWORD  <||@
  Comment 827 732 BRANCH trueDestinationProbability: 0.9992054427173859 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 833 block B56 null  <||@
  Comment 833 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 833 736 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 838 738 JUMP ~[] destination: B56 -> B64  <||@
  Comment 838 block B64 null  <||@
  Comment 838 820 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 838 822 TEST (x: rdi|QWORD[.], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 841 824 BRANCH trueDestinationProbability: 0.9260076290270692 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73  <||@
  Comment 847 block B65 null  <||@
  Comment 847 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 847 828 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 852 830 JUMP ~[] destination: B65 -> B66  <||@
  Comment 857 block B72 null  <||@
  Comment 857 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 857 898 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 862 900 rbx|QWORD = MOV [r11|DWORD * 8 + 728] size: QWORD  <||@
  Comment 870 902 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 874 904 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 879 906 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9]  <||@
  Comment 879 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 879 10  <||@
  Comment 881 []at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 882 908 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 892 910 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 901 12  <||@
  Comment 911 block B30 null  <||@
  Comment 911 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 911 372 rbx|QWORD = MOV [r11|DWORD * 8 + 680] size: QWORD  <||@
  Comment 919 374 r10|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 923 376 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 928 378 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 931 380 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 934 382 rbp|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 937 384 rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 940 386 r8|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 943 388 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 953 390 rax|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 956 392 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:56, 9]  <||@
  Comment 956 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 956 10  <||@
  Comment 958 [stack:24, stack:64]at java.util.HashMap.putVal(HashMap.java:631) [bci: 56, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4  |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-               |-  |-  |-  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:72|QWORD[.]  |stack:56|DWORD  |   |   |   |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 959 394 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 963 396 r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 968 398 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 973 400 MOV (x: [r8|QWORD[.] + r10|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 978 402 rsi|QWORD[.] = LEA [r8|QWORD[.] + r10|DWORD * 4 + 16] size: QWORD  <||@
  Comment 983 404 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 987 406 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 997 408 MOVB (x: [rsi|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1001 410 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1006 412 JUMP ~[] destination: B30 -> B66  <||@
  Comment 1011 block B8 null  <||@
  Comment 1011 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1011 96 stack:56|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1015 98 JUMP ~[] destination: B8 -> B12  <||@
  Comment 1015 block B12 null  <||@
  Comment 1015 128 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1015 130 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 132 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:20, 9]  <||@
  Comment 1020 9  <||@
  Comment 1023 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1028 [stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:629) [bci: 20, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1029 134 rdi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23, 9]  <||@
  Comment 1029 [rax:0, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]       |                |                   |                   |            |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1029 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1032 136 rsi|DWORD = DEC rdi|DWORD size: DWORD  <||@
  Comment 1036 138 rsi|DWORD = AND (x: rsi|DWORD, y: stack:56|DWORD) size: DWORD  <||@
  Comment 1040 140 CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1042 142 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B16  <||@
  Comment 1048 block B13 null  <||@
  Comment 1048 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1048 146 r10|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1053 148 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1056 150 BRANCH trueDestinationProbability: 0.875149887835132 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 1062 block B14 null  <||@
  Comment 1062 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1062 154 r14|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1067 156 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1070 158 r8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1073 160 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1075 162 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1085 164 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1090 166 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1095 168 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1100 170 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1105 172 JUMP ~[] destination: B14 -> B23  <||@
  Comment 1110 block B54 null  <||@
  Comment 1110 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1110 686 stack:88|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1115 688 rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1119 690 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1124 692 rax|QWORD = MOV [r11|DWORD * 8 + 680] size: QWORD  <||@
  Comment 1132 694 rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 1136 696 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1141 698 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1143 700 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1148 702 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1153 704 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1163 706 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1166 708 rax|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1169 710 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:152, 9]  <||@
  Comment 1169 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1169 10  <||@
  Comment 1171 [stack:8, stack:24, stack:32, stack:48, stack:64]at java.util.HashMap.putVal(HashMap.java:642) [bci: 152, duringCall: true, rethrow: false]
              |0                  |1               |2  |3                  |4           |5           |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |-  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |-  |-  |-  |stack:72|QWORD[.]  |-   |stack:76|DWORD 
     stack:   |stack:88|QWORD[.]  |                |   |                   |            |            |                   |   |   |   |                   |    |               
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1172 712 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 1176 714 r9|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1179 716 r13|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1184 720 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1189 block B36 null  <||@
  Comment 1189 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1189 468 r11|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1192 470 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1200 472 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 1204 474 CMP (x: r10|QWORD[.], y: stack:40|QWORD[.]) size: QWORD  <||@
  Comment 1209 476 BRANCH trueDestinationProbability: 0.515014164305949 condition: = trueDestination: B36 -> B64 falseDestination: B36 -> B38  <||@
  Comment 1220 block B10 null  <||@
  Comment 1220 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1220 106 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1225 108 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:9, 2]  <||@
  Comment 1225 7  <||@
  Comment 1239 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 1244 [stack:48, stack:56, stack:64]at java.util.HashMap.hash(HashMap.java:339) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2                 
     locals:  |-                  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:32|QWORD[.]  |                   |                    <||@
  Comment 1245 110 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 112 r8|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 1254 114 r10|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 1261 116 r10|DWORD = XOR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1264 118 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1267 120 BRANCH trueDestinationProbability: 0.05863352896966776 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B17  <||@
  Comment 1273 block B17 null  <||@
  Comment 1273 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1273 204 rbx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1276 206 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1279 208 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1289 210 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1294 212 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1299 214 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1304 216 JUMP ~[] destination: B17 -> B18  <||@
  Comment 1309 block B6 null  <||@
  Comment 1309 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1309 62 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1312 64 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1317 66 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x118ac73e0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 1317 {Stub<identity_hashcode(Object)int>@0x118ac73e0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1322 [rbx:0, stack:48, stack:56, stack:64]at java.util.HashMap.put(HashMap.java:612) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2                 
     locals:  |rbx|QWORD[.]  |stack:40|QWORD[.]  |stack:48|QWORD[.]   <||@
  Comment 1323 68 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1326 70 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1336 72 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1341 74 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1346 76 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1351 78 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1354 80 JUMP ~[] destination: B6 -> B7  <||@
  Comment 1359 block B73 null  <||@
  Comment 1359 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1359 914 r9|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1362 916 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1367 918 rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 920 rsi|DWORD[.] = MOV [rdi|QWORD[.] + 20] size: DWORD  <||@
  Comment 1375 922 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 1379 924 MOV (x: [rdi|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1382 926 rdx|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1389 928 MOVB (x: [rdx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1393 930 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@549c4852 encoding: base: 0 shift: 3  <||@
  Comment 1397 932 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1402 934 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1405 936 rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1408 938 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:253, 9]  <||@
  Comment 1408 7  <||@
  Comment 1423 {HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>}  <||@
  Comment 1428 [stack:24]at java.util.HashMap.putVal(HashMap.java:657) [bci: 253, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12                
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |stack:72|QWORD[.] 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1429 940 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1434 942 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1443 12  <||@
  Comment 1453 block B27 null  <||@
  Comment 1453 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1453 296 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1453 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1463 298 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1466 300 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1471 302 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1476 304 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29, 9]  <||@
  Comment 1476 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1481 [stack:24, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                  |4           |5           |6                  |7  |8          |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |r14|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:72|QWORD[.]  |-  |r13|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1482 306 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1485 308 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1490 310 rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1494 312 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1504 314 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1509 316 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1514 318 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1519 320 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1524 322 JUMP ~[] destination: B27 -> B29  <||@
  Comment 1529 block B15 null  <||@
  Comment 1529 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1529 176 rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1533 178 stack:64|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1538 180 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1548 182 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1553 184 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1558 186 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1563 188 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1568 190 JUMP ~[] destination: B15 -> B35  <||@
  Comment 1573 block B38 null  <||@
  Comment 1573 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1573 484 stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1578 486 stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1582 488 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1587 490 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1590 492 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:91, 9]  <||@
  Comment 1590 7  <||@
  Comment 1607 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1612 [stack:24, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:635) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4           |5           |6                  |7                  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |stack:72|QWORD[.]  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1613 494 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1615 496 BRANCH trueDestinationProbability: 0.29439252336448596 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B42  <||@
  Comment 1621 block B42 null  <||@
  Comment 1621 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1621 530 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1626 532 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1636 534 JUMP ~[] destination: B42 -> B64  <||@
  Comment 1641 block B67 null  <||@
  Comment 1641 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1641 852 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1646 854 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:288, 9]  <||@
  Comment 1646 9  <||@
  Comment 1647 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1652 [stack:64]at java.util.HashMap.putVal(HashMap.java:663) [bci: 288, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1653 856 CMP stack:52|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 1653 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 1661 858 BRANCH trueDestinationProbability: 0.9042840266839618 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 1667 block B68 null  <||@
  Comment 1667 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1667 862 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1677 864 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1686 12  <||@
  Comment 1696 block B39 null  <||@
  Comment 1696 498 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1696 500 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1700 502 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 1700 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 1706 504 BRANCH trueDestinationProbability: 5.926511260371248E-4 condition: = trueDestination: B39 -> B45 falseDestination: B39 -> B41  <||@
  Comment 1712 block B41 null  <||@
  Comment 1712 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1712 512 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1717 514 rbx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1721 516 r9|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1731 518 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1736 520 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1741 522 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1746 524 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1751 526 JUMP ~[] destination: B41 -> B47  <||@
  Comment 1756 block B51 null  <||@
  Comment 1756 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1756 614 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1759 616 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1759 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1769 618 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1774 620 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1779 622 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134, 9]  <||@
  Comment 1779 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1784 [r13:0, stack:24, stack:32, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4           |5           |6                  |7             |8  |9  |10  |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:56|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |stack:64|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   |-   |stack:76|DWORD 
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1785 624 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 626 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1791 634 JUMP ~[] destination: B51 -> B53  <||@
  Comment 1796 block B11 null  <||@
  Comment 1796 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 124 stack:56|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1801 126 JUMP ~[] destination: B11 -> B12  <||@
  Comment 1806 block B63 null  <||@
  Comment 1806 812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1806 814 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1811 816 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1821 818 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1826 block B69 null  <||@
  Comment 1826 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1826 868 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1831 870 rbx|QWORD = MOV [r11|DWORD * 8 + 728] size: QWORD  <||@
  Comment 1839 872 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1843 874 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1848 876 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1853 878 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:295, 9]  <||@
  Comment 1853 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 1853 10  <||@
  Comment 1855 []at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1856 880 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1866 882 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1875 12  <||@
  Comment 1885 block B57 null  <||@
  Comment 1885 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1885 742 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1890 744 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1895 746 rcx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1899 748 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:169, 9]  <||@
  Comment 1899 9  <||@
  Comment 1903 {HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>}  <||@
  Comment 1908 [stack:24, stack:48, stack:64]at java.util.HashMap.putVal(HashMap.java:644) [bci: 169, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4           |5           |6  |7  |8  |9  |10                 |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |stack:72|QWORD[.]  |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1909 750 rdi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1914 752 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1924 754 JUMP ~[] destination: B57 -> B64  <||@
  Comment 1929 block B44 null  <||@
  Comment 1929 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1929 544 stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1934 546 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1934 block B45 null  <||@
  Comment 1934 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1934 550 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1939 552 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1944 554 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1949 556 r8|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1954 558 r9|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1959 560 rdi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1964 562 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:123, 9]  <||@
  Comment 1964 9  <||@
  Comment 1967 {HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>}  <||@
  Comment 1972 [stack:48, stack:64]at java.util.HashMap.putVal(HashMap.java:638) [bci: 123, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1973 564 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1976 566 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 1986 568 JUMP ~[] destination: B45 -> B64  <||@
  Comment 1991 block B60 null  <||@
  Comment 1991 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1991 776 rdi|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1994 778 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 2004 780 JUMP ~[] destination: B60 -> B64  <||@
  Comment 2009 block B31 null  <||@
  Comment 2009 414 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2009 416 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2019 418 r10|DWORD = MOVE input: int[-171035|0xfffffffffffd63e5]  <||@
  Comment 2025 420 JUMP ~[] destination: B31 -> B33  <||@
  Comment 2025 block B33 null  <||@
  Comment 2025 440 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2025 442 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2032 444 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2039 446 DEOPT info [bci:29, 9]  <||@
  Comment 2039 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2044 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0             |1          |2             |3             |4           |5           |6            |7  |8          |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |r14|DWORD  |rdx|QWORD[.]  |rcx|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |r8|QWORD[.]  |-  |r13|DWORD  |-  |-   |-   |-  
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 2045 block B19 null  <||@
  Comment 2045 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2045 228 r11|DWORD = MOVE input: int[-125459|0xfffffffffffe15ed]  <||@
  Comment 2051 230 JUMP ~[] destination: B19 -> B76  <||@
  Comment 2051 block B76 null  <||@
  Comment 2051 960 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2051 962 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2058 964 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2065 966 DEOPT info [bci:12, 2]  <||@
  Comment 2065 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2070 [stack:48, stack:56, stack:64]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |  
  at java.util.HashMap.put(HashMap.java:612) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2                 
     locals:  |-                  |stack:40|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:32|QWORD[.]  |                   |                    <||@
  Comment 2071 block B32 null  <||@
  Comment 2071 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2071 424 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@659709764]  <||@
  Comment 2071 {Object[d.a@659709764]}  <||@
  Comment 2081 426 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2084 428 r10|DWORD = MOVE input: int[-171324|0xfffffffffffd62c4]  <||@
  Comment 2090 430 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2095 432 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2100 434 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2105 436 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2110 438 JUMP ~[] destination: B32 -> B33  <||@
  Comment 2112 block B16 null  <||@
  Comment 2112 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2112 194 r10|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2117 196 MOV [r15|QWORD + 668] y: -121627 size: DWORD  <||@
  Comment 2128 198 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2135 200 DEOPT info [bci:23, 9]  <||@
  Comment 2135 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2140 [rax:0, stack:48, stack:56, stack:64]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1          |2                  |3                  |4           |5           |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |r10|DWORD  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |int[0|0x0]  |int[1|0x1]  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]       |           |                   |                   |            |            |   |   |   |   |    |    |   
  at java.util.HashMap.put(HashMap.java:612) [bci: 9, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 2141 block B75 null  <||@
  Comment 2141 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2141 956 r11|DWORD = MOVE input: int[-126235|0xfffffffffffe12e5]  <||@
  Comment 2147 958 JUMP ~[] destination: B75 -> B76  <||@
  Comment 2149 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2149 4  <||@
  Comment 2155 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2155 5  <||@
  HexCodeFile>>> <|@
end_nmethod
